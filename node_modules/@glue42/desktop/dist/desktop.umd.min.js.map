{"version":3,"file":"desktop.umd.min.js","sources":["../node_modules/@glue42/core/dist/core.es.js","../src/activity/entities/activityEntity.ts","../src/activity/helpers/util.ts","../src/activity/entities/activityType.ts","../src/activity/entities/windowType.ts","../src/activity/contracts/entityEvent.ts","../src/activity/core/activityAGM.ts","../src/activity/entities/attachedActivityDescriptor.ts","../src/activity/helpers/promiseExtensions.ts","../src/activity/entities/activity.ts","../src/activity/helpers/logger.ts","../src/activity/entities/activityWindow.ts","../src/activity/contracts/activityStatus.ts","../src/activity/bridges/gw3Bridge.ts","../src/activity/API/activityMyAPI.ts","../src/activity/helpers/readyMarker.ts","../src/activity/helpers/entityObservableCollection.ts","../src/activity/core/activityManager.ts","../src/activity/API/activityManagementAPI.ts","../src/activity/API/activityAPI.ts","../src/activity/activityModule.ts","../src/app-manager/const/agm-names.ts","../node_modules/callback-registry/lib/index.js","../src/app-manager/helper.ts","../src/app-manager/application.ts","../src/app-manager/instance.ts","../src/app-manager/app-manager.ts","../src/app-manager/entitlements.ts","../src/app-manager/in-memory.ts","../src/app-manager/main.ts","../src/app-manager/snapshot.ts","../src/app-manager/data-subscription.ts","../src/windows/store.ts","../src/utils.ts","../src/windows/window.ts","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/encode.js","../node_modules/shortid/lib/decode.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/index.js","../src/windows/environment/gd/executor.ts","../src/windows/environment/helpers.ts","../src/windows/environment/gd/gd.ts","../src/windows/group.ts","../src/windows/groups.ts","../src/windows/main.ts","../src/windows/environment/detector.ts","../src/layouts/store.ts","../src/layouts/contextProvider.ts","../src/layouts/transform.ts","../src/layouts/layout.ts","../src/layouts/layouts.ts","../src/layouts/stream/acsStream.ts","../src/layouts/main.ts","../src/displays/displayManager.ts","../src/channels/agm.ts","../src/channels/contexts.ts","../src/channels/channels.ts","../src/channels/main.ts","../src/hotkeys/hotkeys.ts","../src/config.ts","../src/notifications/notification.ts","../src/notifications/panel.ts","../src/notifications/main.ts","../src/themes/themes.ts","../src/intents/intents.ts","../src/initInfo.ts","../src/prefs/index.ts","../src/glue.ts","../src/hotkeys/main.ts","../src/themes/main.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nvar MetricTypes = {\r\n    STRING: 1,\r\n    NUMBER: 2,\r\n    TIMESTAMP: 3,\r\n    OBJECT: 4\r\n};\n\nfunction getMetricTypeByValue(metric) {\r\n    if (metric.type === MetricTypes.TIMESTAMP) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (metric.type === MetricTypes.NUMBER) {\r\n        return \"number\";\r\n    }\r\n    else if (metric.type === MetricTypes.STRING) {\r\n        return \"string\";\r\n    }\r\n    else if (metric.type === MetricTypes.OBJECT) {\r\n        return \"object\";\r\n    }\r\n    return \"unknown\";\r\n}\r\nfunction getTypeByValue(value) {\r\n    if (value.constructor === Date) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return \"number\";\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        return \"string\";\r\n    }\r\n    else if (typeof value === \"object\") {\r\n        return \"object\";\r\n    }\r\n    else {\r\n        return \"string\";\r\n    }\r\n}\r\nfunction serializeMetric(metric) {\r\n    var serializedMetrics = {};\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"object\") {\r\n        var values = Object.keys(metric.value).reduce(function (memo, key) {\r\n            var innerType = getTypeByValue(metric.value[key]);\r\n            if (innerType === \"object\") {\r\n                var composite = defineNestedComposite(metric.value[key]);\r\n                memo[key] = {\r\n                    type: \"object\",\r\n                    description: \"\",\r\n                    context: {},\r\n                    composite: composite,\r\n                };\r\n            }\r\n            else {\r\n                memo[key] = {\r\n                    type: innerType,\r\n                    description: \"\",\r\n                    context: {},\r\n                };\r\n            }\r\n            return memo;\r\n        }, {});\r\n        serializedMetrics.composite = values;\r\n    }\r\n    serializedMetrics.name = normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name);\r\n    serializedMetrics.type = type;\r\n    serializedMetrics.description = metric.description;\r\n    serializedMetrics.context = {};\r\n    return serializedMetrics;\r\n}\r\nfunction defineNestedComposite(values) {\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var type = getTypeByValue(values[key]);\r\n        if (type === \"object\") {\r\n            memo[key] = {\r\n                type: \"object\",\r\n                description: \"\",\r\n                context: {},\r\n                composite: defineNestedComposite(values[key]),\r\n            };\r\n        }\r\n        else {\r\n            memo[key] = {\r\n                type: type,\r\n                description: \"\",\r\n                context: {},\r\n            };\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction normalizeMetricName(name) {\r\n    if (typeof name !== \"undefined\" && name.length > 0 && name[0] !== \"/\") {\r\n        return \"/\" + name;\r\n    }\r\n    else {\r\n        return name;\r\n    }\r\n}\r\nfunction getMetricValueByType(metric) {\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"timestamp\") {\r\n        return Date.now();\r\n    }\r\n    else {\r\n        return publishNestedComposite(metric.value);\r\n    }\r\n}\r\nfunction publishNestedComposite(values) {\r\n    if (typeof values !== \"object\") {\r\n        return values;\r\n    }\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var value = values[key];\r\n        if (typeof value === \"object\" && value.constructor !== Date) {\r\n            memo[key] = publishNestedComposite(value);\r\n        }\r\n        else if (value.constructor === Date) {\r\n            memo[key] = new Date(value).getTime();\r\n        }\r\n        else if (value.constructor === Boolean) {\r\n            memo[key] = value.toString();\r\n        }\r\n        else {\r\n            memo[key] = value;\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction flatten(arr) {\r\n    return arr.reduce(function (flat, toFlatten) {\r\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\r\n    }, []);\r\n}\r\nfunction getHighestState(arr) {\r\n    return arr.sort(function (a, b) {\r\n        if (!a.state) {\r\n            return 1;\r\n        }\r\n        if (!b.state) {\r\n            return -1;\r\n        }\r\n        return b.state - a.state;\r\n    })[0];\r\n}\r\nfunction aggregateDescription(arr) {\r\n    var msg = \"\";\r\n    arr.forEach(function (m, idx, a) {\r\n        var path = m.path.join(\".\");\r\n        if (idx === a.length - 1) {\r\n            msg += path + \".\" + m.name + \": \" + m.description;\r\n        }\r\n        else {\r\n            msg += path + \".\" + m.name + \": \" + m.description + \",\";\r\n        }\r\n    });\r\n    if (msg.length > 100) {\r\n        return msg.slice(0, 100) + \"...\";\r\n    }\r\n    else {\r\n        return msg;\r\n    }\r\n}\r\nfunction composeMsgForRootStateMetric(system) {\r\n    var aggregatedState = system.root.getAggregateState();\r\n    var merged = flatten(aggregatedState);\r\n    var highestState = getHighestState(merged);\r\n    var aggregateDesc = aggregateDescription(merged);\r\n    return {\r\n        description: aggregateDesc,\r\n        value: highestState.state,\r\n    };\r\n}\n\nfunction gw3 (connection, config) {\r\n    var _this = this;\r\n    if (!connection || typeof connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var joinPromise;\r\n    var session;\r\n    var init = function (repo) {\r\n        var resolveReadyPromise;\r\n        joinPromise = new Promise(function (resolve) {\r\n            resolveReadyPromise = resolve;\r\n        });\r\n        session = connection.domain(\"metrics\");\r\n        session.onJoined(function (reconnect) {\r\n            if (!reconnect && resolveReadyPromise) {\r\n                resolveReadyPromise();\r\n                resolveReadyPromise = undefined;\r\n            }\r\n            var rootStateMetric = {\r\n                name: \"/State\",\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var defineRootMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [rootStateMetric],\r\n            };\r\n            session.send(defineRootMetricsMsg);\r\n            if (reconnect) {\r\n                replayRepo(repo);\r\n            }\r\n        });\r\n        session.join({\r\n            system: config.system,\r\n            service: config.service,\r\n            instance: config.instance\r\n        });\r\n    };\r\n    var replayRepo = function (repo) {\r\n        replaySystem(repo.root);\r\n    };\r\n    var replaySystem = function (system) {\r\n        createSystem(system);\r\n        system.metrics.forEach(function (m) {\r\n            createMetric(m);\r\n        });\r\n        system.subSystems.forEach(function (ss) {\r\n            replaySystem(ss);\r\n        });\r\n    };\r\n    var createSystem = function (system) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metric, createMetricsMsg;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (system.parent === undefined) {\r\n                        return [2];\r\n                    }\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    metric = {\r\n                        name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                        type: \"object\",\r\n                        composite: {\r\n                            Description: {\r\n                                type: \"string\",\r\n                                description: \"\",\r\n                            },\r\n                            Value: {\r\n                                type: \"number\",\r\n                                description: \"\",\r\n                            },\r\n                        },\r\n                        description: \"System state\",\r\n                        context: {},\r\n                    };\r\n                    createMetricsMsg = {\r\n                        type: \"define\",\r\n                        metrics: [metric],\r\n                    };\r\n                    session.send(createMetricsMsg);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateSystem = function (system, state) { return __awaiter(_this, void 0, void 0, function () {\r\n        var shadowedUpdateMetric, stateObj, rootMetric;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    shadowedUpdateMetric = {\r\n                        type: \"publish\",\r\n                        values: [{\r\n                                name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                                value: {\r\n                                    Description: state.description,\r\n                                    Value: state.state,\r\n                                },\r\n                                timestamp: Date.now(),\r\n                            }],\r\n                    };\r\n                    session.send(shadowedUpdateMetric);\r\n                    stateObj = composeMsgForRootStateMetric(system);\r\n                    rootMetric = {\r\n                        type: \"publish\",\r\n                        peer_id: connection.peerId,\r\n                        values: [{\r\n                                name: \"/State\",\r\n                                value: {\r\n                                    Description: stateObj.description,\r\n                                    Value: stateObj.value,\r\n                                },\r\n                                timestamp: Date.now(),\r\n                            }],\r\n                    };\r\n                    session.send(rootMetric);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var createMetric = function (metric) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metricClone, m, createMetricsMsg;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    metricClone = cloneMetric(metric);\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    m = serializeMetric(metricClone);\r\n                    createMetricsMsg = {\r\n                        type: \"define\",\r\n                        metrics: [m],\r\n                    };\r\n                    session.send(createMetricsMsg);\r\n                    if (typeof metricClone.value !== \"undefined\") {\r\n                        updateMetricCore(metricClone);\r\n                    }\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateMetric = function (metric) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metricClone;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    metricClone = cloneMetric(metric);\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    updateMetricCore(metricClone);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateMetricCore = function (metric) {\r\n        if (canUpdate()) {\r\n            var value = getMetricValueByType(metric);\r\n            var publishMetricsMsg = {\r\n                type: \"publish\",\r\n                values: [{\r\n                        name: normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name),\r\n                        value: value,\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            return session.sendFireAndForget(publishMetricsMsg);\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    var cloneMetric = function (metric) {\r\n        var metricClone = __assign({}, metric);\r\n        if (typeof metric.value === \"object\" && metric.value !== null) {\r\n            metricClone.value = __assign({}, metric.value);\r\n        }\r\n        return metricClone;\r\n    };\r\n    var canUpdate = function () {\r\n        var _a;\r\n        try {\r\n            var func = (_a = config.canUpdateMetric) !== null && _a !== void 0 ? _a : (function () { return true; });\r\n            return func();\r\n        }\r\n        catch (_b) {\r\n            return true;\r\n        }\r\n    };\r\n    return {\r\n        init: init,\r\n        createSystem: createSystem,\r\n        updateSystem: updateSystem,\r\n        createMetric: createMetric,\r\n        updateMetric: updateMetric,\r\n    };\r\n}\n\nvar Helpers = {\r\n    validate: function (definition, parent, transport) {\r\n        if (definition === null || typeof definition !== \"object\") {\r\n            throw new Error(\"Missing definition\");\r\n        }\r\n        if (parent === null || typeof parent !== \"object\") {\r\n            throw new Error(\"Missing parent\");\r\n        }\r\n        if (transport === null || typeof transport !== \"object\") {\r\n            throw new Error(\"Missing transport\");\r\n        }\r\n    },\r\n};\n\nvar BaseMetric = (function () {\r\n    function BaseMetric(definition, system, transport, value, type) {\r\n        this.definition = definition;\r\n        this.system = system;\r\n        this.transport = transport;\r\n        this.value = value;\r\n        this.type = type;\r\n        this.path = [];\r\n        Helpers.validate(definition, system, transport);\r\n        this.path = system.path.slice(0);\r\n        this.path.push(system.name);\r\n        this.name = definition.name;\r\n        this.description = definition.description;\r\n        transport.createMetric(this);\r\n    }\r\n    Object.defineProperty(BaseMetric.prototype, \"repo\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.system) === null || _a === void 0 ? void 0 : _a.repo;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseMetric.prototype, \"id\", {\r\n        get: function () { return this.system.path + \"/\" + name; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BaseMetric.prototype.update = function (newValue) {\r\n        this.value = newValue;\r\n        return this.transport.updateMetric(this);\r\n    };\r\n    return BaseMetric;\r\n}());\n\nvar NumberMetric = (function (_super) {\r\n    __extends(NumberMetric, _super);\r\n    function NumberMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.NUMBER) || this;\r\n    }\r\n    NumberMetric.prototype.incrementBy = function (num) {\r\n        this.update(this.value + num);\r\n    };\r\n    NumberMetric.prototype.increment = function () {\r\n        this.incrementBy(1);\r\n    };\r\n    NumberMetric.prototype.decrement = function () {\r\n        this.incrementBy(-1);\r\n    };\r\n    NumberMetric.prototype.decrementBy = function (num) {\r\n        this.incrementBy(num * -1);\r\n    };\r\n    return NumberMetric;\r\n}(BaseMetric));\n\nvar ObjectMetric = (function (_super) {\r\n    __extends(ObjectMetric, _super);\r\n    function ObjectMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.OBJECT) || this;\r\n    }\r\n    ObjectMetric.prototype.update = function (newValue) {\r\n        this.mergeValues(newValue);\r\n        return this.transport.updateMetric(this);\r\n    };\r\n    ObjectMetric.prototype.mergeValues = function (values) {\r\n        var _this = this;\r\n        return Object.keys(this.value).forEach(function (k) {\r\n            if (typeof values[k] !== \"undefined\") {\r\n                _this.value[k] = values[k];\r\n            }\r\n        });\r\n    };\r\n    return ObjectMetric;\r\n}(BaseMetric));\n\nvar StringMetric = (function (_super) {\r\n    __extends(StringMetric, _super);\r\n    function StringMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.STRING) || this;\r\n    }\r\n    return StringMetric;\r\n}(BaseMetric));\n\nvar TimestampMetric = (function (_super) {\r\n    __extends(TimestampMetric, _super);\r\n    function TimestampMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.TIMESTAMP) || this;\r\n    }\r\n    TimestampMetric.prototype.now = function () {\r\n        this.update(new Date());\r\n    };\r\n    return TimestampMetric;\r\n}(BaseMetric));\n\nfunction system(name, repo, protocol, parent, description) {\r\n    if (!repo) {\r\n        throw new Error(\"Repository is required\");\r\n    }\r\n    if (!protocol) {\r\n        throw new Error(\"Transport is required\");\r\n    }\r\n    var _transport = protocol;\r\n    var _name = name;\r\n    var _description = description || \"\";\r\n    var _repo = repo;\r\n    var _parent = parent;\r\n    var _path = _buildPath(parent);\r\n    var _state = {};\r\n    var id = _arrayToString(_path, \"/\") + name;\r\n    var root = repo.root;\r\n    var _subSystems = [];\r\n    var _metrics = [];\r\n    function subSystem(nameSystem, descriptionSystem) {\r\n        if (!nameSystem || nameSystem.length === 0) {\r\n            throw new Error(\"name is required\");\r\n        }\r\n        var match = _subSystems.filter(function (s) { return s.name === nameSystem; });\r\n        if (match.length > 0) {\r\n            return match[0];\r\n        }\r\n        var _system = system(nameSystem, _repo, _transport, me, descriptionSystem);\r\n        _subSystems.push(_system);\r\n        return _system;\r\n    }\r\n    function setState(state, stateDescription) {\r\n        _state = { state: state, description: stateDescription };\r\n        _transport.updateSystem(me, _state);\r\n    }\r\n    function stringMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.STRING, value, function (metricDef) { return new StringMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function numberMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.NUMBER, value, function (metricDef) { return new NumberMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function objectMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.OBJECT, value, function (metricDef) { return new ObjectMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function timestampMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.TIMESTAMP, value, function (metricDef) { return new TimestampMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function _getOrCreateMetric(metricObject, expectedType, value, createMetric) {\r\n        var metricDef = { name: \"\" };\r\n        if (typeof metricObject === \"string\") {\r\n            metricDef = { name: metricObject };\r\n        }\r\n        else {\r\n            metricDef = metricObject;\r\n        }\r\n        var matching = _metrics.filter(function (shadowedMetric) { return shadowedMetric.name === metricDef.name; });\r\n        if (matching.length > 0) {\r\n            var existing = matching[0];\r\n            if (existing.type !== expectedType) {\r\n                throw new Error(\"A metric named \" + metricDef.name + \" is already defined with different type.\");\r\n            }\r\n            if (typeof value !== \"undefined\") {\r\n                existing\r\n                    .update(value)\r\n                    .catch(function () { });\r\n            }\r\n            return existing;\r\n        }\r\n        var metric = createMetric(metricDef);\r\n        _metrics.push(metric);\r\n        return metric;\r\n    }\r\n    function _buildPath(shadowedSystem) {\r\n        if (!shadowedSystem || !shadowedSystem.parent) {\r\n            return [];\r\n        }\r\n        var path = _buildPath(shadowedSystem.parent);\r\n        path.push(shadowedSystem.name);\r\n        return path;\r\n    }\r\n    function _arrayToString(path, separator) {\r\n        return ((path && path.length > 0) ? path.join(separator) : \"\");\r\n    }\r\n    function getAggregateState() {\r\n        var aggState = [];\r\n        if (Object.keys(_state).length > 0) {\r\n            aggState.push({\r\n                name: _name,\r\n                path: _path,\r\n                state: _state.state,\r\n                description: _state.description,\r\n            });\r\n        }\r\n        _subSystems.forEach(function (shadowedSubSystem) {\r\n            var result = shadowedSubSystem.getAggregateState();\r\n            if (result.length > 0) {\r\n                aggState.push.apply(aggState, result);\r\n            }\r\n        });\r\n        return aggState;\r\n    }\r\n    var me = {\r\n        get name() {\r\n            return _name;\r\n        },\r\n        get description() {\r\n            return _description;\r\n        },\r\n        get repo() {\r\n            return _repo;\r\n        },\r\n        get parent() {\r\n            return _parent;\r\n        },\r\n        path: _path,\r\n        id: id,\r\n        root: root,\r\n        get subSystems() {\r\n            return _subSystems;\r\n        },\r\n        get metrics() {\r\n            return _metrics;\r\n        },\r\n        subSystem: subSystem,\r\n        getState: function () {\r\n            return _state;\r\n        },\r\n        setState: setState,\r\n        stringMetric: stringMetric,\r\n        timestampMetric: timestampMetric,\r\n        objectMetric: objectMetric,\r\n        numberMetric: numberMetric,\r\n        getAggregateState: getAggregateState,\r\n    };\r\n    _transport.createSystem(me);\r\n    return me;\r\n}\n\nvar Repository = (function () {\r\n    function Repository(options, protocol) {\r\n        protocol.init(this);\r\n        this.root = system(\"\", this, protocol);\r\n        this.addSystemMetrics(this.root, options.clickStream || options.clickStream === undefined);\r\n    }\r\n    Repository.prototype.addSystemMetrics = function (rootSystem, useClickStream) {\r\n        if (typeof navigator !== \"undefined\") {\r\n            rootSystem.stringMetric(\"UserAgent\", navigator.userAgent);\r\n        }\r\n        if (useClickStream && typeof document !== \"undefined\") {\r\n            var clickStream_1 = rootSystem.subSystem(\"ClickStream\");\r\n            var documentClickHandler = function (e) {\r\n                var _a;\r\n                if (!e.target) {\r\n                    return;\r\n                }\r\n                var target = e.target;\r\n                var className = target ? (_a = target.getAttribute(\"class\")) !== null && _a !== void 0 ? _a : \"\" : \"\";\r\n                clickStream_1.objectMetric(\"LastBrowserEvent\", {\r\n                    type: \"click\",\r\n                    timestamp: new Date(),\r\n                    target: {\r\n                        className: className,\r\n                        id: target.id,\r\n                        type: \"<\" + target.tagName.toLowerCase() + \">\",\r\n                        href: target.href || \"\",\r\n                    },\r\n                });\r\n            };\r\n            clickStream_1.objectMetric(\"Page\", {\r\n                title: document.title,\r\n                page: window.location.href,\r\n            });\r\n            if (document.addEventListener) {\r\n                document.addEventListener(\"click\", documentClickHandler);\r\n            }\r\n            else {\r\n                document.attachEvent(\"onclick\", documentClickHandler);\r\n            }\r\n        }\r\n        var startTime = rootSystem.stringMetric(\"StartTime\", (new Date()).toString());\r\n        var urlMetric = rootSystem.stringMetric(\"StartURL\", \"\");\r\n        var appNameMetric = rootSystem.stringMetric(\"AppName\", \"\");\r\n        if (typeof window !== \"undefined\") {\r\n            if (typeof window.location !== \"undefined\") {\r\n                var startUrl = window.location.href;\r\n                urlMetric.update(startUrl);\r\n            }\r\n            if (typeof window.glue42gd !== \"undefined\") {\r\n                appNameMetric.update(window.glue42gd.appName);\r\n            }\r\n        }\r\n    };\r\n    return Repository;\r\n}());\n\nvar NullProtocol = (function () {\r\n    function NullProtocol() {\r\n    }\r\n    NullProtocol.prototype.init = function (repo) {\r\n    };\r\n    NullProtocol.prototype.createSystem = function (system) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.updateSystem = function (metric, state) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.createMetric = function (metric) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.updateMetric = function (metric) {\r\n        return Promise.resolve();\r\n    };\r\n    return NullProtocol;\r\n}());\n\nvar PerfTracker = (function () {\r\n    function PerfTracker(api, initialPublishTimeout, publishInterval) {\r\n        this.api = api;\r\n        this.lastCount = 0;\r\n        this.initialPublishTimeout = 10 * 1000;\r\n        this.publishInterval = 60 * 1000;\r\n        this.initialPublishTimeout = initialPublishTimeout !== null && initialPublishTimeout !== void 0 ? initialPublishTimeout : this.initialPublishTimeout;\r\n        this.publishInterval = publishInterval !== null && publishInterval !== void 0 ? publishInterval : this.publishInterval;\r\n        this.scheduleCollection();\r\n        this.system = this.api.subSystem(\"performance\", \"Performance data published by the web application\");\r\n    }\r\n    PerfTracker.prototype.scheduleCollection = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this.collect();\r\n            setInterval(function () {\r\n                _this.collect();\r\n            }, _this.publishInterval);\r\n        }, this.initialPublishTimeout);\r\n    };\r\n    PerfTracker.prototype.collect = function () {\r\n        try {\r\n            this.collectMemory();\r\n            this.collectEntries();\r\n        }\r\n        catch (_a) {\r\n        }\r\n    };\r\n    PerfTracker.prototype.collectMemory = function () {\r\n        var memory = window.performance.memory;\r\n        this.system.stringMetric(\"memory\", JSON.stringify({\r\n            totalJSHeapSize: memory.totalJSHeapSize,\r\n            usedJSHeapSize: memory.usedJSHeapSize\r\n        }));\r\n    };\r\n    PerfTracker.prototype.collectEntries = function () {\r\n        var allEntries = window.performance.getEntries();\r\n        if (allEntries.length <= this.lastCount) {\r\n            return;\r\n        }\r\n        this.lastCount = allEntries.length;\r\n        var jsonfiedEntries = allEntries.map(function (i) { return i.toJSON(); });\r\n        this.system.stringMetric(\"entries\", JSON.stringify(jsonfiedEntries));\r\n    };\r\n    return PerfTracker;\r\n}());\n\nvar metrics = (function (options) {\r\n    var protocol;\r\n    if (!options.connection || typeof options.connection !== \"object\") {\r\n        protocol = new NullProtocol();\r\n    }\r\n    else {\r\n        protocol = gw3(options.connection, options);\r\n    }\r\n    var repo = new Repository(options, protocol);\r\n    var rootSystem = repo.root;\r\n    if (!options.disableAutoAppSystem) {\r\n        rootSystem = rootSystem.subSystem(\"App\");\r\n    }\r\n    var api = addFAVSupport(rootSystem);\r\n    initPerf(api, options.pagePerformanceMetrics);\r\n    return api;\r\n});\r\nvar perf;\r\nfunction initPerf(api, config) {\r\n    var _a, _b;\r\n    if (typeof window === \"undefined\") {\r\n        return;\r\n    }\r\n    var perfConfig = (_b = (_a = window === null || window === void 0 ? void 0 : window.glue42gd) === null || _a === void 0 ? void 0 : _a.metrics) === null || _b === void 0 ? void 0 : _b.pagePerformanceMetrics;\r\n    if (perfConfig) {\r\n        config = perfConfig;\r\n    }\r\n    if (config === null || config === void 0 ? void 0 : config.enabled) {\r\n        perf = new PerfTracker(api, config.initialPublishTimeout, config.publishInterval);\r\n    }\r\n}\r\nfunction addFAVSupport(system) {\r\n    var reportingSystem = system.subSystem(\"reporting\");\r\n    var def = {\r\n        name: \"features\"\r\n    };\r\n    var featureMetric;\r\n    var featureMetricFunc = function (name, action, payload) {\r\n        if (typeof name === \"undefined\" || name === \"\") {\r\n            throw new Error(\"name is mandatory\");\r\n        }\r\n        else if (typeof action === \"undefined\" || action === \"\") {\r\n            throw new Error(\"action is mandatory\");\r\n        }\r\n        else if (typeof payload === \"undefined\" || payload === \"\") {\r\n            throw new Error(\"payload is mandatory\");\r\n        }\r\n        if (!featureMetric) {\r\n            featureMetric = reportingSystem.objectMetric(def, { name: name, action: action, payload: payload });\r\n        }\r\n        else {\r\n            featureMetric.update({\r\n                name: name,\r\n                action: action,\r\n                payload: payload\r\n            });\r\n        }\r\n    };\r\n    system.featureMetric = featureMetricFunc;\r\n    return system;\r\n}\n\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback, replayArgumentsArr) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        if (replayArgumentsArr) {\r\n            setTimeout(function () {\r\n                replayArgumentsArr.forEach(function (replayArgument) {\r\n                    var _a;\r\n                    if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {\r\n                        try {\r\n                            if (Array.isArray(replayArgument)) {\r\n                                callback.apply(undefined, replayArgument);\r\n                            }\r\n                            else {\r\n                                callback.apply(undefined, [replayArgument]);\r\n                            }\r\n                        }\r\n                        catch (err) {\r\n                            _handleError(err, key);\r\n                        }\r\n                    }\r\n                });\r\n            }, 0);\r\n        }\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            if (allForKey.length === 0) {\r\n                delete callbacks[key];\r\n            }\r\n            else {\r\n                callbacks[key] = allForKey;\r\n            }\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    function clearKey(key) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            return;\r\n        }\r\n        delete callbacks[key];\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear,\r\n        clearKey: clearKey\r\n    };\r\n}\r\ncreateRegistry.default = createRegistry;\r\nvar lib = createRegistry;\n\nvar InProcTransport = (function () {\r\n    function InProcTransport(settings, logger) {\r\n        var _this = this;\r\n        this.registry = lib();\r\n        this.gw = settings.facade;\r\n        this.gw.connect(function (_client, message) {\r\n            _this.messageHandler(message);\r\n        }).then(function (client) {\r\n            _this.client = client;\r\n        });\r\n    }\r\n    Object.defineProperty(InProcTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    InProcTransport.prototype.sendObject = function (msg) {\r\n        if (this.client) {\r\n            this.client.send(msg);\r\n            return Promise.resolve(undefined);\r\n        }\r\n        else {\r\n            return Promise.reject(\"not connected\");\r\n        }\r\n    };\r\n    InProcTransport.prototype.send = function (_msg) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    InProcTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    InProcTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    InProcTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.name = function () {\r\n        return \"in-memory\";\r\n    };\r\n    InProcTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return InProcTransport;\r\n}());\n\nvar SharedWorkerTransport = (function () {\r\n    function SharedWorkerTransport(workerFile, logger) {\r\n        var _this = this;\r\n        this.logger = logger;\r\n        this.registry = lib();\r\n        this.worker = new SharedWorker(workerFile);\r\n        this.worker.port.onmessage = function (e) {\r\n            _this.messageHandler(e.data);\r\n        };\r\n    }\r\n    Object.defineProperty(SharedWorkerTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SharedWorkerTransport.prototype.sendObject = function (msg) {\r\n        this.worker.port.postMessage(msg);\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.send = function (_msg) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    SharedWorkerTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    SharedWorkerTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    SharedWorkerTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.name = function () {\r\n        return \"shared-worker\";\r\n    };\r\n    SharedWorkerTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return SharedWorkerTransport;\r\n}());\n\nvar Utils = (function () {\r\n    function Utils() {\r\n    }\r\n    Utils.getGDMajorVersion = function () {\r\n        if (typeof window === \"undefined\") {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop) {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop.version) {\r\n            return undefined;\r\n        }\r\n        var ver = Number(window.glueDesktop.version.substr(0, 1));\r\n        return isNaN(ver) ? undefined : ver;\r\n    };\r\n    Utils.isNode = function () {\r\n        if (typeof Utils._isNode !== \"undefined\") {\r\n            return Utils._isNode;\r\n        }\r\n        if (typeof window !== \"undefined\") {\r\n            Utils._isNode = false;\r\n            return false;\r\n        }\r\n        try {\r\n            Utils._isNode = Object.prototype.toString.call(global.process) === \"[object process]\";\r\n        }\r\n        catch (e) {\r\n            Utils._isNode = false;\r\n        }\r\n        return Utils._isNode;\r\n    };\r\n    return Utils;\r\n}());\n\nvar PromiseWrapper = (function () {\r\n    function PromiseWrapper() {\r\n        var _this = this;\r\n        this.rejected = false;\r\n        this.resolved = false;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = function (t) {\r\n                _this.resolved = true;\r\n                resolve(t);\r\n            };\r\n            _this.reject = function (err) {\r\n                _this.rejected = true;\r\n                reject(err);\r\n            };\r\n        });\r\n    }\r\n    PromiseWrapper.delay = function (time) {\r\n        return new Promise(function (resolve) { return setTimeout(resolve, time); });\r\n    };\r\n    Object.defineProperty(PromiseWrapper.prototype, \"ended\", {\r\n        get: function () {\r\n            return this.rejected || this.resolved;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PromiseWrapper;\r\n}());\n\nvar timers = {};\r\nfunction getAllTimers() {\r\n    return timers;\r\n}\r\nfunction timer (timerName) {\r\n    var existing = timers[timerName];\r\n    if (existing) {\r\n        return existing;\r\n    }\r\n    var marks = [];\r\n    function now() {\r\n        return new Date().getTime();\r\n    }\r\n    var startTime = now();\r\n    mark(\"start\", startTime);\r\n    var endTime;\r\n    var period;\r\n    function stop() {\r\n        endTime = now();\r\n        mark(\"end\", endTime);\r\n        period = endTime - startTime;\r\n        return period;\r\n    }\r\n    function mark(name, time) {\r\n        var currentTime = time !== null && time !== void 0 ? time : now();\r\n        var diff = 0;\r\n        if (marks.length > 0) {\r\n            diff = currentTime - marks[marks.length - 1].time;\r\n        }\r\n        marks.push({ name: name, time: currentTime, diff: diff });\r\n    }\r\n    var timerObj = {\r\n        get startTime() {\r\n            return startTime;\r\n        },\r\n        get endTime() {\r\n            return endTime;\r\n        },\r\n        get period() {\r\n            return period;\r\n        },\r\n        stop: stop,\r\n        mark: mark,\r\n        marks: marks\r\n    };\r\n    timers[timerName] = timerObj;\r\n    return timerObj;\r\n}\n\nvar WebSocketConstructor = Utils.isNode() ? require(\"ws\") : window.WebSocket;\r\nvar WS = (function () {\r\n    function WS(settings, logger) {\r\n        this.startupTimer = timer(\"connection\");\r\n        this._running = true;\r\n        this._registry = lib();\r\n        this.wsRequests = [];\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        if (!this.settings.ws) {\r\n            throw new Error(\"ws is missing\");\r\n        }\r\n    }\r\n    WS.prototype.onMessage = function (callback) {\r\n        return this._registry.add(\"onMessage\", callback);\r\n    };\r\n    WS.prototype.send = function (msg, options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(function () {\r\n                var _a;\r\n                try {\r\n                    (_a = _this.ws) === null || _a === void 0 ? void 0 : _a.send(msg);\r\n                    resolve();\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }, reject);\r\n        });\r\n    };\r\n    WS.prototype.open = function () {\r\n        var _this = this;\r\n        this.logger.info(\"opening ws...\");\r\n        this._running = true;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(resolve, reject);\r\n        });\r\n    };\r\n    WS.prototype.close = function () {\r\n        this._running = false;\r\n        if (this.ws) {\r\n            this.ws.close();\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    WS.prototype.onConnectedChanged = function (callback) {\r\n        return this._registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WS.prototype.name = function () {\r\n        return \"ws \" + this.settings.ws;\r\n    };\r\n    WS.prototype.reconnect = function () {\r\n        var _a;\r\n        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.close();\r\n        var pw = new PromiseWrapper();\r\n        this.waitForSocketConnection(function () {\r\n            pw.resolve();\r\n        });\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.waitForSocketConnection = function (callback, failed) {\r\n        var _a;\r\n        failed = failed !== null && failed !== void 0 ? failed : (function () { });\r\n        if (!this._running) {\r\n            failed(\"wait for socket on \" + this.settings.ws + \" failed - socket closed by user\");\r\n            return;\r\n        }\r\n        if (((_a = this.ws) === null || _a === void 0 ? void 0 : _a.readyState) === 1) {\r\n            callback();\r\n            return;\r\n        }\r\n        this.wsRequests.push({ callback: callback, failed: failed });\r\n        if (this.wsRequests.length > 1) {\r\n            return;\r\n        }\r\n        this.openSocket();\r\n    };\r\n    WS.prototype.openSocket = function (retryInterval, retriesLeft) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        this.startupTimer.mark(\"opening-socket\");\r\n                        if (retryInterval === undefined) {\r\n                            retryInterval = this.settings.reconnectInterval;\r\n                        }\r\n                        if (retriesLeft !== undefined) {\r\n                            if (retriesLeft === 0) {\r\n                                this.notifyForSocketState(\"wait for socket on \" + this.settings.ws + \" failed - no more retries left\");\r\n                                return [2];\r\n                            }\r\n                            this.logger.debug(\"will retry \" + retriesLeft + \" more times (every \" + retryInterval + \" ms)\");\r\n                        }\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4, this.initiateSocket()];\r\n                    case 2:\r\n                        _b.sent();\r\n                        this.startupTimer.mark(\"socket-initiated\");\r\n                        this.notifyForSocketState();\r\n                        return [3, 4];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        setTimeout(function () {\r\n                            var retries = retriesLeft === undefined ? undefined : retriesLeft - 1;\r\n                            _this.openSocket(retryInterval, retries);\r\n                        }, retryInterval);\r\n                        return [3, 4];\r\n                    case 4: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WS.prototype.initiateSocket = function () {\r\n        var _this = this;\r\n        var pw = new PromiseWrapper();\r\n        this.logger.debug(\"initiating ws to \" + this.settings.ws + \"...\");\r\n        this.ws = new WebSocketConstructor(this.settings.ws || \"\");\r\n        this.ws.onerror = function (err) {\r\n            var reason = \"\";\r\n            try {\r\n                reason = JSON.stringify(err);\r\n            }\r\n            catch (error) {\r\n                var seen_1 = new WeakSet();\r\n                var replacer = function (key, value) {\r\n                    if (typeof value === \"object\" && value !== null) {\r\n                        if (seen_1.has(value)) {\r\n                            return;\r\n                        }\r\n                        seen_1.add(value);\r\n                    }\r\n                    return value;\r\n                };\r\n                reason = JSON.stringify(err, replacer);\r\n            }\r\n            pw.reject(\"error\");\r\n            _this.notifyStatusChanged(false, reason);\r\n        };\r\n        this.ws.onclose = function (err) {\r\n            _this.logger.info(\"ws closed \" + err);\r\n            pw.reject(\"closed\");\r\n            _this.notifyStatusChanged(false);\r\n        };\r\n        this.ws.onopen = function () {\r\n            var _a;\r\n            _this.startupTimer.mark(\"ws-opened\");\r\n            _this.logger.info(\"ws opened \" + ((_a = _this.settings.identity) === null || _a === void 0 ? void 0 : _a.application));\r\n            pw.resolve();\r\n            _this.notifyStatusChanged(true);\r\n        };\r\n        this.ws.onmessage = function (message) {\r\n            _this._registry.execute(\"onMessage\", message.data);\r\n        };\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.notifyForSocketState = function (error) {\r\n        this.wsRequests.forEach(function (wsRequest) {\r\n            if (error) {\r\n                if (wsRequest.failed) {\r\n                    wsRequest.failed(error);\r\n                }\r\n            }\r\n            else {\r\n                wsRequest.callback();\r\n            }\r\n        });\r\n        this.wsRequests = [];\r\n    };\r\n    WS.prototype.notifyStatusChanged = function (status, reason) {\r\n        this._registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    return WS;\r\n}());\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nvar randomFromSeed = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed$1(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nvar alphabet_1 = {\n    characters: characters,\n    seed: setSeed$1,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nvar randomByteBrowser = randomByte;\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByteBrowser() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nvar encode_1 = encode;\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet_1.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nvar decode_1 = decode;\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet_1.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nvar isValid = isShortId;\n\nvar lib$1 = createCommonjsModule(function (module) {\n\n\n\n\n\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId =  0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode_1(alphabet_1.lookup, version);\n    str = str + encode_1(alphabet_1.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode_1(alphabet_1.lookup, counter);\n    }\n    str = str + encode_1(alphabet_1.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet_1.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet_1.characters(newCharacters);\n    }\n\n    return alphabet_1.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode_1;\nmodule.exports.isValid = isValid;\n});\nvar lib_1 = lib$1.generate;\nvar lib_2 = lib$1.seed;\nvar lib_3 = lib$1.worker;\nvar lib_4 = lib$1.characters;\nvar lib_5 = lib$1.decode;\nvar lib_6 = lib$1.isValid;\n\nvar shortid = lib$1;\n\nfunction domainSession (domain, connection, logger, successMessages, errorMessages) {\r\n    if (domain == null) {\r\n        domain = \"global\";\r\n    }\r\n    successMessages = successMessages || [\"success\"];\r\n    errorMessages = errorMessages || [\"error\"];\r\n    var isJoined = false;\r\n    var tryReconnecting = false;\r\n    var _latestOptions;\r\n    var _connectionOn = false;\r\n    var callbacks = lib();\r\n    connection.disconnected(handleConnectionDisconnected);\r\n    connection.loggedIn(handleConnectionLoggedIn);\r\n    connection.on(\"success\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(\"error\", function (msg) { return handleErrorMessage(msg); });\r\n    connection.on(\"result\", function (msg) { return handleSuccessMessage(msg); });\r\n    if (successMessages) {\r\n        successMessages.forEach(function (sm) {\r\n            connection.on(sm, function (msg) { return handleSuccessMessage(msg); });\r\n        });\r\n    }\r\n    if (errorMessages) {\r\n        errorMessages.forEach(function (sm) {\r\n            connection.on(sm, function (msg) { return handleErrorMessage(msg); });\r\n        });\r\n    }\r\n    var requestsMap = {};\r\n    function join(options) {\r\n        _latestOptions = options;\r\n        return new Promise(function (resolve, reject) {\r\n            if (isJoined) {\r\n                resolve();\r\n                return;\r\n            }\r\n            var joinPromise;\r\n            if (domain === \"global\") {\r\n                joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject(\"not connected to gateway\");\r\n            }\r\n            else {\r\n                logger.debug(\"joining domain \" + domain);\r\n                var joinMsg = {\r\n                    type: \"join\",\r\n                    destination: domain,\r\n                    domain: \"global\",\r\n                    options: options,\r\n                };\r\n                joinPromise = send(joinMsg);\r\n            }\r\n            joinPromise\r\n                .then(function () {\r\n                handleJoined();\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                logger.debug(\"error joining \" + domain + \" domain: \" + JSON.stringify(err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function leave() {\r\n        if (domain === \"global\") {\r\n            return Promise.resolve();\r\n        }\r\n        logger.debug(\"stopping session \" + domain + \"...\");\r\n        var leaveMsg = {\r\n            type: \"leave\",\r\n            destination: domain,\r\n            domain: \"global\",\r\n        };\r\n        tryReconnecting = false;\r\n        return send(leaveMsg)\r\n            .then(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        })\r\n            .catch(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        });\r\n    }\r\n    function handleJoined() {\r\n        logger.debug(\"did join \" + domain);\r\n        isJoined = true;\r\n        var wasReconnect = tryReconnecting;\r\n        tryReconnecting = false;\r\n        callbacks.execute(\"onJoined\", wasReconnect);\r\n    }\r\n    function handleConnectionDisconnected() {\r\n        _connectionOn = false;\r\n        logger.debug(\"connection is down\");\r\n        isJoined = false;\r\n        tryReconnecting = true;\r\n        callbacks.execute(\"onLeft\", { disconnected: true });\r\n    }\r\n    function handleConnectionLoggedIn() {\r\n        _connectionOn = true;\r\n        if (tryReconnecting) {\r\n            logger.debug(\"connection is now up - trying to reconnect...\");\r\n            join(_latestOptions);\r\n        }\r\n    }\r\n    function onJoined(callback) {\r\n        if (isJoined) {\r\n            callback(false);\r\n        }\r\n        return callbacks.add(\"onJoined\", callback);\r\n    }\r\n    function onLeft(callback) {\r\n        if (!isJoined) {\r\n            callback();\r\n        }\r\n        return callbacks.add(\"onLeft\", callback);\r\n    }\r\n    function handleErrorMessage(msg) {\r\n        if (domain !== msg.domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.error(msg);\r\n    }\r\n    function handleSuccessMessage(msg) {\r\n        if (msg.domain !== domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.success(msg);\r\n    }\r\n    function getNextRequestId() {\r\n        return shortid();\r\n    }\r\n    function send(msg, tag, options) {\r\n        options = options || {};\r\n        msg.request_id = msg.request_id || getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        if (!options.skipPeerId) {\r\n            msg.peer_id = connection.peerId;\r\n        }\r\n        var requestId = msg.request_id;\r\n        return new Promise(function (resolve, reject) {\r\n            requestsMap[requestId] = {\r\n                success: function (successMsg) {\r\n                    delete requestsMap[requestId];\r\n                    successMsg._tag = tag;\r\n                    resolve(successMsg);\r\n                },\r\n                error: function (errorMsg) {\r\n                    logger.warn(\"GW error - \" + JSON.stringify(errorMsg) + \" for request \" + JSON.stringify(msg));\r\n                    delete requestsMap[requestId];\r\n                    errorMsg._tag = tag;\r\n                    reject(errorMsg);\r\n                },\r\n            };\r\n            connection\r\n                .send(msg, options)\r\n                .catch(function (err) {\r\n                requestsMap[requestId].error({ err: err });\r\n            });\r\n        });\r\n    }\r\n    function sendFireAndForget(msg) {\r\n        msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n        return connection.send(msg);\r\n    }\r\n    return {\r\n        join: join,\r\n        leave: leave,\r\n        onJoined: onJoined,\r\n        onLeft: onLeft,\r\n        send: send,\r\n        sendFireAndForget: sendFireAndForget,\r\n        on: function (type, callback) {\r\n            connection.on(type, function (msg) {\r\n                if (msg.domain !== domain) {\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(msg);\r\n                }\r\n                catch (e) {\r\n                    logger.error(\"Callback  failed: \" + e + \" \\n \" + e.stack + \" \\n msg was: \" + JSON.stringify(msg), e);\r\n                }\r\n            });\r\n        },\r\n        loggedIn: function (callback) { return connection.loggedIn(callback); },\r\n        connected: function (callback) { return connection.connected(callback); },\r\n        disconnected: function (callback) { return connection.disconnected(callback); },\r\n        get peerId() {\r\n            return connection.peerId;\r\n        },\r\n        get domain() {\r\n            return domain;\r\n        },\r\n    };\r\n}\n\nvar GW3ProtocolImpl = (function () {\r\n    function GW3ProtocolImpl(connection, settings, logger) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.protocolVersion = 3;\r\n        this.datePrefix = \"#T42_DATE#\";\r\n        this.datePrefixLen = this.datePrefix.length;\r\n        this.dateMinLen = this.datePrefixLen + 1;\r\n        this.datePrefixFirstChar = this.datePrefix[0];\r\n        this.registry = lib();\r\n        this._isLoggedIn = false;\r\n        this.shouldTryLogin = true;\r\n        this.initialLogin = true;\r\n        this.initialLoginAttempts = 3;\r\n        this.sessions = [];\r\n        connection.disconnected(function () {\r\n            _this.handleDisconnected();\r\n        });\r\n        this.ping();\r\n    }\r\n    Object.defineProperty(GW3ProtocolImpl.prototype, \"isLoggedIn\", {\r\n        get: function () {\r\n            return this._isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GW3ProtocolImpl.prototype.processStringMessage = function (message) {\r\n        var _this = this;\r\n        var msg = JSON.parse(message, function (key, value) {\r\n            if (typeof value !== \"string\") {\r\n                return value;\r\n            }\r\n            if (value.length < _this.dateMinLen) {\r\n                return value;\r\n            }\r\n            if (value[0] !== _this.datePrefixFirstChar) {\r\n                return value;\r\n            }\r\n            if (value.substring(0, _this.datePrefixLen) !== _this.datePrefix) {\r\n                return value;\r\n            }\r\n            try {\r\n                var milliseconds = parseInt(value.substring(_this.datePrefixLen, value.length), 10);\r\n                if (isNaN(milliseconds)) {\r\n                    return value;\r\n                }\r\n                return new Date(milliseconds);\r\n            }\r\n            catch (ex) {\r\n                return value;\r\n            }\r\n        });\r\n        return {\r\n            msg: msg,\r\n            msgType: msg.type,\r\n        };\r\n    };\r\n    GW3ProtocolImpl.prototype.createStringMessage = function (message) {\r\n        var oldToJson = Date.prototype.toJSON;\r\n        try {\r\n            var datePrefix_1 = this.datePrefix;\r\n            Date.prototype.toJSON = function () {\r\n                return datePrefix_1 + this.getTime();\r\n            };\r\n            var result = JSON.stringify(message);\r\n            return result;\r\n        }\r\n        finally {\r\n            Date.prototype.toJSON = oldToJson;\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.processObjectMessage = function (message) {\r\n        if (!message.type) {\r\n            throw new Error(\"Object should have type property\");\r\n        }\r\n        return {\r\n            msg: message,\r\n            msgType: message.type,\r\n        };\r\n    };\r\n    GW3ProtocolImpl.prototype.createObjectMessage = function (message) {\r\n        return message;\r\n    };\r\n    GW3ProtocolImpl.prototype.login = function (config, reconnect) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authentication, token, e_1, _a, helloMsg, sendOptions, welcomeMsg, msg, token, _b, err_1;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"logging in...\");\r\n                        this.loginConfig = config;\r\n                        if (!this.loginConfig) {\r\n                            this.loginConfig = { username: \"\", password: \"\" };\r\n                        }\r\n                        this.shouldTryLogin = true;\r\n                        authentication = {};\r\n                        this.connection.gatewayToken = config.gatewayToken;\r\n                        if (!config.gatewayToken) return [3, 5];\r\n                        if (!reconnect) return [3, 4];\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        return [4, this.getNewGWToken()];\r\n                    case 2:\r\n                        token = _c.sent();\r\n                        config.gatewayToken = token;\r\n                        return [3, 4];\r\n                    case 3:\r\n                        e_1 = _c.sent();\r\n                        this.logger.warn(\"failed to get GW token when reconnecting \" + ((e_1 === null || e_1 === void 0 ? void 0 : e_1.message) || e_1));\r\n                        return [3, 4];\r\n                    case 4:\r\n                        authentication.method = \"gateway-token\";\r\n                        authentication.token = config.gatewayToken;\r\n                        this.connection.gatewayToken = config.gatewayToken;\r\n                        return [3, 10];\r\n                    case 5:\r\n                        if (!(config.flowName === \"sspi\")) return [3, 9];\r\n                        authentication.provider = \"win\";\r\n                        authentication.method = \"access-token\";\r\n                        if (!(config.flowCallback && config.sessionId)) return [3, 7];\r\n                        _a = authentication;\r\n                        return [4, config.flowCallback(config.sessionId, null)];\r\n                    case 6:\r\n                        _a.token =\r\n                            (_c.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        return [3, 8];\r\n                    case 7: throw new Error(\"Invalid SSPI config\");\r\n                    case 8: return [3, 10];\r\n                    case 9:\r\n                        if (config.token) {\r\n                            authentication.method = \"access-token\";\r\n                            authentication.token = config.token;\r\n                        }\r\n                        else if (config.username) {\r\n                            authentication.method = \"secret\";\r\n                            authentication.login = config.username;\r\n                            authentication.secret = config.password;\r\n                        }\r\n                        else {\r\n                            throw new Error(\"invalid auth message\" + JSON.stringify(config));\r\n                        }\r\n                        _c.label = 10;\r\n                    case 10:\r\n                        helloMsg = {\r\n                            type: \"hello\",\r\n                            identity: this.settings.identity,\r\n                            authentication: authentication\r\n                        };\r\n                        if (config.sessionId) {\r\n                            helloMsg.request_id = config.sessionId;\r\n                        }\r\n                        this.globalDomain = domainSession(\"global\", this.connection, this.logger.subLogger(\"global-domain\"), [\r\n                            \"welcome\",\r\n                            \"token\",\r\n                            \"authentication-request\"\r\n                        ]);\r\n                        sendOptions = { skipPeerId: true };\r\n                        if (this.initialLogin) {\r\n                            sendOptions.retryInterval = this.settings.reconnectInterval;\r\n                            sendOptions.maxRetries = this.settings.reconnectAttempts;\r\n                        }\r\n                        _c.label = 11;\r\n                    case 11:\r\n                        _c.trys.push([11, 19, 20, 21]);\r\n                        welcomeMsg = void 0;\r\n                        _c.label = 12;\r\n                    case 12:\r\n                        return [4, this.globalDomain.send(helloMsg, undefined, sendOptions)];\r\n                    case 13:\r\n                        msg = _c.sent();\r\n                        if (!(msg.type === \"authentication-request\")) return [3, 16];\r\n                        token = Buffer.from(msg.authentication.token, \"base64\");\r\n                        if (!(config.flowCallback && config.sessionId)) return [3, 15];\r\n                        _b = helloMsg.authentication;\r\n                        return [4, config.flowCallback(config.sessionId, token)];\r\n                    case 14:\r\n                        _b.token =\r\n                            (_c.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        _c.label = 15;\r\n                    case 15:\r\n                        helloMsg.request_id = config.sessionId;\r\n                        return [3, 12];\r\n                    case 16:\r\n                        if (msg.type === \"welcome\") {\r\n                            welcomeMsg = msg;\r\n                            return [3, 18];\r\n                        }\r\n                        else if (msg.type === \"error\") {\r\n                            throw new Error(\"Authentication failed: \" + msg.reason);\r\n                        }\r\n                        else {\r\n                            throw new Error(\"Unexpected message type during authentication: \" + msg.type);\r\n                        }\r\n                    case 17: return [3, 12];\r\n                    case 18:\r\n                        this.initialLogin = false;\r\n                        this.logger.debug(\"login successful with peerId \" + welcomeMsg.peer_id);\r\n                        this.connection.peerId = welcomeMsg.peer_id;\r\n                        this.connection.resolvedIdentity = welcomeMsg.resolved_identity;\r\n                        this.connection.availableDomains = welcomeMsg.available_domains;\r\n                        if (welcomeMsg.options) {\r\n                            this.connection.token = welcomeMsg.options.access_token;\r\n                            this.connection.info = welcomeMsg.options.info;\r\n                        }\r\n                        this.setLoggedIn(true);\r\n                        return [2, welcomeMsg.resolved_identity];\r\n                    case 19:\r\n                        err_1 = _c.sent();\r\n                        this.logger.error(\"error sending hello message - \" + (err_1.message || err_1.msg || err_1.reason || err_1), err_1);\r\n                        throw err_1;\r\n                    case 20:\r\n                        if (config && config.flowCallback && config.sessionId) {\r\n                            config.flowCallback(config.sessionId, null);\r\n                        }\r\n                        return [7];\r\n                    case 21: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promises;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"logging out...\");\r\n                        this.shouldTryLogin = false;\r\n                        if (this.pingTimer) {\r\n                            clearTimeout(this.pingTimer);\r\n                        }\r\n                        promises = this.sessions.map(function (session) {\r\n                            session.leave();\r\n                        });\r\n                        return [4, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.loggedIn = function (callback) {\r\n        if (this._isLoggedIn) {\r\n            callback();\r\n        }\r\n        return this.registry.add(\"onLoggedIn\", callback);\r\n    };\r\n    GW3ProtocolImpl.prototype.domain = function (domainName, domainLogger, successMessages, errorMessages) {\r\n        var session = this.sessions.filter(function (s) { return s.domain === domainName; })[0];\r\n        if (!session) {\r\n            session = domainSession(domainName, this.connection, domainLogger, successMessages, errorMessages);\r\n            this.sessions.push(session);\r\n        }\r\n        return session;\r\n    };\r\n    GW3ProtocolImpl.prototype.handleDisconnected = function () {\r\n        var _this = this;\r\n        this.setLoggedIn(false);\r\n        var tryToLogin = this.shouldTryLogin;\r\n        if (tryToLogin && this.initialLogin) {\r\n            if (this.initialLoginAttempts <= 0) {\r\n                return;\r\n            }\r\n            this.initialLoginAttempts--;\r\n        }\r\n        this.logger.debug(\"disconnected - will try new login?\" + this.shouldTryLogin);\r\n        if (this.shouldTryLogin) {\r\n            if (!this.loginConfig) {\r\n                throw new Error(\"no login info\");\r\n            }\r\n            this.connection.login(this.loginConfig, true)\r\n                .catch(function () {\r\n                setTimeout(_this.handleDisconnected.bind(_this), _this.settings.reconnectInterval || 1000);\r\n            });\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.setLoggedIn = function (value) {\r\n        this._isLoggedIn = value;\r\n        if (this._isLoggedIn) {\r\n            this.registry.execute(\"onLoggedIn\");\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.ping = function () {\r\n        var _this = this;\r\n        if (!this.shouldTryLogin) {\r\n            return;\r\n        }\r\n        if (this._isLoggedIn) {\r\n            this.connection.send({ type: \"ping\" });\r\n        }\r\n        this.pingTimer = setTimeout(function () {\r\n            _this.ping();\r\n        }, 30 * 1000);\r\n    };\r\n    GW3ProtocolImpl.prototype.authToken = function () {\r\n        var createTokenReq = {\r\n            type: \"create-token\"\r\n        };\r\n        if (!this.globalDomain) {\r\n            return Promise.reject(new Error(\"no global domain session\"));\r\n        }\r\n        return this.globalDomain.send(createTokenReq)\r\n            .then(function (res) {\r\n            return res.token;\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.getNewGWToken = function () {\r\n        if (typeof window !== undefined) {\r\n            var glue42gd = window.glue42gd;\r\n            if (glue42gd) {\r\n                return glue42gd.getGWToken();\r\n            }\r\n        }\r\n        return Promise.reject(new Error(\"not running in GD\"));\r\n    };\r\n    return GW3ProtocolImpl;\r\n}());\n\nvar MessageReplayerImpl = (function () {\r\n    function MessageReplayerImpl(specs) {\r\n        this.specsNames = [];\r\n        this.messages = {};\r\n        this.subs = {};\r\n        this.subsRefCount = {};\r\n        this.specs = {};\r\n        for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\r\n            var spec = specs_1[_i];\r\n            this.specs[spec.name] = spec;\r\n            this.specsNames.push(spec.name);\r\n        }\r\n    }\r\n    MessageReplayerImpl.prototype.init = function (connection) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var _loop_1 = function (type) {\r\n                var refCount = this_1.subsRefCount[type];\r\n                if (!refCount) {\r\n                    refCount = 0;\r\n                }\r\n                refCount += 1;\r\n                this_1.subsRefCount[type] = refCount;\r\n                if (refCount > 1) {\r\n                    return \"continue\";\r\n                }\r\n                var sub = connection.on(type, function (msg) { return _this.processMessage(type, msg); });\r\n                this_1.subs[type] = sub;\r\n            };\r\n            var this_1 = this;\r\n            for (var _b = 0, _c = this.specs[name_1].types; _b < _c.length; _b++) {\r\n                var type = _c[_b];\r\n                _loop_1(type);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.processMessage = function (type, msg) {\r\n        if (this.isDone || !msg) {\r\n            return;\r\n        }\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_2 = _a[_i];\r\n            if (this.specs[name_2].types.indexOf(type) !== -1) {\r\n                var messages = this.messages[name_2] || [];\r\n                this.messages[name_2] = messages;\r\n                messages.push(msg);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.drain = function (name, callback) {\r\n        var _a;\r\n        if (callback) {\r\n            (this.messages[name] || []).forEach(callback);\r\n        }\r\n        delete this.messages[name];\r\n        for (var _i = 0, _b = this.specs[name].types; _i < _b.length; _i++) {\r\n            var type = _b[_i];\r\n            this.subsRefCount[type] -= 1;\r\n            if (this.subsRefCount[type] <= 0) {\r\n                (_a = this.connection) === null || _a === void 0 ? void 0 : _a.off(this.subs[type]);\r\n                delete this.subs[type];\r\n                delete this.subsRefCount[type];\r\n            }\r\n        }\r\n        delete this.specs[name];\r\n        if (!this.specs.length) {\r\n            this.isDone = true;\r\n        }\r\n    };\r\n    return MessageReplayerImpl;\r\n}());\n\nvar PromisePlus = function (executor, timeoutMilliseconds, timeoutMessage) {\r\n    return new Promise(function (resolve, reject) {\r\n        var timeout = setTimeout(function () {\r\n            var message = timeoutMessage || \"Promise timeout hit: \" + timeoutMilliseconds;\r\n            reject(message);\r\n        }, timeoutMilliseconds);\r\n        var providedPromise = new Promise(executor);\r\n        providedPromise\r\n            .then(function (result) {\r\n            clearTimeout(timeout);\r\n            resolve(result);\r\n        })\r\n            .catch(function (error) {\r\n            clearTimeout(timeout);\r\n            reject(error);\r\n        });\r\n    });\r\n};\n\nvar WebPlatformTransport = (function () {\r\n    function WebPlatformTransport(settings, logger, identity) {\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.identity = identity;\r\n        this.parentReady = false;\r\n        this.iAmConnected = false;\r\n        this.rejected = false;\r\n        this.children = [];\r\n        this.extContentAvailable = false;\r\n        this.extContentConnecting = false;\r\n        this.extContentConnected = false;\r\n        this.parentInExtMode = false;\r\n        this.parentPingTimeout = 3000;\r\n        this.connectionRequestTimeout = 5000;\r\n        this.defaultTargetString = \"*\";\r\n        this.registry = lib();\r\n        this.messages = {\r\n            connectionAccepted: { name: \"connectionAccepted\", handle: this.handleConnectionAccepted.bind(this) },\r\n            connectionRejected: { name: \"connectionRejected\", handle: this.handleConnectionRejected.bind(this) },\r\n            connectionRequest: { name: \"connectionRequest\", handle: this.handleConnectionRequest.bind(this) },\r\n            parentReady: { name: \"parentReady\", handle: this.handleParentReady.bind(this) },\r\n            parentPing: { name: \"parentPing\", handle: this.handleParentPing.bind(this) },\r\n            platformPing: { name: \"platformPing\", handle: this.handlePlatformPing.bind(this) },\r\n            platformUnload: { name: \"platformUnload\", handle: this.handlePlatformUnload.bind(this) },\r\n            platformReady: { name: \"platformReady\", handle: this.handlePlatformReady.bind(this) },\r\n            clientUnload: { name: \"clientUnload\", handle: this.handleClientUnload.bind(this) },\r\n            manualUnload: { name: \"manualUnload\", handle: this.handleManualUnload.bind(this) },\r\n            extConnectionResponse: { name: \"extConnectionResponse\", handle: this.handleExtConnectionResponse.bind(this) },\r\n            extSetupRequest: { name: \"extSetupRequest\", handle: this.handleExtSetupRequest.bind(this) }\r\n        };\r\n        this.extContentAvailable = !!window.glue42ext;\r\n        this.setUpMessageListener();\r\n        this.setUpUnload();\r\n        if (!this.settings.port) {\r\n            this.parent = window.opener || window.top;\r\n            this.parentType = window.opener ? \"opener\" :\r\n                window.name.indexOf(\"#wsp\") !== -1 ? \"workspace\" : \"top\";\r\n        }\r\n    }\r\n    Object.defineProperty(WebPlatformTransport.prototype, \"transportWindowId\", {\r\n        get: function () {\r\n            return this.publicWindowId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WebPlatformTransport.prototype.sendObject = function (msg) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.extContentConnected) {\r\n                    return [2, window.postMessage({ glue42ExtOut: msg }, this.defaultTargetString)];\r\n                }\r\n                if (!this.port) {\r\n                    throw new Error(\"Cannot send message, because the port was not opened yet\");\r\n                }\r\n                this.port.postMessage(msg);\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(WebPlatformTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WebPlatformTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    WebPlatformTransport.prototype.send = function () {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    WebPlatformTransport.prototype.onConnectedChanged = function (callback) {\r\n        return this.registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WebPlatformTransport.prototype.open = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"opening a connection to the web platform gateway.\");\r\n                        return [4, this.connect()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.notifyStatusChanged(true);\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    WebPlatformTransport.prototype.name = function () {\r\n        return \"web-platform\";\r\n    };\r\n    WebPlatformTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    WebPlatformTransport.prototype.connect = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.parentReady) {\r\n                            this.logger.debug(\"cancelling connection attempt, because this client's parent has already given a ready signal\");\r\n                            return [2];\r\n                        }\r\n                        if (this.settings.port) {\r\n                            this.logger.debug(\"opening an internal web platform connection\");\r\n                            this.port = this.settings.port;\r\n                            this.publicWindowId = this.settings.windowId;\r\n                            if (this.identity) {\r\n                                this.identity.windowId = this.publicWindowId;\r\n                            }\r\n                            this.port.onmessage = function (event) { return _this.registry.execute(\"onMessage\", event.data); };\r\n                            this.logger.debug(\"internal web platform connection completed\");\r\n                            return [2];\r\n                        }\r\n                        if (!this.parentType || !this.parent) {\r\n                            throw new Error(\"Cannot initiate a connection, because there is no opener, no top and no port.\");\r\n                        }\r\n                        this.logger.debug(\"opening a \" + (this.parentType === \"opener\" ? \"child\" : \"grandchild\") + \" client web platform connection\");\r\n                        return [4, this.waitParent(this.parent, this.parentType)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (!this.parentInExtMode) return [3, 3];\r\n                        return [4, this.requestConnectionPermissionFromExt()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3: return [4, this.initiateRemoteConnection(this.parent, this.parentType)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.logger.debug(\"the \" + (this.parentType === \"opener\" ? \"child\" : \"grandchild\") + \" client is connected\");\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.initiateRemoteConnection = function (target, parentType) {\r\n        var _this = this;\r\n        return PromisePlus(function (resolve, reject) {\r\n            _this.connectionResolve = resolve;\r\n            _this.connectionReject = reject;\r\n            _this.myClientId = shortid();\r\n            var bridgeInstanceId = _this.parentType === \"workspace\" ? window.name.substring(0, window.name.indexOf(\"#wsp\")) : window.name;\r\n            var request = {\r\n                glue42core: {\r\n                    type: _this.messages.connectionRequest.name,\r\n                    clientId: _this.myClientId,\r\n                    clientType: parentType === \"top\" || parentType === \"workspace\" ? \"grandChild\" : \"child\",\r\n                    bridgeInstanceId: bridgeInstanceId\r\n                }\r\n            };\r\n            _this.logger.debug(\"sending connection request to \" + parentType);\r\n            if (_this.extContentConnecting) {\r\n                request.glue42core.clientType = \"child\";\r\n                request.glue42core.bridgeInstanceId = _this.myClientId;\r\n                request.glue42core.parentWindowId = _this.parentWindowId;\r\n                return window.postMessage(request, _this.defaultTargetString);\r\n            }\r\n            target.postMessage(request, _this.defaultTargetString);\r\n        }, this.connectionRequestTimeout, \"The connection to the opener/top window timed out\");\r\n    };\r\n    WebPlatformTransport.prototype.waitParent = function (target, parentType) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connectionNotPossibleMsg, parentCheck, error_1;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        connectionNotPossibleMsg = \"Cannot initiate glue, because this window was not opened or created by a glue client\";\r\n                        parentCheck = PromisePlus(function (resolve, reject) {\r\n                            var isIframe = window.self !== window.top;\r\n                            if (parentType === \"top\" && !isIframe) {\r\n                                return reject(connectionNotPossibleMsg);\r\n                            }\r\n                            _this.parentPingResolve = resolve;\r\n                            var message = {\r\n                                glue42core: {\r\n                                    type: parentType === \"opener\" ? _this.messages.platformPing.name : _this.messages.parentPing.name\r\n                                }\r\n                            };\r\n                            _this.logger.debug(\"checking for \" + parentType + \" window availability\");\r\n                            target.postMessage(message, _this.defaultTargetString);\r\n                        }, this.parentPingTimeout, connectionNotPossibleMsg);\r\n                        if (!this.extContentAvailable) {\r\n                            return [2, parentCheck];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 5]);\r\n                        return [4, parentCheck];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2];\r\n                    case 3:\r\n                        error_1 = _a.sent();\r\n                        this.logger.debug(\"the parent check failed, but there is an associated extension content script, requesting permission...\");\r\n                        return [4, this.requestConnectionPermissionFromExt()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [3, 5];\r\n                    case 5: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.setUpMessageListener = function () {\r\n        var _this = this;\r\n        if (this.settings.port) {\r\n            this.logger.debug(\"skipping generic message listener, because this is an internal client\");\r\n            return;\r\n        }\r\n        window.addEventListener(\"message\", function (event) {\r\n            var _a;\r\n            var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n            if (!data || _this.rejected) {\r\n                return;\r\n            }\r\n            if (!_this.checkMessageTypeValid(data.type)) {\r\n                _this.logger.error(\"cannot handle the incoming glue42 core message, because the type is invalid: \" + data.type);\r\n                return;\r\n            }\r\n            var messageType = data.type;\r\n            _this.logger.debug(\"received valid glue42core message of type: \" + messageType);\r\n            _this.messages[messageType].handle(event);\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.setUpUnload = function () {\r\n        var _this = this;\r\n        if (this.settings.port) {\r\n            this.logger.debug(\"skipping unload event listener, because this is an internal client\");\r\n            return;\r\n        }\r\n        window.addEventListener(\"beforeunload\", function () {\r\n            var _a, _b;\r\n            if (_this.extContentConnected) {\r\n                return;\r\n            }\r\n            var message = {\r\n                glue42core: {\r\n                    type: _this.messages.clientUnload.name,\r\n                    data: {\r\n                        clientId: _this.myClientId,\r\n                        ownWindowId: (_a = _this.identity) === null || _a === void 0 ? void 0 : _a.windowId\r\n                    }\r\n                }\r\n            };\r\n            if (_this.parent) {\r\n                _this.parent.postMessage(message, _this.defaultTargetString);\r\n            }\r\n            (_b = _this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.handleParentReady = function (event) {\r\n        var _a;\r\n        this.logger.debug(\"handling the ready signal from the parent, by resoling the pending promise.\");\r\n        this.parentReady = true;\r\n        var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n        if (data && data.extMode) {\r\n            this.logger.debug(\"my parent is connected to its content script, fetching windowId and proceeding with content script connection\");\r\n            this.parentWindowId = data.extMode.windowId;\r\n            this.parentInExtMode = true;\r\n        }\r\n        if (this.parentPingResolve) {\r\n            this.parentPingResolve();\r\n            delete this.parentPingResolve;\r\n            return;\r\n        }\r\n        this.logger.debug(\"silently handling the ready signal from the top parent, because there is no defined promise\");\r\n    };\r\n    WebPlatformTransport.prototype.handlePlatformReady = function () {\r\n        this.logger.debug(\"the web platform gave the ready signal\");\r\n        this.parentReady = true;\r\n        if (this.parentPingResolve) {\r\n            this.parentPingResolve();\r\n            delete this.parentPingResolve;\r\n            return;\r\n        }\r\n        this.logger.debug(\"silently handling the ready signal from the top parent, because there is no defined promise\");\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionAccepted = function (event) {\r\n        var _a;\r\n        var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n        if (this.myClientId === data.clientId) {\r\n            return this.handleAcceptanceOfMyRequest(data);\r\n        }\r\n        return this.handleAcceptanceOfGrandChildRequest(data, event);\r\n    };\r\n    WebPlatformTransport.prototype.handleAcceptanceOfMyRequest = function (data) {\r\n        var _this = this;\r\n        this.logger.debug(\"handling a connection accepted signal targeted at me.\");\r\n        if (this.extContentConnecting) {\r\n            return this.processExtContentConnection(data);\r\n        }\r\n        if (!data.port) {\r\n            this.logger.error(\"cannot set up my connection, because I was not provided with a port\");\r\n            return;\r\n        }\r\n        this.publicWindowId = this.parentType === \"opener\" ? window.name :\r\n            this.parentType === \"top\" ? data.parentWindowId :\r\n                window.name.substring(0, window.name.indexOf(\"#wsp\"));\r\n        if (this.identity && this.parentType !== \"top\") {\r\n            this.identity.windowId = this.publicWindowId;\r\n        }\r\n        if (this.identity && data.appName) {\r\n            this.identity.application = data.appName;\r\n            this.identity.applicationName = data.appName;\r\n        }\r\n        this.port = data.port;\r\n        this.port.onmessage = function (e) { return _this.registry.execute(\"onMessage\", e.data); };\r\n        if (this.connectionResolve) {\r\n            this.logger.debug(\"my connection is set up, calling the connection resolve.\");\r\n            this.connectionResolve();\r\n            delete this.connectionResolve;\r\n            return;\r\n        }\r\n        this.logger.error(\"unable to call the connection resolve, because no connection promise was found\");\r\n    };\r\n    WebPlatformTransport.prototype.processExtContentConnection = function (data) {\r\n        var _this = this;\r\n        this.logger.debug(\"handling a connection accepted signal targeted at me for extension content connection.\");\r\n        this.extContentConnecting = false;\r\n        this.extContentConnected = true;\r\n        this.publicWindowId = this.parentWindowId || this.myClientId;\r\n        if (this.extContentConnecting && this.identity) {\r\n            this.identity.windowId = this.publicWindowId;\r\n        }\r\n        if (this.identity && data.appName) {\r\n            this.identity.application = data.appName;\r\n            this.identity.applicationName = data.appName;\r\n        }\r\n        window.addEventListener(\"message\", function (event) {\r\n            var _a;\r\n            var extData = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42ExtInc;\r\n            if (!extData) {\r\n                return;\r\n            }\r\n            _this.registry.execute(\"onMessage\", extData);\r\n        });\r\n        if (this.connectionResolve) {\r\n            this.logger.debug(\"my connection is set up, calling the connection resolve.\");\r\n            this.connectionResolve();\r\n            delete this.connectionResolve;\r\n            return;\r\n        }\r\n    };\r\n    WebPlatformTransport.prototype.handleAcceptanceOfGrandChildRequest = function (data, event) {\r\n        if (this.extContentConnecting || this.extContentConnected) {\r\n            this.logger.debug(\"cannot process acceptance of a grandchild, because I am connected to a content script\");\r\n            return;\r\n        }\r\n        this.logger.debug(\"handling a connection accepted signal targeted at a grandchild: \" + data.clientId);\r\n        var child = this.children.find(function (c) { return c.grandChildId === data.clientId; });\r\n        if (!child) {\r\n            this.logger.error(\"cannot handle connection accepted for grandchild: \" + data.clientId + \", because there is no grandchild with this id\");\r\n            return;\r\n        }\r\n        child.connected = true;\r\n        this.logger.debug(\"the grandchild connection for \" + data.clientId + \" is set up, forwarding the success message and the gateway port\");\r\n        data.parentWindowId = this.publicWindowId;\r\n        child.source.postMessage(event.data, child.origin, [data.port]);\r\n        return;\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionRejected = function () {\r\n        this.logger.debug(\"handling a connection rejection. Most likely the reason is that this window was not created by a glue API call\");\r\n        if (this.connectionReject) {\r\n            this.connectionReject(\"The platform connection was rejected. Most likely because this window was not created by a glue API call\");\r\n            delete this.connectionReject;\r\n        }\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionRequest = function (event) {\r\n        if (this.extContentConnecting) {\r\n            this.logger.debug(\"This connection request event is targeted at the extension content\");\r\n            return;\r\n        }\r\n        var source = event.source;\r\n        var data = event.data.glue42core;\r\n        if (!data.clientType || data.clientType !== \"grandChild\") {\r\n            return this.rejectConnectionRequest(source, event.origin, \"rejecting a connection request, because the source was not opened by a glue API call\");\r\n        }\r\n        if (!data.clientId) {\r\n            return this.rejectConnectionRequest(source, event.origin, \"rejecting a connection request, because the source did not provide a valid id\");\r\n        }\r\n        if (this.parentType !== \"opener\" || !this.parent) {\r\n            return this.rejectConnectionRequest(source, event.origin, \"Cannot forward the connection request, because no direct connection to the platform was found\");\r\n        }\r\n        this.logger.debug(\"handling a connection request for a grandchild: \" + data.clientId);\r\n        this.children.push({ grandChildId: data.clientId, source: source, connected: false, origin: event.origin });\r\n        this.logger.debug(\"grandchild: \" + data.clientId + \" is prepared, forwarding connection request to the platform\");\r\n        this.parent.postMessage(event.data, this.defaultTargetString);\r\n    };\r\n    WebPlatformTransport.prototype.handleParentPing = function (event) {\r\n        if (!this.parentReady) {\r\n            this.logger.debug(\"my parent is not ready, I am ignoring the parent ping\");\r\n            return;\r\n        }\r\n        if (!this.iAmConnected) {\r\n            this.logger.debug(\"i am not fully connected yet, I am ignoring the parent ping\");\r\n            return;\r\n        }\r\n        var message = {\r\n            glue42core: {\r\n                type: this.messages.parentReady.name\r\n            }\r\n        };\r\n        if (this.extContentConnected) {\r\n            message.glue42core.extMode = { windowId: this.myClientId };\r\n        }\r\n        var source = event.source;\r\n        this.logger.debug(\"responding to a parent ping with a ready message\");\r\n        source.postMessage(message, event.origin);\r\n    };\r\n    WebPlatformTransport.prototype.handlePlatformUnload = function (event) {\r\n        this.logger.debug(\"detected a web platform unload\");\r\n        this.parentReady = false;\r\n        if (this.children.length) {\r\n            this.logger.debug(\"forwarding the platform unload to all known children and starting platform discovery polling\");\r\n            this.children.forEach(function (child) { return child.source.postMessage(event.data, child.origin); });\r\n        }\r\n        this.notifyStatusChanged(false, \"Gateway unloaded\");\r\n    };\r\n    WebPlatformTransport.prototype.handleManualUnload = function () {\r\n        var _a, _b;\r\n        var message = {\r\n            glue42core: {\r\n                type: this.messages.clientUnload.name,\r\n                data: {\r\n                    clientId: this.myClientId,\r\n                    ownWindowId: (_a = this.identity) === null || _a === void 0 ? void 0 : _a.windowId\r\n                }\r\n            }\r\n        };\r\n        if (this.parent) {\r\n            this.parent.postMessage(message, this.defaultTargetString);\r\n        }\r\n        if (this.extContentConnected) {\r\n            return window.postMessage({ glue42ExtOut: message }, this.defaultTargetString);\r\n        }\r\n        (_b = this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);\r\n    };\r\n    WebPlatformTransport.prototype.handleClientUnload = function (event) {\r\n        var data = event.data.glue42core;\r\n        var clientId = data === null || data === void 0 ? void 0 : data.data.clientId;\r\n        if (!clientId) {\r\n            this.logger.warn(\"cannot process grand child unload, because the provided id was not valid\");\r\n            return;\r\n        }\r\n        var foundChild = this.children.find(function (child) { return child.grandChildId === clientId; });\r\n        if (!foundChild) {\r\n            this.logger.warn(\"cannot process grand child unload, because this client is unaware of this grandchild\");\r\n            return;\r\n        }\r\n        this.logger.debug(\"handling grandchild unload for id: \" + clientId);\r\n        this.children = this.children.filter(function (child) { return child.grandChildId !== clientId; });\r\n    };\r\n    WebPlatformTransport.prototype.handlePlatformPing = function () {\r\n        this.logger.error(\"cannot handle platform ping, because this is not a platform calls handling component\");\r\n    };\r\n    WebPlatformTransport.prototype.notifyStatusChanged = function (status, reason) {\r\n        this.iAmConnected = status;\r\n        this.registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    WebPlatformTransport.prototype.checkMessageTypeValid = function (typeToValidate) {\r\n        return typeof typeToValidate === \"string\" && !!this.messages[typeToValidate];\r\n    };\r\n    WebPlatformTransport.prototype.rejectConnectionRequest = function (source, origin, reason) {\r\n        this.rejected = true;\r\n        this.logger.error(reason);\r\n        var rejection = {\r\n            glue42core: {\r\n                type: this.messages.connectionRejected.name\r\n            }\r\n        };\r\n        source.postMessage(rejection, origin);\r\n    };\r\n    WebPlatformTransport.prototype.requestConnectionPermissionFromExt = function () {\r\n        var _this = this;\r\n        return this.waitForContentScript()\r\n            .then(function () { return PromisePlus(function (resolve, reject) {\r\n            _this.extConnectionResolve = resolve;\r\n            _this.extConnectionReject = reject;\r\n            var message = {\r\n                glue42core: {\r\n                    type: \"extSetupRequest\"\r\n                }\r\n            };\r\n            _this.logger.debug(\"permission request to the extension content script was sent\");\r\n            window.postMessage(message, _this.defaultTargetString);\r\n        }, _this.parentPingTimeout, \"Cannot initialize glue, because this app was not opened or created by a Glue Client and the request for extension connection timed out\"); });\r\n    };\r\n    WebPlatformTransport.prototype.handleExtConnectionResponse = function (event) {\r\n        var _a;\r\n        var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n        if (!data.approved && this.extConnectionReject) {\r\n            return this.extConnectionReject(\"Cannot initialize glue, because this app was not opened or created by a Glue Client and the request for extension connection was rejected\");\r\n        }\r\n        if (this.extConnectionResolve) {\r\n            this.extContentConnecting = true;\r\n            this.logger.debug(\"The extension connection was approved, proceeding.\");\r\n            this.extConnectionResolve();\r\n            delete this.extConnectionResolve;\r\n        }\r\n    };\r\n    WebPlatformTransport.prototype.handleExtSetupRequest = function () {\r\n        return;\r\n    };\r\n    WebPlatformTransport.prototype.waitForContentScript = function () {\r\n        var _a;\r\n        var contentReady = !!((_a = window.glue42ext) === null || _a === void 0 ? void 0 : _a.content);\r\n        if (contentReady) {\r\n            return Promise.resolve();\r\n        }\r\n        return PromisePlus(function (resolve) {\r\n            window.addEventListener(\"Glue42EXTReady\", function () {\r\n                resolve();\r\n            });\r\n        }, this.connectionRequestTimeout, \"The content script was available, but was never heard to be ready\");\r\n    };\r\n    return WebPlatformTransport;\r\n}());\n\nvar Connection = (function () {\r\n    function Connection(settings, logger) {\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.messageHandlers = {};\r\n        this.ids = 1;\r\n        this.registry = lib();\r\n        this._connected = false;\r\n        this.isTrace = false;\r\n        settings = settings || {};\r\n        settings.reconnectAttempts = settings.reconnectAttempts || 10;\r\n        settings.reconnectInterval = settings.reconnectInterval || 1000;\r\n        if (settings.inproc) {\r\n            this.transport = new InProcTransport(settings.inproc, logger.subLogger(\"inMemory\"));\r\n        }\r\n        else if (settings.sharedWorker) {\r\n            this.transport = new SharedWorkerTransport(settings.sharedWorker, logger.subLogger(\"shared-worker\"));\r\n        }\r\n        else if (settings.webPlatform) {\r\n            this.transport = new WebPlatformTransport(settings.webPlatform, logger.subLogger(\"web-platform\"), settings.identity);\r\n        }\r\n        else if (settings.ws !== undefined) {\r\n            this.transport = new WS(settings, logger.subLogger(\"ws\"));\r\n        }\r\n        else {\r\n            throw new Error(\"No connection information specified\");\r\n        }\r\n        this.isTrace = logger.canPublish(\"trace\");\r\n        logger.debug(\"starting with \" + this.transport.name() + \" transport\");\r\n        this.protocol = new GW3ProtocolImpl(this, settings, logger.subLogger(\"protocol\"));\r\n        this.transport.onConnectedChanged(this.handleConnectionChanged.bind(this));\r\n        this.transport.onMessage(this.handleTransportMessage.bind(this));\r\n        if (settings.replaySpecs && settings.replaySpecs.length) {\r\n            this.replayer = new MessageReplayerImpl(settings.replaySpecs);\r\n            this.replayer.init(this);\r\n        }\r\n    }\r\n    Object.defineProperty(Connection.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.protocol) === null || _a === void 0 ? void 0 : _a.protocolVersion;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Connection.prototype.send = function (message, options) {\r\n        if (this.transport.sendObject &&\r\n            this.transport.isObjectBasedTransport) {\r\n            var msg = this.protocol.createObjectMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + JSON.stringify(msg));\r\n            }\r\n            return this.transport.sendObject(msg, options);\r\n        }\r\n        else {\r\n            var strMessage = this.protocol.createStringMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + strMessage);\r\n            }\r\n            return this.transport.send(strMessage, options);\r\n        }\r\n    };\r\n    Connection.prototype.on = function (type, messageHandler) {\r\n        type = type.toLowerCase();\r\n        if (this.messageHandlers[type] === undefined) {\r\n            this.messageHandlers[type] = {};\r\n        }\r\n        var id = this.ids++;\r\n        this.messageHandlers[type][id] = messageHandler;\r\n        return {\r\n            type: type,\r\n            id: id,\r\n        };\r\n    };\r\n    Connection.prototype.off = function (info) {\r\n        delete this.messageHandlers[info.type.toLowerCase()][info.id];\r\n    };\r\n    Object.defineProperty(Connection.prototype, \"isConnected\", {\r\n        get: function () {\r\n            return this.protocol.isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Connection.prototype.connected = function (callback) {\r\n        var _this = this;\r\n        return this.protocol.loggedIn(function () {\r\n            callback(_this.settings.ws || _this.settings.sharedWorker || \"\");\r\n        });\r\n    };\r\n    Connection.prototype.disconnected = function (callback) {\r\n        return this.registry.add(\"disconnected\", callback);\r\n    };\r\n    Connection.prototype.login = function (authRequest, reconnect) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var identity;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.transport.open()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        timer(\"connection\").mark(\"transport-opened\");\r\n                        identity = this.protocol.login(authRequest, reconnect);\r\n                        timer(\"connection\").mark(\"protocol-logged-in\");\r\n                        return [2, identity];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.protocol.logout()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4, this.transport.close()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.loggedIn = function (callback) {\r\n        return this.protocol.loggedIn(callback);\r\n    };\r\n    Connection.prototype.domain = function (domain, successMessages, errorMessages) {\r\n        return this.protocol.domain(domain, this.logger.subLogger(\"domain=\" + domain), successMessages, errorMessages);\r\n    };\r\n    Connection.prototype.authToken = function () {\r\n        return this.protocol.authToken();\r\n    };\r\n    Connection.prototype.reconnect = function () {\r\n        return this.transport.reconnect();\r\n    };\r\n    Connection.prototype.distributeMessage = function (message, type) {\r\n        var _this = this;\r\n        var handlers = this.messageHandlers[type.toLowerCase()];\r\n        if (handlers !== undefined) {\r\n            Object.keys(handlers).forEach(function (handlerId) {\r\n                var handler = handlers[handlerId];\r\n                if (handler !== undefined) {\r\n                    try {\r\n                        handler(message);\r\n                    }\r\n                    catch (error) {\r\n                        try {\r\n                            _this.logger.error(\"Message handler failed with \" + error.stack, error);\r\n                        }\r\n                        catch (loggerError) {\r\n                            console.log(\"Message handler failed\", error);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Connection.prototype.handleConnectionChanged = function (connected) {\r\n        if (this._connected === connected) {\r\n            return;\r\n        }\r\n        this._connected = connected;\r\n        if (connected) {\r\n            this.registry.execute(\"connected\");\r\n        }\r\n        else {\r\n            this.registry.execute(\"disconnected\");\r\n        }\r\n    };\r\n    Connection.prototype.handleTransportMessage = function (msg) {\r\n        var msgObj;\r\n        if (typeof msg === \"string\") {\r\n            msgObj = this.protocol.processStringMessage(msg);\r\n        }\r\n        else {\r\n            msgObj = this.protocol.processObjectMessage(msg);\r\n        }\r\n        if (this.isTrace) {\r\n            this.logger.trace(\"<< \" + JSON.stringify(msgObj));\r\n        }\r\n        this.distributeMessage(msgObj.msg, msgObj.msgType);\r\n    };\r\n    return Connection;\r\n}());\n\nvar order = [\"trace\", \"debug\", \"info\", \"warn\", \"error\", \"off\"];\r\nvar Logger = (function () {\r\n    function Logger(name, parent, logFn) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.subLoggers = [];\r\n        this.logFn = console;\r\n        this.customLogFn = false;\r\n        this.name = name;\r\n        if (parent) {\r\n            this.path = parent.path + \".\" + name;\r\n        }\r\n        else {\r\n            this.path = name;\r\n        }\r\n        this.loggerFullName = \"[\" + this.path + \"]\";\r\n        this.includeTimeAndLevel = !logFn;\r\n        if (logFn) {\r\n            this.logFn = logFn;\r\n            this.customLogFn = true;\r\n        }\r\n    }\r\n    Logger.prototype.subLogger = function (name) {\r\n        var existingSub = this.subLoggers.filter(function (subLogger) {\r\n            return subLogger.name === name;\r\n        })[0];\r\n        if (existingSub !== undefined) {\r\n            return existingSub;\r\n        }\r\n        Object.keys(this).forEach(function (key) {\r\n            if (key === name) {\r\n                throw new Error(\"This sub logger name is not allowed.\");\r\n            }\r\n        });\r\n        var sub = new Logger(name, this, this.customLogFn ? this.logFn : undefined);\r\n        this.subLoggers.push(sub);\r\n        return sub;\r\n    };\r\n    Logger.prototype.publishLevel = function (level) {\r\n        var _a;\r\n        if (level) {\r\n            this._publishLevel = level;\r\n        }\r\n        return this._publishLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.publishLevel());\r\n    };\r\n    Logger.prototype.consoleLevel = function (level) {\r\n        var _a;\r\n        if (level) {\r\n            this._consoleLevel = level;\r\n        }\r\n        return this._consoleLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.consoleLevel());\r\n    };\r\n    Logger.prototype.log = function (message, level, error) {\r\n        this.publishMessage(level || \"info\", message, error);\r\n    };\r\n    Logger.prototype.trace = function (message) {\r\n        this.log(message, \"trace\");\r\n    };\r\n    Logger.prototype.debug = function (message) {\r\n        this.log(message, \"debug\");\r\n    };\r\n    Logger.prototype.info = function (message) {\r\n        this.log(message, \"info\");\r\n    };\r\n    Logger.prototype.warn = function (message) {\r\n        this.log(message, \"warn\");\r\n    };\r\n    Logger.prototype.error = function (message, err) {\r\n        this.log(message, \"error\");\r\n    };\r\n    Logger.prototype.canPublish = function (level, compareWith) {\r\n        var levelIdx = order.indexOf(level);\r\n        var restrictionIdx = order.indexOf(compareWith || this.consoleLevel() || \"trace\");\r\n        return levelIdx >= restrictionIdx;\r\n    };\r\n    Logger.prototype.publishMessage = function (level, message, error) {\r\n        var loggerName = this.loggerFullName;\r\n        if (level === \"error\" && !error) {\r\n            var e = new Error();\r\n            if (e.stack) {\r\n                message =\r\n                    message +\r\n                        \"\\n\" +\r\n                        e.stack\r\n                            .split(\"\\n\")\r\n                            .slice(3)\r\n                            .join(\"\\n\");\r\n            }\r\n        }\r\n        if (this.canPublish(level, this.publishLevel())) {\r\n            var interop = Logger.Interop;\r\n            if (interop) {\r\n                try {\r\n                    if (interop.methods({ name: Logger.InteropMethodName }).length > 0) {\r\n                        interop.invoke(Logger.InteropMethodName, {\r\n                            msg: \"\" + message,\r\n                            logger: loggerName,\r\n                            level: level\r\n                        });\r\n                    }\r\n                }\r\n                catch (_a) {\r\n                }\r\n            }\r\n        }\r\n        if (this.canPublish(level)) {\r\n            var prefix = \"\";\r\n            if (this.includeTimeAndLevel) {\r\n                var date = new Date();\r\n                var time = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds() + \":\" + date.getMilliseconds();\r\n                prefix = \"[\" + time + \"] [\" + level + \"] \";\r\n            }\r\n            var toPrint = \"\" + prefix + loggerName + \": \" + message;\r\n            switch (level) {\r\n                case \"trace\":\r\n                    this.logFn.debug(toPrint);\r\n                    break;\r\n                case \"debug\":\r\n                    if (this.logFn.debug) {\r\n                        this.logFn.debug(toPrint);\r\n                    }\r\n                    else {\r\n                        this.logFn.log(toPrint);\r\n                    }\r\n                    break;\r\n                case \"info\":\r\n                    this.logFn.info(toPrint);\r\n                    break;\r\n                case \"warn\":\r\n                    this.logFn.warn(toPrint);\r\n                    break;\r\n                case \"error\":\r\n                    this.logFn.error(toPrint, error);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    Logger.InteropMethodName = \"T42.AppLogger.Log\";\r\n    return Logger;\r\n}());\n\nvar GW_MESSAGE_CREATE_CONTEXT = \"create-context\";\r\nvar GW_MESSAGE_ACTIVITY_CREATED = \"created\";\r\nvar GW_MESSAGE_ACTIVITY_DESTROYED = \"destroyed\";\r\nvar GW_MESSAGE_CONTEXT_CREATED = \"context-created\";\r\nvar GW_MESSAGE_CONTEXT_ADDED = \"context-added\";\r\nvar GW_MESSAGE_SUBSCRIBE_CONTEXT = \"subscribe-context\";\r\nvar GW_MESSAGE_SUBSCRIBED_CONTEXT = \"subscribed-context\";\r\nvar GW_MESSAGE_UNSUBSCRIBE_CONTEXT = \"unsubscribe-context\";\r\nvar GW_MESSAGE_DESTROY_CONTEXT = \"destroy-context\";\r\nvar GW_MESSAGE_CONTEXT_DESTROYED = \"context-destroyed\";\r\nvar GW_MESSAGE_UPDATE_CONTEXT = \"update-context\";\r\nvar GW_MESSAGE_CONTEXT_UPDATED = \"context-updated\";\r\nvar GW_MESSAGE_JOINED_ACTIVITY = \"joined\";\n\nvar ContextMessageReplaySpec = {\r\n    get name() {\r\n        return \"context\";\r\n    },\r\n    get types() {\r\n        return [\r\n            GW_MESSAGE_CREATE_CONTEXT,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_DESTROY_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_UPDATE_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_JOINED_ACTIVITY\r\n        ];\r\n    }\r\n};\n\nvar version = \"5.6.3\";\n\nfunction prepareConfig (configuration, ext, glue42gd) {\r\n    var _a, _b, _c, _d, _e;\r\n    var nodeStartingContext;\r\n    if (Utils.isNode()) {\r\n        var startingContextString = process.env._GD_STARTING_CONTEXT_;\r\n        if (startingContextString) {\r\n            try {\r\n                nodeStartingContext = JSON.parse(startingContextString);\r\n            }\r\n            catch (_f) {\r\n            }\r\n        }\r\n    }\r\n    function getConnection() {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        var gwConfig = configuration.gateway;\r\n        var protocolVersion = (_a = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.protocolVersion) !== null && _a !== void 0 ? _a : 3;\r\n        var reconnectInterval = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectInterval;\r\n        var reconnectAttempts = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectAttempts;\r\n        var defaultWs = \"ws://localhost:8385\";\r\n        var ws = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.ws;\r\n        var sharedWorker = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.sharedWorker;\r\n        var inproc = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.inproc;\r\n        var webPlatform = (_b = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.webPlatform) !== null && _b !== void 0 ? _b : undefined;\r\n        if (glue42gd) {\r\n            ws = glue42gd.gwURL;\r\n        }\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwURL) {\r\n            ws = nodeStartingContext.gwURL;\r\n        }\r\n        if (!ws && !sharedWorker && !inproc) {\r\n            ws = defaultWs;\r\n        }\r\n        var instanceId;\r\n        var windowId;\r\n        var pid;\r\n        var environment;\r\n        var region;\r\n        var appName = getApplication();\r\n        var uniqueAppName = appName;\r\n        if (typeof glue42gd !== \"undefined\") {\r\n            windowId = glue42gd.windowId;\r\n            pid = glue42gd.pid;\r\n            if (glue42gd.env) {\r\n                environment = glue42gd.env.env;\r\n                region = glue42gd.env.region;\r\n            }\r\n            uniqueAppName = (_c = glue42gd.application) !== null && _c !== void 0 ? _c : \"glue-app\";\r\n            instanceId = glue42gd.appInstanceId;\r\n        }\r\n        else if (Utils.isNode()) {\r\n            pid = process.pid;\r\n            if (nodeStartingContext) {\r\n                environment = nodeStartingContext.env;\r\n                region = nodeStartingContext.region;\r\n                instanceId = nodeStartingContext.instanceId;\r\n            }\r\n        }\r\n        else if (typeof (window === null || window === void 0 ? void 0 : window.glue42electron) !== \"undefined\") {\r\n            windowId = window === null || window === void 0 ? void 0 : window.glue42electron.instanceId;\r\n            pid = window === null || window === void 0 ? void 0 : window.glue42electron.pid;\r\n            environment = window === null || window === void 0 ? void 0 : window.glue42electron.env;\r\n            region = window === null || window === void 0 ? void 0 : window.glue42electron.region;\r\n            uniqueAppName = (_d = window === null || window === void 0 ? void 0 : window.glue42electron.application) !== null && _d !== void 0 ? _d : \"glue-app\";\r\n            instanceId = window === null || window === void 0 ? void 0 : window.glue42electron.instanceId;\r\n        }\r\n        else ;\r\n        var replaySpecs = (_f = (_e = configuration.gateway) === null || _e === void 0 ? void 0 : _e.replaySpecs) !== null && _f !== void 0 ? _f : [];\r\n        replaySpecs.push(ContextMessageReplaySpec);\r\n        var identity = {\r\n            application: uniqueAppName,\r\n            applicationName: appName,\r\n            windowId: windowId,\r\n            instance: instanceId,\r\n            process: pid,\r\n            region: region,\r\n            environment: environment,\r\n            api: ext.version || version\r\n        };\r\n        if (configuration.identity) {\r\n            identity = Object.assign(identity, configuration.identity);\r\n        }\r\n        return {\r\n            identity: identity,\r\n            reconnectInterval: reconnectInterval,\r\n            ws: ws,\r\n            sharedWorker: sharedWorker,\r\n            webPlatform: webPlatform,\r\n            inproc: inproc,\r\n            protocolVersion: protocolVersion,\r\n            reconnectAttempts: reconnectAttempts,\r\n            replaySpecs: replaySpecs,\r\n        };\r\n    }\r\n    function getApplication() {\r\n        if (configuration.application) {\r\n            return configuration.application;\r\n        }\r\n        if (glue42gd) {\r\n            return glue42gd.applicationName;\r\n        }\r\n        if (typeof window !== \"undefined\" && typeof window.glue42electron !== \"undefined\") {\r\n            return window.glue42electron.application;\r\n        }\r\n        var uid = shortid();\r\n        if (Utils.isNode()) {\r\n            if (nodeStartingContext) {\r\n                return nodeStartingContext.applicationConfig.name;\r\n            }\r\n            return \"NodeJS\" + uid;\r\n        }\r\n        if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\r\n            return document.title + (\" (\" + uid + \")\");\r\n        }\r\n        return uid;\r\n    }\r\n    function getAuth() {\r\n        var _a, _b, _c;\r\n        if (typeof configuration.auth === \"string\") {\r\n            return {\r\n                token: configuration.auth\r\n            };\r\n        }\r\n        if (configuration.auth) {\r\n            return configuration.auth;\r\n        }\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwToken) {\r\n            return {\r\n                gatewayToken: nodeStartingContext.gwToken\r\n            };\r\n        }\r\n        if (((_a = configuration.gateway) === null || _a === void 0 ? void 0 : _a.webPlatform) || ((_b = configuration.gateway) === null || _b === void 0 ? void 0 : _b.inproc) || ((_c = configuration.gateway) === null || _c === void 0 ? void 0 : _c.sharedWorker)) {\r\n            return {\r\n                username: \"glue42\", password: \"glue42\"\r\n            };\r\n        }\r\n    }\r\n    function getLogger() {\r\n        var _a, _b;\r\n        var config = configuration.logger;\r\n        var defaultLevel = \"warn\";\r\n        if (!config) {\r\n            config = defaultLevel;\r\n        }\r\n        var gdConsoleLevel;\r\n        if (glue42gd) {\r\n            gdConsoleLevel = glue42gd.consoleLogLevel;\r\n        }\r\n        if (typeof config === \"string\") {\r\n            return { console: gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config, publish: defaultLevel };\r\n        }\r\n        return {\r\n            console: (_a = gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config.console) !== null && _a !== void 0 ? _a : defaultLevel,\r\n            publish: (_b = config.publish) !== null && _b !== void 0 ? _b : defaultLevel\r\n        };\r\n    }\r\n    var connection = getConnection();\r\n    var application = getApplication();\r\n    if (typeof window !== \"undefined\") {\r\n        var windowAsAny = window;\r\n        var containerApplication = windowAsAny.htmlContainer ?\r\n            windowAsAny.htmlContainer.containerName + \".\" + windowAsAny.htmlContainer.application : (_a = windowAsAny === null || windowAsAny === void 0 ? void 0 : windowAsAny.glue42gd) === null || _a === void 0 ? void 0 : _a.application;\r\n        if (containerApplication) {\r\n            application = containerApplication;\r\n        }\r\n    }\r\n    return {\r\n        bus: (_b = configuration.bus) !== null && _b !== void 0 ? _b : false,\r\n        application: application,\r\n        auth: getAuth(),\r\n        logger: getLogger(),\r\n        connection: connection,\r\n        metrics: (_c = configuration.metrics) !== null && _c !== void 0 ? _c : true,\r\n        contexts: (_d = configuration.contexts) !== null && _d !== void 0 ? _d : true,\r\n        version: ext.version || version,\r\n        libs: (_e = ext.libs) !== null && _e !== void 0 ? _e : [],\r\n        customLogger: configuration.customLogger\r\n    };\r\n}\n\nvar GW3ContextData = (function () {\r\n    function GW3ContextData(contextId, name, isAnnounced, activityId) {\r\n        this.updateCallbacks = {};\r\n        this.contextId = contextId;\r\n        this.name = name;\r\n        this.isAnnounced = isAnnounced;\r\n        this.activityId = activityId;\r\n        this.context = {};\r\n    }\r\n    GW3ContextData.prototype.hasCallbacks = function () {\r\n        return Object.keys(this.updateCallbacks).length > 0;\r\n    };\r\n    GW3ContextData.prototype.getState = function () {\r\n        if (this.isAnnounced && this.hasCallbacks()) {\r\n            return 3;\r\n        }\r\n        if (this.isAnnounced) {\r\n            return 2;\r\n        }\r\n        if (this.hasCallbacks()) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n    return GW3ContextData;\r\n}());\n\nfunction applyContextDelta(context, delta, logger) {\r\n    try {\r\n        if (logger === null || logger === void 0 ? void 0 : logger.canPublish(\"trace\")) {\r\n            logger === null || logger === void 0 ? void 0 : logger.trace(\"applying context delta \" + JSON.stringify(delta) + \" on context \" + JSON.stringify(context));\r\n        }\r\n        if (!delta) {\r\n            return context;\r\n        }\r\n        if (delta.reset) {\r\n            context = __assign({}, delta.reset);\r\n            return context;\r\n        }\r\n        context = deepClone(context, undefined);\r\n        if (delta.commands) {\r\n            for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {\r\n                var command = _a[_i];\r\n                if (command.type === \"remove\") {\r\n                    deletePath(context, command.path);\r\n                }\r\n                else if (command.type === \"set\") {\r\n                    setValueToPath(context, command.value, command.path);\r\n                }\r\n            }\r\n            return context;\r\n        }\r\n        var added_1 = delta.added;\r\n        var updated_1 = delta.updated;\r\n        var removed = delta.removed;\r\n        if (added_1) {\r\n            Object.keys(added_1).forEach(function (key) {\r\n                context[key] = added_1[key];\r\n            });\r\n        }\r\n        if (updated_1) {\r\n            Object.keys(updated_1).forEach(function (key) {\r\n                mergeObjectsProperties(key, context, updated_1);\r\n            });\r\n        }\r\n        if (removed) {\r\n            removed.forEach(function (key) {\r\n                delete context[key];\r\n            });\r\n        }\r\n        return context;\r\n    }\r\n    catch (e) {\r\n        logger === null || logger === void 0 ? void 0 : logger.error(\"error applying context delta \" + JSON.stringify(delta) + \" on context \" + JSON.stringify(context), e);\r\n        return context;\r\n    }\r\n}\r\nfunction deepClone(obj, hash) {\r\n    hash = hash || new WeakMap();\r\n    if (Object(obj) !== obj) {\r\n        return obj;\r\n    }\r\n    if (obj instanceof Set) {\r\n        return new Set(obj);\r\n    }\r\n    if (hash.has(obj)) {\r\n        return hash.get(obj);\r\n    }\r\n    var result = obj instanceof Date ? new Date(obj)\r\n        : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\r\n            : obj.constructor ? new obj.constructor()\r\n                : Object.create(null);\r\n    hash.set(obj, result);\r\n    if (obj instanceof Map) {\r\n        Array.from(obj, function (_a) {\r\n            var key = _a[0], val = _a[1];\r\n            return result.set(key, deepClone(val, hash));\r\n        });\r\n    }\r\n    return Object.assign.apply(Object, __spreadArrays([result], Object.keys(obj).map(function (key) {\r\n        var _a;\r\n        return (_a = {}, _a[key] = deepClone(obj[key], hash), _a);\r\n    })));\r\n}\r\nvar mergeObjectsProperties = function (key, what, withWhat) {\r\n    var right = withWhat[key];\r\n    if (right === undefined) {\r\n        return what;\r\n    }\r\n    var left = what[key];\r\n    if (!left || !right) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    if (typeof left === \"string\" ||\r\n        typeof left === \"number\" ||\r\n        typeof left === \"boolean\" ||\r\n        typeof right === \"string\" ||\r\n        typeof right === \"number\" ||\r\n        typeof right === \"boolean\" ||\r\n        Array.isArray(left) ||\r\n        Array.isArray(right)) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    what[key] = Object.assign({}, left, right);\r\n    return what;\r\n};\r\nfunction deepEqual(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    if (!(x instanceof Object) || !(y instanceof Object)) {\r\n        return false;\r\n    }\r\n    if (x.constructor !== y.constructor) {\r\n        return false;\r\n    }\r\n    for (var p in x) {\r\n        if (!x.hasOwnProperty(p)) {\r\n            continue;\r\n        }\r\n        if (!y.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n        if (x[p] === y[p]) {\r\n            continue;\r\n        }\r\n        if (typeof (x[p]) !== \"object\") {\r\n            return false;\r\n        }\r\n        if (!deepEqual(x[p], y[p])) {\r\n            return false;\r\n        }\r\n    }\r\n    for (var p in y) {\r\n        if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction setValueToPath(obj, value, path) {\r\n    var pathArr = path.split(\".\");\r\n    var i;\r\n    for (i = 0; i < pathArr.length - 1; i++) {\r\n        if (!obj[pathArr[i]]) {\r\n            obj[pathArr[i]] = {};\r\n        }\r\n        if (typeof obj[pathArr[i]] !== \"object\") {\r\n            obj[pathArr[i]] = {};\r\n        }\r\n        obj = obj[pathArr[i]];\r\n    }\r\n    obj[pathArr[i]] = value;\r\n}\r\nfunction isSubset(superObj, subObj) {\r\n    return Object.keys(subObj).every(function (ele) {\r\n        if (typeof subObj[ele] === \"object\") {\r\n            return isSubset((superObj === null || superObj === void 0 ? void 0 : superObj[ele]) || {}, subObj[ele] || {});\r\n        }\r\n        return subObj[ele] === (superObj === null || superObj === void 0 ? void 0 : superObj[ele]);\r\n    });\r\n}\r\nfunction deletePath(obj, path) {\r\n    var pathArr = path.split(\".\");\r\n    var i;\r\n    for (i = 0; i < pathArr.length - 1; i++) {\r\n        if (!obj[pathArr[i]]) {\r\n            return;\r\n        }\r\n        obj = obj[pathArr[i]];\r\n    }\r\n    delete obj[pathArr[i]];\r\n}\n\nvar GW3Bridge = (function () {\r\n    function GW3Bridge(config) {\r\n        var _this = this;\r\n        var _a;\r\n        this._contextNameToData = {};\r\n        this._gw3Subscriptions = [];\r\n        this._nextCallbackSubscriptionNumber = 0;\r\n        this._contextNameToId = {};\r\n        this._contextIdToName = {};\r\n        this._protocolVersion = undefined;\r\n        this._connection = config.connection;\r\n        this._logger = config.logger;\r\n        this._gw3Session = this._connection.domain(\"global\", [\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n        ]);\r\n        this.subscribeToContextCreatedMessages();\r\n        this.subscribeToContextUpdatedMessages();\r\n        this.subscribeToContextDestroyedMessages();\r\n        (_a = this._connection.replayer) === null || _a === void 0 ? void 0 : _a.drain(ContextMessageReplaySpec.name, function (message) {\r\n            var type = message.type;\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if (type === GW_MESSAGE_CONTEXT_CREATED ||\r\n                type === GW_MESSAGE_CONTEXT_ADDED ||\r\n                type === GW_MESSAGE_ACTIVITY_CREATED) {\r\n                _this.handleContextCreatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT ||\r\n                type === GW_MESSAGE_CONTEXT_UPDATED ||\r\n                type === GW_MESSAGE_JOINED_ACTIVITY) {\r\n                _this.handleContextUpdatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_CONTEXT_DESTROYED ||\r\n                type === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n                _this.handleContextDestroyedMessage(message);\r\n            }\r\n        });\r\n    }\r\n    Object.defineProperty(GW3Bridge.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            var _a;\r\n            if (!this._protocolVersion) {\r\n                var contextsDomainInfo = this._connection.availableDomains.find(function (d) { return d.uri === \"context\"; });\r\n                this._protocolVersion = (_a = contextsDomainInfo === null || contextsDomainInfo === void 0 ? void 0 : contextsDomainInfo.version) !== null && _a !== void 0 ? _a : 1;\r\n            }\r\n            return this._protocolVersion;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GW3Bridge.prototype, \"setPathSupported\", {\r\n        get: function () {\r\n            return this.protocolVersion >= 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GW3Bridge.prototype.dispose = function () {\r\n        for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {\r\n            var sub = _a[_i];\r\n            this._connection.off(sub);\r\n        }\r\n        this._gw3Subscriptions.length = 0;\r\n        for (var contextName in this._contextNameToData) {\r\n            if (this._contextNameToId.hasOwnProperty(contextName)) {\r\n                delete this._contextNameToData[contextName];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.createContext = function (name, data) {\r\n        var _this = this;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_CREATE_CONTEXT,\r\n            domain: \"global\",\r\n            name: name,\r\n            data: data,\r\n            lifetime: \"retained\",\r\n        })\r\n            .then(function (createContextMsg) {\r\n            _this._contextNameToId[name] = createContextMsg.context_id;\r\n            _this._contextIdToName[createContextMsg.context_id] = name;\r\n            var contextData = _this._contextNameToData[name] || new GW3ContextData(createContextMsg.context_id, name, true, undefined);\r\n            contextData.isAnnounced = true;\r\n            contextData.name = name;\r\n            contextData.contextId = createContextMsg.context_id;\r\n            contextData.context = createContextMsg.data || data;\r\n            contextData.hasReceivedSnapshot = true;\r\n            _this._contextNameToData[name] = contextData;\r\n            return createContextMsg.context_id;\r\n        });\r\n    };\r\n    GW3Bridge.prototype.all = function () {\r\n        var _this = this;\r\n        return Object.keys(this._contextNameToData)\r\n            .filter(function (name) { return _this._contextNameToData[name].isAnnounced; });\r\n    };\r\n    GW3Bridge.prototype.update = function (name, delta) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contextData, currentContext, calculatedDelta;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        contextData = this._contextNameToData[name];\r\n                        if (!contextData || !contextData.isAnnounced) {\r\n                            return [2, this.createContext(name, delta)];\r\n                        }\r\n                        currentContext = contextData.context;\r\n                        if (!!contextData.hasCallbacks()) return [3, 2];\r\n                        return [4, this.get(contextData.name)];\r\n                    case 1:\r\n                        currentContext = _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        calculatedDelta = this.protocolVersion === 2 ?\r\n                            this.calculateContextDeltaV2(currentContext, delta) :\r\n                            this.calculateContextDeltaV1(currentContext, delta);\r\n                        if (!Object.keys(calculatedDelta.added).length\r\n                            && !Object.keys(calculatedDelta.updated).length\r\n                            && !calculatedDelta.removed.length\r\n                            && !((_a = calculatedDelta.commands) === null || _a === void 0 ? void 0 : _a.length)) {\r\n                            return [2, Promise.resolve()];\r\n                        }\r\n                        return [2, this._gw3Session\r\n                                .send({\r\n                                type: GW_MESSAGE_UPDATE_CONTEXT,\r\n                                domain: \"global\",\r\n                                context_id: contextData.contextId,\r\n                                delta: calculatedDelta,\r\n                            }, {}, { skipPeerId: false })\r\n                                .then(function (gwResponse) {\r\n                                _this.handleUpdated(contextData, calculatedDelta, {\r\n                                    updaterId: gwResponse.peer_id\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.set = function (name, data) {\r\n        var _this = this;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return this.createContext(name, data);\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { reset: data },\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.setPath = function (name, path, value) {\r\n        if (!this.setPathSupported) {\r\n            return Promise.reject(\"glue.contexts.setPath operation is not supported, use Glue42 3.10 or later\");\r\n        }\r\n        return this.setPaths(name, [{ path: path, value: value }]);\r\n    };\r\n    GW3Bridge.prototype.setPaths = function (name, pathValues) {\r\n        var _this = this;\r\n        if (!this.setPathSupported) {\r\n            return Promise.reject(\"glue.contexts.setPaths operation is not supported, use Glue42 3.10 or later\");\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            var obj = {};\r\n            for (var _i = 0, pathValues_1 = pathValues; _i < pathValues_1.length; _i++) {\r\n                var pathValue = pathValues_1[_i];\r\n                setValueToPath(obj, pathValue.value, pathValue.path);\r\n            }\r\n            return this.createContext(name, obj);\r\n        }\r\n        var commands = [];\r\n        for (var _a = 0, pathValues_2 = pathValues; _a < pathValues_2.length; _a++) {\r\n            var pathValue = pathValues_2[_a];\r\n            if (pathValue.value === null) {\r\n                commands.push({ type: \"remove\", path: pathValue.path });\r\n            }\r\n            else {\r\n                commands.push({ type: \"set\", path: pathValue.path, value: pathValue.value });\r\n            }\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { commands: commands }\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { added: {}, removed: [], updated: {}, commands: commands }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.get = function (name) {\r\n        var _this = this;\r\n        var _a;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return Promise.resolve({});\r\n        }\r\n        if (contextData && (!contextData.hasCallbacks() || !contextData.hasReceivedSnapshot)) {\r\n            return new Promise(function (resolve, _) { return __awaiter(_this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    this.subscribe(name, function (data, _d, _r, un) {\r\n                        _this.unsubscribe(un);\r\n                        resolve(data);\r\n                    });\r\n                    return [2];\r\n                });\r\n            }); });\r\n        }\r\n        var context = (_a = contextData === null || contextData === void 0 ? void 0 : contextData.context) !== null && _a !== void 0 ? _a : {};\r\n        return Promise.resolve(context);\r\n    };\r\n    GW3Bridge.prototype.subscribe = function (name, callback) {\r\n        var thisCallbackSubscriptionNumber = this._nextCallbackSubscriptionNumber;\r\n        this._nextCallbackSubscriptionNumber += 1;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData ||\r\n            !contextData.isAnnounced) {\r\n            contextData = contextData || new GW3ContextData(undefined, name, false, undefined);\r\n            this._contextNameToData[name] = contextData;\r\n            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n        var hadCallbacks = contextData.hasCallbacks();\r\n        contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n        if (!hadCallbacks) {\r\n            if (!contextData.joinedActivity) {\r\n                if (contextData.context && contextData.sentExplicitSubscription) {\r\n                    if (contextData.hasReceivedSnapshot) {\r\n                        var clone = deepClone(contextData.context);\r\n                        callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n                    }\r\n                    return Promise.resolve(thisCallbackSubscriptionNumber);\r\n                }\r\n                return this.sendSubscribe(contextData)\r\n                    .then(function () { return thisCallbackSubscriptionNumber; });\r\n            }\r\n            else {\r\n                if (contextData.hasReceivedSnapshot) {\r\n                    var clone = deepClone(contextData.context);\r\n                    callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n                }\r\n                return Promise.resolve(thisCallbackSubscriptionNumber);\r\n            }\r\n        }\r\n        else {\r\n            if (contextData.hasReceivedSnapshot) {\r\n                var clone = deepClone(contextData.context);\r\n                callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n            }\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.unsubscribe = function (subscriptionKey) {\r\n        for (var _i = 0, _a = Object.keys(this._contextNameToData); _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var contextId = this._contextNameToId[name_1];\r\n            var contextData = this._contextNameToData[name_1];\r\n            if (!contextData) {\r\n                return;\r\n            }\r\n            var hadCallbacks = contextData.hasCallbacks();\r\n            delete contextData.updateCallbacks[subscriptionKey];\r\n            if (contextData.isAnnounced &&\r\n                hadCallbacks &&\r\n                !contextData.hasCallbacks() &&\r\n                contextData.sentExplicitSubscription) {\r\n                this.sendUnsubscribe(contextData);\r\n            }\r\n            if (!contextData.isAnnounced &&\r\n                !contextData.hasCallbacks()) {\r\n                delete this._contextNameToData[name_1];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.destroy = function (name) {\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData) {\r\n            return Promise.reject(\"context with \" + name + \" does not exist\");\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_DESTROY_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.handleUpdated = function (contextData, delta, extraData) {\r\n        var oldContext = contextData.context;\r\n        contextData.context = applyContextDelta(contextData.context, delta, this._logger);\r\n        contextData.hasReceivedSnapshot = true;\r\n        if (this._contextNameToData[contextData.name] === contextData &&\r\n            !deepEqual(oldContext, contextData.context)) {\r\n            this.invokeUpdateCallbacks(contextData, delta, extraData);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextCreatedMessages = function () {\r\n        var createdMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n        ];\r\n        for (var _i = 0, createdMessageTypes_1 = createdMessageTypes; _i < createdMessageTypes_1.length; _i++) {\r\n            var createdMessageType = createdMessageTypes_1[_i];\r\n            var sub = this._connection.on(createdMessageType, this.handleContextCreatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextCreatedMessage = function (contextCreatedMsg) {\r\n        var createdMessageType = contextCreatedMsg.type;\r\n        if (createdMessageType === GW_MESSAGE_ACTIVITY_CREATED) {\r\n            this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;\r\n        }\r\n        else if (createdMessageType === GW_MESSAGE_CONTEXT_ADDED) {\r\n            this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;\r\n        }\r\n        else ;\r\n        var name = this._contextIdToName[contextCreatedMsg.context_id];\r\n        if (!name) {\r\n            throw new Error(\"Received created event for context with unknown name: \" + contextCreatedMsg.context_id);\r\n        }\r\n        if (!this._contextNameToId[name]) {\r\n            throw new Error(\"Received created event for context with unknown id: \" + contextCreatedMsg.context_id);\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (contextData) {\r\n            if (contextData.isAnnounced) {\r\n                return;\r\n            }\r\n            else {\r\n                if (!contextData.hasCallbacks()) {\r\n                    throw new Error(\"Assertion failure: contextData.hasCallbacks()\");\r\n                }\r\n                contextData.isAnnounced = true;\r\n                contextData.contextId = contextCreatedMsg.context_id;\r\n                contextData.activityId = contextCreatedMsg.activity_id;\r\n                if (!contextData.sentExplicitSubscription) {\r\n                    this.sendSubscribe(contextData);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._contextNameToData[name] = contextData =\r\n                new GW3ContextData(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextUpdatedMessages = function () {\r\n        var updatedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_JOINED_ACTIVITY,\r\n        ];\r\n        for (var _i = 0, updatedMessageTypes_1 = updatedMessageTypes; _i < updatedMessageTypes_1.length; _i++) {\r\n            var updatedMessageType = updatedMessageTypes_1[_i];\r\n            var sub = this._connection.on(updatedMessageType, this.handleContextUpdatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextUpdatedMessage = function (contextUpdatedMsg) {\r\n        var updatedMessageType = contextUpdatedMsg.type;\r\n        var contextId = contextUpdatedMsg.context_id;\r\n        var contextData = this._contextNameToData[this._contextIdToName[contextId]];\r\n        var justSeen = !contextData || !contextData.isAnnounced;\r\n        if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            if (!contextData) {\r\n                contextData = new GW3ContextData(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);\r\n                this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;\r\n                this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;\r\n                this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;\r\n            }\r\n            else {\r\n                contextData.contextId = contextId;\r\n                contextData.isAnnounced = true;\r\n                contextData.activityId = contextUpdatedMsg.activity_id;\r\n            }\r\n            contextData.joinedActivity = true;\r\n        }\r\n        else {\r\n            if (!contextData || !contextData.isAnnounced) {\r\n                if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n                    contextData = contextData || new GW3ContextData(contextId, contextUpdatedMsg.name, true, undefined);\r\n                    contextData.sentExplicitSubscription = true;\r\n                    this._contextNameToData[contextUpdatedMsg.name] = contextData;\r\n                    this._contextIdToName[contextId] = contextUpdatedMsg.name;\r\n                    this._contextNameToId[contextUpdatedMsg.name] = contextId;\r\n                }\r\n                else {\r\n                    this._logger.error(\"Received 'update' for unknown context: \" + contextId);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        var oldContext = contextData.context;\r\n        contextData.hasReceivedSnapshot = true;\r\n        if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            contextData.context = contextUpdatedMsg.data || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            contextData.context = contextUpdatedMsg.context_snapshot || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_CONTEXT_UPDATED) {\r\n            contextData.context = applyContextDelta(contextData.context, contextUpdatedMsg.delta, this._logger);\r\n        }\r\n        else {\r\n            throw new Error(\"Unrecognized context update message \" + updatedMessageType);\r\n        }\r\n        if (justSeen ||\r\n            !deepEqual(contextData.context, oldContext) ||\r\n            updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            this.invokeUpdateCallbacks(contextData, contextUpdatedMsg.delta, { updaterId: contextUpdatedMsg.updater_id });\r\n        }\r\n    };\r\n    GW3Bridge.prototype.invokeUpdateCallbacks = function (contextData, delta, extraData) {\r\n        delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };\r\n        if (delta.commands) {\r\n            delta.added = delta.updated = delta.reset = {};\r\n            delta.removed = [];\r\n            for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {\r\n                var command = _a[_i];\r\n                if (command.type === \"remove\") {\r\n                    if (command.path.indexOf(\".\") === -1) {\r\n                        delta.removed.push(command.path);\r\n                    }\r\n                    setValueToPath(delta.updated, null, command.path);\r\n                }\r\n                else if (command.type === \"set\") {\r\n                    setValueToPath(delta.updated, command.value, command.path);\r\n                }\r\n            }\r\n        }\r\n        for (var updateCallbackIndex in contextData.updateCallbacks) {\r\n            if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {\r\n                try {\r\n                    var updateCallback = contextData.updateCallbacks[updateCallbackIndex];\r\n                    updateCallback(deepClone(contextData.context), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex, 10), extraData);\r\n                }\r\n                catch (err) {\r\n                    this._logger.debug(\"callback error: \" + JSON.stringify(err));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextDestroyedMessages = function () {\r\n        var destroyedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n        ];\r\n        for (var _i = 0, destroyedMessageTypes_1 = destroyedMessageTypes; _i < destroyedMessageTypes_1.length; _i++) {\r\n            var destroyedMessageType = destroyedMessageTypes_1[_i];\r\n            var sub = this._connection.on(destroyedMessageType, this.handleContextDestroyedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextDestroyedMessage = function (destroyedMsg) {\r\n        var destroyedMessageType = destroyedMsg.type;\r\n        var contextId;\r\n        var name;\r\n        if (destroyedMessageType === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n            name = destroyedMsg.activity_id;\r\n            contextId = this._contextNameToId[name];\r\n            if (!contextId) {\r\n                this._logger.error(\"Received 'destroyed' for unknown activity: \" + destroyedMsg.activity_id);\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            contextId = destroyedMsg.context_id;\r\n            name = this._contextIdToName[contextId];\r\n            if (!name) {\r\n                this._logger.error(\"Received 'destroyed' for unknown context: \" + destroyedMsg.context_id);\r\n                return;\r\n            }\r\n        }\r\n        delete this._contextIdToName[contextId];\r\n        delete this._contextNameToId[name];\r\n        var contextData = this._contextNameToData[name];\r\n        delete this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            this._logger.error(\"Received 'destroyed' for unknown context: \" + contextId);\r\n            return;\r\n        }\r\n    };\r\n    GW3Bridge.prototype.sendSubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = true;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.sendUnsubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = false;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.calculateContextDeltaV1 = function (from, to) {\r\n        var delta = { added: {}, updated: {}, removed: [], reset: undefined };\r\n        if (from) {\r\n            for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n                var x = _a[_i];\r\n                if (Object.keys(to).indexOf(x) !== -1\r\n                    && to[x] !== null\r\n                    && !deepEqual(from[x], to[x])) {\r\n                    delta.updated[x] = to[x];\r\n                }\r\n            }\r\n        }\r\n        for (var _b = 0, _c = Object.keys(to); _b < _c.length; _b++) {\r\n            var x = _c[_b];\r\n            if (!from || (Object.keys(from).indexOf(x) === -1)) {\r\n                if (to[x] !== null) {\r\n                    delta.added[x] = to[x];\r\n                }\r\n            }\r\n            else if (to[x] === null) {\r\n                delta.removed.push(x);\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    GW3Bridge.prototype.calculateContextDeltaV2 = function (from, to) {\r\n        var _a, _b;\r\n        var delta = { added: {}, updated: {}, removed: [], reset: undefined, commands: [] };\r\n        for (var _i = 0, _c = Object.keys(to); _i < _c.length; _i++) {\r\n            var x = _c[_i];\r\n            if (to[x] !== null) {\r\n                var fromX = from ? from[x] : null;\r\n                if (!deepEqual(fromX, to[x])) {\r\n                    (_a = delta.commands) === null || _a === void 0 ? void 0 : _a.push({ type: \"set\", path: x, value: to[x] });\r\n                }\r\n            }\r\n            else {\r\n                (_b = delta.commands) === null || _b === void 0 ? void 0 : _b.push({ type: \"remove\", path: x });\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    return GW3Bridge;\r\n}());\n\nvar ContextsModule = (function () {\r\n    function ContextsModule(config) {\r\n        this._bridge = new GW3Bridge(config);\r\n    }\r\n    ContextsModule.prototype.all = function () {\r\n        return this._bridge.all();\r\n    };\r\n    ContextsModule.prototype.update = function (name, data) {\r\n        this.checkName(name);\r\n        this.checkData(data);\r\n        return this._bridge.update(name, data);\r\n    };\r\n    ContextsModule.prototype.set = function (name, data) {\r\n        this.checkName(name);\r\n        this.checkData(data);\r\n        return this._bridge.set(name, data);\r\n    };\r\n    ContextsModule.prototype.setPath = function (name, path, data) {\r\n        this.checkName(name);\r\n        this.checkPath(path);\r\n        var isTopLevelPath = path === \"\";\r\n        if (isTopLevelPath) {\r\n            this.checkData(data);\r\n            return this.set(name, data);\r\n        }\r\n        return this._bridge.setPath(name, path, data);\r\n    };\r\n    ContextsModule.prototype.setPaths = function (name, paths) {\r\n        this.checkName(name);\r\n        if (!Array.isArray(paths)) {\r\n            throw new Error(\"Please provide the paths as an array of PathValues!\");\r\n        }\r\n        for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {\r\n            var _a = paths_1[_i], path = _a.path, value = _a.value;\r\n            this.checkPath(path);\r\n            var isTopLevelPath = path === \"\";\r\n            if (isTopLevelPath) {\r\n                this.checkData(value);\r\n            }\r\n        }\r\n        return this._bridge.setPaths(name, paths);\r\n    };\r\n    ContextsModule.prototype.subscribe = function (name, callback) {\r\n        var _this = this;\r\n        this.checkName(name);\r\n        if (typeof callback !== \"function\") {\r\n            throw new Error(\"Please provide the callback as a function!\");\r\n        }\r\n        return this._bridge\r\n            .subscribe(name, function (data, delta, removed, key, extraData) { return callback(data, delta, removed, function () { return _this._bridge.unsubscribe(key); }, extraData); })\r\n            .then(function (key) {\r\n            return function () {\r\n                _this._bridge.unsubscribe(key);\r\n            };\r\n        });\r\n    };\r\n    ContextsModule.prototype.get = function (name) {\r\n        this.checkName(name);\r\n        return this._bridge.get(name);\r\n    };\r\n    ContextsModule.prototype.ready = function () {\r\n        return Promise.resolve(this);\r\n    };\r\n    ContextsModule.prototype.destroy = function (name) {\r\n        this.checkName(name);\r\n        return this._bridge.destroy(name);\r\n    };\r\n    Object.defineProperty(ContextsModule.prototype, \"setPathSupported\", {\r\n        get: function () {\r\n            return this._bridge.setPathSupported;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ContextsModule.prototype.checkName = function (name) {\r\n        if (typeof name !== \"string\" || name === \"\") {\r\n            throw new Error(\"Please provide the name as a non-empty string!\");\r\n        }\r\n    };\r\n    ContextsModule.prototype.checkPath = function (path) {\r\n        if (typeof path !== \"string\") {\r\n            throw new Error(\"Please provide the path as a dot delimited string!\");\r\n        }\r\n    };\r\n    ContextsModule.prototype.checkData = function (data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Please provide the data as an object!\");\r\n        }\r\n    };\r\n    return ContextsModule;\r\n}());\n\nfunction promisify (promise, successCallback, errorCallback) {\r\n    if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\r\n        return promise;\r\n    }\r\n    if (typeof successCallback !== \"function\") {\r\n        successCallback = function () { };\r\n    }\r\n    else if (typeof errorCallback !== \"function\") {\r\n        errorCallback = function () { };\r\n    }\r\n    return promise.then(successCallback, errorCallback);\r\n}\n\nfunction rejectAfter(ms, promise, error) {\r\n    if (ms === void 0) { ms = 0; }\r\n    var timeout;\r\n    var clearTimeoutIfThere = function () {\r\n        if (timeout) {\r\n            clearTimeout(timeout);\r\n        }\r\n    };\r\n    promise\r\n        .then(function () {\r\n        clearTimeoutIfThere();\r\n    })\r\n        .catch(function () {\r\n        clearTimeoutIfThere();\r\n    });\r\n    return new Promise(function (resolve, reject) {\r\n        timeout = setTimeout(function () { return reject(error); }, ms);\r\n    });\r\n}\n\nvar InvokeStatus;\r\n(function (InvokeStatus) {\r\n    InvokeStatus[InvokeStatus[\"Success\"] = 0] = \"Success\";\r\n    InvokeStatus[InvokeStatus[\"Error\"] = 1] = \"Error\";\r\n})(InvokeStatus || (InvokeStatus = {}));\r\nvar Client = (function () {\r\n    function Client(protocol, repo, instance, configuration) {\r\n        this.protocol = protocol;\r\n        this.repo = repo;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n    }\r\n    Client.prototype.subscribe = function (method, options, successCallback, errorCallback, existingSub) {\r\n        var _this = this;\r\n        var callProtocolSubscribe = function (targetServers, stream, successProxy, errorProxy) {\r\n            var _a;\r\n            options.methodResponseTimeout = (_a = options.methodResponseTimeout) !== null && _a !== void 0 ? _a : options.waitTimeoutMs;\r\n            _this.protocol.client.subscribe(stream, options, targetServers, successProxy, errorProxy, existingSub);\r\n        };\r\n        var promise = new Promise(function (resolve, reject) {\r\n            var successProxy = function (sub) {\r\n                resolve(sub);\r\n            };\r\n            var errorProxy = function (err) {\r\n                reject(err);\r\n            };\r\n            if (!method) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n                return;\r\n            }\r\n            var methodDef;\r\n            if (typeof method === \"string\") {\r\n                methodDef = { name: method };\r\n            }\r\n            else {\r\n                methodDef = method;\r\n            }\r\n            if (!methodDef.name) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n                return;\r\n            }\r\n            if (options === undefined) {\r\n                options = {};\r\n            }\r\n            var target = options.target;\r\n            if (target === undefined) {\r\n                target = \"best\";\r\n            }\r\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\") {\r\n                reject(new Error(\"\\\"\" + target + \"\\\" is not a valid target. Valid targets are \\\"all\\\", \\\"best\\\", or an instance.\"));\r\n                return;\r\n            }\r\n            if (options.methodResponseTimeout === undefined) {\r\n                options.methodResponseTimeout = options.method_response_timeout;\r\n                if (options.methodResponseTimeout === undefined) {\r\n                    options.methodResponseTimeout = _this.configuration.methodResponseTimeout;\r\n                }\r\n            }\r\n            if (options.waitTimeoutMs === undefined) {\r\n                options.waitTimeoutMs = options.wait_for_method_timeout;\r\n                if (options.waitTimeoutMs === undefined) {\r\n                    options.waitTimeoutMs = _this.configuration.waitTimeoutMs;\r\n                }\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n            if (currentServers.length > 0) {\r\n                callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);\r\n            }\r\n            else {\r\n                var retry_1 = function () {\r\n                    if (!target || !(options.waitTimeoutMs)) {\r\n                        return;\r\n                    }\r\n                    delayTillNow += delayStep;\r\n                    currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n                    if (currentServers.length > 0) {\r\n                        var streamInfo = currentServers[0].methods[0];\r\n                        callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);\r\n                    }\r\n                    else if (delayTillNow >= options.waitTimeoutMs) {\r\n                        var def = typeof method === \"string\" ? { name: method } : method;\r\n                        callProtocolSubscribe(currentServers, def, successProxy, errorProxy);\r\n                    }\r\n                    else {\r\n                        setTimeout(retry_1, delayStep);\r\n                    }\r\n                };\r\n                setTimeout(retry_1, delayStep);\r\n            }\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Client.prototype.servers = function (methodFilter) {\r\n        var filterCopy = methodFilter === undefined\r\n            ? undefined\r\n            : __assign({}, methodFilter);\r\n        return this.getServers(filterCopy).map(function (serverMethodMap) {\r\n            return serverMethodMap.server.instance;\r\n        });\r\n    };\r\n    Client.prototype.methods = function (methodFilter) {\r\n        if (typeof methodFilter === \"string\") {\r\n            methodFilter = { name: methodFilter };\r\n        }\r\n        else {\r\n            methodFilter = __assign({}, methodFilter);\r\n        }\r\n        return this.getMethods(methodFilter);\r\n    };\r\n    Client.prototype.methodsForInstance = function (instance) {\r\n        return this.getMethodsForInstance(instance);\r\n    };\r\n    Client.prototype.methodAdded = function (callback) {\r\n        return this.repo.onMethodAdded(callback);\r\n    };\r\n    Client.prototype.methodRemoved = function (callback) {\r\n        return this.repo.onMethodRemoved(callback);\r\n    };\r\n    Client.prototype.serverAdded = function (callback) {\r\n        return this.repo.onServerAdded(callback);\r\n    };\r\n    Client.prototype.serverRemoved = function (callback) {\r\n        return this.repo.onServerRemoved(function (server, reason) {\r\n            callback(server, reason);\r\n        });\r\n    };\r\n    Client.prototype.serverMethodAdded = function (callback) {\r\n        return this.repo.onServerMethodAdded(function (server, method) {\r\n            callback({ server: server, method: method });\r\n        });\r\n    };\r\n    Client.prototype.serverMethodRemoved = function (callback) {\r\n        return this.repo.onServerMethodRemoved(function (server, method) {\r\n            callback({ server: server, method: method });\r\n        });\r\n    };\r\n    Client.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var getInvokePromise;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                getInvokePromise = function () { return __awaiter(_this, void 0, void 0, function () {\r\n                    var methodDefinition, serversMethodMap, err_1, method, errorObj, timeout, additionalOptionsCopy, invokePromises, invocationMessages, results, allRejected;\r\n                    var _this = this;\r\n                    var _a, _b, _c;\r\n                    return __generator(this, function (_d) {\r\n                        switch (_d.label) {\r\n                            case 0:\r\n                                if (typeof methodFilter === \"string\") {\r\n                                    methodDefinition = { name: methodFilter };\r\n                                }\r\n                                else {\r\n                                    methodDefinition = __assign({}, methodFilter);\r\n                                }\r\n                                if (!methodDefinition.name) {\r\n                                    return [2, Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\")];\r\n                                }\r\n                                if (!argumentObj) {\r\n                                    argumentObj = {};\r\n                                }\r\n                                if (!target) {\r\n                                    target = \"best\";\r\n                                }\r\n                                if (typeof target === \"string\" && target !== \"all\" && target !== \"best\" && target !== \"skipMine\") {\r\n                                    return [2, Promise.reject(new Error(\"\\\"\" + target + \"\\\" is not a valid target. Valid targets are \\\"all\\\" and \\\"best\\\".\"))];\r\n                                }\r\n                                if (!additionalOptions) {\r\n                                    additionalOptions = {};\r\n                                }\r\n                                if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                    additionalOptions.methodResponseTimeoutMs = additionalOptions.method_response_timeout;\r\n                                    if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                        additionalOptions.methodResponseTimeoutMs = this.configuration.methodResponseTimeout;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                    additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;\r\n                                    if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                        additionalOptions.waitTimeoutMs = this.configuration.waitTimeoutMs;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== \"number\") {\r\n                                    return [2, Promise.reject(new Error(\"\\\"\" + additionalOptions.waitTimeoutMs + \"\\\" is not a valid number for \\\"waitTimeoutMs\\\" \"))];\r\n                                }\r\n                                if (typeof argumentObj !== \"object\") {\r\n                                    return [2, Promise.reject(new Error(\"The method arguments must be an object. method: \" + methodDefinition.name))];\r\n                                }\r\n                                serversMethodMap = this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                                if (!(serversMethodMap.length === 0)) return [3, 4];\r\n                                _d.label = 1;\r\n                            case 1:\r\n                                _d.trys.push([1, 3, , 4]);\r\n                                return [4, this.tryToAwaitForMethods(methodDefinition, target, additionalOptions)];\r\n                            case 2:\r\n                                serversMethodMap = _d.sent();\r\n                                return [3, 4];\r\n                            case 3:\r\n                                err_1 = _d.sent();\r\n                                method = __assign(__assign({}, methodDefinition), { getServers: function () { return []; }, supportsStreaming: false, objectTypes: (_a = methodDefinition.objectTypes) !== null && _a !== void 0 ? _a : [], flags: (_c = (_b = methodDefinition.flags) === null || _b === void 0 ? void 0 : _b.metadata) !== null && _c !== void 0 ? _c : {} });\r\n                                errorObj = {\r\n                                    method: method,\r\n                                    called_with: argumentObj,\r\n                                    message: \"Can not find a method matching \" + JSON.stringify(methodFilter) + \" with server filter \" + JSON.stringify(target),\r\n                                    executed_by: undefined,\r\n                                    returned: undefined,\r\n                                    status: undefined,\r\n                                };\r\n                                return [2, Promise.reject(errorObj)];\r\n                            case 4:\r\n                                timeout = additionalOptions.methodResponseTimeoutMs;\r\n                                additionalOptionsCopy = additionalOptions;\r\n                                invokePromises = serversMethodMap.map(function (serversMethodPair) {\r\n                                    var invId = shortid();\r\n                                    var method = serversMethodPair.methods[0];\r\n                                    var server = serversMethodPair.server;\r\n                                    var invokePromise = _this.protocol.client.invoke(invId, method, argumentObj, server, additionalOptionsCopy);\r\n                                    return Promise.race([\r\n                                        invokePromise,\r\n                                        rejectAfter(timeout, invokePromise, {\r\n                                            invocationId: invId,\r\n                                            message: \"Invocation timeout (\" + timeout + \" ms) reached for method name: \" + (method === null || method === void 0 ? void 0 : method.name) + \", target instance: \" + JSON.stringify(server.instance) + \", options: \" + JSON.stringify(additionalOptionsCopy),\r\n                                            status: InvokeStatus.Error,\r\n                                        })\r\n                                    ]);\r\n                                });\r\n                                return [4, Promise.all(invokePromises)];\r\n                            case 5:\r\n                                invocationMessages = _d.sent();\r\n                                results = this.getInvocationResultObj(invocationMessages, methodDefinition, argumentObj);\r\n                                allRejected = invocationMessages.every(function (result) { return result.status === InvokeStatus.Error; });\r\n                                if (allRejected) {\r\n                                    return [2, Promise.reject(results)];\r\n                                }\r\n                                return [2, results];\r\n                        }\r\n                    });\r\n                }); };\r\n                return [2, promisify(getInvokePromise(), success, error)];\r\n            });\r\n        });\r\n    };\r\n    Client.prototype.getInvocationResultObj = function (invocationResults, method, calledWith) {\r\n        var all_return_values = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Success; })\r\n            .reduce(function (allValues, currentValue) {\r\n            allValues = __spreadArrays(allValues, [\r\n                {\r\n                    executed_by: currentValue.instance,\r\n                    returned: currentValue.result,\r\n                    called_with: calledWith,\r\n                    method: method,\r\n                    message: currentValue.message,\r\n                    status: currentValue.status,\r\n                }\r\n            ]);\r\n            return allValues;\r\n        }, []);\r\n        var all_errors = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Error; })\r\n            .reduce(function (allErrors, currError) {\r\n            allErrors = __spreadArrays(allErrors, [\r\n                {\r\n                    executed_by: currError.instance,\r\n                    called_with: calledWith,\r\n                    name: method.name,\r\n                    message: currError.message,\r\n                }\r\n            ]);\r\n            return allErrors;\r\n        }, []);\r\n        var invResult = invocationResults[0];\r\n        var result = {\r\n            method: method,\r\n            called_with: calledWith,\r\n            returned: invResult.result,\r\n            executed_by: invResult.instance,\r\n            all_return_values: all_return_values,\r\n            all_errors: all_errors,\r\n            message: invResult.message,\r\n            status: invResult.status\r\n        };\r\n        return result;\r\n    };\r\n    Client.prototype.tryToAwaitForMethods = function (methodDefinition, target, additionalOptions) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (additionalOptions.waitTimeoutMs === 0) {\r\n                reject();\r\n                return;\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var retry = function () {\r\n                delayTillNow += delayStep;\r\n                var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                if (serversMethodMap.length > 0) {\r\n                    clearInterval(interval);\r\n                    resolve(serversMethodMap);\r\n                }\r\n                else if (delayTillNow >= (additionalOptions.waitTimeoutMs || 10000)) {\r\n                    clearInterval(interval);\r\n                    reject();\r\n                    return;\r\n                }\r\n            };\r\n            var interval = setInterval(retry, delayStep);\r\n        });\r\n    };\r\n    Client.prototype.filterByTarget = function (target, serverMethodMap) {\r\n        var _this = this;\r\n        if (typeof target === \"string\") {\r\n            if (target === \"all\") {\r\n                return __spreadArrays(serverMethodMap);\r\n            }\r\n            else if (target === \"best\") {\r\n                var localMachine = serverMethodMap\r\n                    .find(function (s) { return s.server.instance.isLocal; });\r\n                if (localMachine) {\r\n                    return [localMachine];\r\n                }\r\n                if (serverMethodMap[0] !== undefined) {\r\n                    return [serverMethodMap[0]];\r\n                }\r\n            }\r\n            else if (target === \"skipMine\") {\r\n                return serverMethodMap.filter(function (_a) {\r\n                    var server = _a.server;\r\n                    return server.instance.peerId !== _this.instance.peerId;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            var targetArray = void 0;\r\n            if (!Array.isArray(target)) {\r\n                targetArray = [target];\r\n            }\r\n            else {\r\n                targetArray = target;\r\n            }\r\n            var allServersMatching = targetArray.reduce(function (matches, filter) {\r\n                var myMatches = serverMethodMap.filter(function (serverMethodPair) {\r\n                    return _this.instanceMatch(filter, serverMethodPair.server.instance);\r\n                });\r\n                return matches.concat(myMatches);\r\n            }, []);\r\n            return allServersMatching;\r\n        }\r\n        return [];\r\n    };\r\n    Client.prototype.instanceMatch = function (instanceFilter, instanceDefinition) {\r\n        return this.containsProps(instanceFilter, instanceDefinition);\r\n    };\r\n    Client.prototype.methodMatch = function (methodFilter, methodDefinition) {\r\n        return this.containsProps(methodFilter, methodDefinition);\r\n    };\r\n    Client.prototype.containsProps = function (filter, repoMethod) {\r\n        var filterProps = Object.keys(filter)\r\n            .filter(function (prop) {\r\n            return filter[prop] !== undefined\r\n                && typeof filter[prop] !== \"function\"\r\n                && prop !== \"object_types\"\r\n                && prop !== \"display_name\"\r\n                && prop !== \"id\"\r\n                && prop !== \"gatewayId\"\r\n                && prop !== \"identifier\"\r\n                && prop[0] !== \"_\";\r\n        });\r\n        return filterProps.every(function (prop) {\r\n            var isMatch;\r\n            var filterValue = filter[prop];\r\n            var repoMethodValue = repoMethod[prop];\r\n            switch (prop) {\r\n                case \"objectTypes\":\r\n                    isMatch = (filterValue || []).every(function (filterValueEl) {\r\n                        return (repoMethodValue || []).includes(filterValueEl);\r\n                    });\r\n                    break;\r\n                case \"flags\":\r\n                    isMatch = isSubset(repoMethodValue || {}, filterValue || {});\r\n                    break;\r\n                default:\r\n                    isMatch = String(filterValue).toLowerCase() === String(repoMethodValue).toLowerCase();\r\n            }\r\n            return isMatch;\r\n        });\r\n    };\r\n    Client.prototype.getMethods = function (methodFilter) {\r\n        var _this = this;\r\n        if (methodFilter === undefined) {\r\n            return this.repo.getMethods();\r\n        }\r\n        var methods = this.repo.getMethods().filter(function (method) {\r\n            return _this.methodMatch(methodFilter, method);\r\n        });\r\n        return methods;\r\n    };\r\n    Client.prototype.getMethodsForInstance = function (instanceFilter) {\r\n        var _this = this;\r\n        var allServers = this.repo.getServers();\r\n        var matchingServers = allServers.filter(function (server) {\r\n            return _this.instanceMatch(instanceFilter, server.instance);\r\n        });\r\n        if (matchingServers.length === 0) {\r\n            return [];\r\n        }\r\n        var resultMethodsObject = {};\r\n        if (matchingServers.length === 1) {\r\n            resultMethodsObject = matchingServers[0].methods;\r\n        }\r\n        else {\r\n            matchingServers.forEach(function (server) {\r\n                Object.keys(server.methods).forEach(function (methodKey) {\r\n                    var method = server.methods[methodKey];\r\n                    resultMethodsObject[method.identifier] = method;\r\n                });\r\n            });\r\n        }\r\n        return Object.keys(resultMethodsObject)\r\n            .map(function (key) {\r\n            return resultMethodsObject[key];\r\n        });\r\n    };\r\n    Client.prototype.getServers = function (methodFilter) {\r\n        var _this = this;\r\n        var servers = this.repo.getServers();\r\n        if (methodFilter === undefined) {\r\n            return servers.map(function (server) {\r\n                return { server: server, methods: [] };\r\n            });\r\n        }\r\n        return servers.reduce(function (prev, current) {\r\n            var methodsForServer = Object.values(current.methods);\r\n            var matchingMethods = methodsForServer.filter(function (method) {\r\n                return _this.methodMatch(methodFilter, method);\r\n            });\r\n            if (matchingMethods.length > 0) {\r\n                prev.push({ server: current, methods: matchingMethods });\r\n            }\r\n            return prev;\r\n        }, []);\r\n    };\r\n    Client.prototype.getServerMethodsByFilterAndTarget = function (methodFilter, target) {\r\n        var serversMethodMap = this.getServers(methodFilter);\r\n        return this.filterByTarget(target, serversMethodMap);\r\n    };\r\n    return Client;\r\n}());\n\nvar ServerSubscription = (function () {\r\n    function ServerSubscription(protocol, repoMethod, subscription) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.subscription = subscription;\r\n    }\r\n    Object.defineProperty(ServerSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            if (!this.repoMethod.stream) {\r\n                throw new Error(\"no stream\");\r\n            }\r\n            return this.repoMethod.stream;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"arguments\", {\r\n        get: function () { return this.subscription.arguments || {}; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"branchKey\", {\r\n        get: function () { return this.subscription.branchKey; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"instance\", {\r\n        get: function () {\r\n            if (!this.subscription.instance) {\r\n                throw new Error(\"no instance\");\r\n            }\r\n            return this.subscription.instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerSubscription.prototype.close = function () {\r\n        this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);\r\n    };\r\n    ServerSubscription.prototype.push = function (data) {\r\n        this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);\r\n    };\r\n    return ServerSubscription;\r\n}());\n\nvar Request = (function () {\r\n    function Request(protocol, repoMethod, requestContext) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.requestContext = requestContext;\r\n        this.arguments = requestContext.arguments;\r\n        this.instance = requestContext.instance;\r\n    }\r\n    Request.prototype.accept = function () {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, \"\");\r\n    };\r\n    Request.prototype.acceptOnBranch = function (branch) {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);\r\n    };\r\n    Request.prototype.reject = function (reason) {\r\n        this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);\r\n    };\r\n    return Request;\r\n}());\n\nvar ServerStreaming = (function () {\r\n    function ServerStreaming(protocol, server) {\r\n        var _this = this;\r\n        this.protocol = protocol;\r\n        this.server = server;\r\n        protocol.server.onSubRequest(function (rc, rm) { return _this.handleSubRequest(rc, rm); });\r\n        protocol.server.onSubAdded(function (sub, rm) { return _this.handleSubAdded(sub, rm); });\r\n        protocol.server.onSubRemoved(function (sub, rm) { return _this.handleSubRemoved(sub, rm); });\r\n    }\r\n    ServerStreaming.prototype.handleSubRequest = function (requestContext, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRequestHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var request = new Request(this.protocol, repoMethod, requestContext);\r\n        repoMethod.streamCallbacks.subscriptionRequestHandler(request);\r\n    };\r\n    ServerStreaming.prototype.handleSubAdded = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionAddedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionAddedHandler(sub);\r\n    };\r\n    ServerStreaming.prototype.handleSubRemoved = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerBranch = (function () {\r\n    function ServerBranch(key, protocol, repoMethod) {\r\n        this.key = key;\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n    }\r\n    ServerBranch.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this.protocol, _this.repoMethod, sub);\r\n        });\r\n    };\r\n    ServerBranch.prototype.close = function () {\r\n        this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);\r\n    };\r\n    ServerBranch.prototype.push = function (data) {\r\n        this.protocol.server.pushData(this.repoMethod, data, [this.key]);\r\n    };\r\n    return ServerBranch;\r\n}());\n\nvar ServerStream = (function () {\r\n    function ServerStream(_protocol, _repoMethod, _server) {\r\n        this._protocol = _protocol;\r\n        this._repoMethod = _repoMethod;\r\n        this._server = _server;\r\n        this.name = this._repoMethod.definition.name;\r\n    }\r\n    ServerStream.prototype.branches = function (key) {\r\n        var _this = this;\r\n        var bList = this._protocol.server.getBranchList(this._repoMethod);\r\n        if (key) {\r\n            if (bList.indexOf(key) > -1) {\r\n                return new ServerBranch(key, this._protocol, this._repoMethod);\r\n            }\r\n            return undefined;\r\n        }\r\n        else {\r\n            return bList.map(function (branchKey) {\r\n                return new ServerBranch(branchKey, _this._protocol, _this._repoMethod);\r\n            });\r\n        }\r\n    };\r\n    ServerStream.prototype.branch = function (key) {\r\n        return this.branches(key);\r\n    };\r\n    ServerStream.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this._protocol.server.getSubscriptionList(this._repoMethod);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this._protocol, _this._repoMethod, sub);\r\n        });\r\n    };\r\n    Object.defineProperty(ServerStream.prototype, \"definition\", {\r\n        get: function () {\r\n            var _a;\r\n            var def2 = this._repoMethod.definition;\r\n            return {\r\n                accepts: def2.accepts,\r\n                description: def2.description,\r\n                displayName: def2.displayName,\r\n                name: def2.name,\r\n                objectTypes: def2.objectTypes,\r\n                returns: def2.returns,\r\n                supportsStreaming: def2.supportsStreaming,\r\n                flags: (_a = def2.flags) === null || _a === void 0 ? void 0 : _a.metadata,\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerStream.prototype.close = function () {\r\n        this._protocol.server.closeAllSubscriptions(this._repoMethod);\r\n        this._server.unregister(this._repoMethod.definition, true);\r\n    };\r\n    ServerStream.prototype.push = function (data, branches) {\r\n        if (typeof branches !== \"string\" && !Array.isArray(branches) && branches !== undefined) {\r\n            throw new Error(\"invalid branches should be string or string array\");\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        this._protocol.server.pushData(this._repoMethod, data, branches);\r\n    };\r\n    ServerStream.prototype.updateRepoMethod = function (repoMethod) {\r\n        this._repoMethod = repoMethod;\r\n    };\r\n    return ServerStream;\r\n}());\n\nvar Server = (function () {\r\n    function Server(protocol, serverRepository) {\r\n        this.protocol = protocol;\r\n        this.serverRepository = serverRepository;\r\n        this.invocations = 0;\r\n        this.currentlyUnregistering = {};\r\n        this.streaming = new ServerStreaming(protocol, this);\r\n        this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));\r\n    }\r\n    Server.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback, existingStream) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (!streamDef) {\r\n                reject(\"The stream name must be unique! Please, provide either a unique string for a stream name to \\u201Cglue.interop.createStream()\\u201D or a \\u201CmethodDefinition\\u201D object with a unique \\u201Cname\\u201D property for the stream.\");\r\n                return;\r\n            }\r\n            var streamMethodDefinition;\r\n            if (typeof streamDef === \"string\") {\r\n                streamMethodDefinition = { name: \"\" + streamDef };\r\n            }\r\n            else {\r\n                streamMethodDefinition = __assign({}, streamDef);\r\n            }\r\n            if (!streamMethodDefinition.name) {\r\n                return reject(\"The \\u201Cname\\u201D property is required for the \\u201CstreamDefinition\\u201D object and must be unique. Stream definition: \" + JSON.stringify(streamMethodDefinition));\r\n            }\r\n            var nameAlreadyExists = _this.serverRepository.getList()\r\n                .some(function (serverMethod) { return serverMethod.definition.name === streamMethodDefinition.name; });\r\n            if (nameAlreadyExists) {\r\n                return reject(\"A stream with the name \\\"\" + streamMethodDefinition.name + \"\\\" already exists! Please, provide a unique name for the stream.\");\r\n            }\r\n            streamMethodDefinition.supportsStreaming = true;\r\n            if (!callbacks) {\r\n                callbacks = {};\r\n            }\r\n            if (typeof callbacks.subscriptionRequestHandler !== \"function\") {\r\n                callbacks.subscriptionRequestHandler = function (request) {\r\n                    request.accept();\r\n                };\r\n            }\r\n            var repoMethod = _this.serverRepository.add({\r\n                definition: streamMethodDefinition,\r\n                streamCallbacks: callbacks,\r\n                protocolState: {},\r\n            });\r\n            _this.protocol.server.createStream(repoMethod)\r\n                .then(function () {\r\n                var streamUserObject;\r\n                if (existingStream) {\r\n                    streamUserObject = existingStream;\r\n                    existingStream.updateRepoMethod(repoMethod);\r\n                }\r\n                else {\r\n                    streamUserObject = new ServerStream(_this.protocol, repoMethod, _this);\r\n                }\r\n                repoMethod.stream = streamUserObject;\r\n                resolve(streamUserObject);\r\n            })\r\n                .catch(function (err) {\r\n                if (repoMethod.repoId) {\r\n                    _this.serverRepository.remove(repoMethod.repoId);\r\n                }\r\n                reject(err);\r\n            });\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Server.prototype.register = function (methodDefinition, callback) {\r\n        var _this = this;\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallbackFunction = function (context, resultCallback) { return __awaiter(_this, void 0, void 0, function () {\r\n            var result, resultValue, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 5]);\r\n                        result = callback(context.args, context.instance);\r\n                        if (!(result && typeof result.then === \"function\")) return [3, 2];\r\n                        return [4, result];\r\n                    case 1:\r\n                        resultValue = _a.sent();\r\n                        resultCallback(undefined, resultValue);\r\n                        return [3, 3];\r\n                    case 2:\r\n                        resultCallback(undefined, result);\r\n                        _a.label = 3;\r\n                    case 3: return [3, 5];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        if (!e_1) {\r\n                            e_1 = \"\";\r\n                        }\r\n                        resultCallback(e_1, e_1);\r\n                        return [3, 5];\r\n                    case 5: return [2];\r\n                }\r\n            });\r\n        }); };\r\n        wrappedCallbackFunction.userCallback = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallbackFunction);\r\n    };\r\n    Server.prototype.registerAsync = function (methodDefinition, callback) {\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallback = function (context, resultCallback) {\r\n            try {\r\n                var resultCalled_1 = false;\r\n                var success = function (result) {\r\n                    if (!resultCalled_1) {\r\n                        resultCallback(undefined, result);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var error = function (e) {\r\n                    if (!resultCalled_1) {\r\n                        if (!e) {\r\n                            e = \"\";\r\n                        }\r\n                        resultCallback(e, e);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var methodResult = callback(context.args, context.instance, success, error);\r\n                if (methodResult && typeof methodResult.then === \"function\") {\r\n                    methodResult\r\n                        .then(success)\r\n                        .catch(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                resultCallback(e, undefined);\r\n            }\r\n        };\r\n        wrappedCallback.userCallbackAsync = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallback);\r\n    };\r\n    Server.prototype.unregister = function (methodFilter, forStream) {\r\n        if (forStream === void 0) { forStream = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, methodToBeRemoved;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (methodFilter === undefined) {\r\n                            return [2, Promise.reject(\"Please, provide either a unique string for a name or an object containing a \\u201Cname\\u201D property.\")];\r\n                        }\r\n                        if (!(typeof methodFilter === \"function\")) return [3, 2];\r\n                        return [4, this.unregisterWithPredicate(methodFilter, forStream)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                    case 2:\r\n                        if (typeof methodFilter === \"string\") {\r\n                            methodDefinition = { name: methodFilter };\r\n                        }\r\n                        else {\r\n                            methodDefinition = methodFilter;\r\n                        }\r\n                        if (methodDefinition.name === undefined) {\r\n                            return [2, Promise.reject(\"Method name is required. Cannot find a method if the method name is undefined!\")];\r\n                        }\r\n                        methodToBeRemoved = this.serverRepository.getList().find(function (serverMethod) {\r\n                            return serverMethod.definition.name === methodDefinition.name\r\n                                && (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodToBeRemoved) {\r\n                            return [2, Promise.reject(\"Method with a name \\\"\" + methodDefinition.name + \"\\\" does not exist or is not registered by your application!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams([methodToBeRemoved])];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.unregisterWithPredicate = function (filterPredicate, forStream) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodsOrStreamsToRemove;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        methodsOrStreamsToRemove = this.serverRepository.getList()\r\n                            .filter(function (sm) { return filterPredicate(sm.definition); })\r\n                            .filter(function (serverMethod) {\r\n                            return (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {\r\n                            return [2, Promise.reject(\"Could not find a \" + (forStream ? \"stream\" : \"method\") + \" matching the specified condition!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams(methodsOrStreamsToRemove)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.removeMethodsOrStreams = function (methodsToRemove) {\r\n        var _this = this;\r\n        var methodUnregPromises = [];\r\n        methodsToRemove.forEach(function (method) {\r\n            var promise = _this.protocol.server.unregister(method)\r\n                .then(function () {\r\n                if (method.repoId) {\r\n                    _this.serverRepository.remove(method.repoId);\r\n                }\r\n            });\r\n            methodUnregPromises.push(promise);\r\n            _this.addAsCurrentlyUnregistering(method.definition.name, promise);\r\n        });\r\n        return Promise.all(methodUnregPromises);\r\n    };\r\n    Server.prototype.addAsCurrentlyUnregistering = function (methodName, promise) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var timeout;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                timeout = new Promise(function (resolve) { return setTimeout(resolve, 5000); });\r\n                this.currentlyUnregistering[methodName] = Promise.race([promise, timeout]).then(function () {\r\n                    delete _this.currentlyUnregistering[methodName];\r\n                });\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.registerCore = function (method, theFunction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, unregisterInProgress, nameAlreadyExists, repoMethod;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof method === \"string\") {\r\n                            methodDefinition = { name: \"\" + method };\r\n                        }\r\n                        else {\r\n                            methodDefinition = __assign({}, method);\r\n                        }\r\n                        if (!methodDefinition.name) {\r\n                            return [2, Promise.reject(\"Please, provide a (unique) string value for the \\u201Cname\\u201D property in the \\u201CmethodDefinition\\u201D object: \" + JSON.stringify(method))];\r\n                        }\r\n                        unregisterInProgress = this.currentlyUnregistering[methodDefinition.name];\r\n                        if (!unregisterInProgress) return [3, 2];\r\n                        return [4, unregisterInProgress];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        nameAlreadyExists = this.serverRepository.getList()\r\n                            .some(function (serverMethod) { return serverMethod.definition.name === methodDefinition.name; });\r\n                        if (nameAlreadyExists) {\r\n                            return [2, Promise.reject(\"A method with the name \\\"\" + methodDefinition.name + \"\\\" already exists! Please, provide a unique name for the method.\")];\r\n                        }\r\n                        if (methodDefinition.supportsStreaming) {\r\n                            return [2, Promise.reject(\"When you create methods with \\u201Cglue.interop.register()\\u201D or \\u201Cglue.interop.registerAsync()\\u201D the property \\u201CsupportsStreaming\\u201D cannot be \\u201Ctrue\\u201D. If you want \\u201C\" + methodDefinition.name + \"\\u201D to be a stream, please use the \\u201Cglue.interop.createStream()\\u201D method.\")];\r\n                        }\r\n                        repoMethod = this.serverRepository.add({\r\n                            definition: methodDefinition,\r\n                            theFunction: theFunction,\r\n                            protocolState: {},\r\n                        });\r\n                        return [2, this.protocol.server.register(repoMethod)\r\n                                .catch(function (err) {\r\n                                if (repoMethod === null || repoMethod === void 0 ? void 0 : repoMethod.repoId) {\r\n                                    _this.serverRepository.remove(repoMethod.repoId);\r\n                                }\r\n                                throw err;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.onMethodInvoked = function (methodToExecute, invocationId, invocationArgs) {\r\n        var _this = this;\r\n        if (!methodToExecute || !methodToExecute.theFunction) {\r\n            return;\r\n        }\r\n        methodToExecute.theFunction(invocationArgs, function (err, result) {\r\n            if (err !== undefined && err !== null) {\r\n                if (err.message && typeof err.message === \"string\") {\r\n                    err = err.message;\r\n                }\r\n                else if (typeof err !== \"string\") {\r\n                    try {\r\n                        err = JSON.stringify(err);\r\n                    }\r\n                    catch (unStrException) {\r\n                        err = \"un-stringifyable error in onMethodInvoked! Top level prop names: \" + Object.keys(err);\r\n                    }\r\n                }\r\n            }\r\n            if (!result) {\r\n                result = {};\r\n            }\r\n            else if (typeof result !== \"object\" || Array.isArray(result)) {\r\n                result = { _value: result };\r\n            }\r\n            _this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);\r\n        });\r\n    };\r\n    return Server;\r\n}());\n\nvar InstanceWrapper = (function () {\r\n    function InstanceWrapper(API, instance, connection) {\r\n        var _this = this;\r\n        this.wrapped = {};\r\n        this.wrapped.getMethods = function () {\r\n            return API.methodsForInstance(this);\r\n        };\r\n        this.wrapped.getStreams = function () {\r\n            return API.methodsForInstance(this).filter(function (m) { return m.supportsStreaming; });\r\n        };\r\n        if (instance) {\r\n            this.refreshWrappedObject(instance);\r\n        }\r\n        if (connection) {\r\n            connection.loggedIn(function () {\r\n                _this.refresh(connection);\r\n            });\r\n            this.refresh(connection);\r\n        }\r\n    }\r\n    InstanceWrapper.prototype.unwrap = function () {\r\n        return this.wrapped;\r\n    };\r\n    InstanceWrapper.prototype.refresh = function (connection) {\r\n        if (!connection) {\r\n            return;\r\n        }\r\n        var resolvedIdentity = connection === null || connection === void 0 ? void 0 : connection.resolvedIdentity;\r\n        var instance = Object.assign({}, resolvedIdentity !== null && resolvedIdentity !== void 0 ? resolvedIdentity : {}, { peerId: connection === null || connection === void 0 ? void 0 : connection.peerId });\r\n        this.refreshWrappedObject(instance);\r\n    };\r\n    InstanceWrapper.prototype.refreshWrappedObject = function (resolvedIdentity) {\r\n        var _this = this;\r\n        var _a, _b, _c, _d;\r\n        Object.keys(resolvedIdentity).forEach(function (key) {\r\n            _this.wrapped[key] = resolvedIdentity[key];\r\n        });\r\n        this.wrapped.user = resolvedIdentity.user;\r\n        this.wrapped.instance = resolvedIdentity.instance;\r\n        this.wrapped.application = (_a = resolvedIdentity.application) !== null && _a !== void 0 ? _a : shortid();\r\n        this.wrapped.applicationName = resolvedIdentity.applicationName;\r\n        this.wrapped.pid = (_c = (_b = resolvedIdentity.pid) !== null && _b !== void 0 ? _b : resolvedIdentity.process) !== null && _c !== void 0 ? _c : Math.floor(Math.random() * 10000000000);\r\n        this.wrapped.machine = resolvedIdentity.machine;\r\n        this.wrapped.environment = resolvedIdentity.environment;\r\n        this.wrapped.region = resolvedIdentity.region;\r\n        this.wrapped.windowId = resolvedIdentity.windowId;\r\n        this.wrapped.isLocal = (_d = resolvedIdentity.isLocal) !== null && _d !== void 0 ? _d : true;\r\n        this.wrapped.api = resolvedIdentity.api;\r\n        this.wrapped.service = resolvedIdentity.service;\r\n        this.wrapped.peerId = resolvedIdentity.peerId;\r\n    };\r\n    return InstanceWrapper;\r\n}());\n\nvar hideMethodSystemFlags = function (method) {\r\n    return __assign(__assign({}, method), { flags: method.flags.metadata || {} });\r\n};\r\nvar ClientRepository = (function () {\r\n    function ClientRepository(logger, API) {\r\n        this.logger = logger;\r\n        this.API = API;\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n        this.callbacks = lib();\r\n        var peerId = this.API.instance.peerId;\r\n        this.myServer = {\r\n            id: peerId,\r\n            methods: {},\r\n            instance: this.API.instance,\r\n            wrapper: this.API.unwrappedInstance,\r\n        };\r\n        this.servers[peerId] = this.myServer;\r\n    }\r\n    ClientRepository.prototype.addServer = function (info, serverId) {\r\n        this.logger.debug(\"adding server \" + serverId);\r\n        var current = this.servers[serverId];\r\n        if (current) {\r\n            return current.id;\r\n        }\r\n        var wrapper = new InstanceWrapper(this.API, info);\r\n        var serverEntry = {\r\n            id: serverId,\r\n            methods: {},\r\n            instance: wrapper.unwrap(),\r\n            wrapper: wrapper,\r\n        };\r\n        this.servers[serverId] = serverEntry;\r\n        this.callbacks.execute(\"onServerAdded\", serverEntry.instance);\r\n        return serverId;\r\n    };\r\n    ClientRepository.prototype.removeServerById = function (id, reason) {\r\n        var _this = this;\r\n        var server = this.servers[id];\r\n        if (!server) {\r\n            this.logger.warn(\"not aware of server \" + id + \", my state \" + JSON.stringify(Object.keys(this.servers)));\r\n            return;\r\n        }\r\n        else {\r\n            this.logger.debug(\"removing server \" + id);\r\n        }\r\n        Object.keys(server.methods).forEach(function (methodId) {\r\n            _this.removeServerMethod(id, methodId);\r\n        });\r\n        delete this.servers[id];\r\n        this.callbacks.execute(\"onServerRemoved\", server.instance, reason);\r\n    };\r\n    ClientRepository.prototype.addServerMethod = function (serverId, method) {\r\n        var _a;\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        if (server.methods[method.id]) {\r\n            return;\r\n        }\r\n        var identifier = this.createMethodIdentifier(method);\r\n        var that = this;\r\n        var methodDefinition = {\r\n            identifier: identifier,\r\n            gatewayId: method.id,\r\n            name: method.name,\r\n            displayName: method.display_name,\r\n            description: method.description,\r\n            version: method.version,\r\n            objectTypes: method.object_types || [],\r\n            accepts: method.input_signature,\r\n            returns: method.result_signature,\r\n            supportsStreaming: typeof method.flags !== \"undefined\" ? method.flags.streaming : false,\r\n            flags: (_a = method.flags) !== null && _a !== void 0 ? _a : {},\r\n            getServers: function () {\r\n                return that.getServersByMethod(identifier);\r\n            }\r\n        };\r\n        methodDefinition.object_types = methodDefinition.objectTypes;\r\n        methodDefinition.display_name = methodDefinition.displayName;\r\n        methodDefinition.version = methodDefinition.version;\r\n        server.methods[method.id] = methodDefinition;\r\n        var clientMethodDefinition = hideMethodSystemFlags(methodDefinition);\r\n        if (!this.methodsCount[identifier]) {\r\n            this.methodsCount[identifier] = 0;\r\n            this.callbacks.execute(\"onMethodAdded\", clientMethodDefinition);\r\n        }\r\n        this.methodsCount[identifier] = this.methodsCount[identifier] + 1;\r\n        this.callbacks.execute(\"onServerMethodAdded\", server.instance, clientMethodDefinition);\r\n        return methodDefinition;\r\n    };\r\n    ClientRepository.prototype.removeServerMethod = function (serverId, methodId) {\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        var method = server.methods[methodId];\r\n        delete server.methods[methodId];\r\n        var clientMethodDefinition = hideMethodSystemFlags(method);\r\n        this.methodsCount[method.identifier] = this.methodsCount[method.identifier] - 1;\r\n        if (this.methodsCount[method.identifier] === 0) {\r\n            this.callbacks.execute(\"onMethodRemoved\", clientMethodDefinition);\r\n        }\r\n        this.callbacks.execute(\"onServerMethodRemoved\", server.instance, clientMethodDefinition);\r\n    };\r\n    ClientRepository.prototype.getMethods = function () {\r\n        return this.extractMethodsFromServers(Object.values(this.servers)).map(hideMethodSystemFlags);\r\n    };\r\n    ClientRepository.prototype.getServers = function () {\r\n        return Object.values(this.servers).map(this.hideServerMethodSystemFlags);\r\n    };\r\n    ClientRepository.prototype.onServerAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerAdded\", callback);\r\n        var serversWithMethodsToReplay = this.getServers().map(function (s) { return s.instance; });\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, serversWithMethodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodAdded\", callback);\r\n        var methodsToReplay = this.getMethods();\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, methodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onServerMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodAdded\", callback);\r\n        var unsubCalled = false;\r\n        var servers = this.getServers();\r\n        setTimeout(function () {\r\n            servers.forEach(function (server) {\r\n                var methods = server.methods;\r\n                Object.keys(methods).forEach(function (methodId) {\r\n                    if (!unsubCalled) {\r\n                        callback(server.instance, methods[methodId]);\r\n                    }\r\n                });\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    ClientRepository.prototype.onMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.getServerById = function (id) {\r\n        return this.hideServerMethodSystemFlags(this.servers[id]);\r\n    };\r\n    ClientRepository.prototype.reset = function () {\r\n        var _a;\r\n        var _this = this;\r\n        Object.keys(this.servers).forEach(function (key) {\r\n            _this.removeServerById(key, \"reset\");\r\n        });\r\n        this.servers = (_a = {},\r\n            _a[this.myServer.id] = this.myServer,\r\n            _a);\r\n        this.methodsCount = {};\r\n    };\r\n    ClientRepository.prototype.createMethodIdentifier = function (methodInfo) {\r\n        var accepts = methodInfo.input_signature !== undefined ? methodInfo.input_signature : \"\";\r\n        var returns = methodInfo.result_signature !== undefined ? methodInfo.result_signature : \"\";\r\n        return (methodInfo.name + accepts + returns).toLowerCase();\r\n    };\r\n    ClientRepository.prototype.getServersByMethod = function (identifier) {\r\n        var allServers = [];\r\n        Object.values(this.servers).forEach(function (server) {\r\n            Object.values(server.methods).forEach(function (method) {\r\n                if (method.identifier === identifier) {\r\n                    allServers.push(server.instance);\r\n                }\r\n            });\r\n        });\r\n        return allServers;\r\n    };\r\n    ClientRepository.prototype.returnUnsubWithDelayedReplay = function (unsubscribeFunc, collectionToReplay, callback) {\r\n        var unsubCalled = false;\r\n        setTimeout(function () {\r\n            collectionToReplay.forEach(function (item) {\r\n                if (!unsubCalled) {\r\n                    callback(item);\r\n                }\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    ClientRepository.prototype.hideServerMethodSystemFlags = function (server) {\r\n        var clientMethods = {};\r\n        Object.entries(server.methods).forEach(function (_a) {\r\n            var name = _a[0], method = _a[1];\r\n            clientMethods[name] = hideMethodSystemFlags(method);\r\n        });\r\n        return __assign(__assign({}, server), { methods: clientMethods });\r\n    };\r\n    ClientRepository.prototype.extractMethodsFromServers = function (servers) {\r\n        var methods = Object.values(servers).reduce(function (clientMethods, server) {\r\n            return __spreadArrays(clientMethods, Object.values(server.methods));\r\n        }, []);\r\n        return methods;\r\n    };\r\n    return ClientRepository;\r\n}());\n\nvar ServerRepository = (function () {\r\n    function ServerRepository() {\r\n        this.nextId = 0;\r\n        this.methods = [];\r\n    }\r\n    ServerRepository.prototype.add = function (method) {\r\n        method.repoId = String(this.nextId);\r\n        this.nextId += 1;\r\n        this.methods.push(method);\r\n        return method;\r\n    };\r\n    ServerRepository.prototype.remove = function (repoId) {\r\n        if (typeof repoId !== \"string\") {\r\n            return new TypeError(\"Expecting a string\");\r\n        }\r\n        this.methods = this.methods.filter(function (m) {\r\n            return m.repoId !== repoId;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getById = function (id) {\r\n        if (typeof id !== \"string\") {\r\n            return undefined;\r\n        }\r\n        return this.methods.find(function (m) {\r\n            return m.repoId === id;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getList = function () {\r\n        return this.methods.map(function (m) { return m; });\r\n    };\r\n    ServerRepository.prototype.length = function () {\r\n        return this.methods.length;\r\n    };\r\n    ServerRepository.prototype.reset = function () {\r\n        this.methods = [];\r\n    };\r\n    return ServerRepository;\r\n}());\n\nvar SUBSCRIPTION_REQUEST = \"onSubscriptionRequest\";\r\nvar SUBSCRIPTION_ADDED = \"onSubscriptionAdded\";\r\nvar SUBSCRIPTION_REMOVED = \"onSubscriptionRemoved\";\r\nvar ServerStreaming$1 = (function () {\r\n    function ServerStreaming(session, repository, serverRepository) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.serverRepository = serverRepository;\r\n        this.ERR_URI_SUBSCRIPTION_FAILED = \"com.tick42.agm.errors.subscription.failure\";\r\n        this.callbacks = lib();\r\n        this.nextStreamId = 0;\r\n        session.on(\"add-interest\", function (msg) {\r\n            _this.handleAddInterest(msg);\r\n        });\r\n        session.on(\"remove-interest\", function (msg) {\r\n            _this.handleRemoveInterest(msg);\r\n        });\r\n    }\r\n    ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {\r\n        if (typeof branch !== \"string\") {\r\n            branch = \"\";\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            throw new TypeError(\"The streaming method is missing its subscriptions.\");\r\n        }\r\n        if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            throw new TypeError(\"The streaming method is missing its branches.\");\r\n        }\r\n        var streamId = this.getStreamId(streamingMethod, branch);\r\n        var key = requestContext.msg.subscription_id;\r\n        var subscription = {\r\n            id: key,\r\n            arguments: requestContext.arguments,\r\n            instance: requestContext.instance,\r\n            branchKey: branch,\r\n            streamId: streamId,\r\n            subscribeMsg: requestContext.msg,\r\n        };\r\n        streamingMethod.protocolState.subscriptionsMap[key] = subscription;\r\n        this.session.sendFireAndForget({\r\n            type: \"accepted\",\r\n            subscription_id: key,\r\n            stream_id: streamId,\r\n        });\r\n        this.callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {\r\n        if (typeof reason !== \"string\") {\r\n            reason = \"\";\r\n        }\r\n        this.sendSubscriptionFailed(\"Subscription rejected by user. \" + reason, requestContext.msg.subscription_id);\r\n    };\r\n    ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        if (typeof branches === \"string\") {\r\n            branches = [branches];\r\n        }\r\n        else if (!Array.isArray(branches) || branches.length <= 0) {\r\n            branches = [];\r\n        }\r\n        var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\r\n            .filter(function (br) {\r\n            if (!branches || branches.length === 0) {\r\n                return true;\r\n            }\r\n            return branches.indexOf(br.key) >= 0;\r\n        }).map(function (br) {\r\n            return br.streamId;\r\n        });\r\n        streamIdList.forEach(function (streamId) {\r\n            var publishMessage = {\r\n                type: \"publish\",\r\n                stream_id: streamId,\r\n                data: data,\r\n            };\r\n            _this.session.sendFireAndForget(publishMessage);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        var postMessage = {\r\n            type: \"post\",\r\n            subscription_id: subscription.id,\r\n            data: data,\r\n        };\r\n        this.session.sendFireAndForget(postMessage);\r\n    };\r\n    ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {\r\n        if (streamingMethod.protocolState.subscriptionsMap) {\r\n            delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\r\n        }\r\n        var dropSubscriptionMessage = {\r\n            type: \"drop-subscription\",\r\n            subscription_id: subscription.id,\r\n            reason: \"Server dropping a single subscription\",\r\n        };\r\n        this.session.sendFireAndForget(dropSubscriptionMessage);\r\n        var subscriber = subscription.instance;\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.closeMultipleSubscriptions = function (streamingMethod, branchKey) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var subscriptionsToClose = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey === \"string\") {\r\n            subscriptionsToClose = subscriptionsToClose.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        subscriptionsToClose.forEach(function (subscription) {\r\n            delete subscriptionsMap[subscription.id];\r\n            var drop = {\r\n                type: \"drop-subscription\",\r\n                subscription_id: subscription.id,\r\n                reason: \"Server dropping all subscriptions on stream_id: \" + subscription.streamId,\r\n            };\r\n            _this.session.sendFireAndForget(drop);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var subscriptions = [];\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey !== \"string\") {\r\n            subscriptions = allSubscriptions;\r\n        }\r\n        else {\r\n            subscriptions = allSubscriptions.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        return subscriptions;\r\n    };\r\n    ServerStreaming.prototype.getBranchList = function (streamingMethod) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        var result = [];\r\n        allSubscriptions.forEach(function (sub) {\r\n            var branch = \"\";\r\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\r\n                branch = sub.branchKey;\r\n            }\r\n            if (result.indexOf(branch) === -1) {\r\n                result.push(branch);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    ServerStreaming.prototype.onSubAdded = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRequest = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRemoved = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED, callback);\r\n    };\r\n    ServerStreaming.prototype.handleRemoveInterest = function (msg) {\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (typeof msg.subscription_id !== \"string\" ||\r\n            typeof streamingMethod !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== \"object\") {\r\n            return;\r\n        }\r\n        var subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.onSubscriptionLifetimeEvent = function (eventName, handlerFunc) {\r\n        this.callbacks.add(eventName, handlerFunc);\r\n    };\r\n    ServerStreaming.prototype.getNextStreamId = function () {\r\n        return this.nextStreamId++ + \"\";\r\n    };\r\n    ServerStreaming.prototype.handleAddInterest = function (msg) {\r\n        var caller = this.repository.getServerById(msg.caller_id);\r\n        var instance = caller.instance;\r\n        var requestContext = {\r\n            msg: msg,\r\n            arguments: msg.arguments_kv || {},\r\n            instance: instance,\r\n        };\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (streamingMethod === undefined) {\r\n            var errorMsg = \"No method with id \" + msg.method_id + \" on this server.\";\r\n            this.sendSubscriptionFailed(errorMsg, msg.subscription_id);\r\n            return;\r\n        }\r\n        if (streamingMethod.protocolState.subscriptionsMap &&\r\n            streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {\r\n            this.sendSubscriptionFailed(\"A subscription with id \" + msg.subscription_id + \" already exists.\", msg.subscription_id);\r\n            return;\r\n        }\r\n        this.callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.sendSubscriptionFailed = function (reason, subscriptionId) {\r\n        var errorMessage = {\r\n            type: \"error\",\r\n            reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,\r\n            reason: reason,\r\n            request_id: subscriptionId,\r\n        };\r\n        this.session.sendFireAndForget(errorMessage);\r\n    };\r\n    ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {\r\n        if (typeof branchKey !== \"string\") {\r\n            branchKey = \"\";\r\n        }\r\n        if (!streamingMethod.protocolState.branchKeyToStreamIdMap) {\r\n            throw new Error(\"streaming \" + streamingMethod.definition.name + \" method without protocol state\");\r\n        }\r\n        var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.key === branchKey;\r\n        })[0];\r\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\r\n        if (typeof streamId !== \"string\" || streamId === \"\") {\r\n            streamId = this.getNextStreamId();\r\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\r\n        }\r\n        return streamId;\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerProtocol = (function () {\r\n    function ServerProtocol(session, clientRepository, serverRepository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.clientRepository = clientRepository;\r\n        this.serverRepository = serverRepository;\r\n        this.logger = logger;\r\n        this.callbacks = lib();\r\n        this.streaming = new ServerStreaming$1(session, clientRepository, serverRepository);\r\n        this.session.on(\"invoke\", function (msg) { return _this.handleInvokeMessage(msg); });\r\n    }\r\n    ServerProtocol.prototype.createStream = function (repoMethod) {\r\n        repoMethod.protocolState.subscriptionsMap = {};\r\n        repoMethod.protocolState.branchKeyToStreamIdMap = [];\r\n        return this.register(repoMethod, true);\r\n    };\r\n    ServerProtocol.prototype.register = function (repoMethod, isStreaming) {\r\n        var _this = this;\r\n        var _a;\r\n        var methodDef = repoMethod.definition;\r\n        var flags = Object.assign({}, { metadata: (_a = methodDef.flags) !== null && _a !== void 0 ? _a : {} }, { streaming: isStreaming || false });\r\n        var registerMsg = {\r\n            type: \"register\",\r\n            methods: [{\r\n                    id: repoMethod.repoId,\r\n                    name: methodDef.name,\r\n                    display_name: methodDef.displayName,\r\n                    description: methodDef.description,\r\n                    version: methodDef.version,\r\n                    flags: flags,\r\n                    object_types: methodDef.objectTypes || methodDef.object_types,\r\n                    input_signature: methodDef.accepts,\r\n                    result_signature: methodDef.returns,\r\n                    restrictions: undefined,\r\n                }],\r\n        };\r\n        return this.session.send(registerMsg, { methodId: repoMethod.repoId })\r\n            .then(function () {\r\n            _this.logger.debug(\"registered method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId);\r\n        })\r\n            .catch(function (msg) {\r\n            _this.logger.warn(\"failed to register method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId + \" - \" + JSON.stringify(msg));\r\n            throw msg;\r\n        });\r\n    };\r\n    ServerProtocol.prototype.onInvoked = function (callback) {\r\n        this.callbacks.add(\"onInvoked\", callback);\r\n    };\r\n    ServerProtocol.prototype.methodInvocationResult = function (method, invocationId, err, result) {\r\n        var msg;\r\n        if (err || err === \"\") {\r\n            msg = {\r\n                type: \"error\",\r\n                request_id: invocationId,\r\n                reason_uri: \"agm.errors.client_error\",\r\n                reason: err,\r\n                context: result,\r\n                peer_id: undefined,\r\n            };\r\n        }\r\n        else {\r\n            msg = {\r\n                type: \"yield\",\r\n                invocation_id: invocationId,\r\n                peer_id: this.session.peerId,\r\n                result: result,\r\n                request_id: undefined,\r\n            };\r\n        }\r\n        this.session.sendFireAndForget(msg);\r\n    };\r\n    ServerProtocol.prototype.unregister = function (method) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        msg = {\r\n                            type: \"unregister\",\r\n                            methods: [method.repoId],\r\n                        };\r\n                        return [4, this.session.send(msg)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerProtocol.prototype.getBranchList = function (method) {\r\n        return this.streaming.getBranchList(method);\r\n    };\r\n    ServerProtocol.prototype.getSubscriptionList = function (method, branchKey) {\r\n        return this.streaming.getSubscriptionList(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.closeAllSubscriptions = function (method, branchKey) {\r\n        this.streaming.closeMultipleSubscriptions(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.pushData = function (method, data, branches) {\r\n        this.streaming.pushData(method, data, branches);\r\n    };\r\n    ServerProtocol.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        this.streaming.pushDataToSingle(method, subscription, data);\r\n    };\r\n    ServerProtocol.prototype.closeSingleSubscription = function (method, subscription) {\r\n        this.streaming.closeSingleSubscription(method, subscription);\r\n    };\r\n    ServerProtocol.prototype.acceptRequestOnBranch = function (requestContext, method, branch) {\r\n        this.streaming.acceptRequestOnBranch(requestContext, method, branch);\r\n    };\r\n    ServerProtocol.prototype.rejectRequest = function (requestContext, method, reason) {\r\n        this.streaming.rejectRequest(requestContext, method, reason);\r\n    };\r\n    ServerProtocol.prototype.onSubRequest = function (callback) {\r\n        this.streaming.onSubRequest(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubAdded = function (callback) {\r\n        this.streaming.onSubAdded(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubRemoved = function (callback) {\r\n        this.streaming.onSubRemoved(callback);\r\n    };\r\n    ServerProtocol.prototype.handleInvokeMessage = function (msg) {\r\n        var invocationId = msg.invocation_id;\r\n        var callerId = msg.caller_id;\r\n        var methodId = msg.method_id;\r\n        var args = msg.arguments_kv;\r\n        var methodList = this.serverRepository.getList();\r\n        var method = methodList.filter(function (m) {\r\n            return m.repoId === methodId;\r\n        })[0];\r\n        if (method === undefined) {\r\n            return;\r\n        }\r\n        var client = this.clientRepository.getServerById(callerId).instance;\r\n        var invocationArgs = { args: args, instance: client };\r\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\r\n    };\r\n    return ServerProtocol;\r\n}());\n\nvar UserSubscription = (function () {\r\n    function UserSubscription(repository, subscriptionData) {\r\n        this.repository = repository;\r\n        this.subscriptionData = subscriptionData;\r\n    }\r\n    Object.defineProperty(UserSubscription.prototype, \"requestArguments\", {\r\n        get: function () {\r\n            return this.subscriptionData.params.arguments || {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"servers\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this.subscriptionData.trackedServers\r\n                .filter(function (pair) { return pair.subscriptionId; })\r\n                .map(function (pair) { return _this.repository.getServerById(pair.serverId).instance; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"serverInstance\", {\r\n        get: function () {\r\n            return this.servers[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            return this.subscriptionData.method;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    UserSubscription.prototype.onData = function (dataCallback) {\r\n        if (typeof dataCallback !== \"function\") {\r\n            throw new TypeError(\"The data callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onData.push(dataCallback);\r\n        if (this.subscriptionData.handlers.onData.length === 1 && this.subscriptionData.queued.data.length > 0) {\r\n            this.subscriptionData.queued.data.forEach(function (dataItem) {\r\n                dataCallback(dataItem);\r\n            });\r\n        }\r\n    };\r\n    UserSubscription.prototype.onClosed = function (closedCallback) {\r\n        if (typeof closedCallback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onClosed.push(closedCallback);\r\n    };\r\n    UserSubscription.prototype.onFailed = function (callback) {\r\n    };\r\n    UserSubscription.prototype.onConnected = function (callback) {\r\n        if (typeof callback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onConnected.push(callback);\r\n    };\r\n    UserSubscription.prototype.close = function () {\r\n        this.subscriptionData.close();\r\n    };\r\n    UserSubscription.prototype.setNewSubscription = function (newSub) {\r\n        this.subscriptionData = newSub;\r\n    };\r\n    return UserSubscription;\r\n}());\n\nvar STATUS_AWAITING_ACCEPT = \"awaitingAccept\";\r\nvar STATUS_SUBSCRIBED = \"subscribed\";\r\nvar ERR_MSG_SUB_FAILED = \"Subscription failed.\";\r\nvar ERR_MSG_SUB_REJECTED = \"Subscription rejected.\";\r\nvar ON_CLOSE_MSG_SERVER_INIT = \"ServerInitiated\";\r\nvar ON_CLOSE_MSG_CLIENT_INIT = \"ClientInitiated\";\r\nvar ClientStreaming = (function () {\r\n    function ClientStreaming(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        this.nextSubLocalKey = 0;\r\n        this.handleErrorSubscribing = function (errorResponse) {\r\n            var tag = errorResponse._tag;\r\n            var subLocalKey = tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                return server.serverId !== tag.serverId;\r\n            });\r\n            if (pendingSub.trackedServers.length <= 0) {\r\n                clearTimeout(pendingSub.timeoutId);\r\n                if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                    var reason = (typeof errorResponse.reason === \"string\" && errorResponse.reason !== \"\") ?\r\n                        ' Publisher said \"' + errorResponse.reason + '\".' :\r\n                        \" No reason given.\";\r\n                    var callArgs = typeof pendingSub.params.arguments === \"object\" ?\r\n                        JSON.stringify(pendingSub.params.arguments) :\r\n                        \"{}\";\r\n                    pendingSub.error({\r\n                        message: ERR_MSG_SUB_REJECTED + reason + \" Called with:\" + callArgs,\r\n                        called_with: pendingSub.params.arguments,\r\n                        method: pendingSub.method,\r\n                    });\r\n                }\r\n                else if (pendingSub.status === STATUS_SUBSCRIBED) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                }\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n        };\r\n        this.handleSubscribed = function (msg) {\r\n            var subLocalKey = msg._tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            var serverId = msg._tag.serverId;\r\n            var acceptingServer = pendingSub.trackedServers\r\n                .filter(function (server) {\r\n                return server.serverId === serverId;\r\n            })[0];\r\n            if (typeof acceptingServer !== \"object\") {\r\n                return;\r\n            }\r\n            acceptingServer.subscriptionId = msg.subscription_id;\r\n            _this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;\r\n            var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);\r\n            pendingSub.status = STATUS_SUBSCRIBED;\r\n            if (isFirstResponse) {\r\n                var reconnect = false;\r\n                var sub = pendingSub.subscription;\r\n                if (sub) {\r\n                    sub.setNewSubscription(pendingSub);\r\n                    pendingSub.success(sub);\r\n                    reconnect = true;\r\n                }\r\n                else {\r\n                    sub = new UserSubscription(_this.repository, pendingSub);\r\n                    pendingSub.subscription = sub;\r\n                    pendingSub.success(sub);\r\n                }\r\n                for (var _i = 0, _a = pendingSub.handlers.onConnected; _i < _a.length; _i++) {\r\n                    var handler = _a[_i];\r\n                    try {\r\n                        handler(sub.serverInstance, reconnect);\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.handleEventData = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var trackedServersFound = subscription.trackedServers.filter(function (server) {\r\n                return server.subscriptionId === msg.subscription_id;\r\n            });\r\n            if (trackedServersFound.length !== 1) {\r\n                return;\r\n            }\r\n            var isPrivateData = msg.oob;\r\n            var sendingServerId = trackedServersFound[0].serverId;\r\n            var receivedStreamData = function () {\r\n                return {\r\n                    data: msg.data,\r\n                    server: _this.repository.getServerById(sendingServerId).instance,\r\n                    requestArguments: subscription.params.arguments,\r\n                    message: undefined,\r\n                    private: isPrivateData,\r\n                };\r\n            };\r\n            var onDataHandlers = subscription.handlers.onData;\r\n            var queuedData = subscription.queued.data;\r\n            if (onDataHandlers.length > 0) {\r\n                onDataHandlers.forEach(function (callback) {\r\n                    if (typeof callback === \"function\") {\r\n                        callback(receivedStreamData());\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                queuedData.push(receivedStreamData());\r\n            }\r\n        };\r\n        this.handleSubscriptionCancelled = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var expectedNewLength = subscription.trackedServers.length - 1;\r\n            subscription.trackedServers = subscription.trackedServers.filter(function (server) {\r\n                if (server.subscriptionId === msg.subscription_id) {\r\n                    subscription.queued.closers.push(server.serverId);\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n            if (subscription.trackedServers.length !== expectedNewLength) {\r\n                return;\r\n            }\r\n            if (subscription.trackedServers.length <= 0) {\r\n                clearTimeout(subscription.timeoutId);\r\n                _this.callOnClosedHandlers(subscription);\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            delete _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n        };\r\n        session.on(\"subscribed\", this.handleSubscribed);\r\n        session.on(\"event\", this.handleEventData);\r\n        session.on(\"subscription-cancelled\", this.handleSubscriptionCancelled);\r\n    }\r\n    ClientStreaming.prototype.subscribe = function (streamingMethod, params, targetServers, success, error, existingSub) {\r\n        var _this = this;\r\n        if (targetServers.length === 0) {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" No available servers matched the target params.\",\r\n            });\r\n            return;\r\n        }\r\n        var subLocalKey = this.getNextSubscriptionLocalKey();\r\n        var pendingSub = this.registerSubscription(subLocalKey, streamingMethod, params, success, error, params.methodResponseTimeout || 10000, existingSub);\r\n        if (typeof pendingSub !== \"object\") {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" Unable to register the user callbacks.\",\r\n            });\r\n            return;\r\n        }\r\n        targetServers.forEach(function (target) {\r\n            var serverId = target.server.id;\r\n            var method = target.methods.find(function (m) { return m.name === streamingMethod.name; });\r\n            if (!method) {\r\n                _this.logger.error(\"can not find method \" + streamingMethod.name + \" for target \" + target.server.id);\r\n                return;\r\n            }\r\n            pendingSub.trackedServers.push({\r\n                serverId: serverId,\r\n                subscriptionId: undefined,\r\n            });\r\n            var msg = {\r\n                type: \"subscribe\",\r\n                server_id: serverId,\r\n                method_id: method.gatewayId,\r\n                arguments_kv: params.arguments,\r\n            };\r\n            _this.session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })\r\n                .then(function (m) { return _this.handleSubscribed(m); })\r\n                .catch(function (err) { return _this.handleErrorSubscribing(err); });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.drainSubscriptions = function () {\r\n        var existing = Object.values(this.subscriptionsList);\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        return existing;\r\n    };\r\n    ClientStreaming.prototype.getNextSubscriptionLocalKey = function () {\r\n        var current = this.nextSubLocalKey;\r\n        this.nextSubLocalKey += 1;\r\n        return current;\r\n    };\r\n    ClientStreaming.prototype.registerSubscription = function (subLocalKey, method, params, success, error, timeout, existingSub) {\r\n        var _this = this;\r\n        var subsInfo = {\r\n            localKey: subLocalKey,\r\n            status: STATUS_AWAITING_ACCEPT,\r\n            method: method,\r\n            params: params,\r\n            success: success,\r\n            error: error,\r\n            trackedServers: [],\r\n            handlers: {\r\n                onData: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onData) || [],\r\n                onClosed: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onClosed) || [],\r\n                onConnected: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onConnected) || [],\r\n            },\r\n            queued: {\r\n                data: [],\r\n                closers: [],\r\n            },\r\n            timeoutId: undefined,\r\n            close: function () { return _this.closeSubscription(subLocalKey); },\r\n            subscription: existingSub === null || existingSub === void 0 ? void 0 : existingSub.subscription\r\n        };\r\n        if (!existingSub) {\r\n            if (params.onData) {\r\n                subsInfo.handlers.onData.push(params.onData);\r\n            }\r\n            if (params.onClosed) {\r\n                subsInfo.handlers.onClosed.push(params.onClosed);\r\n            }\r\n            if (params.onConnected) {\r\n                subsInfo.handlers.onConnected.push(params.onConnected);\r\n            }\r\n        }\r\n        this.subscriptionsList[subLocalKey] = subsInfo;\r\n        subsInfo.timeoutId = setTimeout(function () {\r\n            if (_this.subscriptionsList[subLocalKey] === undefined) {\r\n                return;\r\n            }\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                error({\r\n                    method: method,\r\n                    called_with: params.arguments,\r\n                    message: ERR_MSG_SUB_FAILED + \" Subscription attempt timed out after \" + timeout + \" ms.\",\r\n                });\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {\r\n                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                    return (typeof server.subscriptionId !== \"undefined\");\r\n                });\r\n                delete pendingSub.timeoutId;\r\n                if (pendingSub.trackedServers.length <= 0) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                    delete _this.subscriptionsList[subLocalKey];\r\n                }\r\n            }\r\n        }, timeout);\r\n        return subsInfo;\r\n    };\r\n    ClientStreaming.prototype.callOnClosedHandlers = function (subscription, reason) {\r\n        var closersCount = subscription.queued.closers.length;\r\n        var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\r\n        var closingServer;\r\n        if (closingServerId !== undefined && typeof closingServerId === \"string\") {\r\n            closingServer = this.repository.getServerById(closingServerId).instance;\r\n        }\r\n        subscription.handlers.onClosed.forEach(function (callback) {\r\n            if (typeof callback !== \"function\") {\r\n                return;\r\n            }\r\n            callback({\r\n                message: reason || ON_CLOSE_MSG_SERVER_INIT,\r\n                requestArguments: subscription.params.arguments || {},\r\n                server: closingServer,\r\n                stream: subscription.method,\r\n            });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.closeSubscription = function (subLocalKey) {\r\n        var _this = this;\r\n        var subscription = this.subscriptionsList[subLocalKey];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        subscription.trackedServers.forEach(function (server) {\r\n            if (typeof server.subscriptionId === \"undefined\") {\r\n                return;\r\n            }\r\n            subscription.queued.closers.push(server.serverId);\r\n            _this.session.sendFireAndForget({\r\n                type: \"unsubscribe\",\r\n                subscription_id: server.subscriptionId,\r\n                reason_uri: \"\",\r\n                reason: ON_CLOSE_MSG_CLIENT_INIT,\r\n            });\r\n            delete _this.subscriptionIdToLocalKeyMap[server.subscriptionId];\r\n        });\r\n        subscription.trackedServers = [];\r\n        this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);\r\n        delete this.subscriptionsList[subLocalKey];\r\n    };\r\n    return ClientStreaming;\r\n}());\n\nvar ClientProtocol = (function () {\r\n    function ClientProtocol(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        session.on(\"peer-added\", function (msg) { return _this.handlePeerAdded(msg); });\r\n        session.on(\"peer-removed\", function (msg) { return _this.handlePeerRemoved(msg); });\r\n        session.on(\"methods-added\", function (msg) { return _this.handleMethodsAddedMessage(msg); });\r\n        session.on(\"methods-removed\", function (msg) { return _this.handleMethodsRemovedMessage(msg); });\r\n        this.streaming = new ClientStreaming(session, repository, logger);\r\n    }\r\n    ClientProtocol.prototype.subscribe = function (stream, options, targetServers, success, error, existingSub) {\r\n        this.streaming.subscribe(stream, options, targetServers, success, error, existingSub);\r\n    };\r\n    ClientProtocol.prototype.invoke = function (id, method, args, target) {\r\n        var _this = this;\r\n        var serverId = target.id;\r\n        var methodId = method.gatewayId;\r\n        var msg = {\r\n            type: \"call\",\r\n            server_id: serverId,\r\n            method_id: methodId,\r\n            arguments_kv: args,\r\n        };\r\n        return this.session.send(msg, { invocationId: id, serverId: serverId })\r\n            .then(function (m) { return _this.handleResultMessage(m); })\r\n            .catch(function (err) { return _this.handleInvocationError(err); });\r\n    };\r\n    ClientProtocol.prototype.drainSubscriptions = function () {\r\n        return this.streaming.drainSubscriptions();\r\n    };\r\n    ClientProtocol.prototype.handlePeerAdded = function (msg) {\r\n        var newPeerId = msg.new_peer_id;\r\n        var remoteId = msg.identity;\r\n        var isLocal = msg.meta ? msg.meta.local : true;\r\n        var pid = Number(remoteId.process);\r\n        var serverInfo = {\r\n            machine: remoteId.machine,\r\n            pid: isNaN(pid) ? remoteId.process : pid,\r\n            instance: remoteId.instance,\r\n            application: remoteId.application,\r\n            applicationName: remoteId.applicationName,\r\n            environment: remoteId.environment,\r\n            region: remoteId.region,\r\n            user: remoteId.user,\r\n            windowId: remoteId.windowId,\r\n            peerId: newPeerId,\r\n            api: remoteId.api,\r\n            isLocal: isLocal\r\n        };\r\n        this.repository.addServer(serverInfo, newPeerId);\r\n    };\r\n    ClientProtocol.prototype.handlePeerRemoved = function (msg) {\r\n        var removedPeerId = msg.removed_id;\r\n        var reason = msg.reason;\r\n        this.repository.removeServerById(removedPeerId, reason);\r\n    };\r\n    ClientProtocol.prototype.handleMethodsAddedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methods = msg.methods;\r\n        methods.forEach(function (method) {\r\n            _this.repository.addServerMethod(serverId, method);\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleMethodsRemovedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methodIdList = msg.methods;\r\n        var server = this.repository.getServerById(serverId);\r\n        var serverMethodKeys = Object.keys(server.methods);\r\n        serverMethodKeys.forEach(function (methodKey) {\r\n            var method = server.methods[methodKey];\r\n            if (methodIdList.indexOf(method.gatewayId) > -1) {\r\n                _this.repository.removeServerMethod(serverId, methodKey);\r\n            }\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleResultMessage = function (msg) {\r\n        var invocationId = msg._tag.invocationId;\r\n        var result = msg.result;\r\n        var serverId = msg._tag.serverId;\r\n        var server = this.repository.getServerById(serverId);\r\n        return {\r\n            invocationId: invocationId,\r\n            result: result,\r\n            instance: server.instance,\r\n            status: InvokeStatus.Success,\r\n            message: \"\"\r\n        };\r\n    };\r\n    ClientProtocol.prototype.handleInvocationError = function (msg) {\r\n        this.logger.debug(\"handle invocation error \" + JSON.stringify(msg));\r\n        if (\"_tag\" in msg) {\r\n            var invocationId = msg._tag.invocationId;\r\n            var serverId = msg._tag.serverId;\r\n            var server = this.repository.getServerById(serverId);\r\n            var message = msg.reason;\r\n            var context_1 = msg.context;\r\n            return {\r\n                invocationId: invocationId,\r\n                result: context_1,\r\n                instance: server.instance,\r\n                status: InvokeStatus.Error,\r\n                message: message\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                invocationId: \"\",\r\n                message: msg.message,\r\n                status: InvokeStatus.Error,\r\n                error: msg\r\n            };\r\n        }\r\n    };\r\n    return ClientProtocol;\r\n}());\n\nfunction gW3ProtocolFactory (instance, connection, clientRepository, serverRepository, libConfig, interop) {\r\n    var logger = libConfig.logger.subLogger(\"gw3-protocol\");\r\n    var resolveReadyPromise;\r\n    var readyPromise = new Promise(function (resolve) {\r\n        resolveReadyPromise = resolve;\r\n    });\r\n    var session = connection.domain(\"agm\", [\"subscribed\"]);\r\n    var server = new ServerProtocol(session, clientRepository, serverRepository, logger.subLogger(\"server\"));\r\n    var client = new ClientProtocol(session, clientRepository, logger.subLogger(\"client\"));\r\n    function handleReconnect() {\r\n        logger.info(\"reconnected - will replay registered methods and subscriptions\");\r\n        var existingSubscriptions = client.drainSubscriptions();\r\n        for (var _i = 0, existingSubscriptions_1 = existingSubscriptions; _i < existingSubscriptions_1.length; _i++) {\r\n            var sub = existingSubscriptions_1[_i];\r\n            var methodInfo = sub.method;\r\n            var params = Object.assign({}, sub.params);\r\n            logger.info(\"trying to re-subscribe to method \" + methodInfo.name);\r\n            interop.client.subscribe(methodInfo, params, undefined, undefined, sub);\r\n        }\r\n        var registeredMethods = serverRepository.getList();\r\n        serverRepository.reset();\r\n        for (var _a = 0, registeredMethods_1 = registeredMethods; _a < registeredMethods_1.length; _a++) {\r\n            var method = registeredMethods_1[_a];\r\n            var def = method.definition;\r\n            logger.info(\"re-publishing method \" + def.name);\r\n            if (method.stream) {\r\n                interop.server.createStream(def, method.streamCallbacks, undefined, undefined, method.stream);\r\n            }\r\n            else if (method.theFunction && method.theFunction.userCallback) {\r\n                interop.register(def, method.theFunction.userCallback);\r\n            }\r\n            else if (method.theFunction && method.theFunction.userCallbackAsync) {\r\n                interop.registerAsync(def, method.theFunction.userCallbackAsync);\r\n            }\r\n        }\r\n    }\r\n    function handleInitialJoin() {\r\n        if (resolveReadyPromise) {\r\n            resolveReadyPromise({\r\n                client: client,\r\n                server: server,\r\n            });\r\n            resolveReadyPromise = undefined;\r\n        }\r\n    }\r\n    session.onJoined(function (reconnect) {\r\n        clientRepository.addServer(instance, connection.peerId);\r\n        if (reconnect) {\r\n            handleReconnect();\r\n        }\r\n        else {\r\n            handleInitialJoin();\r\n        }\r\n    });\r\n    session.onLeft(function () {\r\n        clientRepository.reset();\r\n    });\r\n    session.join();\r\n    return readyPromise;\r\n}\n\nvar Interop = (function () {\r\n    function Interop(configuration) {\r\n        var _this = this;\r\n        if (typeof configuration === \"undefined\") {\r\n            throw new Error(\"configuration is required\");\r\n        }\r\n        if (typeof configuration.connection === \"undefined\") {\r\n            throw new Error(\"configuration.connections is required\");\r\n        }\r\n        var connection = configuration.connection;\r\n        if (typeof configuration.methodResponseTimeout !== \"number\") {\r\n            configuration.methodResponseTimeout = 30 * 1000;\r\n        }\r\n        if (typeof configuration.waitTimeoutMs !== \"number\") {\r\n            configuration.waitTimeoutMs = 30 * 1000;\r\n        }\r\n        this.unwrappedInstance = new InstanceWrapper(this, undefined, connection);\r\n        this.instance = this.unwrappedInstance.unwrap();\r\n        this.clientRepository = new ClientRepository(configuration.logger.subLogger(\"cRep\"), this);\r\n        this.serverRepository = new ServerRepository();\r\n        var protocolPromise;\r\n        if (connection.protocolVersion === 3) {\r\n            protocolPromise = gW3ProtocolFactory(this.instance, connection, this.clientRepository, this.serverRepository, configuration, this);\r\n        }\r\n        else {\r\n            throw new Error(\"protocol \" + connection.protocolVersion + \" not supported\");\r\n        }\r\n        this.readyPromise = protocolPromise.then(function (protocol) {\r\n            _this.protocol = protocol;\r\n            _this.client = new Client(_this.protocol, _this.clientRepository, _this.instance, configuration);\r\n            _this.server = new Server(_this.protocol, _this.serverRepository);\r\n            return _this;\r\n        });\r\n    }\r\n    Interop.prototype.ready = function () {\r\n        return this.readyPromise;\r\n    };\r\n    Interop.prototype.serverRemoved = function (callback) {\r\n        return this.client.serverRemoved(callback);\r\n    };\r\n    Interop.prototype.serverAdded = function (callback) {\r\n        return this.client.serverAdded(callback);\r\n    };\r\n    Interop.prototype.serverMethodRemoved = function (callback) {\r\n        return this.client.serverMethodRemoved(callback);\r\n    };\r\n    Interop.prototype.serverMethodAdded = function (callback) {\r\n        return this.client.serverMethodAdded(callback);\r\n    };\r\n    Interop.prototype.methodRemoved = function (callback) {\r\n        return this.client.methodRemoved(callback);\r\n    };\r\n    Interop.prototype.methodAdded = function (callback) {\r\n        return this.client.methodAdded(callback);\r\n    };\r\n    Interop.prototype.methodsForInstance = function (instance) {\r\n        return this.client.methodsForInstance(instance);\r\n    };\r\n    Interop.prototype.methods = function (methodFilter) {\r\n        return this.client.methods(methodFilter);\r\n    };\r\n    Interop.prototype.servers = function (methodFilter) {\r\n        return this.client.servers(methodFilter);\r\n    };\r\n    Interop.prototype.subscribe = function (method, options, successCallback, errorCallback) {\r\n        return this.client.subscribe(method, options, successCallback, errorCallback);\r\n    };\r\n    Interop.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {\r\n        return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);\r\n    };\r\n    Interop.prototype.unregister = function (methodFilter) {\r\n        return this.server.unregister(methodFilter);\r\n    };\r\n    Interop.prototype.registerAsync = function (methodDefinition, callback) {\r\n        return this.server.registerAsync(methodDefinition, callback);\r\n    };\r\n    Interop.prototype.register = function (methodDefinition, callback) {\r\n        return this.server.register(methodDefinition, callback);\r\n    };\r\n    Interop.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\r\n    };\r\n    Interop.prototype.waitForMethod = function (name) {\r\n        var pw = new PromiseWrapper();\r\n        var unsubscribe = this.client.methodAdded(function (m) {\r\n            if (m.name === name) {\r\n                unsubscribe();\r\n                pw.resolve(m);\r\n            }\r\n        });\r\n        return pw.promise;\r\n    };\r\n    return Interop;\r\n}());\n\nvar successMessages = [\"subscribed\", \"success\"];\r\nvar MessageBus = (function () {\r\n    function MessageBus(connection, logger) {\r\n        var _this = this;\r\n        this.publish = function (topic, data, options) {\r\n            var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n            var args = _this.removeEmptyValues({\r\n                type: \"publish\",\r\n                topic: topic,\r\n                data: data,\r\n                peer_id: _this.peerId,\r\n                routing_key: routingKey,\r\n                target_identity: target\r\n            });\r\n            _this.session.send(args);\r\n        };\r\n        this.subscribe = function (topic, callback, options) {\r\n            return new Promise(function (resolve, reject) {\r\n                var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n                var args = _this.removeEmptyValues({\r\n                    type: \"subscribe\",\r\n                    topic: topic,\r\n                    peer_id: _this.peerId,\r\n                    routing_key: routingKey,\r\n                    source: target\r\n                });\r\n                _this.session.send(args)\r\n                    .then(function (response) {\r\n                    var subscription_id = response.subscription_id;\r\n                    _this.subscriptions.push({ subscription_id: subscription_id, topic: topic, callback: callback, source: target });\r\n                    resolve({\r\n                        unsubscribe: function () {\r\n                            _this.session.send({ type: \"unsubscribe\", subscription_id: subscription_id, peer_id: _this.peerId });\r\n                            _this.subscriptions = _this.subscriptions.filter(function (s) { return s.subscription_id !== subscription_id; });\r\n                            return Promise.resolve();\r\n                        }\r\n                    });\r\n                })\r\n                    .catch(function (error) { return reject(error); });\r\n            });\r\n        };\r\n        this.watchOnEvent = function () {\r\n            _this.session.on(\"event\", function (args) {\r\n                var data = args.data, subscription_id = args.subscription_id;\r\n                var source = args[\"publisher-identity\"];\r\n                var subscription = _this.subscriptions.find(function (s) { return s.subscription_id === subscription_id; });\r\n                if (subscription) {\r\n                    if (!subscription.source) {\r\n                        subscription.callback(data, subscription.topic, source);\r\n                    }\r\n                    else {\r\n                        if (_this.keysMatch(subscription.source, source)) {\r\n                            subscription.callback(data, subscription.topic, source);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        this.connection = connection;\r\n        this.logger = logger;\r\n        this.peerId = connection.peerId;\r\n        this.subscriptions = [];\r\n        this.session = connection.domain(\"bus\", successMessages);\r\n        this.readyPromise = this.session.join();\r\n        this.readyPromise.then(function () {\r\n            _this.watchOnEvent();\r\n        });\r\n    }\r\n    MessageBus.prototype.ready = function () {\r\n        return this.readyPromise;\r\n    };\r\n    MessageBus.prototype.removeEmptyValues = function (obj) {\r\n        var cleaned = {};\r\n        Object.keys(obj).forEach(function (key) {\r\n            if (obj[key] !== undefined && obj[key] !== null) {\r\n                cleaned[key] = obj[key];\r\n            }\r\n        });\r\n        return cleaned;\r\n    };\r\n    MessageBus.prototype.keysMatch = function (obj1, obj2) {\r\n        var keysObj1 = Object.keys(obj1);\r\n        var allMatch = true;\r\n        keysObj1.forEach(function (key) {\r\n            if (obj1[key] !== obj2[key]) {\r\n                allMatch = false;\r\n            }\r\n        });\r\n        return allMatch;\r\n    };\r\n    return MessageBus;\r\n}());\n\nvar GlueCore = function (userConfig, ext) {\r\n    var gdVersion = Utils.getGDMajorVersion();\r\n    var glue42gd;\r\n    var preloadPromise = Promise.resolve();\r\n    if (gdVersion) {\r\n        if (gdVersion < 3) {\r\n            throw new Error(\"GD v2 is not supported. Use v4 of the API to run in that context.\");\r\n        }\r\n        else if (gdVersion >= 3) {\r\n            glue42gd = window.glue42gd;\r\n            preloadPromise = window.gdPreloadPromise || preloadPromise;\r\n        }\r\n    }\r\n    var glueInitTimer = timer(\"glue\");\r\n    userConfig = userConfig || {};\r\n    ext = ext || {};\r\n    var internalConfig = prepareConfig(userConfig, ext, glue42gd);\r\n    var _connection;\r\n    var _interop;\r\n    var _logger;\r\n    var _metrics;\r\n    var _contexts;\r\n    var _bus;\r\n    var _allowTrace;\r\n    var libs = {};\r\n    function registerLib(name, inner, t) {\r\n        _allowTrace = _logger.canPublish(\"trace\");\r\n        if (_allowTrace) {\r\n            _logger.trace(\"registering \" + name + \" module\");\r\n        }\r\n        var done = function () {\r\n            inner.initTime = t.stop();\r\n            inner.initEndTime = t.endTime;\r\n            inner.marks = t.marks;\r\n            if (_allowTrace) {\r\n                _logger.trace(name + \" is ready - \" + (t.endTime - t.startTime));\r\n            }\r\n        };\r\n        inner.initStartTime = t.startTime;\r\n        if (inner.ready) {\r\n            inner.ready().then(function () {\r\n                done();\r\n            });\r\n        }\r\n        else {\r\n            done();\r\n        }\r\n        if (!Array.isArray(name)) {\r\n            name = [name];\r\n        }\r\n        name.forEach(function (n) {\r\n            libs[n] = inner;\r\n            GlueCore[n] = inner;\r\n        });\r\n    }\r\n    function setupConnection() {\r\n        var initTimer = timer(\"connection\");\r\n        _connection = new Connection(internalConfig.connection, _logger.subLogger(\"connection\"));\r\n        var authPromise = Promise.resolve(internalConfig.auth);\r\n        if (internalConfig.connection && !internalConfig.auth) {\r\n            if (glue42gd) {\r\n                authPromise = glue42gd.getGWToken()\r\n                    .then(function (token) {\r\n                    return {\r\n                        gatewayToken: token\r\n                    };\r\n                });\r\n            }\r\n            else if (typeof window !== \"undefined\" && (window === null || window === void 0 ? void 0 : window.glue42electron)) {\r\n                if (typeof window.glue42electron.gwToken === \"string\") {\r\n                    authPromise = Promise.resolve({\r\n                        gatewayToken: window.glue42electron.gwToken\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                authPromise = Promise.reject(\"You need to provide auth information\");\r\n            }\r\n        }\r\n        return authPromise\r\n            .then(function (authConfig) {\r\n            initTimer.mark(\"auth-promise-resolved\");\r\n            var authRequest;\r\n            if (Object.prototype.toString.call(authConfig) === \"[object Object]\") {\r\n                authRequest = authConfig;\r\n            }\r\n            else {\r\n                throw new Error(\"Invalid auth object - \" + JSON.stringify(authConfig));\r\n            }\r\n            return _connection.login(authRequest);\r\n        })\r\n            .then(function () {\r\n            registerLib(\"connection\", _connection, initTimer);\r\n            return internalConfig;\r\n        })\r\n            .catch(function (e) {\r\n            if (_connection) {\r\n                _connection.logout();\r\n            }\r\n            throw e;\r\n        });\r\n    }\r\n    function setupLogger() {\r\n        var _a;\r\n        var initTimer = timer(\"logger\");\r\n        _logger = new Logger(\"\" + ((_a = internalConfig.connection.identity) === null || _a === void 0 ? void 0 : _a.application), undefined, internalConfig.customLogger);\r\n        _logger.consoleLevel(internalConfig.logger.console);\r\n        _logger.publishLevel(internalConfig.logger.publish);\r\n        if (_logger.canPublish(\"debug\")) {\r\n            _logger.debug(\"initializing glue...\");\r\n        }\r\n        registerLib(\"logger\", _logger, initTimer);\r\n        return Promise.resolve(undefined);\r\n    }\r\n    function setupMetrics() {\r\n        var _a, _b, _c, _d, _e;\r\n        var initTimer = timer(\"metrics\");\r\n        var config = internalConfig.metrics;\r\n        var metricsPublishingEnabledFunc = glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.getMetricsPublishingEnabled;\r\n        var identity = internalConfig.connection.identity;\r\n        var canUpdateMetric = metricsPublishingEnabledFunc ? metricsPublishingEnabledFunc : function () { return true; };\r\n        var disableAutoAppSystem = (_a = (typeof config !== \"boolean\" && config.disableAutoAppSystem)) !== null && _a !== void 0 ? _a : false;\r\n        _metrics = metrics({\r\n            connection: config ? _connection : undefined,\r\n            logger: _logger.subLogger(\"metrics\"),\r\n            canUpdateMetric: canUpdateMetric,\r\n            system: \"Glue42\",\r\n            service: (_c = (_b = identity === null || identity === void 0 ? void 0 : identity.service) !== null && _b !== void 0 ? _b : glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.applicationName) !== null && _c !== void 0 ? _c : internalConfig.application,\r\n            instance: (_e = (_d = identity === null || identity === void 0 ? void 0 : identity.instance) !== null && _d !== void 0 ? _d : identity === null || identity === void 0 ? void 0 : identity.windowId) !== null && _e !== void 0 ? _e : shortid(),\r\n            disableAutoAppSystem: disableAutoAppSystem,\r\n            pagePerformanceMetrics: typeof config !== \"boolean\" ? config === null || config === void 0 ? void 0 : config.pagePerformanceMetrics : undefined\r\n        });\r\n        registerLib(\"metrics\", _metrics, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n    function setupInterop() {\r\n        var initTimer = timer(\"interop\");\r\n        var agmConfig = {\r\n            connection: _connection,\r\n            logger: _logger.subLogger(\"interop\"),\r\n        };\r\n        _interop = new Interop(agmConfig);\r\n        Logger.Interop = _interop;\r\n        registerLib([\"interop\", \"agm\"], _interop, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n    function setupContexts() {\r\n        var hasActivities = (internalConfig.activities && _connection.protocolVersion === 3);\r\n        var needsContexts = internalConfig.contexts || hasActivities;\r\n        if (needsContexts) {\r\n            var initTimer = timer(\"contexts\");\r\n            _contexts = new ContextsModule({\r\n                connection: _connection,\r\n                logger: _logger.subLogger(\"contexts\")\r\n            });\r\n            registerLib(\"contexts\", _contexts, initTimer);\r\n            return _contexts;\r\n        }\r\n        else {\r\n            var replayer = _connection.replayer;\r\n            if (replayer) {\r\n                replayer.drain(ContextMessageReplaySpec.name);\r\n            }\r\n        }\r\n    }\r\n    function setupBus() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var initTimer;\r\n            return __generator(this, function (_a) {\r\n                if (!internalConfig.bus) {\r\n                    return [2, Promise.resolve()];\r\n                }\r\n                initTimer = timer(\"bus\");\r\n                _bus = new MessageBus(_connection, _logger.subLogger(\"bus\"));\r\n                registerLib(\"bus\", _bus, initTimer);\r\n                return [2, Promise.resolve()];\r\n            });\r\n        });\r\n    }\r\n    function setupExternalLibs(externalLibs) {\r\n        try {\r\n            externalLibs.forEach(function (lib) {\r\n                setupExternalLib(lib.name, lib.create);\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    function setupExternalLib(name, createCallback) {\r\n        var initTimer = timer(name);\r\n        var lib = createCallback(libs);\r\n        if (lib) {\r\n            registerLib(name, lib, initTimer);\r\n        }\r\n    }\r\n    function waitForLibs() {\r\n        var libsReadyPromises = Object.keys(libs).map(function (key) {\r\n            var lib = libs[key];\r\n            return lib.ready ?\r\n                lib.ready() : Promise.resolve();\r\n        });\r\n        return Promise.all(libsReadyPromises);\r\n    }\r\n    function constructGlueObject() {\r\n        var feedbackFunc = function (feedbackInfo) {\r\n            if (!_interop) {\r\n                return;\r\n            }\r\n            _interop.invoke(\"T42.ACS.Feedback\", feedbackInfo, \"best\");\r\n        };\r\n        var info = {\r\n            coreVersion: version,\r\n            version: internalConfig.version\r\n        };\r\n        glueInitTimer.stop();\r\n        var glue = {\r\n            feedback: feedbackFunc,\r\n            info: info,\r\n            logger: _logger,\r\n            interop: _interop,\r\n            agm: _interop,\r\n            connection: _connection,\r\n            metrics: _metrics,\r\n            contexts: _contexts,\r\n            bus: _bus,\r\n            version: internalConfig.version,\r\n            userConfig: userConfig,\r\n            done: function () {\r\n                _logger === null || _logger === void 0 ? void 0 : _logger.info(\"done called by user...\");\r\n                return _connection.logout();\r\n            }\r\n        };\r\n        glue.performance = {\r\n            get glueVer() {\r\n                return internalConfig.version;\r\n            },\r\n            get glueConfig() {\r\n                return JSON.stringify(userConfig);\r\n            },\r\n            get browser() {\r\n                return window.performance.timing.toJSON();\r\n            },\r\n            get memory() {\r\n                return window.performance.memory;\r\n            },\r\n            get initTimes() {\r\n                var all = getAllTimers();\r\n                return Object.keys(all).map(function (key) {\r\n                    var t = all[key];\r\n                    return {\r\n                        name: key,\r\n                        duration: t.endTime - t.startTime,\r\n                        marks: t.marks,\r\n                        startTime: t.startTime,\r\n                        endTime: t.endTime\r\n                    };\r\n                });\r\n            }\r\n        };\r\n        Object.keys(libs).forEach(function (key) {\r\n            var lib = libs[key];\r\n            glue[key] = lib;\r\n        });\r\n        glue.config = {};\r\n        Object.keys(internalConfig).forEach(function (k) {\r\n            glue.config[k] = internalConfig[k];\r\n        });\r\n        if (ext && ext.extOptions) {\r\n            Object.keys(ext.extOptions).forEach(function (k) {\r\n                glue.config[k] = ext === null || ext === void 0 ? void 0 : ext.extOptions[k];\r\n            });\r\n        }\r\n        if (ext === null || ext === void 0 ? void 0 : ext.enrichGlue) {\r\n            ext.enrichGlue(glue);\r\n        }\r\n        if (glue42gd && glue42gd.updatePerfData) {\r\n            glue42gd.updatePerfData(glue.performance);\r\n        }\r\n        if (glue.agm) {\r\n            var deprecatedDecorator = function (fn, wrong, proper) {\r\n                return function () {\r\n                    glue.logger.warn(\"glue.js - 'glue.agm.\" + wrong + \"' method is deprecated, use 'glue.interop.\" + proper + \"' instead.\");\r\n                    return fn.apply(glue.agm, arguments);\r\n                };\r\n            };\r\n            var agmAny = glue.agm;\r\n            agmAny.method_added = deprecatedDecorator(glue.agm.methodAdded, \"method_added\", \"methodAdded\");\r\n            agmAny.method_removed = deprecatedDecorator(glue.agm.methodRemoved, \"method_removed\", \"methodRemoved\");\r\n            agmAny.server_added = deprecatedDecorator(glue.agm.serverAdded, \"server_added\", \"serverAdded\");\r\n            agmAny.server_method_aded = deprecatedDecorator(glue.agm.serverMethodAdded, \"server_method_aded\", \"serverMethodAdded\");\r\n            agmAny.server_method_removed = deprecatedDecorator(glue.agm.serverMethodRemoved, \"server_method_removed\", \"serverMethodRemoved\");\r\n        }\r\n        return glue;\r\n    }\r\n    return preloadPromise\r\n        .then(setupLogger)\r\n        .then(setupConnection)\r\n        .then(function () { return Promise.all([setupMetrics(), setupInterop(), setupContexts(), setupBus()]); })\r\n        .then(function () { return _interop.readyPromise; })\r\n        .then(function () {\r\n        return setupExternalLibs(internalConfig.libs || []);\r\n    })\r\n        .then(waitForLibs)\r\n        .then(constructGlueObject)\r\n        .catch(function (err) {\r\n        return Promise.reject({\r\n            err: err,\r\n            libs: libs\r\n        });\r\n    });\r\n};\r\nif (typeof window !== \"undefined\") {\r\n    window.GlueCore = GlueCore;\r\n}\r\nGlueCore.version = version;\r\nGlueCore.default = GlueCore;\n\nexport default GlueCore;\n//# sourceMappingURL=core.es.js.map\n","import ActivityManager from \"../core/activityManager\";\n\n/**\n * Base class for activity entities with reference to the activity manager\n * @private\n */\nexport default class ActivityEntity {\n\n  public _manager: ActivityManager;\n  public _id: string;\n\n  constructor(id: string) {\n    this._id = id;\n  }\n\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Updates the properties of the current object using the properties of another object\n   * These two should have the same id.\n   */\n  public _update(other: ActivityEntity) {\n    if (other._id !== this._id) {\n      throw Error(\"Can not update from entity with different id.\");\n    }\n    this._updateCore(other);\n  }\n\n  public _updateCore(other: ActivityEntity) {\n    return;\n  }\n\n  public _beforeDelete(other: ActivityEntity) {\n    return;\n  }\n}\n","// some small useful functions (so we don't reference underscore or lodash)\n\nexport function isNumber(arg: any) {\n  return typeof arg === \"number\";\n}\n\nexport function isString(arg: any) {\n  return typeof arg === \"string\";\n}\n\nexport function isObject(arg: any) {\n  return typeof arg === \"object\" && arg !== null;\n}\n\nexport function isArray(arg: any) {\n  // TODO optimize\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return toString.call(arg) === \"[object Array]\";\n}\nexport function isUndefined(arg: any) {\n  return typeof arg === \"undefined\";\n}\n\nexport function isUndefinedOrNull(arg: any) {\n  return arg === null || typeof arg === \"undefined\";\n}\n\nexport function isNullOrWhiteSpace(str: string) {\n  return (typeof str !== \"string\" || !str || str.length === 0 || /^\\s*$/.test(str));\n}\n\nexport function isBoolean(obj: any) {\n  return obj === true || obj === false || toString.call(obj) === \"[object Boolean]\";\n}\n\n/**\n *  Checks if an object is empty (has no properties)\n * @private\n */\nexport function isEmpty(arg: any) {\n  for (const prop in arg) {\n    if (arg.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isFunction(arg: any) {\n  return !!(arg && arg.constructor && arg.call && arg.apply);\n}\n\nexport function some<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function first<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return array[index];\n    }\n  }\n  return undefined;\n}\n\nexport function ifNotUndefined<T>(what: T, doWithIt: (what: T) => void) {\n  if (typeof what !== \"undefined\") {\n    doWithIt(what);\n  }\n}\n\nexport function promisify(promise: Promise<any>, successCallback: () => void, errorCallback: () => void) {\n  \"use strict\";\n  if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\n    return promise;\n  }\n\n  if (typeof successCallback !== \"function\") {\n    successCallback = () => { return; };\n  } else if (typeof errorCallback !== \"function\") {\n    errorCallback = () => { return; };\n  }\n\n  promise.then(successCallback, errorCallback);\n}\n","import * as contracts from \"../contracts/contracts\";\nimport Activity from \"./activity\";\nimport ActivityEntity from \"./activityEntity\";\nimport WindowType from \"./windowType\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { WindowDefinition } from \"./windowDefinition\";\n\nimport { Glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\n/**\n * An activity type is a definition template for an activity, consisting of a collection of window types,\n * their layout and an initial activity context.\n *\n * @module activityType\n */\nexport default class ActivityType extends ActivityEntity {\n\n  public _name: string;\n  public _description: string;\n  public _ownerWindow: WindowType;\n  public _helperWindows: WindowType[];\n\n  constructor(name: string, ownerWindow: WindowType, helperWindows?: WindowType[], description?: string) {\n    super(name);\n    this._name = name;\n    this._description = description;\n    this._ownerWindow = ownerWindow;\n    this._helperWindows = helperWindows || [];\n  }\n\n  /**\n   * @var {string} name Name of the activity type\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * @var {string} description description for the activity type\n   */\n  public get description(): string {\n    return this._description;\n  }\n\n  /**\n   * A list of window types that should be created when initiating a new instance of that activity type\n   * @var {windowDefinition[]} helperWindows\n   */\n  public get helperWindows(): WindowType[] {\n    return this._helperWindows.map((hw) => this.covertToWindowDef(hw));\n  }\n\n  /**\n   * @var {windowDefinition} ownerWindow Returns the definition of the owner window for that activity type\n   */\n  public get ownerWindow(): WindowType {\n    return this.covertToWindowDef(this._ownerWindow);\n  }\n\n  /**\n   * Initiates a new activity of this type\n   *\n   * @function initiate\n   * @param {object} context The initial context to be used for the new activity\n   * @param callback\n   * @param configuration\n   * @returns {Promise<activity>}\n   */\n  public initiate(context: object, callback?: contracts.Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    return this._manager.initiate(this._name, context, callback, configuration);\n  }\n\n  public _updateCore(other: ActivityType) {\n    super._updateCore(other);\n    ifNotUndefined(other._description, (x) => this._description = x);\n    ifNotUndefined(other._ownerWindow, (x) => this._ownerWindow = x);\n    ifNotUndefined(other._helperWindows, (x) => this._helperWindows = x);\n  }\n\n  private covertToWindowDef(windowType: any): any {\n    // GD2 + old glue js backward compatible\n    return {\n      type: windowType?.id?.type,\n      name: windowType?.id?.name\n    };\n  }\n}\n","import ActivityEntity from \"./activityEntity\";\nimport ActivityWindow from \"./activityWindow\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport Activity from \"./activity\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window type is a definition of a window, typically configured in ACS.\n *\n * @module windowType\n */\nexport default class WindowType extends ActivityEntity {\n\n  public _name: string;\n  public _appByWindowTypeGetter: (name: string) => void;\n\n  constructor(name: string, appByWindowTypeGetter: (wt: string) => Glue42.AppManager.Application) {\n    super(name);\n    this._name = name;\n    this._appByWindowTypeGetter = appByWindowTypeGetter;\n  }\n\n  /**\n   * Name of the window type\n   * @var {string} name\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Returns the ACS configuration related to this window type (as application object from AppManager API)\n   * @returns {any}\n   */\n  public get config(): any {\n    return this._appByWindowTypeGetter(this._name);\n  }\n\n  /**\n   * @var {activityWindow[]} windows All windows from that type\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ type: this._name });\n  }\n\n  public create(activity: Activity, configuration: any): Promise<ActivityWindow> {\n    const definition: WindowDefinition = (Object as any).assign({ type: this.name, name: this.name, isIndependent: false }, configuration);\n    return this._manager.createWindow(activity, definition);\n  }\n}\n","import { ActivityStatus } from \"./activityStatus\";\n\nexport class EntityEvent<T> {\n    public entity: T;\n    public context: EntityEventContext;\n\n    constructor(entitiy: T, context: EntityEventContext) {\n        this.entity = entitiy;\n        this.context = context;\n    }\n}\n\nexport class EntityEventContext {\n    public type: string;\n\n    constructor(eventType: string) {\n        this.type = eventType;\n    }\n}\n\nexport class ActivityStatusChangeEventContext extends EntityEventContext {\n    public oldStatus: ActivityStatus;\n    public newStatus: ActivityStatus;\n\n    constructor(newStatus: ActivityStatus, oldStatus: ActivityStatus) {\n        super(EntityEventType.StatusChange);\n        this.newStatus = newStatus;\n        this.oldStatus = oldStatus;\n    }\n}\n\nexport class ActivityContextChangedEventContext extends EntityEventContext {\n    public context: object;\n    public updated: object;\n    public removed: string[];\n\n    constructor(context: string | object, updated: object, removed: string[]) {\n        super(EntityEventType.ActivityContextChange);\n        this.context = typeof context === \"string\" ? JSON.parse(context) : context;\n        this.updated = updated;\n        this.removed = removed;\n    }\n}\n\nexport class EntityEventType {\n    public static Added: string = \"added\";\n    public static Removed: string = \"removed\";\n    public static Updated: string = \"updated\";\n    public static Closed: string = \"closed\";\n    public static StatusChange: string = \"statusChange\";\n    public static ActivityContextChange: string = \"activityContextUpdate\";\n    public static ActivityWindowEvent: string = \"activityWindowEvent\";\n    // #deleteme TODO: these are not implemented in HC\n    public static ActivityWindowJoinedActivity: string = \"joined\";\n    public static ActivityWindowLeftActivity: string = \"left\";\n}\n\nexport class ActivityState {\n    public static Created: string = \"created\";\n    public static Started: string = \"started\";\n    public static Destroyed: string = \"destroyed\";\n}\n","import Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport * as util from \"../helpers/util\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { promisify } from \"../helpers/util\";\n\n// A helper class that provides lame activity AGM implementation\n// Can be initialized with or without activity - in case no activity (independent windows outside activity) only\n// subset of the methods work\nexport class ActivityAGM {\n    public static AGM: Glue42Core.AGM.API;\n\n    private _activity: Activity;\n\n    constructor(activity: Activity) {\n        this._activity = activity;\n    }\n\n    public register(definition: string | Glue42Core.AGM.MethodDefinition, handler: (args: object, caller: Glue42Core.AGM.Instance) => object) {\n        this._ensureHasAgm();\n        ActivityAGM.AGM.register(definition, handler);\n    }\n\n    public servers(): Glue42Core.AGM.Instance[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.servers()\n            return [];\n        }\n\n        return this._activity.windows.map(\n            (w: ActivityWindow) => {\n                return w.instance;\n            });\n    }\n\n    public methods(): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.methods()\n            return [];\n        }\n\n        const windows = this._activity.windows;\n        const methodNames: string[] = [];\n        const methods: Glue42Core.AGM.MethodDefinition[] = [];\n\n        // get all windows and their methods, then assemble distinct methods\n        windows.forEach((window) => {\n            const windowMethods = this.methodsForWindow(window);\n            windowMethods.forEach((currentWindowMethod) => {\n                if (methodNames.indexOf(currentWindowMethod.name) === -1) {\n                    methodNames.push(currentWindowMethod.name);\n                    methods.push(currentWindowMethod);\n                }\n            });\n        });\n\n        return methods;\n    }\n\n    public methodsForWindow(window: ActivityWindow): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n        // get instance and use agm to get methods for instance\n        if (!window.instance) {\n            return [];\n        }\n\n        return ActivityAGM.AGM.methodsForInstance(window.instance);\n    }\n\n    /** Possible invoke targets\n     *\n     * \"activity.all\" - [default]\n     * \"activity.best\"\n     * ActivityWindow\n     * [ActivityWindow] -\n     *\n     * classic AGM\n     * \"all\" - agm all\n     * \"best\" - agm best\n     * instance - agm\n     * [ instances ]\n     *\n     */\n    public invoke(\n        methodName: string,\n        arg: object,\n        target: string | Glue42Core.AGM.Instance | ActivityWindow | Glue42Core.AGM.Instance[] | ActivityWindow[],\n        options?: Glue42Core.AGM.InvokeOptions,\n        success?: () => void,\n        error?: () => void): Promise<object> {\n\n        this._ensureHasAgm();\n        const activityServers = this.servers();\n        let serversToInvokeAgainst: Glue42Core.AGM.Instance[] = [];\n\n        if (util.isUndefinedOrNull(target)) {\n            target = \"activity.all\";\n        }\n\n        if (util.isString(target)) {\n            if (target === \"activity.all\") {\n                serversToInvokeAgainst = activityServers;\n            } else if (target === \"activity.best\") {\n                const potentialTargets = activityServers.filter((server) => {\n                    const methods = ActivityAGM.AGM.methodsForInstance(server);\n                    return methods.filter((m) => {\n                        return m.name === methodName;\n                    }).length > 0;\n                });\n                if (potentialTargets.length > 0) {\n                    serversToInvokeAgainst = [potentialTargets[0]];\n                }\n            } else if (target === \"all\" || target === \"best\") {\n                return promisify(ActivityAGM.AGM.invoke(methodName, arg, target, options), success, error);\n            } else {\n                throw new Error(\"Invalid invoke target \" + target);\n            }\n        } else if (util.isArray(target)) {\n            // if the array is not empty\n            if ((target as any).length >= 0) {\n                const firstElem = (target as any)[0];\n                // check argument type\n                if (this._isInstance(firstElem)) {\n                    serversToInvokeAgainst = (target as Glue42Core.AGM.Instance[]).map((instance: Glue42Core.AGM.Instance) => instance);\n                } else if (this._isActivityWindow(firstElem)) {\n                    serversToInvokeAgainst = (target as ActivityWindow[]).map((win: ActivityWindow) => win.instance);\n                } else {\n                    throw new Error(\"Unknown target object\");\n                }\n            }\n        } else {\n            if (this._isInstance(target)) {\n                serversToInvokeAgainst = [target as Glue42Core.AGM.Instance];\n            } else if (this._isActivityWindow(target)) {\n                serversToInvokeAgainst = [(target as ActivityWindow).instance];\n            } else {\n                throw new Error(\"Unknown target object\");\n            }\n        }\n\n        throw new Error(\"Not implemented\");\n        // return promisify(ActivityAGM.AGM.invoke(methodName, arg, serversToInvokeAgainst, options), success, error);\n    }\n\n    public unregister(definition: string | Glue42Core.AGM.MethodDefinition) {\n        this._ensureHasAgm();\n        return ActivityAGM.AGM.unregister(definition);\n    }\n\n    public createStream(methodDefinition: string | Glue42Core.AGM.MethodDefinition,\n                        subscriptionAddedHandler: (request: Glue42Core.AGM.StreamSubscription) => void,\n                        subscriptionRemovedHandler: (request: Glue42Core.AGM.StreamSubscription) => void) {\n        this._ensureHasAgm();\n\n        ActivityAGM.AGM.createStream(methodDefinition, {\n            subscriptionAddedHandler,\n            subscriptionRemovedHandler,\n            subscriptionRequestHandler: undefined\n        });\n    }\n\n    public subscribe(methodDefinition: string | Glue42Core.AGM.MethodDefinition, parameters: object, target: string | Glue42Core.AGM.Instance | Glue42Core.AGM.Instance[]): Promise<Glue42Core.AGM.Subscription> {\n        this._ensureHasAgm();\n        // #deleteme TODO: check servers needed?\n        // const servers = this.servers();\n\n        return ActivityAGM.AGM.subscribe(methodDefinition, parameters);\n    }\n\n    public _ensureHasAgm() {\n        if (util.isUndefinedOrNull(ActivityAGM.AGM)) {\n            throw new Error(\"Agm should be configured to be used in activity\");\n        }\n    }\n\n    public _isInstance(obj: any) {\n        // lame check\n        return obj.application !== undefined;\n    }\n\n    public _isActivityWindow(obj: any) {\n        return obj.instance !== undefined;\n    }\n}\n","import { ActivityDescriptor } from \"./activityDescriptor\";\nimport ActivityManager from \"../core/activityManager\";\nimport Activity from \"./activity\";\n\nexport class AttachedActivityDescriptor implements ActivityDescriptor {\n  private _manager: ActivityManager;\n  private _state: ActivityDescriptor;\n  private _ownerActivityId: string;\n\n  constructor(\n    manager: ActivityManager,\n    ownerActivityId: string,\n    state: ActivityDescriptor) {\n    this._manager = manager;\n    this._ownerActivityId = ownerActivityId;\n    this._state = state;\n  }\n\n  public get ownerId() {\n    return this._state.ownerId;\n  }\n\n  public get windowIds() {\n    return this._state.windowIds;\n  }\n\n  public get frameColor() {\n    return this._state.frameColor;\n  }\n\n  public get context() {\n    return this._state.context;\n  }\n\n  public get tag() {\n    return this._state.tag;\n  }\n\n  public detach(descriptor?: ActivityDescriptor): Promise<Activity> {\n\n    descriptor = descriptor || {};\n\n    const merged: ActivityDescriptor = {};\n\n    Object.keys(this._state).forEach((prop) => {\n      merged[prop] = this._state[prop];\n    });\n\n    merged.context = descriptor.context || merged.context;\n    merged.frameColor = descriptor.frameColor || merged.frameColor;\n\n    return this._manager.detachActivities(this._ownerActivityId, merged);\n  }\n}\n","import * as util from \"../helpers/util\";\n\nconst nextTick = (cb: () => void) => {\n  setTimeout(cb, 0);\n};\n\n/**\n * Convert a Promise to node style callback\n * @private\n */\nexport function nodeify<T>(promise: Promise<T>, callback: any): Promise<T> {\n  if (!util.isFunction(callback)) {\n    return promise;\n  }\n\n  promise.then(\n    (resp) => {\n      nextTick( () => { // not sure if this is needed, promises should be already executed on the event pool\n        callback(null, resp);\n      });\n    },\n    (err) => {\n      nextTick(() => {\n        callback(err, null);\n      });\n    });\n}\n","import * as contracts from \"../contracts/contracts\";\nimport ActivityType from \"./activityType\";\nimport ActivityWindow from \"./activityWindow\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport ActivityEntity from \"./activityEntity\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport { ActivityAGM } from \"../core/activityAGM\";\nimport { CloneOptions } from \"./cloneOptions\";\nimport { AttachedActivityDescriptor } from \"./attachedActivityDescriptor\";\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ifNotUndefined } from \"../helpers/util\";\n\n/**\n * Activity is an instance of an activity type just like an object is an instance of a class\n * in class-based languages (and just like ‘John’ is an instance of a 'Person’).\n *\n * Activity is often used as a synonym for activity instance.\n *\n * Each activity instance has a single owner window and can optionally have one or more helper windows.\n *\n * @module activity\n */\nexport default class Activity extends ActivityEntity {\n\n  public _id: string;\n  public _actType: string;\n  public _status: ActivityStatus;\n  public _context: object;\n  public _ownerId: string;\n  public _agm: ActivityAGM;\n  public _attached: any;\n\n  constructor(\n    id: string,\n    actType: string,\n    status: ActivityStatus,\n    context: object,\n    ownerId: string) {\n    super(id);\n    this._id = id;\n    this._actType = actType;\n    this._status = status;\n    this._context = context;\n    this._ownerId = ownerId;\n    this._agm = new ActivityAGM(this);\n  }\n\n  /**\n   * Activity type\n   * @var {module:activityType} type\n   */\n  public get type(): ActivityType {\n    if (this._manager) {\n      return this._manager.getActivityType(this._actType);\n    }\n    return undefined;\n  }\n\n  /**\n   * Get current activity context. To update use updateContext , to replace setContext\n   * @var {object} context\n   */\n  public get context(): object {\n    return this._context;\n  }\n\n  /**\n   * Get activity status\n   * @var {activityStatus} status\n   */\n  public get status(): ActivityStatus {\n    return this._status;\n  }\n\n  /**\n   * The owner window\n   * @var {module:activityWindow} owner\n   */\n  public get owner(): ActivityWindow {\n    if (!this._ownerId) {\n      return null;\n    }\n    return this._manager.getWindows({ id: this._ownerId })[0];\n  }\n\n  /**\n   * All windows participating in the activity\n   * @var {module:activityWindow[]} windows\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ activityId: this._id });\n  }\n\n  /**\n   * @var {module:activityAGM} agm\n   */\n  public get agm(): ActivityAGM {\n    return this._agm;\n  }\n\n  /**\n   * Joins a specific window to the activity\n   *\n   * @private\n   * @function join\n   * @param window    The window to join\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public addWindow(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.addWindowToActivity(this, window, callback);\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string|windowDefinition} windowType The type of the window to be created\n   * @param callback\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.createWindow(this, windowType, callback);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @param callback\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: contracts.Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    return this._manager.createStackedWindows(this, windowTypes, timeout, callback);\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @private\n   * @param window\n   * @param callback\n   * @returns     Promise for ActivityWindow\n   */\n  public leave(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.leaveWindowFromActivity(this, window, callback);\n  }\n\n  /**\n   * Get all windows participating in the activity from a given type\n   *\n   * @param {string} windowType\n   * @returns {module:activityWindow[]}\n   */\n  public getWindowsByType(windowType: string): ActivityWindow[] {\n    const filter = { activityId: this._id, type: windowType };\n    return this._manager.getWindows(filter);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @param callback\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.setActivityContext(this, context, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @param callback\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.updateActivityContext(this, context, callback);\n  }\n\n  /**\n   * Subscribe for status change events\n   *\n   * @function onStatusChange\n   *\n   * @param {activityStatusChangeHandler} handler Handler function that will receive status notifications\n   */\n  public onStatusChange(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._manager.subscribeActivityEvents((a, ns, os) => {\n      if (a.id === this.id) {\n        handler(a, ns, os);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for window related events, like joined, removed from activity\n   *\n   * @function onWindowEvent\n   * @param {windowEventHandler} handler Handler function that will receive windows events\n   */\n  public onWindowEvent(handler: contracts.ActivityWindowEventHandler): () => void {\n    return this._manager.subscribeWindowEvents((a, w, e) => {\n      if (a.id === this.id) {\n        handler(a, w, e);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} handler Handler function that will receive context related events\n   */\n  public onContextChanged(handler: contracts.ContextUpdateHandler) {\n    this._manager.subscribeActivityContextChanged((act, context, updated, removed) => {\n      if (act.id === this.id) {\n        handler(context, updated, removed, act);\n      }\n    });\n\n    try {\n      // replay the context at the time of subscribing, swallow user exceptions\n      handler(this.context, this.context, [], this);\n    } catch (e) {\n      return;\n    }\n  }\n\n  /**\n   * Stops the activity\n   * @function stop\n   */\n  public stop() {\n    this._manager.stopActivity(this);\n  }\n\n  /**\n   * Clones the activity into a new one\n   * @function clone\n   * @param {CloneOptions} options\n   */\n  public clone(options: CloneOptions) {\n    return this._manager.clone(this, options);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._manager.attachActivities(activityId, this.id, tag);\n  }\n\n  public onActivityAttached(callback: (descriptor: AttachedActivityDescriptor) => void) {\n    this._manager.subscribeActivitiesAttached((newActId: string, oldActId: string, descriptor: AttachedActivityDescriptor) => {\n      if (newActId !== this._id) {\n        return;\n      }\n\n      callback(descriptor);\n    });\n  }\n\n  public onDetached(callback: (newAct: Activity, state: any) => void) {\n    this._manager.subscribeActivitiesDetached((newAct: Activity, originalActivity: Activity, state: any) => {\n      if (originalActivity.id !== this._id) {\n        return;\n      }\n\n      callback(newAct, state);\n    });\n  }\n\n  public _updateCore(other: Activity) {\n    super._updateCore(other);\n    ifNotUndefined(other._actType, (x) => this._actType = x);\n    ifNotUndefined(other._context, (x) => this._context = x);\n    ifNotUndefined(other._ownerId, (x) => this._ownerId = x);\n    if (other._status && (!this._status || (this._status.state !== other._status.state))) {\n      this._status = other._status;\n    }\n  }\n\n  public _updateDescriptors(allStates: any) {\n    this._attached = allStates.map((s: any) => {\n      return new AttachedActivityDescriptor(this._manager, this._id, s);\n    });\n  }\n\n  public get attached(): AttachedActivityDescriptor[] {\n    return this._attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n\n      let callbacksToWait = this.windows.length;\n      if (callbacksToWait === 0) {\n        resolve(this);\n      }\n\n      this.windows.forEach((w) => {\n        w.underlyingWindow.setFrameColor(color, () => {\n          callbacksToWait--;\n          if (callbacksToWait <= 0) {\n            resolve(this);\n          }\n        });\n      });\n\n      setTimeout(() => {\n\n        if (callbacksToWait > 0) {\n          reject(this.id + \" - timed out waiting for setFrameColor with\" + color);\n        }\n\n      }, 5000);\n\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public getFrameColor(): string {\n\n    if (!this.windows || this.windows.length === 0) {\n      return \"\";\n    }\n\n    return this.windows[0].underlyingWindow.frameColor;\n  }\n}\n","/* tslint:disable */\n\nimport * as util from \"./util\";\nimport {Glue42Core} from \"@glue42/core\";\n\nexport class LogLevel {\n  public static Trace: string = \"trace\";\n  public static Debug: string = \"debug\";\n  public static Info: string = \"info\";\n  public static Warn: string = \"warn\";\n  public static Error: string = \"error\";\n}\n\nexport class Logger {\n\n  public static Level: string = LogLevel.Info;\n  public static GlueLogger: Glue42Core.Logger.API;\n\n  private _glueLogger: Glue42Core.Logger.API;\n\n  public static GetNamed(name: string): Logger {\n    return new Logger(name);\n  }\n\n  public static Get(owner: Object): Logger {\n    return new Logger(Logger.GetTypeName(owner));\n  }\n\n  public _name: string;\n\n  constructor(name: string) {\n    this._name = name;\n    // we have a glue logger let's create a new logger for it\n    if (!util.isUndefinedOrNull(Logger.GlueLogger)) {\n      this._glueLogger = Logger.GlueLogger.subLogger(name);\n    }\n  }\n\n  public trace(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.trace(message);\n    } else {\n      if (Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Trace));\n      }\n    }\n  }\n\n  public debug(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.debug(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Debug));\n      }\n    }\n  }\n\n  public info(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.info(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public warn(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.warn(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info ||\n        Logger.Level === LogLevel.Warn) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public error(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.error(message);\n    } else {\n      console.error(this._getMessage(message, LogLevel.Error));\n      console.trace();\n    }\n  }\n\n  public _getMessage(message: string, level: string): string {\n    return \"[\" + level + \"] \" + this._name + \" - \" + message;\n  }\n\n  /**\n   * Returns the function name for a given object (same as constructor.name but cross-browser)\n   */\n  public static GetTypeName(object: object): string {\n    const funcNameRegex = /function (.{1,})\\(/;\n    const results = (funcNameRegex).exec(object.constructor.toString());\n    return (results && results.length > 1) ? results[1] : \"\";\n  }\n}\n","import * as contracts from \"../contracts/contracts\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\n\nimport WindowType from \"./windowType\";\nimport ActivityEntity from \"./activityEntity\";\nimport Activity from \"./activity\";\n\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { EntityEventType } from \"../contracts/entityEvent\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window participating in an activity\n *\n * @module activityWindow\n */\nexport default class ActivityWindow extends ActivityEntity {\n\n    private _logger: Logger = Logger.Get(\"window\");\n\n    private _type: string;\n    private _activityId: string;\n    private _name: string;\n    private _instance: Glue42Core.AGM.Instance;\n    private _isIndependent: boolean;\n    private _windowGetter: () => Glue42.Windows.GDWindow;\n    private _hcWindowId: string;\n\n    constructor(id: string, name: string, type: string, activityId: string, instance: Glue42Core.AGM.Instance, isIndependent: boolean, windowGetter: any,\n                hcWindowId: string) {\n        super(id);\n        this._type = type;\n        this._activityId = activityId;\n        this._name = name;\n        this._instance = instance;\n        this._isIndependent = isIndependent;\n        this._windowGetter = windowGetter;\n        this._hcWindowId = hcWindowId;\n    }\n\n    /**\n     * Return window's title\n     * @function getBounds\n     * @return {Promise<WindowBounds>}\n     */\n    public getBounds(): Promise<WindowBounds> {\n        return this._manager.getWindowBounds(this.id);\n    }\n\n    /**\n     * @var {string} name The window name\n     */\n    public get name(): string {\n        return this._name;\n    }\n\n    /**\n     * @var {bool} isIndependent True if this is an independent window\n     */\n    public get isIndependent(): boolean {\n        return this._isIndependent;\n    }\n\n    /**\n     * @var {module:windowType} type The window type\n     */\n    public get type(): WindowType {\n        if (this._manager) {\n            return this._manager.getWindowType(this._type);\n        }\n        return undefined;\n    }\n\n    /**\n     * @var {module:activity} activity The activity that the window is part of\n     */\n    public get activity(): Activity {\n        if (util.isUndefined(this._activityId)) {\n            return undefined;\n        }\n        return this._manager.getActivityById(this._activityId);\n    }\n\n    /**\n     * @var {bool} isOwner True if the window is the owner of the activity.\n     */\n    public get isOwner(): boolean {\n        const act = this.activity;\n        if (util.isUndefined(act)) {\n            return false;\n        }\n\n        return act.owner.id === this.id;\n    }\n\n    /**\n     * Sets window's visibility\n     *\n     * @function setVisible\n     * @param {boolean} isVisible\n     * @returns {Promise<module:activityWindow>}\n     */\n    public setVisible(isVisible: boolean, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowVisibility(this.id, isVisible);\n    }\n\n    /**\n     * Activate window\n     * @function activate\n     * @param {boolean} focus If true then activate window with focus otherwise activate window without focus\n     */\n    public activate(focus: boolean): Promise<ActivityWindow> {\n        return this._manager.activateWindow(this.id, focus);\n    }\n\n    /**\n     * Sets window's bounds\n     * @function setBounds\n     *\n     * @param {bounds} bounds The new bounds to be applied\n     * @returns  {Promise<module:activityWindow>}\n     */\n    public setBounds(bounds: WindowBounds, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowBounds(this.id, bounds, callback);\n    }\n\n    /**\n     * Closes the window\n     *\n     * @function close\n     * @returns {Promise}\n     */\n    public close(): Promise<any> {\n        return this._manager.closeWindow(this.id);\n    }\n\n    /**\n     * @var {agmInstance} instance The agm instance of that window. You can use this to invoke AGM methods against that window\n     */\n    public get instance(): Glue42Core.AGM.Instance {\n        return this._instance;\n    }\n\n    /**\n     * Returns the window as object from Windows API (glue.windows).\n     *\n     * @var {window} underlyingWindow\n     */\n    public get underlyingWindow(): any {\n        const window = this._windowGetter();\n        if (!window) {\n            // we don't have the window object any more, let's return as much as we can\n            return {\n                id: this._hcWindowId\n            };\n        }\n        return window;\n    }\n\n    public onActivityJoined(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowJoinedActivity, callback);\n    }\n\n    public onActivityRemoved(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowLeftActivity, callback);\n    }\n\n    public _updateCore(other: ActivityWindow) {\n        ifNotUndefined(other._activityId, (x) => this._activityId = x);\n        ifNotUndefined(other._isIndependent, (x) => this._isIndependent = x);\n        ifNotUndefined(other._hcWindowId, (x) => this._hcWindowId = x);\n        ifNotUndefined(other._type, (x) => this._type = x);\n        ifNotUndefined(other._name, (x) => this._name = x);\n\n        if (!util.isUndefinedOrNull(other._instance)) {\n            this._instance = other._instance;\n        }\n    }\n\n    public _subscribeForActivityWindowEvent(eventName: string, callback: (activity: Activity) => void) {\n        this._manager.subscribeWindowEvents((activity, window, event) => {\n            // ignore events not related to this window\n            if (window.id !== this.id) {\n                return;\n            }\n\n            if (event === eventName) {\n                callback(activity);\n            }\n        });\n    }\n\n    public _beforeDelete(other: ActivityWindow) {\n        this._hcWindowId = other._hcWindowId;\n    }\n}\n","/**\n * @typedef {Object} activityStatus Defines activity instance status\n * @property {string} state Current state\n * @property {string} message Message\n * @property {Date} time Time of the last status update\n */\nexport class ActivityStatus {\n  public state: string;\n  public message: string;\n  public time: Date;\n\n  constructor(state: string, message: string, time: Date) {\n    this.state = state;\n    this.message = message;\n    this.time = time;\n  }\n\n  public getState(): string {\n    return this.state;\n  }\n\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public getTime(): Date {\n    return this.time;\n  }\n}\n","import { AnnouncementInfo } from \"../contracts/announcementInfo\";\n\nimport { ActivityBridge } from \"./activityBridge\";\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport { EventHandlerCallback } from \"../contracts/contracts\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport {\n    ActivityContextChangedEventContext,\n    ActivityStatusChangeEventContext,\n    EntityEvent,\n    EntityEventContext,\n    EntityEventType,\n} from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport {\n    ActivityGwMessage,\n    ActivityTypeGwMessage,\n    ActivityTypeGwMessageEntity,\n    GwMessage,\n    PeerCreatedGwMessage,\n    PeerFactoryGwMessage,\n    PeerFactoryGwMessageEntity,\n    PeerRequestedGwMessage,\n} from \"./gw3BridgeMessages\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Glue42 } from \"../../../glue\";\n\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport { ActivityConfig } from \"../activityConfig\";\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { Glue42 as glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = glue42.Activities.OverrideTypeDefinition;\n\nconst gwMessageSuccess = \"success\";\nconst gwMmessageError = \"error\";\n\nconst gwMessageAddActivityTypes = \"add-types\";\nconst gwMmessageActivityTypesAdded = \"types-added\";\nconst gwMessageRemoveActivityTypes = \"remove-types\";\nconst gwMessageActivityTypesRemoved = \"types-removed\";\n\nconst gwMessageActivityCreated = \"created\";\nconst gwMessageActivityDestroyed = \"destroyed\";\nconst gwMessageActivityInitiated = \"initiated\";\nconst gwMmessageJoinActivity = \"join-activity\";\nconst gwMessageJoinedActivity = \"joined\";\nconst gwMessageActivityJoined = \"activity-joined\";\nconst gwMessageLeaveActivity = \"leave-activity\";\nconst gwMessageActivityLeft = \"left\";\nconst gwNmessageMergeActivities = \"merge\";\nconst gwMessageSplitActivities = \"split\";\nconst gwMessageChildrenChanged = \"children-changed\";\nconst gwMessageOwnerChanged = \"owner-changed\";\n\nconst gwMessageAddPeerFactories = \"add-peer-factories\";\nconst gwMessagePeerFactoriesAdded = \"peer-factories-added\";\nconst gwMessageRemovePeerFactories = \"remove-peer-factories\";\nconst gwMessagePeerFactoriesRemoved = \"peer-factories-removed\";\n\nconst gwMessageCreateActivity = \"create\";\nconst gwMessageCreatePeer = \"create-peer\";\nconst gwMessagePeerRequested = \"peer-requested\";\nconst gwMessageReady = \"ready\";\nconst gwMessagePeerCreated = \"peer-created\";\n\nconst gwMessageDestroyActivity = \"destroy\";\nconst gwMessageDisposePeer = \"dispose-peer\";\nconst gwMessageDestroyPeer = \"destroy-peer\";\n\ndeclare let window: any;\ndeclare let process: any;\n\nexport default class GW3Bridge implements ActivityBridge {\n\n    private static activityTypeGwMessageEntityToActivityType(\n        entity: ActivityTypeGwMessageEntity,\n        description: string): ActivityType {\n\n        const nameToWindowType =\n            (windowName: any) =>\n                new WindowType(\n                    windowName,\n                    undefined);\n\n        return new ActivityType(\n            entity.name,\n            entity.owner_type && nameToWindowType(entity.owner_type),\n            entity.helper_types && entity.helper_types.map(nameToWindowType),\n            description);\n    }\n\n    private static peerFactoryGwMessageEntityToWindowType(entity: PeerFactoryGwMessageEntity): WindowType {\n        return new WindowType(\n            entity.peer_type,\n      /* #deleteme TODO: review - appmanager configuration? */(_) => undefined);\n    }\n\n    private static activityGwMessageToActivity(msg: ActivityGwMessage, status: ActivityStatus): Activity {\n        const ownerId = msg.owner !== undefined ? msg.owner.peer_id : msg.owner_id;\n        return new Activity(\n            msg.activity_id,\n            msg.activity_type,\n            status,\n            msg.context_snapshot,\n            ownerId);\n    }\n\n    private static activityToActivityStatusChangeEvent(act: Activity) {\n        return new EntityEvent<Activity>(act, new ActivityStatusChangeEventContext(act.status, undefined));\n    }\n\n    private _connection: Glue42.Connection.API;\n    private _logger: any;\n    private _contexts: Glue42.Contexts.API;\n    private _windows: Glue42.Windows.API;\n\n    private _gw3Session: Glue42Core.Connection.GW3DomainSession;\n\n    // callbacks\n\n    private _activityChangeCallbacks: Array<EventHandlerCallback<EntityEvent<Activity>>> = [];\n    private _activityTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityType>>> = [];\n    private _activityWindowChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityWindow>>> = [];\n    private _windowTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<WindowType>>> = [];\n\n    // state tracking\n    private _peerIdAndFactoryIdToPeerType: any = {};\n    private _peerFactoriesRegisteredByUs: { [index: string]: WindowFactory } = {};\n    private _gw3Subscriptions: any[] = [];\n    private _contextSubscriptions: any = {};\n    private _activityTypesInitiatedFromMe: any = {};\n\n    private _sessionJoinedPromise: Promise<GW3Bridge>;\n    private _sessionJoinedPromiseResolve: (bridge: GW3Bridge) => void;\n    private _activityJoinedPromise: Promise<object>;\n    private _activityJoinedPromiseResolve: (obj: object) => void;\n    private _config: ActivityConfig;\n\n    constructor(config: ActivityConfig) {\n        this._config = config;\n        this._connection = config.connection;\n        this._logger = config.logger;\n        this._contexts = config.contexts;\n        this._windows = config.windows;\n\n        this._sessionJoinedPromise = new Promise<GW3Bridge>((resolve /*, reject */) => {\n            this._sessionJoinedPromiseResolve = resolve;\n        });\n\n        this._activityJoinedPromise = new Promise<object>((resolve /*, reject */) => {\n            this._activityJoinedPromiseResolve = resolve;\n        });\n\n        if (!this._config.activityId) {\n            this._activityJoinedPromiseResolve({});\n        }\n\n        this._gw3Session = this._connection.domain(\n            \"activity\",\n            [\"joined\", \"initiated\", \"peer-created\", \"token\"]);\n\n        if (typeof window !== \"undefined\") {\n            const glue42gd = (window as any).glue42gd;\n            // G4E-1343\n            if (glue42gd && typeof glue42gd.addRefreshHandler === \"function\") {\n                glue42gd.addRefreshHandler((success: any, error: any) => {\n                    this._gw3Session\n                        .send(\n                            {\n                                type: \"reload\"\n                            })\n                        .then(\n                            (msg: any) => {\n                                if (!msg.token) {\n                                    error(\"Expected gateway token for refreshing.\");\n                                    return;\n                                }\n                                try {\n                                    glue42gd.setGWToken(msg.token as string);\n                                } catch (e) {\n                                    error(e.message || e);\n                                    return;\n                                }\n                                success();\n                            },\n                            error);\n                });\n            }\n        }\n    }\n\n    public get bridgeType(): \"GW3\" {\n        return \"GW3\";\n    }\n\n    public init() {\n        // activity types\n        this.forwardActivityTypeMessagesToStatusEventHandlers();\n\n        // activities\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityCreated,\n            this.handleActivityCreatedMessage);\n\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityDestroyed,\n            this.handleActivityDestroyedMessage);\n\n        this.forwardActivityMessagesToStatusEventHandlers();\n\n        this.forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers();\n\n        // window types / peer factories\n\n        // NB: this forward must happen before the handlePeerFactoriesRemoved subscription\n        // since the latter clears state which is used by peerFactoryIdAndOwnerIdToWindowType\n        this.forwardPeerFactoryMessagesToStatusEventHandlers();\n\n        this.forwardPeerFactoryMessagesToPeerFactoryRequests();\n\n        this.subscribe(\n            gwMessagePeerFactoriesAdded,\n            this.handlePeerFactoriesAdded);\n\n        this.subscribe(\n            gwMessagePeerFactoriesRemoved,\n            this.handlePeerFactoriesRemoved);\n\n        // activity windows\n\n        this.forwardActivityWindowMessagesToEventHandlers();\n        //\n\n        this.subscribe(\n            gwMessageDisposePeer,\n      /*(msg)*/() => {\n                if (this._config.disposeRequestHandling === \"dispose\") {\n                    this.dispose();\n                    return;\n                }\n                if (this._config.disposeRequestHandling === \"exit\") {\n                    if (this._windows && typeof this._windows.my() !== \"undefined\") {\n                        this._windows.my().close();\n                        return;\n                    }\n                    if (typeof window !== \"undefined\" && typeof (window as any).close === \"function\") {\n                        window.close();\n                        return;\n                    }\n                    if (typeof process !== \"undefined\" && typeof (process as any).exit === \"function\") {\n                        process.exit();\n                        return;\n                    }\n                }\n            });\n\n        // start domain join handshake\n        this._gw3Session.onJoined(() => {\n\n            if (this._config.mode === \"trackMyOnly\" ||\n                this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                this._sessionJoinedPromiseResolve(this);\n            } else {\n                this._gw3Session\n                    .send(\n                        {\n                            type: \"subscribe\",\n                            activity_types:\n                                (this._config.mode === \"trackAll\" ? [] :\n                                    this._config.mode === \"trackTypes\" ? this._config.typesToTrack : [])\n                        })\n                    .then(() => {\n                        this._sessionJoinedPromiseResolve(this);\n                    });\n            }\n        });\n        this._gw3Session.join();\n    }\n\n    public dispose() {\n        this._gw3Subscriptions.forEach((sub) => sub && this._connection.off(sub));\n        this._gw3Subscriptions.length = 0;\n    }\n\n    // ActivityBridge interface\n\n    public ready(): Promise<object> {\n        return Promise.all([this._sessionJoinedPromise, this._activityJoinedPromise]);\n    }\n\n    public initReady(): Promise<ActivityBridge> {\n        return this._sessionJoinedPromise;\n    }\n\n    public onActivityTypeStatusChange(callback: EventHandlerCallback<EntityEvent<ActivityType>>) {\n        this._activityTypeStatusChangeCallbacks.push(callback);\n    }\n\n    public registerActivityType(\n        activityTypeName: string,\n        ownerWindow: WindowDefinition,\n        helperWindows?: WindowDefinition[],\n        config?: any,\n        description?: string): Promise<ActivityType> {\n\n        const entity: ActivityTypeGwMessageEntity = {};\n        entity.name = activityTypeName;\n        const toActivityPeerConfig = (windowDefinition: WindowDefinition) => ({ type: windowDefinition.type, name: windowDefinition.name, configuration: windowDefinition });\n\n        entity.owner_type = toActivityPeerConfig(ownerWindow);\n        entity.helper_types = helperWindows.map(toActivityPeerConfig);\n\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageAddActivityTypes,\n                    types: [entity]\n                })\n            .then(() => {\n                const activityType = GW3Bridge.activityTypeGwMessageEntityToActivityType(entity, description);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddActivityTypes);\n                return activityType;\n            });\n    }\n\n    public unregisterActivityType(activityTypeName: string): Promise<void> {\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageRemoveActivityTypes,\n                    types: [activityTypeName]\n                })\n            .then(() => {\n                const activityType = new ActivityType(activityTypeName, undefined, undefined, undefined);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Removed)),\n                    gwMessageAddActivityTypes);\n            });\n    }\n\n    public onWindowTypeStatusChange(callback: EventHandlerCallback<EntityEvent<WindowType>>): void {\n        this._windowTypeStatusChangeCallbacks.push(callback);\n    }\n\n    // NB: in GW3, peer factories have ids separate from the ids of the peers they create\n    // in this implementation we keep the two equal for simplicity\n    // NB: we assume only one peer will register a peer factory for a given type; otherwise the\n    // add/remove window types event logic will get messy\n    public registerWindowFactory(\n        windowType: string,\n        factory: WindowFactory,\n        parameters?: any): Promise<void> {\n        if (this._peerFactoriesRegisteredByUs[windowType]) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} already registered.`));\n        }\n\n        this._peerFactoriesRegisteredByUs[windowType] = factory;\n\n        // #deleteme TODO: review success/failure code paths\n        // #deleteme TODO: review - should we create the window type here?\n        const entity = {\n            id: windowType,\n            peer_type: windowType,\n            configuration: parameters\n        };\n        return this._gw3Session.send({\n            type: gwMessageAddPeerFactories,\n            factories: [entity]\n        })\n            .then(() => {\n                this.invokeCallbacks(\n                    this._windowTypeStatusChangeCallbacks,\n                    new EntityEvent(\n                        GW3Bridge.peerFactoryGwMessageEntityToWindowType(entity),\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddPeerFactories);\n            })\n            .catch(() => {\n                delete this._peerFactoriesRegisteredByUs[windowType];\n            });\n    }\n\n    public unregisterWindowFactory(windowType: string): Promise<void> {\n        const factory = this._peerFactoriesRegisteredByUs[windowType];\n        if (!factory) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} not registered.`));\n        }\n\n        delete this._peerFactoriesRegisteredByUs[windowType];\n\n        return this._gw3Session.send({\n            type: gwMessageRemovePeerFactories,\n            factory_ids: [windowType]\n        }).then(() => {\n            this.invokeCallbacks(\n                this._windowTypeStatusChangeCallbacks,\n                new EntityEvent(\n                    new WindowType(windowType, undefined),\n                    new EntityEventContext(EntityEventType.Removed)),\n                gwMessageAddPeerFactories);\n        });\n    }\n\n    public onActivityStatusChange(callback: EventHandlerCallback<EntityEvent<Activity>>) {\n        this._activityChangeCallbacks.push(callback);\n    }\n\n    public initiateActivity(activityType: string, context?: object, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<string> {\n        const initiateMsg: any = {\n            type: gwMessageCreateActivity,\n            activity_type: activityType,\n            initial_context: context,\n        };\n\n        if (this.isOverrideTypeDefinition(configuration)) {\n            initiateMsg.types_override = {\n                owner_type: { type: configuration.owner.type, name: configuration.owner.name, configuration: configuration.owner },\n                helper_types: configuration.helpers && configuration.helpers.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }))\n            };\n        } else {\n            initiateMsg.configuration = configuration && configuration.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }));\n        }\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            initiateMsg,\n            gwMessageActivityInitiated,\n            (msg, requestId) => msg.request_id === requestId,\n            gwMessageActivityCreated,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            gwMessageActivityDestroyed,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            (msg) => msg.activity_id,\n            null).then((id) => {\n                if (this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                    if (!this._activityTypesInitiatedFromMe[activityType]) {\n                        this._activityTypesInitiatedFromMe[activityType] = true;\n\n                        return this._gw3Session\n                            .send(\n                                {\n                                    type: \"subscribe\",\n                                    activity_types: [activityType]\n                                })\n                            .then(() => {\n                                return id;\n                            });\n                    }\n                }\n                return id;\n            });\n    }\n\n    public stopActivity(activity: Activity): Promise<boolean> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyActivity,\n            activity_id: activity.id,\n            reason_uri: \"com.tick42.glue.activity.constants.destroyReason.general\",\n            reason: \"Destroying activity\"\n        }).then((_) => true);\n    }\n\n    public updateActivityContext(activity: Activity, context: any, fullReplace: boolean, removedKeys?: string[]): Promise<void> {\n        if (fullReplace) {\n            // this will currently fail on GW3\n            return this._contexts.set(activity.id, context);\n        } else {\n            removedKeys = removedKeys || [];\n            for (const x of removedKeys) {\n                context[x] = null;\n            }\n            return this._contexts.update(activity.id, context);\n        }\n    }\n\n    public announceWindow(windowType?: string, activityWindowId?: string) {\n        // in the GW3 case we are only joined to an activity after we announce ourselves\n        // so all announcement calls should go in 'registerWindow', not here\n        // (registerWindow registers a window that's not part of an activity, at least yet)\n        throw new Error(\"Invalid operation 'announceWindow' for GW3 protocol\");\n    }\n\n    public registerWindow(type: string, name: string, independent: boolean): Promise<string> {\n\n        let shouldSendReady = typeof this._connection.gatewayToken !== \"undefined\";\n        const peerId = this._connection.peerId;\n\n        // if running in GD3 (glue42gd is there) we should send ready only if we have the activityInfo object in glue\n        if (typeof window !== \"undefined\") {\n            const glue42gd = window.glue42gd;\n            if (glue42gd) {\n                shouldSendReady = typeof glue42gd.activityInfo !== \"undefined\";\n            }\n        }\n\n        if (shouldSendReady) {\n            this._gw3Session.send({\n                type: gwMessageReady,\n            });\n        }\n\n        this.invokeCallbacks(\n            this._activityWindowChangeCallbacks,\n            new EntityEvent<ActivityWindow>(\n                new ActivityWindow(peerId, name, type, undefined, this.getAgmInstance(peerId), independent, this.generateWindowGetter(peerId), undefined),\n                new EntityEventContext(EntityEventType.Added)),\n            \"register window\");\n\n        return Promise.resolve(peerId);\n    }\n\n    public onActivityWindowChange(callback: EventHandlerCallback<EntityEvent<ActivityWindow>>) {\n        this._activityWindowChangeCallbacks.push(callback);\n    }\n\n    public createWindow(activityId: string, windowDefinition: WindowDefinition): Promise<string> {\n\n        // if the user hasn't provided a layout option but has some of left,top,width,height\n        // insert a layout\n        if (!windowDefinition.layout) {\n            if (windowDefinition.left || windowDefinition.width || windowDefinition.height || windowDefinition.top) {\n                windowDefinition.layout = {\n                    mode: \"pixels\",\n                    cellSize: 1,\n                };\n            }\n        }\n\n        const joinPeer = (id: string) => {\n            if (!activityId) {\n                return;\n            }\n            return this.joinActivity(activityId, id, windowDefinition.name)\n                .then(() => {\n                    return id;\n                });\n        };\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            {\n                type: gwMessageCreatePeer,\n                peer_type: windowDefinition.type,\n                peer_name: windowDefinition.name || windowDefinition.type,\n                configuration: windowDefinition,\n                activity_id: activityId,\n            },\n            undefined,\n            undefined,\n            gwMessagePeerCreated,\n            (msg, requestId) => msg.request_id === requestId,\n            undefined,\n            undefined,\n            (msg) => msg.created_id,\n            joinPeer)\n            .then(joinPeer);\n    }\n\n    public closeWindow(id: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyPeer,\n            destroy_peer_id: id\n        }).then((_) => undefined);\n    }\n\n    public getAnnouncementInfo(): AnnouncementInfo {\n        let activityId = this._config.activityId || (this._config.announcementInfo && this._config.announcementInfo.activityId);\n        let activityWindowType = (this._config.announcementInfo && this._config.announcementInfo.activityWindowType);\n        let activityWindowIndependent = (this._config.announcementInfo && this._config.announcementInfo.activityWindowIndependent);\n        let activityWindowName = (this._config.announcementInfo && this._config.announcementInfo.activityWindowName);\n\n        if (typeof window !== \"undefined\" &&\n            typeof window.location !== \"undefined\" &&\n            window.location.search &&\n            typeof URLSearchParams === \"function\") {\n            const searchParams = new URLSearchParams(location.search.slice(1));\n            activityWindowType = activityWindowType || searchParams.get(\"t42PeerType\");\n            activityWindowType = activityWindowType || searchParams.get(\"t42ActivityWindowType\");\n            if (typeof activityWindowIndependent === \"undefined\") {\n                activityWindowIndependent = searchParams.get(\"t42ActivityWindowIndependent\");\n            }\n            activityWindowName = activityWindowName || searchParams.get(\"t42ActivityWindowName\");\n            activityId = activityId || searchParams.get(\"t42ActivityId\");\n        }\n\n        activityWindowType = activityWindowType || \"unknown\";\n        activityWindowIndependent = activityWindowIndependent || false;\n        activityWindowName = activityWindowName || this._connection.peerId;\n\n        return {\n            activityWindowId: undefined, // not member of activity from the get go\n            activityId,\n            activityWindowType,\n            activityWindowIndependent,\n            activityWindowName,\n        };\n    }\n\n    public joinActivity(activityId: string, windowId: string, name?: string): Promise<void> {\n        const maybeName = (name && { name }) || {};\n        return this._gw3Session.send({\n            type: gwMmessageJoinActivity,\n            target_id: windowId,\n            activity_id: activityId,\n            ...maybeName\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, activityId, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                \"activity joined - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity joined - Activity\");\n        });\n    }\n\n    public leaveActivity(activityId: string, windowId: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageLeaveActivity,\n            target_id: windowId,\n            activity_id: activityId\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, null, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                \"activity left - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity left - Activity\");\n        });\n    }\n\n    // purposefully returning empty arrays\n    public getActivityTypes(): Promise<ActivityType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getWindowTypes(): Promise<WindowType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivities(): Promise<Activity[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivityWindows(): Promise<ActivityWindow[]> {\n        return Promise.resolve([]);\n    }\n\n    // N/A\n\n    // ignore for now\n\n    // POSTPONED\n    public createStackedWindows(id: string, windowDefinitions: WindowDefinition[], timeout: number): Promise<string[]> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public getWindowBounds(id: string): Promise<WindowBounds> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowBounds(id: string, bounds: WindowBounds): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public activateWindow(id: string, focus: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowVisibility(id: string, visible: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public cloneActivity(id: string, cloneOptions: CloneOptions): Promise<string> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public attachActivities(from: string, to: string, tag: object): Promise<any> {\n        return this._gw3Session.send({\n            type: gwNmessageMergeActivities,\n            into: to,\n            merge: from\n        });\n    }\n\n    // POSTPONED\n    public detachActivities(activityId: string, newActivityInfo: ActivityDescriptor): Promise<string> {\n        return this._gw3Session.send({\n            type: gwMessageSplitActivities,\n            from: activityId,\n            // split: from\n        }).then(() => \"\");\n    }\n\n    // POSTPONED\n    public onActivitiesAttached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public onActivitiesDetached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    public onActivityAttachedDescriptorsRefreshed(callback: (info: any) => void): void {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public getAttachedDescriptors(): Promise<any[]> {\n        return Promise.resolve([]);\n    }\n\n    // helpers\n\n    // Protocol handling\n\n    private getRandomRequestId() {\n        return this._connection.peerId + \":\" + Math.floor(Math.random() * 1e9) + \"\";\n    }\n\n    private forwardAddedAndRemovedMessagesToEventHandler<TMessage, TEntity>(\n        addedMessageType: string,\n        removedMessageType: string,\n        mapper: (msg: TMessage, isAdded: boolean) => TEntity[],\n        handlers: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n\n        const getGetEntityEvent = (isAdded: boolean) => (entity: any) => new EntityEvent<TEntity>(\n            entity,\n            new EntityEventContext(\n                isAdded ?\n                    EntityEventType.Added :\n                    EntityEventType.Removed));\n\n        let sub1;\n        let sub2;\n\n        sub1 = addedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            addedMessageType,\n            (msg) => mapper(msg, true),\n            getGetEntityEvent(true),\n            handlers);\n\n        sub2 = removedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            removedMessageType,\n            (msg) => mapper(msg, false),\n            getGetEntityEvent(false),\n            handlers);\n\n        return [sub1, sub2].filter((x) => x);\n    }\n\n    private forwardMessageToEventHandler<TMessage, TEntity>(\n        messageType: string,\n        mapper: (msg: TMessage) => TEntity[],\n        getEntityEvent: (entity: TEntity, msg: TMessage) => EntityEvent<TEntity>,\n        handler: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n        return this.subscribe(\n            messageType,\n            (msg: TMessage) => {\n                mapper(msg)\n                    .forEach((ent: any) =>\n                        handler.forEach((h) => h(getEntityEvent(ent, msg))));\n            });\n    }\n\n    private sendCreateAndMapResultingMessagesToPromise<TCreatedMessage extends GwMessage, TPromiseType>(\n        msg: any,\n        initiatedMessageType: string,\n        initiatedMessageFilter: (msg: any, requestId: string) => boolean,\n        createdMessageType: string,\n        createdMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        cancelledMessageType: string,\n        cancelledMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        createdMessageToPromiseResolution: (TCreatedMessage: any) => TPromiseType,\n        listenForRecreates: (result: TPromiseType) => void): Promise<TPromiseType> {\n\n        const reqId = this.getRandomRequestId();\n\n        let resolveCreatedPromise: (arg: any) => void;\n        let rejectCreatedPromise: (arg: any) => void;\n        const createdPromise = new Promise<TPromiseType>((resolve, reject) => {\n            resolveCreatedPromise = resolve;\n            rejectCreatedPromise = reject;\n        });\n\n        let initiatedMessageAck: any = null;\n\n        let initiatedSubscription: any;\n        let createdSubscription: any;\n        let cancelledSubscription: any;\n        let errorSubscription: any;\n\n        const dropSubscriptions = () => {\n            this.dropSubscription(initiatedSubscription);\n            if (!listenForRecreates) {\n                this.dropSubscription(createdSubscription);\n            }\n            this.dropSubscription(cancelledSubscription);\n            this.dropSubscription(errorSubscription);\n        };\n\n        initiatedSubscription = initiatedMessageType &&\n            this.subscribe(\n                initiatedMessageType,\n                (msg4: any) => {\n                    if (!initiatedMessageFilter(msg4, reqId)) {\n                        return;\n                    }\n                    initiatedMessageAck = msg4;\n                    this.dropSubscription(initiatedSubscription);\n                });\n\n        let recreated = false;\n        createdSubscription =\n            this.subscribe(\n                createdMessageType,\n                (msg1: TCreatedMessage) => {\n                    if (!createdMessageFilter(msg1, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    if (recreated) {\n                        if (listenForRecreates) {\n                            listenForRecreates(createdMessageToPromiseResolution(msg1));\n                        }\n                    } else {\n                        recreated = true;\n                        resolveCreatedPromise(createdMessageToPromiseResolution(msg1));\n                    }\n                });\n        cancelledSubscription = cancelledMessageType &&\n            this.subscribe(\n                cancelledMessageType,\n                (msg2: any) => {\n                    if (!cancelledMessageFilter(msg2, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg2);\n                });\n        errorSubscription = cancelledMessageType &&\n            this.subscribe(\n                gwMmessageError,\n                (msg3: any) => {\n                    if (msg3.request_id !== reqId) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg3);\n                });\n\n        msg.request_id = reqId;\n\n        const toReturn = this._gw3Session\n            .send(msg)\n            .then(() => {\n                return createdPromise;\n            });\n        toReturn.then(dropSubscriptions, dropSubscriptions);\n        return toReturn;\n    }\n\n    // Entity Mapping\n\n    private peerFactoryIdAndOwnerIdToWindowType(factoryId: string, ownerId: string) {\n        const peerType = this._peerIdAndFactoryIdToPeerType[ownerId + \":\" + factoryId];\n        if (!peerType) {\n            return null;\n        } else {\n            return new WindowType(peerType, undefined);\n        }\n    }\n\n    private subscribe<TMessage>(messageType: string, handler: (msg: TMessage) => void) {\n        const sub = this._connection.on(\n            messageType,\n            (msg: TMessage) => handler.bind(this)(msg));\n\n        this._gw3Subscriptions.push(sub);\n\n        return sub;\n    }\n\n    private dropSubscription(subscription: any) {\n        if (subscription) {\n            this._connection.off(subscription);\n            delete this._gw3Subscriptions[this._gw3Subscriptions.indexOf(subscription)];\n        }\n    }\n\n    private invokeCallbacks<TEvent>(\n        callbacks: Array<EventHandlerCallback<EntityEvent<TEvent>>>,\n        event: EntityEvent<TEvent>,\n        description?: string) {\n        callbacks.forEach((cb) => {\n            try {\n                cb(event);\n            } catch (err) {\n                this._logger.error(`Error in ${description || event.context.type} callback: ` + JSON.stringify(err));\n            }\n        });\n    }\n\n    private handleActivityCreatedMessage(msg: ActivityGwMessage) {\n        if (!msg.context_id) {\n            this._logger.error(\"Activity created with unknown context_id: \" + msg.activity_id);\n        } else {\n            if (!this._contextSubscriptions[msg.activity_id]) {\n                this.subscribeToContext(msg);\n            }\n        }\n    }\n\n    private async subscribeToContext(msg: ActivityGwMessage): Promise<void> {\n        const activityId = msg.activity_id;\n        this._contextSubscriptions[activityId] =\n            await this._contexts.subscribe(activityId,\n                (data: any, updated: any, removed: string[]) => {\n                    const event = new EntityEvent<Activity>(\n                        new Activity(activityId, undefined, undefined, data, undefined),\n                        new ActivityContextChangedEventContext(data, updated, removed));\n\n                    this.invokeCallbacks(\n                        this._activityChangeCallbacks,\n                        event,\n                        \"context updated\");\n                });\n    }\n\n    private handleActivityDestroyedMessage(msg: ActivityGwMessage) {\n        const unsubscribeContext = this._contextSubscriptions[msg.activity_id];\n        if (typeof unsubscribeContext === \"function\") {\n            unsubscribeContext();\n        }\n        delete this._contextSubscriptions[msg.activity_id];\n    }\n\n    private handlePeerFactoriesAdded(msg: PeerFactoryGwMessage) {\n        msg.factories.forEach((entity: PeerFactoryGwMessageEntity) => {\n            this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + entity.id] = entity.peer_type;\n        });\n    }\n\n    private handlePeerFactoriesRemoved(msg: PeerFactoryGwMessage) {\n        msg.factory_ids.forEach((factoryId: string) => {\n            delete this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + factoryId];\n        });\n    }\n\n    private forwardActivityTypeMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<ActivityTypeGwMessage, ActivityType>(\n            gwMmessageActivityTypesAdded,\n            gwMessageActivityTypesRemoved,\n            (msg: ActivityTypeGwMessage, isAdded) => isAdded\n                ? msg.types.map((t) => GW3Bridge.activityTypeGwMessageEntityToActivityType(t, undefined))\n                : msg.types.map((t) => new ActivityType(t.name, undefined, undefined, undefined)),\n            this._activityTypeStatusChangeCallbacks);\n\n    }\n\n    private forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers() {\n        // if we're created as part of this activity, the JOINED ACTIVITY is\n\n        // the first time we'll hear about it; so let's record the participants\n        for (const activityCreatedMessage of [gwMessageActivityCreated, gwMessageJoinedActivity, gwMessageOwnerChanged]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, ActivityWindow>(\n                activityCreatedMessage,\n                (msg) =>\n                    ([msg.owner || { ...msg, type: msg.peer_type, name: msg.peer_name, peer_id: msg.owner_id }])\n                        .concat(msg.participants || [])\n                        .map((info: any) => new ActivityWindow(info.peer_id, info.name, info.type, msg.activity_id, this.getAgmInstance(info.peer_id), undefined, this.generateWindowGetter(info.peer_id), undefined)),\n                (ent, msg) => new EntityEvent<ActivityWindow>(ent, new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                this._activityWindowChangeCallbacks);\n        }\n    }\n\n    private forwardActivityMessagesToStatusEventHandlers() {\n\n        // see dot-net-activity\\Activity\\ActivityState.cs\n\n        for (const createdMessage of [gwMessageActivityCreated, gwMessageJoinedActivity]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n                createdMessage,\n                (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"started\", \"\", new Date()))],\n                (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n                this._activityChangeCallbacks);\n        }\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityDestroyed,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"destroyed\", msg.reason, new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityInitiated,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageOwnerChanged,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerFactoryGwMessage, WindowType>(\n            gwMessagePeerFactoriesAdded,\n            gwMessagePeerFactoriesRemoved,\n            (msg: PeerFactoryGwMessage, isAdded: boolean) => isAdded\n                ? msg.factories.map(GW3Bridge.peerFactoryGwMessageEntityToWindowType)\n                : msg.factory_ids.map((id) => this.peerFactoryIdAndOwnerIdToWindowType(id, msg.owner_id)).filter((x) => x != null),\n            this._windowTypeStatusChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToPeerFactoryRequests() {\n        this.subscribe(\n            gwMessagePeerRequested,\n            (msg: PeerRequestedGwMessage) => {\n                const factory = this._peerFactoriesRegisteredByUs[msg.peer_factory];\n                if (!factory) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: `Unknown peer factory ${msg.peer_factory}`\n                        });\n                    return;\n                }\n\n                try {\n                    const configuration = msg.configuration || {};\n                    // NB: peer factories (or whoever they're delegating to) need to support whatever activity\n                    // environment (GW3, HC) we're targeting when they're creating peers\n                    // the manager is env agnostic, the bridge will augment the configuration with whatever's required\n\n                    // NB: also, since peers are requested in two ways (single peer with just its configuration,\n                    // or peer created as part of new activity, where the factory receives the aggregate config of\n                    // all peers, combined from ADD ACTIVITY TYPE and CREATE ACTIVITY), the peer factories need to\n                    // be able to handle both configuration structures intelligently.\n                    configuration.gateway_token = configuration.gateway_token || msg.gateway_token;\n                    configuration.peer_factory = configuration.peer_factory || msg.peer_factory;\n                    const promise = factory({\n                        activityId: msg.activity && msg.activity.id,\n                        activityType: msg.activity && msg.activity.type,\n                        type: msg.configuration && msg.configuration.type,\n                        gwToken: configuration.gateway_token,\n                        configuration\n                    });\n                    if (promise && promise.then && promise.catch) {\n                        promise.catch((err) => this._gw3Session.send(\n                            {\n                                type: gwMmessageError,\n                                request_id: msg.request_id,\n                                reason: err && (err.message || JSON.stringify(err))\n                            }));\n                    }\n                } catch (err) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: err && (err.message || JSON.stringify(err))\n                        });\n                }\n            });\n    }\n\n    private forwardActivityWindowMessagesToEventHandlers() {\n        for (const joinedMessage of [gwMessageActivityJoined, gwMessageJoinedActivity]) {\n            this.subscribe(joinedMessage,\n                (msg: any) => {\n                    const joinedId = (joinedMessage === gwMessageActivityJoined) ? msg.joined_id : msg.peer_id;\n                    const joinedType = (joinedMessage === gwMessageActivityJoined) ? msg.joined_type : msg.peer_type;\n                    const joinedName = (joinedMessage === gwMessageActivityJoined) ? msg.joined_name : msg.peer_name;\n\n                    const entity = new ActivityWindow(\n                        joinedId,\n                        joinedName,\n                        joinedType /* for ACTIVITY JOINED */,\n                        msg.activity_id,\n                        this.getAgmInstance(joinedId),\n                        undefined,\n                        this.generateWindowGetter(joinedId),\n                        undefined);\n\n                    // TODO review - what if it's our activity, do we\n                    // even need to subscribe\n                    if (!this._contextSubscriptions[msg.activity_id]) {\n                        this.subscribeToContext(msg).then(() => {\n                            if (joinedMessage === gwMessageJoinedActivity) {\n                                this._activityJoinedPromiseResolve({});\n                            }\n                        });\n                    } else if (joinedMessage === gwMessageJoinedActivity) {\n                        this._activityJoinedPromiseResolve({});\n                    }\n\n                    // TODO review: we might have the context data here already\n                    // why not update it here instead of waiting for subscribeToContext\n                    this.invokeCallbacks(\n                        this._activityWindowChangeCallbacks,\n                        new EntityEvent<ActivityWindow>(\n                            entity,\n                            new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                        joinedMessage);\n\n                });\n        }\n\n        this.subscribe(\n            gwMessageActivityLeft,\n            (msg: any) => {\n                const entity = new ActivityWindow(\n                    msg.left_id,\n                    undefined,\n                    undefined,\n                    null,\n                    this.getAgmInstance(msg.left_id),\n                    undefined,\n                    this.generateWindowGetter(msg.left_id),\n                    undefined);\n\n                this.invokeCallbacks(\n                    this._activityWindowChangeCallbacks,\n                    new EntityEvent<ActivityWindow>(\n                        entity,\n                        new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                    gwMessageActivityLeft);\n            });\n\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerCreatedGwMessage, ActivityWindow>(\n            gwMessagePeerCreated,\n            undefined,\n            (msg) => [\n                new ActivityWindow(\n                    msg.created_id,\n                    undefined /* #deleteme TODO: review - we should know the name if any */,\n                    undefined /* #deleteme TODO: review - we should know the type */,\n                    undefined,\n                    undefined,\n                    undefined,\n                    this.generateWindowGetter(msg.created_id),\n                    undefined)],\n            this._activityWindowChangeCallbacks);\n    }\n\n    private getAgmInstance(id: string): Glue42.AGM.Instance {\n        return this._config.agm.servers().find((s) => s.peerId === id || s.windowId === id);\n    }\n\n    private generateWindowGetter(peerId: string): () => Glue42.Windows.GDWindow {\n        return () => {\n            const server = this.getAgmInstance(peerId);\n            if (!server) {\n                return;\n            }\n            const windowId = server.windowId;\n            return this._config.windows.list().filter((w) => w.id === windowId)[0];\n        };\n    }\n\n    private isOverrideTypeDefinition(value: OverrideTypeDefinition | WindowDefinition[]): value is OverrideTypeDefinition {\n        if (typeof value === \"undefined\") {\n            return false;\n        }\n        if ((value as OverrideTypeDefinition).owner) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { EntityEventType } from \"./../contracts/entityEvent\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\n\nimport ActivityManager from \"./../core/activityManager\";\nimport { Logger } from \"./../helpers/logger\";\nimport * as util from \"./../helpers/util\";\n\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Callback } from \"../contracts/contracts\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface My {\n\n  activity: Activity;\n\n  window: ActivityWindow;\n\n  context: object;\n\n  updateContext(context: object, callback?: any): Promise<object>;\n\n  setContext(context: object, callback?: any): Promise<object>;\n\n  onActivityJoined(callback: (activity: Activity) => void): void;\n\n  onActivityLeft(callback: (activity: Activity) => void): void;\n\n  onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void): void;\n\n  clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity>;\n\n  attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor>;\n\n  setFrameColor(color: string, callback: () => void): Promise<Activity>;\n\n  getFrameColor(): string;\n\n  onFrameColorChanged(callback: () => void): void;\n}\n\n/**\n * A lightweight, single activity oriented subset of the API which should be used by most activity applications.\n * Provides access to the activity of your application (my.activity) and shortcuts to the most commonly used methods\n * (e.g. my.createWindow is a shortcut for my.activity.createWindow)\n *\n * @module my\n */\nexport default class ActivityMy implements My {\n\n  public _myAttached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myDetached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myAttachedTo: Array<(activity: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myDetachedFrom: Array<(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myActivityFrameColorChanged: Array<(frameColor: string) => void> = [];\n  public _myActivityJoinedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myActivityRemovedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myContextUpdateCallbacks: Array<(context: object, delta: object, removed: string[], activity: Activity) => void> = [];\n  public _w: ActivityWindow;\n  public _m: ActivityManager;\n  public _logger: Logger = Logger.Get(this);\n\n  constructor(manager: ActivityManager, windows: any) {\n    this._m = manager;\n    manager.ready()\n      .then((am) => {\n        // Subscribe for events for driving \"my\" logic\n        am.subscribeActivityContextChanged(this._subscribeMyContextChanged.bind(this));\n        am.subscribeWindowEvents(this._subscribeMyWindowEvent.bind(this));\n        am.subscribeActivitiesAttached(this._subscribeActivitiesAttached.bind(this));\n        am.subscribeActivitiesDetached(this._subscribeActivitiesDetached.bind(this));\n        if (windows) {\n          windows.onWindowFrameColorChanged(this._subscribeWindowFrameColorChanged.bind(this));\n        }\n      });\n  }\n\n  /**\n   * The current activity window; can be undefined (if the window is not part of any activity)\n   *\n   * @var {Window} window\n   */\n  public get window(): ActivityWindow {\n    if (util.isUndefinedOrNull(this._w)) {\n      const announcedWindows = this._m.announcedWindows;\n      if (announcedWindows.length > 0) {\n        this._w = announcedWindows[0];\n      }\n    }\n    return this._w;\n  }\n\n  /**\n   * The current activity that the application participates in.\n   * Can be undefined (if currently not part of any activity)\n   *\n   * @var {module:activity} activity\n   */\n  public get activity(): Activity {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return undefined;\n    }\n    return myWin.activity;\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string| windowDefinition} windowType The type of the window to be created\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition): Promise<ActivityWindow> {\n    return this._m.createWindow(this.activity, windowType);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number): Promise<ActivityWindow[]> {\n    return this._m.createStackedWindows(this.activity, windowTypes, timeout);\n  }\n\n  /**\n   * The current activity context. To update use my.updateContext, to replace my.setContext\n   *\n   * @var {object} context\n   */\n  public get context(): object {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return {};\n    }\n\n    return activity.context;\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise<object>((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.updateContext(context, callback);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.setContext(context, callback);\n  }\n\n  public onActivityJoined(callback: (activity: Activity) => void) {\n    this._myActivityJoinedCallbacks.push(callback);\n\n    // replay joined event\n    const myWin = this.window;\n    if (!util.isUndefinedOrNull(myWin) && !util.isUndefinedOrNull(myWin.activity)) {\n      callback(myWin.activity);\n    }\n  }\n\n  public onActivityLeft(callback: (activity: Activity) => void) {\n    this._myActivityRemovedCallbacks.push(callback);\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} callback Handler function that will receive context related events\n   */\n  public onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void) {\n    this._myContextUpdateCallbacks.push(callback);\n\n    // publish initial event\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const activity = myWin.activity;\n    if (util.isUndefinedOrNull(activity)) {\n      return;\n    }\n\n    // NB: either the callback is added before the activity is recorded in the API, or\n    // the activity is recorded before the callback\n    // in the former case, when the activity is seen, the callback will be invoked in _notifyMyContextChanged\n    // in the latter, the callback will be invoked here\n    // in both cases, the callback will be invoked at least once as soon as an activity is recorded\n\n    // see \"long analysis for callback behavior in GW3: several cases\" for full explanation\n\n    callback(activity.context, activity.context, [], activity);\n  }\n\n  public clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity> {\n    const act = this.activity;\n    return this._m.clone(act, options, callback);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId: string;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._m.attachActivities(activityId, this.activity.id, tag);\n  }\n\n  public onActivityAttached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myAttached.push(callback);\n  }\n\n  public onActivityDetached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myDetached.push(callback);\n  }\n\n  public onAttachedToActivity(callback: (activity: Activity, state: AttachedActivityDescriptor) => void) {\n    this._myAttachedTo.push(callback);\n  }\n\n  public onDetachedFromActivity(callback: (detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void)  {\n    this._myDetachedFrom.push(callback);\n  }\n\n  public get attached() {\n    if (!this.activity) {\n      return [];\n    }\n\n    return this.activity.attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n\n    if (this.activity) {\n      return this.activity.setFrameColor(color, callback);\n    } else {\n      return Promise.resolve(null);\n    }\n  }\n\n  public getFrameColor(): string {\n\n    if (this.activity) {\n      return this.activity.getFrameColor();\n    }\n\n    return \"\";\n  }\n\n  public onFrameColorChanged(callback: () => void) {\n    this._myActivityFrameColorChanged.push(callback);\n  }\n\n  private _subscribeMyContextChanged(activity: Activity, context: object, delta: object, removed: string[]) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (activity.id !== myActivity.id) {\n      return;\n    }\n\n    this._notifyMyContextChanged(activity, context, delta, removed);\n  }\n\n  private _subscribeMyWindowEvent(activity: Activity, window: ActivityWindow, event: any) {\n\n    if (util.isUndefinedOrNull(this.window)) {\n      return;\n    }\n\n    // ignore events not related to my window\n    if (this.window.id !== window.id) {\n      return;\n    }\n\n    if (event === EntityEventType.ActivityWindowJoinedActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityJoinedCallbacks);\n\n      // NB: tick42-contexts doesn't raise automatically an update event on join if the snapshot matches\n      // the currently recorded data\n      // revisited: however, it is pushing an update on subscribe() (which is performed by js-activity)\n      // long analysis for callback behavior in GW3: several cases\n      // 1 client calls onContextChanged before joined-activity arrives\n      // then callback is pushed but onContextChanged callback call is skipped\n      //    1-1 js-activity handles joined-activity first; it calls js-context subscribe\n      //    1-1-1 js-context has not seen the activity so far so it doesn't invoke an update\n      //    however, js-context then handles joined-activity and raises an update\n      //    1-1-2 js-context has seen the activity, so it raises an update\n      //    js-context then handles joined-activity and doesn't raise a second update unless the received snapshot is\n      //    different from the last seen context value (can this even happen?)\n      //    1-2 js-context handles joined-activity first\n      //    since js-activity is not subscribed, whether it raises an update or not, it's not propagated\n      //    js-activity then handles joined-activity, performs a subscribe and js-context raises an update\n      // 2 joined-activity arrives, whatever updates are raised by js-activity's subscribe() or js-context's\n      // message handler are not propagated since the callback is not pushed, client then calls onContextChanged,\n      // and the callback is called inside that\n      // also, the callback cannot be invoked first in 1 then 2 or first 2 then 1\n      // => in all cases, a callback is called exactly once as soon as (it's subscribed && the activity is joined)\n      // (in 1-1-2 it *might* be possible to be called twice, first with a slightly out of date context,\n      // then with the joined-activity snapshot, see \"different from the last seen context value\", but it's unlikely,\n      // and not a real issue anyway)\n      // in the HC case, however, case 1 doesn't work since js-context doesn't raise updates on subscribe() nor\n      // joining the activity (#deleteme TODO LATER MINOR: verify), so we need to raise it ourselves\n\n      // 2017-09-08: final revisit (@vnikolov)\n      // since SBGW_D-163 allows automatic subscription to contexts of pre-existing activities, 1-1-2 no longer works\n      // (we might have already seen the latest state before joined-activity so no update will be raised)\n      // for this reason I'm invoking notifyMyContextChanged unconditionally - so we might have multiple\n      // invocations; if this turns into a problem we might add a guard inside notifyMyContextChanged that\n      // checks we're not raising it twice with the same context value\n      //\n      // we might also get a duplicate raise if the sender of an update is also subscribed to the context\n      // if (this._m.usingHc) {\n      this._notifyMyContextChanged(activity, activity.context, null, null);\n      // }\n\n      // #deleteme TODO LATER MAJOR: what about the cases when we're not watching foreign activity contexts?\n    } else if (event === EntityEventType.ActivityWindowLeftActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityRemovedCallbacks);\n      // #deleteme TODO LATER MINOR: should we send null update here?\n    }\n  }\n\n  private _notifyMyWindowEvent(activity: Activity, callbackStore: Array<(activity: Activity, event: any) => void>) {\n    callbackStore.forEach((element) => {\n      try {\n        element(activity, event);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyMyContextChanged(activity: Activity, context: object, delta?: object, removed?: string[]) {\n    delta = delta || {};\n    removed = removed || [];\n\n    this._myContextUpdateCallbacks.forEach( (element) => {\n      try {\n        element(context, delta, removed, activity);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttached(state: AttachedActivityDescriptor) {\n\n    this._myAttached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetached(state: AttachedActivityDescriptor) {\n\n    this._myDetached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttachedTo(state: AttachedActivityDescriptor) {\n\n    this._myAttachedTo.forEach((cb) => {\n      try {\n        cb(this.activity, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetachedFrom(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) {\n\n    this._myDetachedFrom.forEach((cb) => {\n      try {\n        cb(detached, existing, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _subscribeActivitiesAttached(newAct: Activity, state: AttachedActivityDescriptor) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (newAct.id !== myActivity.id) {\n      return;\n    }\n\n    if (state.windowIds.indexOf(myWin.id) >= 0) {\n      this._notifyAttachedTo(state);\n      return;\n    }\n\n    this._notifyAttached(state);\n  }\n\n  private _subscribeActivitiesDetached(newAct: Activity, oldAct: Activity, state: any) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (oldAct.id === myActivity.id) {\n      this._notifyDetached(state);\n    }\n\n    if (newAct.id === myActivity.id) {\n      this._notifyDetachedFrom(newAct, oldAct, state);\n    }\n  }\n\n  private _subscribeWindowFrameColorChanged(window: Glue42.Windows.GDWindow) {\n    const act = this.activity;\n    if (!act) {\n      return;\n    }\n\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id === window.id) {\n      this._myActivityFrameColorChanged.forEach((callback) => {\n        callback(window.frameColor);\n      });\n    }\n  }\n}\n","import {Logger} from \"./logger\";\nimport * as util from \"../helpers/util\";\n/**\n * Class that can be used as a marker for successful completion of a set of events\n * @private\n * @module readyMarker\n */\nexport class ReadyMarker {\n  private _callbacks: Array<(err: any) => void>;\n  private _signals: number;\n  private _error: any;\n  private _logger: Logger;\n  private _name: string;\n\n  /**\n   * Creates new marker\n   * @param name Name of the marker, useful in logging\n   * @param signalsToWait Number of signals(events) that needs to be signaled (completed) before the marker is set as completed\n   */\n  constructor(name: string, signalsToWait: number) {\n    this._logger = Logger.Get(\"ReadyMarker [\" + name + \"]\");\n    this._logger.debug(\"Initializing ready marker for '\" + name + \"' with \" + signalsToWait + \" signals to wait\");\n    if (signalsToWait <= 0) {\n      throw new Error(\"Invalid signal number. Should be > 0\");\n    }\n    this._signals = signalsToWait;\n    this._callbacks = [];\n    this._name = name;\n  }\n\n  /**\n   * Adds a new callback that will be notified when the events are completed (success) or some error happened\n   */\n  public setCallback(callback: (err: any) => void) {\n    if (this.isSet()) {\n      callback(undefined);\n      return;\n    } else if (this.isError()) {\n      callback(this._error);\n      return;\n    }\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Signals for a completion of an event. If this is the last event success callbacks will be called\n   */\n  public signal(message?: string) {\n    this._logger.debug(\"Signaled - \" + message + \" - signals left \" + (this._signals - 1));\n    this._signals--;\n    if (this._signals < 0) {\n      throw new Error(\"Error in ready marker '\" + this._name + \" - signals are \" + this._signals);\n    }\n\n    if (this.isSet()) {\n      this._callbacks.forEach((callback) => {\n        callback(undefined);\n      });\n    }\n  }\n\n  /**\n   * Signals for an error in some of the events. This will notify all callbacks that the marker has failed\n   */\n  public error(error: string) {\n    this._error = error;\n    this._callbacks.forEach((errorCallback) => {\n      errorCallback(error);\n    });\n  }\n\n  /**\n   * Checks if the marker is set (completed)\n   */\n  public isSet() {\n    if (this.isError()) {\n      return false;\n    }\n    return this._signals === 0;\n  }\n\n  /**\n   * Checks if the marker has failed (some of the events has failed)\n   */\n  public isError() {\n    return !util.isUndefined(this._error);\n  }\n\n  /**\n   * Returns the last reported error (undefined if no error)\n   */\n  public getError() {\n    return this._error;\n  }\n}\n","import ActivityEntity from \"../entities/activityEntity\";\nimport {\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { ActivityState } from \"..//contracts/entityEvent\";\n\ndeclare const htmlContainer: any;\n\n/**\n * Collection of ActivityEntities that provides change notifications\n * @module entityCollection\n * @private\n */\nexport class EntityObservableCollection<T extends ActivityEntity> {\n\n  private _items: { [key: string]: T } = {};\n  private _listeners: Array<(item: T, action: EntityEventContext) => void> = [];\n  private _processNew: (entity: T) => void;\n\n  constructor(processNew: (entity: T) => void) {\n    this._processNew = processNew;\n  }\n\n  /**\n   * Adds one item to the collection\n   */\n  public addOne(item: T) {\n    this.add([item]);\n  }\n\n  /**\n   * Adds an array of items to the collection\n   */\n  public add(items: T[]) {\n    items.forEach((element) => {\n      this.process(new EntityEvent<T>(element, new EntityEventContext(EntityEventType.Added)));\n    });\n  }\n\n  /**\n   * Process existing EntityEvent\n   */\n  public process(event: EntityEvent<T>): T {\n\n    const context = event.context;\n    const type = context.type;\n    const entity = event.entity;\n\n    // here we're populating some data which particular implementations (e.g.\n    // GW3) can't provide\n\n    // TODO: extract these cases into external filters\n\n    // activity status change without old status?\n    // grab it from the existing entity\n    if (type === EntityEventType.StatusChange &&\n      !(context as ActivityStatusChangeEventContext).oldStatus) {\n      const act = this._items[entity.id] as any as Activity;\n      if (act) {\n        (context as ActivityStatusChangeEventContext).oldStatus = act.status;\n      }\n    }\n\n    // the GW3 bridge notifies us of possible status changes (it's mostly stateless so\n    // it can't/doesn't distinguish between JOINED ACTIVITY for an activity we already\n    // know about vs a brand new activity. for this reason, we just coalesce status\n    // updates which indicate the same state.\n    if (type === EntityEventType.StatusChange &&\n      (context as ActivityStatusChangeEventContext).oldStatus &&\n      (context as ActivityStatusChangeEventContext).newStatus &&\n      (context as ActivityStatusChangeEventContext).oldStatus.state ===\n      (context as ActivityStatusChangeEventContext).newStatus.state) {\n      context.type = EntityEventType.Updated;\n    }\n\n    // GW3: coalesce multiple joined/left events\n\n    if (typeof htmlContainer === \"undefined\") {\n      if (type === EntityEventType.ActivityWindowJoinedActivity &&\n        this._items[entity.id] &&\n        (this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n      if (type === EntityEventType.ActivityWindowLeftActivity &&\n        this._items[entity.id] &&\n        !(this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n    }\n\n    // update internal collections (adding the entity or updating existing entity). From that\n    // point start using the internalEntity\n    // NB: undefined properties are coalesced, null properties represent removals\n    const internalEntity = this._updateInternalCollections(entity, type, context);\n    this._notifyListeners(internalEntity, context);\n    return internalEntity;\n  }\n\n  /**\n   * Gets all items from the collection.\n   */\n  public get(): T[] {\n    const result = [];\n    for (const key in this._items) {\n      if (this._items.hasOwnProperty(key)) {\n        const element = this._items[key];\n        result.push(element);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets item by name/id\n   * @param name  Name/id of the item to get\n   * @returns     Item if found; undefined if not\n   */\n  public getByName(name: string) {\n    // this does not work for some reason\n    // return this._items[name];\n    for (const key in this._items) {\n      if (key === name) {\n        return this._items[key];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Gets a item if in the collection or waits for it to appear\n   * @param name\n   * @returns {Promise<T>}\n   */\n  public getOrWait(name: string): Promise<T> {\n    return new Promise<T>((resolve) => {\n      const entityAddedHandler = (entity: T) => {\n        if (entity.id !== name) {\n          return;\n        }\n        resolve(entity);\n        this.unsubscribe(entityAddedHandler);\n      };\n      this.subscribe(entityAddedHandler);\n\n      // try to get right away - if not here wait for it to appear\n      const window = this.getByName(name);\n      if (window) {\n        this.unsubscribe(entityAddedHandler);\n        resolve(window);\n        return;\n      }\n    });\n  }\n\n  /**\n   * Subscribes a listener for changes\n   * @param handler Callback for changes\n   */\n  public subscribe(handler: (act: T, action: EntityEventContext) => void): () => void {\n    this._listeners.push(handler);\n    // replay existing items for new subscribers\n    Object.keys(this._items).forEach((key) => {\n      const element = this._items[key];\n      handler(element, new EntityEventContext(EntityEventType.Added.toString()));\n    });\n\n    return () => {\n      this.unsubscribe(handler);\n    };\n  }\n\n  /**\n   *  Unsubscribes a listener\n   */\n  public unsubscribe(handler: (act: T, action: EntityEventContext) => void) {\n    const index = this._listeners.indexOf(handler);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Notify all listeners for some event\n   */\n  private _notifyListeners(entity: T, context: EntityEventContext) {\n    this._listeners.forEach((listener) => {\n      try {\n        listener(entity, context);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n\n  /**\n   * Update internal collections (usually after some kind of modification event has arrived)\n   */\n  private _updateInternalCollections(entity: T, type: EntityEventType, context: any) {\n    const entityAsAny = (entity as any);\n\n    // #deleteme TODO: refactor - currently we apply some rules for each type\n    const isActivityDestroy =\n      (type === EntityEventType.StatusChange &&\n        entityAsAny.status &&\n        entityAsAny.status.state === ActivityState.Destroyed) ||\n      (type === EntityEventType.StatusChange &&\n        context &&\n        context.newStatus &&\n        context.newStatus.state === ActivityState.Destroyed);\n\n    // #deleteme TODO: verify this stuff\n    // windows have two states - removed from activity and closed (TODO: this only works in GD 2.1 and later)\n    const isWindowClose = type === EntityEventType.Closed;\n    const isTypeRemove = type === EntityEventType.Removed && typeof entityAsAny.isIndependent === \"undefined\";\n\n    if (isTypeRemove || isWindowClose || isActivityDestroy) {\n\n      const oldEntity = this._items[entity.id];\n      delete this._items[entity.id];\n      // on remove return the input entity\n      this._processNew(entity);\n      if (oldEntity) {\n        entity._beforeDelete(oldEntity);\n      }\n      return entity;\n    } else {\n      const key = entity.id;\n      // if new object add, otherwise clone object properties\n      if (!this._items.hasOwnProperty(key)) {\n        this._processNew(entity);\n        this._items[entity.id] = entity;\n      } else {\n        this._items[entity.id]._update(entity);\n      }\n    }\n\n    return this._items[entity.id];\n  }\n}\n","﻿/* tslint:disable */\nimport { ActivityContextUpdateHandler, Callback } from \"../contracts/contracts\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport {\n  ActivityContextChangedEventContext,\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\n\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport Activity from \"../entities/activity\";\nimport ActivityEntity from \"../entities/activityEntity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport WindowSource from \"../entities/windowSource\";\n\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ReadyMarker } from \"../helpers/readyMarker\";\nimport { EntityObservableCollection } from \"../helpers/entityObservableCollection\";\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\n\nimport { ActivityBridge } from \"../bridges/activityBridge\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { ActivityState } from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n/* tslint:enable */\n\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\ndeclare const htmlContainer: any;\n\nexport default class ActivityManager {\n  private _bridge: ActivityBridge;\n  private _readyMarker: ReadyMarker;\n  private _dataReadyMarker: ReadyMarker;\n  private _descriptorsMarker: ReadyMarker;\n\n  private _activityTypes: EntityObservableCollection<ActivityType>;\n  private _windowTypes: EntityObservableCollection<WindowType>;\n  private _activities: EntityObservableCollection<Activity>;\n  private _windows: EntityObservableCollection<ActivityWindow>;\n  private _logger: Logger = Logger.Get(\"activityManager\");\n  private _announcedWindows: ActivityWindow[] = [];\n  private _attachedCallbacks: Array<(newAct: any, descriptor: any) => void> = [];\n  private _detachedCallbacks: Array<(newAct: any, oldAct: Activity, descriptor: any) => void> = [];\n  private _frameColorChangesCallbacks: Array<(act: Activity, frameColor: string) => void> = [];\n  private _windowHandlers: any[][] = [];\n\n  public get usingHc(): boolean {\n    return this._bridge.bridgeType === \"HC\";\n  }\n\n  public get announcedWindows(): ActivityWindow[] {\n    return this._announcedWindows;\n  }\n\n  public set announcedWindows(v: ActivityWindow[]) {\n    throw new Error(\"not allowed\");\n  }\n\n  constructor(bridge: ActivityBridge, autoAnnounce: boolean, windows: any) {\n    this._bridge = bridge;\n    this._activityTypes = new EntityObservableCollection<ActivityType>((e) => this._grabEntity(e));\n    this._windowTypes = new EntityObservableCollection<WindowType>((e) => this._grabEntity(e));\n    this._activities = new EntityObservableCollection<Activity>((e) => this._grabEntity(e));\n    this._windows = new EntityObservableCollection<ActivityWindow>((e) => this._grabEntity(e));\n\n    // signals to wait for - get AT, get WT, get Activities and get Windows\n    this._dataReadyMarker = new ReadyMarker(\"Activity Manager Data\", [\"GetActivityTypes\", \"GetWindowTypes\", \"GetActivities\", \"GetWindows\"].length);\n    this._descriptorsMarker = new ReadyMarker(\"Attached Activities Descriptors\", [\"GetDescriptors\"].length);\n\n    // waiting for activity data first\n\n    // NB: in the GW3 case, we don't have the ability to request data at will\n    // but need wait for delta messages\n    // So GW3Bridge returns empty arrays from the get() calls\n    // We're relying on the fact that the GW3 bridge will wait\n    // until resolving its .ready()\n\n    if (autoAnnounce) {\n      // if auto announce replace the ready marker, so:\n      // 1) wait for data\n      // 2) get descriptors\n      // 3) announce the current window\n\n      this._readyMarker = new ReadyMarker(\"Activity Manager Announce\", [\"Announcement\"].length);\n      this._dataReadyMarker.setCallback((dataErr: any) => {\n        if (dataErr) {\n          this._readyMarker.error(dataErr);\n        }\n\n        this._descriptorsMarker.setCallback((err: any) => {\n\n          if (err) {\n            this._readyMarker.error(err);\n          }\n\n          this._logger.debug(\"Auto announcing window\");\n          // signal no matter if it failed or not\n          this.announceWindow()\n            .then((w) => {\n              // NB: this creates glue.activities.my.window\n              this._announcedWindows.push(w);\n              this._readyMarker.signal(\"Successfully announced window with id '\" + w.id + \"'\");\n            })\n            .catch((errCatch) => {\n              this._logger.debug(\"Will not announce window - \" + errCatch);\n              this._readyMarker.signal();\n            });\n        });\n\n        this.refreshDescriptors();\n      });\n    } else {\n      // TODO: not sure if this still works\n      this._readyMarker = this._dataReadyMarker;\n    }\n\n    this._bridge.onActivitiesAttached((e) => {\n      this._handleActivitiesAttached(e);\n    });\n    this._bridge.onActivitiesDetached((e) => {\n      this._handleActivitiesDetached(e);\n    });\n    this._bridge.onActivityAttachedDescriptorsRefreshed((e) => {\n      this._handleActivityDescriptorsRefreshed(e);\n    });\n    if (windows) {\n      windows.onWindowFrameColorChanged(this._handleWindowFrameColorChanged.bind(this));\n    }\n\n    // initialize the bridge\n    this._bridge.init();\n\n    // NB: there is no race condition here.\n    // Since browser/Node JS is a single-threaded environment, assuming no events on _bridge\n    // fire inside .init(), this subscribe will catch anything that comes between it and the init() call\n    this._subscribeForData();\n\n    // NB: in GW3 case, the initial state messages after a JOIN come in before the JOIN's SUCCESS\n    // message (see https://confluence.tick42.com:8443/display/TD/Global+Gateway+Domain#GlobalGatewayDomain-JOIN)\n    // so the .initReady().then() callback will only get invoked after we've received the initial domain\n    // state. We need to be ready to handle events before that, hence the _subscribeForData() above.\n    // what's more, our own JOINED ACTIVITY will come only after we've sent our READY, hence waiting\n    // for bridge.ready() in the manager's ready()\n\n    // wait for it to become ready and then start getting/subscribing for data\n    this._bridge\n      .initReady()\n      .then((aw) => {\n        this._getInitialData();\n      })\n      .catch((error) => {\n        // tslint:disable-next-line\n        console.log(error);\n      });\n  }\n\n  public ready(callback?: (err: string, manager: ActivityManager) => void): Promise<ActivityManager> {\n    const promise = new Promise<ActivityManager>((resolve, reject) => {\n      this._readyMarker.setCallback(\n        (err) => {\n          if (!err) {\n            resolve(this);\n          } else {\n            reject(this._readyMarker.getError());\n          }\n        });\n    });\n\n    return nodeify(Promise.all([this._bridge.ready(), promise]).then(() => this), callback);\n  }\n\n  /**\n   * @returns All known activity types\n   */\n  public getActivityTypes(): ActivityType[] {\n    return this._activityTypes.get();\n  }\n\n  /**\n   * Gets ActivityType by name\n   * @param name  Name to search for\n   * @returns     If found the @type ActivityType; otherwise undefined\n   */\n  public getActivityType(name: string): ActivityType {\n    return this._activityTypes.getByName(name);\n  }\n\n  /**\n   * Registers a new activity type\n   * @param activityTypeName      The name of the activity type to be created\n   * @param ownerWindowType       The type of the owner window or a WindowDefinition for the owner window\n   * @param helperWindowTypes     Types of helper windows (or WindowDefinitions for helper windows) for that activity type\n   * @param config                (HC only, deprecated) Layout config\n   * @param description           (HC only, deprecated) Description for the new activity type\n   * @param callback              (Optional) Callback for results - if not specified the method will return a promise\n   */\n  public registerActivityType(\n    activityTypeName: string,\n    ownerWindowType: string | WindowDefinition,\n    helperWindowTypes?: string[] | WindowDefinition[],\n    config?: any,\n    description?: string,\n    callback?: Callback<ActivityType>): Promise<ActivityType> {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n\n      // activityTypeName checks\n      if (util.isUndefinedOrNull(activityTypeName)) {\n        reject(\"activityTypeName argument can not be undefined\");\n        return;\n      }\n      if (!util.isString(activityTypeName)) {\n        reject(\"activityTypeName should be string\");\n        return;\n      }\n      // check if type is already defined\n      const actType = this.getActivityType(activityTypeName);\n      if (!util.isUndefinedOrNull(actType)) {\n        reject(\"Activity type '\" + activityTypeName + \"' already exists\");\n        return;\n      }\n\n      // ownerWindowType checks\n      let ownerDefinition: WindowDefinition;\n      if (util.isUndefined(ownerWindowType)) {\n        reject(\"Owner window type can not be undefined\");\n        return;\n      }\n      if (util.isString(ownerWindowType)) {\n        ownerDefinition = { type: (ownerWindowType as string), name: \"\", isIndependent: false, arguments: {} };\n      } else {\n        ownerDefinition = (ownerWindowType as WindowDefinition);\n      }\n\n      // helperWindowTypes checks\n      const helperDefinitions: WindowDefinition[] = [];\n      if (!util.isUndefined(helperWindowTypes) && util.isArray(helperWindowTypes)) {\n        // tslint:disable-next-line\n        for (const index in helperWindowTypes) {\n          const item = helperWindowTypes[index];\n          if (util.isString(item)) {\n            const definition = {\n              type: (item as string),\n              name: \"\",\n              isIndependent: false,\n              arguments: {},\n              relativeTo: \"\",\n              relativeDirection: \"\",\n              windowStyleAttributes: {}\n            };\n            helperDefinitions.push(definition);\n          } else {\n            helperDefinitions.push(item as WindowDefinition);\n          }\n        }\n      }\n\n      // redirect to bridge\n      this._bridge\n        .registerActivityType(activityTypeName,\n          ownerDefinition,\n          helperDefinitions,\n          config,\n          description)\n        .then((activityType) => {\n          // add to from collections\n          this._grabEntity(activityType);\n          resolve(activityType);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregister existing activity type\n   * @param type The name of the activity type to be removed\n   */\n  public unregisterActivityType(type: string, callback?: Callback<any>) {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(type);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + type + \"' does not exists\");\n        return;\n      }\n      this._bridge.unregisterActivityType(type).then(() => resolve(actType), reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Initiates a new activity from the given type.\n   * @param activityType  The ActivityType to initiate\n   * @param context       The initial context of the activity\n   * @param callback      Callback for result\n   * @param configuration Optional configuration passed to window/peer factories for the new activity's participants\n   * @returns             Promise for activity\n   */\n  public initiate(activityType: string, context?: object, callback?: Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(activityType);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + activityType + \"' does not exists\");\n        return;\n      }\n\n      this._bridge\n        .initiateActivity(activityType, context, configuration)\n        .then((actId) => {\n\n          this._activities\n            .getOrWait(actId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivityTypeEvents(handler: (act: ActivityType, action: string) => void) {\n    this._activityTypes.subscribe((at, context) => {\n      handler(at, context.type);\n    });\n  }\n\n  /**\n   * @returns All known WindowTypes\n   */\n  public getWindowTypes(): WindowType[] {\n    return this._windowTypes.get();\n  }\n\n  /**\n   * Gets WindowType by name\n   * @param name  The name of the type @type WindowType\n   * @returns     WindowType if found; undefined otherwise\n   */\n  public getWindowType(name: string): WindowType {\n    return this._windowTypes.getByName(name);\n  }\n\n  /**\n   * Registers a factory for a given WindowType. The factory will be called once window of that type is requested\n   * @param windowType   Window type that will be constructed from the factory. Can be a string (name of the window type)\n   * or object that has name, description properties\n   * @param factoryMethod      The factory that will construct Windows of that type\n   * @param description\n   * @param callback\n   * @param configuration\n   * @returns {}\n   */\n  public registerWindowFactory(\n    windowType: any,\n    factoryMethod: WindowFactory,\n    callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (util.isObject(windowType)) {\n        windowType = windowType.getName();\n      } else if (!util.isString(windowType)) {\n        reject(\"windowType should be string or object that has getName method\");\n        return;\n      }\n\n      this._bridge\n        .registerWindowFactory(windowType, factoryMethod)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregisters all factories for a given WindowType.\n   * @param windowType   Window type that is constructed from the factory.\n   * @param callback\n   * @returns {}\n   */\n  public unregisterWindowFactory(windowType: string, callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (!util.isString(windowType)) {\n        reject(\"windowType should be a string\");\n        return;\n      }\n\n      this._bridge\n        .unregisterWindowFactory(windowType)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * @returns All started activities\n   * @param activityType Can be a string or @type ActivityType. If string a new activityType will be created using the string for name.\n   * @returns Array of Activity objects\n   */\n  public getActivities(activityType?: string | ActivityType | string[] | ActivityType[]): Activity[] {\n    let act = this._activities.get();\n    act = act.filter((a) => a._ownerId);\n    if (!activityType) {\n      return act;\n    }\n    let types: any = activityType;\n    if (util.isString(activityType)) {\n      types = [activityType];\n    } else if (activityType instanceof ActivityType) {\n      types = [activityType.name];\n    } else if (activityType instanceof Array) {\n      // TODO check if string array or array of ActivityTypes\n    } else {\n      throw new Error(\"Invalid input argument 'activityType' = \" + activityType);\n    }\n\n    return act.filter((at: Activity) => {\n      const type = at.type;\n      return util.some(types, (t: ActivityType) => {\n        return type.id === t.id;\n      });\n    });\n  }\n\n  /**\n   * Returns Activity by ID\n   */\n  public getActivityById(id: string): Activity {\n    return this._activities.getByName(id);\n  }\n\n  /**\n   * Initialises activity for the current window - by doing this the window is announced as activity aware to the other participants\n   * @param windowType            Type of window\n   * @param activityWindowId      The id of the window that was created\n   * @returns {}                  Promise for an activity window (joined to an activity, if the activity creation fails the promise will be rejected)\n   */\n  public announceWindow(activityWindowId?: string, windowType?: string): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n\n      // get the announcement info from the bridge (e.g. the context in HC) - this will be used if no arguments passed\n      const announcementInfo = this._bridge.getAnnouncementInfo();\n      if (util.isUndefined(activityWindowId)) {\n        activityWindowId = announcementInfo.activityWindowId;\n      }\n      if (util.isUndefined(windowType)) {\n        windowType = announcementInfo.activityWindowType;\n      }\n      if (util.isUndefinedOrNull(windowType)) {\n        throw new Error(\"Can not announce - unknown windowType\");\n      }\n\n      const activityId = announcementInfo && announcementInfo.activityId;\n\n      // We cover two cases here:\n      // * no activityWindowId supplied (neither in arguments or announcement info) - in that case we register new window by type. Most of the time this is the case when an independent window is created outside activity\n      // * activityWindowId supplied - window created as part of activity creation\n\n      // NB: in GW3, windows are created standalone, and receive 'JOINED' after they send a 'READY'\n      // so we always go in 'if' case, not 'else'\n      if (util.isUndefinedOrNull(activityWindowId)) {\n        this._logger.debug(\"Registering window with type:'\" + windowType + \"', name:'\" + announcementInfo.activityWindowName + \"', ind.:'\" + announcementInfo.activityWindowIndependent + \"'\");\n        // register new window created outside activity\n        this._bridge.registerWindow(windowType, announcementInfo.activityWindowName, announcementInfo.activityWindowIndependent)\n          .then(this._windows.getOrWait.bind(this._windows))\n          .then((w: any) => {\n            if (activityId) {\n              return this._activities.getOrWait(activityId).then((_: any) => w);\n            } else {\n              return w;\n            }\n          })\n          .then((w: any) => {\n            resolve(w);\n          })\n          .catch((err) => {\n            this._logger.error(err);\n          });\n\n      } else {\n        // announce new window created in an activity creation process\n        this._logger.debug(\"Announcing window with id '\" + activityWindowId + \"' and type '\" + windowType + \"'\");\n\n        // check if the window is already created -\n        const currentWindow = this._windows.getByName(activityWindowId);\n        if (!util.isUndefinedOrNull(currentWindow)) {\n          this._logger.debug(\"Window with id '\" + activityWindowId + \"' already announced - reusing the window\");\n          resolve(currentWindow);\n          return;\n        }\n\n        // window events handler\n        const windowEventHandler = (a: Activity, w: ActivityWindow, e: any) => {\n          if (activityWindowId === w.id) {\n            if (e === EntityEventType.ActivityWindowJoinedActivity) {\n              const activity = w.activity;\n              if (util.isUndefined(activity)) {\n                reject(\"UNDEFINED ACTIVITY\");\n              }\n              this._logger.trace(\"Got joined event for id '\" + activityWindowId + \"'\");\n              resolve(w);\n              this.unsubscribeWindowEvents(windowEventHandler);\n            }\n          }\n        };\n\n        this.subscribeWindowEvents(windowEventHandler);\n        this._logger.trace(\"Waiting for joined event for id '\" + activityWindowId + \"'\");\n        this._bridge.announceWindow(windowType, activityWindowId);\n      }\n    });\n    return promise;\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window type registered\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowTypeEvents(handler: (act: WindowType, event: string) => void) {\n    this._windowTypes.subscribe((wt, context) => {\n      handler(wt, context.type);\n    });\n  }\n\n  /**\n   * Subscribe for activity status events\n   * @param handler Handler function that will receive status notifications\n   * @returns {}\n   */\n  public subscribeActivityEvents(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.StatusChange) {\n        const p = (context as ActivityStatusChangeEventContext);\n        handler(act, p.newStatus, p.oldStatus);\n      }\n\n      // implicitly leave the activity on destroy\n      if (context.type === EntityEventType.Removed ||\n        (context.type === EntityEventType.StatusChange &&\n          (context as ActivityStatusChangeEventContext).newStatus.getState() === ActivityState.Destroyed)) {\n        for (const window of this._windows.get()) {\n          if (window.activity && window.activity.id === act.id) {\n            this._windows.process(new EntityEvent<ActivityWindow>(window, new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)));\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window joining to activity\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void): () => void {\n    const wrappingHandler = (window: ActivityWindow, context: any) => {\n      let eventType = context.type;\n      if (eventType === EntityEventType.Added) {\n        // rename added to opened (because added is misleading - semantically it's the opposite of remove);\n        eventType = \"opened\";\n      }\n      handler(window.activity, window, eventType);\n    };\n    this._windowHandlers.push([handler, wrappingHandler]);\n    return this._windows.subscribe(wrappingHandler);\n  }\n\n  public unsubscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void) {\n    const found = this._windowHandlers.find((pair) => pair[0] === handler);\n    if (found) {\n      this._windowHandlers.splice(this._windowHandlers.indexOf(found), 1);\n      this._windows.unsubscribe(found[1]);\n    }\n  }\n\n  /**\n   * Creates a new window from a given type and joins it to an activity\n   *\n   * @param activity      Activity to join the window to\n   * @param windowType    The window type to join (string or window definition)\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public createWindow(activity: Activity, windowTypeOrConfiguration: string | WindowDefinition | any, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowTypeOrConfiguration)) {\n        reject(\"windowType is undefined\");\n      }\n\n      let windowDefinition: WindowDefinition;\n      if (util.isString(windowTypeOrConfiguration)) {\n        windowDefinition = { type: (windowTypeOrConfiguration as string), name: \"\", isIndependent: false, arguments: {} };\n      } else if (windowTypeOrConfiguration instanceof WindowType) {\n        windowDefinition = {\n          type: (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          name: windowTypeOrConfiguration.name || (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          isIndependent: false\n        };\n      } else {\n        // G4E-3178 When creating a window in activity, the loading animation doesn't hide - extra property URL\n        const invalidKeys: string[] = [\"url\"];\n\n        const filteredWindowTypeOrConfiguration: any = {};\n\n        Object.keys(windowTypeOrConfiguration).forEach((key) => {\n          if (invalidKeys.indexOf(key) === -1) {\n            filteredWindowTypeOrConfiguration[key] = windowTypeOrConfiguration[key];\n          }\n        });\n        windowDefinition = filteredWindowTypeOrConfiguration as WindowDefinition;\n      }\n\n      let relativeToWindow: string | WindowSource;\n      if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n        relativeToWindow = windowDefinition.relativeTo;\n        if (typeof relativeToWindow === \"string\") {\n          const windows = this.getWindows({ type: relativeToWindow as string });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n          const windows = this.getWindows({ type: relativeToWindow.type });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n          windowDefinition.relativeTo = relativeToWindow.windowId;\n        }\n      }\n\n      this._bridge.createWindow(activity && activity.id, windowDefinition)\n        .then((wid) => {\n\n          this._logger.debug(\"Window created, waiting for window entity with id \" + wid);\n          const handler = (window: ActivityWindow, context: EntityEventContext) => {\n            // wait until the window has activity property (this means it was joined)\n            if (window.id === wid && (!activity || window.activity)) {\n              this._logger.debug(\"Got entity window with id \" + wid);\n              resolve(window);\n              this._windows.unsubscribe(handler);\n            }\n          };\n\n          // if we can not get the window right away, wait for event\n          this._windows.subscribe(handler);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Creates relative windows from a given types and joins them to an activity\n   *\n   * @param activity               Activity to join relative windows to\n   * @param relativeWindowTypes    Relative window types to join (string or window definitions array)\n   * @param callback               (Optional) Result callback\n   * @returns                      Promise for ActivityWindow\n   */\n  public createStackedWindows(activity: Activity, relativeWindowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    const promise = new Promise<ActivityWindow[]>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity is undefined\");\n      }\n      if (util.isUndefinedOrNull(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes is undefined\");\n      }\n\n      if (!Array.isArray(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes has to be an array\");\n      }\n      if (util.isUndefinedOrNull(timeout)) {\n        timeout = 20000; // default timeout: 20 seconds\n      }\n\n      const windowDefinitions: WindowDefinition[] = [];\n      relativeWindowTypes.forEach((element) => {\n        let windowDefinition: WindowDefinition;\n        if (util.isString(element)) {\n          windowDefinition = { type: (element as string), name: \"\", isIndependent: false, arguments: {} };\n        } else {\n          windowDefinition = (element as WindowDefinition);\n        }\n\n        // a hint that this comes from createStackedWindows\n        windowDefinition.stackedWindow = true;\n        windowDefinition.timeout = timeout;\n\n        let relativeToWindow: WindowSource;\n        if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n          // this can not be string, converted in the prev. layer\n          relativeToWindow = windowDefinition.relativeTo as WindowSource;\n          if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n            windowDefinition.relativeTo = relativeToWindow.type;\n          } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n            const windows = this.getWindows({ id: relativeToWindow.windowId });\n            if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n              windowDefinition.relativeTo = windows[0].type.name;\n            }\n          }\n        }\n        windowDefinitions.push(windowDefinition);\n      });\n\n      const tasks: Array<Promise<ActivityWindow>> = [];\n      windowDefinitions.forEach((wd) => tasks.push(this.createWindow(activity, wd)));\n\n      Promise.all(tasks).then(resolve).catch(reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Joins a new window from a given type to the activity\n   *\n   * @param activity      Activity to join the window to\n   * @param window        The window to join\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public addWindowToActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.joinActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @param activity  Activity to remove the window from\n   * @param           The window to remove\n   * @param           (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public leaveWindowFromActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.leaveActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Replaces the activity context\n   * @param activity  Activity\n   * @param context   The new context\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for Activity\n   */\n  public setActivityContext(activity: Activity, context: object, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      // TODO: duplication with updateActivityContext\n\n      // DONE: verify is the change visible here when 'updateActivityContext' resolves?\n      this._bridge\n        .updateActivityContext(activity, context, true)\n        .then((_) => {\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from  context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @param activity\n   * @param context\n   * @param callback\n   */\n  public updateActivityContext(activity: Activity, context: any, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      const removedKeys = [];\n      for (const key in context) {\n        if (context.hasOwnProperty(key) && context[key] === null) {\n          removedKeys.push(key);\n        }\n      }\n      for (const removedKey of removedKeys) {\n        delete context[removedKey];\n      }\n\n      this._bridge\n        .updateActivityContext(activity, context, false, removedKeys)\n        .then((_) => {\n          // DONE: verify is the change already visible here when 'updateActivityContext' resolves?\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Subscribe for activity context update events\n   *\n   * @param activity  Activity\n   * @param handler   Handler function that will receive context related events\n   * @returns {}\n   */\n  public subscribeActivityContextChanged(handler: ActivityContextUpdateHandler) {\n    this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.ActivityContextChange) {\n        const updateContext = context as ActivityContextChangedEventContext;\n        handler(act, updateContext.context, updateContext.updated, updateContext.removed);\n      }\n    });\n  }\n\n  /**\n   * Stops an activity\n   * @returns {}\n   */\n  public stopActivity(activity: Activity, callback?: Callback<boolean>): Promise<boolean> {\n    const promise = this._bridge.stopActivity(activity);\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Returns activity windows based on some filter. If no filter supplied all activity windows are returned.\n   * @param filter  Filter that\n   * @returns Array of ActivityWindows that match the filter object\n   */\n  public getWindows(filter: { id?: string, type?: string, name?: string, activityId?: string }): ActivityWindow[] {\n    if (util.isUndefined(filter)) {\n      return this._windows.get();\n    }\n\n    if (!util.isUndefined(filter.id)) {\n      return [this._windows.getByName(filter.id)];\n    }\n\n    const allWindows = this._windows.get();\n\n    return allWindows.filter((w) => {\n\n      if (!util.isUndefined(filter.type) && w.type.id !== filter.type) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.name) && w.name !== filter.name) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.activityId)) {\n        if (util.isUndefinedOrNull(w.activity)) {\n          return false;\n        }\n\n        if (w.activity.id !== filter.activityId) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n\n  public getWindowBounds(id: string): Promise<WindowBounds> {\n    return this._bridge.getWindowBounds(id);\n  }\n\n  public setWindowBounds(id: string, bounds: WindowBounds, callback?: Callback<ActivityWindow>): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._bridge.setWindowBounds(id, bounds)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public closeWindow(id: string): Promise<any> {\n    return this._bridge.closeWindow(id);\n  }\n\n  public activateWindow(id: string, focus: boolean): Promise<any> {\n    return this._bridge.activateWindow(id, focus);\n  }\n\n  public setWindowVisibility(id: string, visible: boolean): Promise<any> {\n    return this._bridge.setWindowVisibility(id, visible);\n  }\n\n  public clone(activity: Activity, cloneOptions: CloneOptions, callback?: Callback<Activity>) {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (!activity) {\n        reject(\"activity can not be null\");\n      }\n\n      this._bridge.cloneActivity(activity.id, cloneOptions)\n        .then((activityId) => {\n          this._activities\n            .getOrWait(activityId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public attachActivities(from: string, to: string, tag?: object, callback?: Callback<AttachedActivityDescriptor>): Promise<AttachedActivityDescriptor> {\n\n    tag = tag || {};\n\n    const promise = new Promise<AttachedActivityDescriptor>((resolve, reject) => {\n\n      const fromActivity = this._activities.getByName(from);\n      if (!fromActivity) {\n        reject(\"can not find activity with id \" + from);\n        return;\n      }\n\n      const toActivity = this._activities.getByName(to);\n      if (!toActivity) {\n        reject(\"can not find activity with id \" + to);\n        return;\n      }\n\n      return this._bridge.attachActivities(from, to, tag)\n        .then((data: any) => {\n          const newActId = data.to;\n          const state = data.descriptor;\n          const allStates = data.descriptors;\n\n          this._activities.getOrWait(newActId).then((act) => {\n            act._updateDescriptors(allStates);\n            const stateWrapped = act.attached.filter((u) => u.ownerId === state.ownerId)[0];\n\n            resolve(stateWrapped);\n          });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public detachActivities(\n    activityId: string,\n    descriptor: ActivityDescriptor,\n    callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      return this._bridge.detachActivities(activityId, descriptor)\n        .then(/*(params)*/() => {\n          // #deleteme TODO: deal with this\n          const oldActId: string = undefined; // params.oldActivityId;\n          const newActId: string = undefined; // params.newActivityId;\n          const descriptors: any = undefined; // params.descriptors;\n\n          this._activities\n            .getOrWait(oldActId)\n            .then((oldAct: Activity) => {\n              oldAct._updateDescriptors(descriptors);\n\n              this._activities\n                .getOrWait(newActId)\n                .then((newAct: Activity) => {\n                  resolve(newAct);\n                });\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivitiesAttached(callback: any) {\n    this._attachedCallbacks.push(callback);\n  }\n\n  public subscribeActivitiesDetached(callback: any) {\n    this._detachedCallbacks.push(callback);\n  }\n\n  public subscribeActivityFrameColorChanged(callback: () => void) {\n    this._frameColorChangesCallbacks.push(callback);\n  }\n\n  /** Assigns a manager to a given ActivityEntity */\n  private _grabEntity(entity: ActivityEntity) {\n    entity._manager = this;\n  }\n\n  private _getInitialData() {\n    this._logger.debug(\"Request initial data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.getActivityTypes()\n      .then((at) => {\n        this._activityTypes.add(at);\n        this._dataReadyMarker.signal(\"Got act types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity types -\" + error);\n      });\n\n    this._bridge.getWindowTypes()\n      .then((wt) => {\n        this._windowTypes.add(wt);\n        this._dataReadyMarker.signal(\"Got window types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting window types  \" + error);\n      });\n\n    this._bridge.getActivities()\n      .then((ac) => {\n        this._activities.add(ac);\n        this._dataReadyMarker.signal(\"Got activities\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity instances -\" + error);\n      });\n\n    this._bridge.getActivityWindows()\n      .then((aw) => {\n        this._windows.add(aw);\n        this._dataReadyMarker.signal(\"Got windows\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity windows -\" + error);\n      });\n  }\n\n  private _subscribeForData() {\n    this._logger.debug(\"Subscribe for data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.onActivityTypeStatusChange((event) => {\n      this._activityTypes.process(event);\n    });\n\n    this._bridge.onWindowTypeStatusChange((event) => {\n      this._windowTypes.process(event);\n    });\n\n    this._bridge.onActivityWindowChange((event) => {\n      this._windows.process(event);\n    });\n\n    this._bridge.onActivityStatusChange((event: EntityEvent<Activity>) => {\n      this._activities.process(event);\n    });\n  }\n\n  private _handleActivitiesAttached(data: any) {\n\n    const newActId = data.to;\n    const descriptor = data.descriptor;\n    const descriptors = data.descriptors;\n\n    this._activities.getOrWait(newActId).then((act) => {\n      act._updateDescriptors(descriptors);\n      const descriptorAsObjectFromAPI = act.attached.filter((u) => u.ownerId === descriptor.ownerId)[0];\n\n      this._attachedCallbacks.forEach((callback) => {\n        try {\n          callback(act, descriptorAsObjectFromAPI);\n        } catch (err) {\n          return;\n        }\n      });\n\n    });\n  }\n\n  private _handleActivitiesDetached(data: any) {\n    const oldActId = data.oldActivityId;\n    const newActId = data.newActivityId;\n    const descriptors = data.descriptors;\n    const descriptor = data.descriptor;\n\n    this._activities.getOrWait(oldActId).then((oldAct) => {\n\n      oldAct._updateDescriptors(descriptors);\n\n      this._activities.getOrWait(newActId).then((newAct) => {\n\n        this._detachedCallbacks.forEach((callback) => {\n          try {\n            callback(newAct, oldAct, descriptor);\n          } catch (err) {\n            return;\n          }\n        });\n      });\n    });\n  }\n\n  private _handleActivityDescriptorsRefreshed(data: any) {\n    const id = data.id;\n    const descriptors = data.descriptors;\n\n    const act = this._activities.getByName(id);\n    if (act) {\n      act._updateDescriptors(descriptors);\n    }\n  }\n\n  private refreshDescriptors() {\n    this._bridge.getAttachedDescriptors()\n      .then((map: any) => {\n\n        // populate descriptors\n        if (map) {\n          Object.keys(map).forEach((key: string) => {\n            const actId = key;\n            const descriptors = map[key];\n\n            const act = this._activities.getByName(actId);\n            if (act) {\n              act._updateDescriptors(descriptors);\n            }\n          });\n        }\n\n        this._descriptorsMarker.signal(\"Successfully got descriptors\");\n      })\n      .catch((err) => {\n        this._descriptorsMarker.error(\"failed to get descriptors - \" + err);\n      });\n  }\n\n  private _handleWindowFrameColorChanged(win: Glue42.Windows.GDWindow) {\n    if (!win.activityId) {\n      return;\n    }\n\n    const act = this._activities.getByName(win.activityId);\n    if (!act) {\n      return;\n    }\n\n    // notify for the owner only\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id !== win.id) {\n      return;\n    }\n\n    this._frameColorChangesCallbacks.forEach((callback) => {\n      try {\n        callback(act, win.frameColor);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n}\n","import ActivityType from \"./../entities/activityType\";\nimport WindowType from \"./../entities/windowType\";\nimport * as util from \"./../helpers/util\";\nimport ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { Callback } from \"./../contracts/contracts\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\nimport { ActivityStatus } from \"./../contracts/activityStatus\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface ManagementAPI {\n  activityTypes: Glue42.Activities.ActivityTypesAPI;\n  windowTypes: Glue42.Activities.WindowTypesAPI;\n  windows: Glue42.Activities.WindowingAPI;\n  instances: Glue42.Activities.InstancesAPI;\n\n  onAttached(callback: () => void): void;\n  onDetached(callback: () => void): void;\n  onActivityFrameColorChanged(callback: () => void): void;\n}\n\nexport class ActivityManagementAPI implements ManagementAPI {\n\n  public _m: ActivityManager;\n\n  public _my: My;\n\n  public activityTypes: Glue42.Activities.ActivityTypesAPI;\n\n  public windowTypes: Glue42.Activities.WindowTypesAPI;\n\n  public windows: Glue42.Activities.WindowingAPI;\n\n  public instances: Glue42.Activities.InstancesAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._m = manager;\n    this._my = my;\n\n    this.activityTypes = {\n      get: this._getActivityTypesWrapper.bind(this),\n      register: this._m.registerActivityType.bind(this._m),\n      unregister: this._m.unregisterActivityType.bind(this._m),\n      subscribe: this._m.subscribeActivityTypeEvents.bind(this._m),\n      unsubscribe: undefined,\n      initiate: this._m.initiate.bind(this._m)\n    };\n\n    this.windowTypes = {\n      get: this._getWindowTypesWrapper.bind(this),\n      registerFactory: this._m.registerWindowFactory.bind(this._m),\n      unregisterFactory: this._m.unregisterWindowFactory.bind(this._m),\n      subscribe: this._m.subscribeWindowTypeEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n\n    this.windows = {\n      get: this._m.getWindows.bind(this._m),\n      subscribe: this._m.subscribeWindowEvents.bind(this._m),\n      announce: this._m.announceWindow.bind(this._m),\n      unsubscribe: undefined,\n      create: this._m.createWindow.bind(this._m)\n    };\n\n    this.instances = {\n      get: this._m.getActivities.bind(this._m),\n      subscribe: this._m.subscribeActivityEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n  }\n\n  public onAttached(callback: () => void) {\n    this._m.subscribeActivitiesAttached(callback);\n  }\n\n  public onDetached(callback: () => void) {\n    this._m.subscribeActivitiesDetached(callback);\n  }\n\n  public onActivityFrameColorChanged(callback: () => void) {\n    this._m.subscribeActivityFrameColorChanged(callback);\n  }\n\n  private _getActivityTypesWrapper(name?: string): ActivityType[] | ActivityType {\n    if (util.isUndefined(name)) {\n      return this._m.getActivityTypes();\n    }\n    return this._m.getActivityType(name);\n  }\n\n  private _getWindowTypesWrapper(name?: string): WindowType[] | WindowType {\n    if (util.isUndefined(name)) {\n      return this._m.getWindowTypes();\n    }\n    return this._m.getWindowType(name);\n  }\n}\n","import ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { nodeify } from \"./../helpers/promiseExtensions\";\nimport { ActivityManagementAPI, ManagementAPI } from \"./activityManagementAPI\";\nimport { ActivityAGM } from \"../core/activityAGM\";\n\nexport interface API {\n\n  aware: boolean;\n\n  inActivity: boolean;\n\n  my: My;\n\n  agm: ActivityAGM;\n\n  all: ManagementAPI;\n\n  ready(callback?: (api: API) => void): Promise<API>;\n\n  getAvailableFrameColors(): string[];\n}\n\n/**\n * The entry points of activities API - accessible from glue.activities\n *\n * @module activities\n */\nexport class ActivityAPI implements API {\n\n  public _mgr: ActivityManager;\n  public _my: My;\n\n /**\n  * Extended API that provides access to all running activities and windows and available activity and window types\n  *\n  * @var {module:all} all\n  */\n public all: ManagementAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._mgr = manager;\n    this._my = my;\n    this.all = new ActivityManagementAPI(manager, my);\n  }\n\n  /**\n   * The entry point for your activity code.\n   *\n   * @function ready\n   * @returns {Promise<module:activities>} A promise for activity API\n   */\n  public ready(callback?: any): Promise<API> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._mgr.ready()\n        .then(() => {\n          resolve(this);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * A lightweight, single activity oriented subset of the API which should be used by most activity applications\n   *\n   * @var {module:my} my\n   */\n  public get my(): My {\n    return this._my;\n  }\n\n  /**\n   * True if the current window is activity aware - meaning that the window has been created as\n   * an activity participant - either a helper or an independent window.\n   * Check this after the API is ready.\n   *\n   * @var {bool} aware\n   */\n  public get aware(): boolean {\n    return this._my.window !== undefined;\n  }\n\n  /**\n   * Returns true if the current window is activity aware and is currently participating in activity\n   *\n   * @var {bool} inActivity\n   */\n  public get inActivity(): boolean {\n    return this.aware && this._my.activity !== undefined;\n  }\n\n  /**\n   * Defines an Activity-specific version of the AGM API which:\n   * * restricts method registrations to activity-only windows\n   * * restricts method discovery and invocation to activity-only methods, unless you explicitly specify otherwise\n   * Other than that, the API is pretty much the same.\n   *\n   * @var  {module:activityAGM} agm\n   *\n   */\n  public get agm(): ActivityAGM {\n    if (!this.aware) {\n      // no agm if not activity aware\n      return undefined;\n    }\n    if (!this.inActivity) {\n      // if we're not in activity no\n      return new ActivityAGM(null);\n    }\n\n    return this._my.activity.agm;\n  }\n\n  /**\n   * Returns a list of frame colors that can be used as activity frame colors\n   *\n   * @returns {string[]}\n   */\n  public getAvailableFrameColors(): string[] {\n    // TODO - not available in GD3\n    return [];\n  }\n}\n","import GW3Bridge from \"./bridges/gw3Bridge\";\n\nimport My from \"./API/activityMyAPI\";\nimport ActivityManager from \"./core/activityManager\";\n\nimport { ActivityBridge } from \"./bridges/activityBridge\";\n\nimport { ActivityConfig } from \"./activityConfig\";\nimport { ActivityAPI } from \"./API/activityAPI\";\nimport { ActivityAGM } from \"./core/activityAGM\";\nimport { Logger } from \"./helpers/logger\";\nimport * as util from \"./helpers/util\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { nodeify } from \"./helpers/promiseExtensions\";\n\n/**\n * Activity context update handler - used when we want to subscribe for context changes in a specific activity\n *\n * @callback contextChangedHandler\n * @param {Object} context The full context of the activity after the update\n * @param {Object} delta The delta (contains the added/removed keys at top level)\n * @param {string[]} removed  Array of keys that were removed from context\n * @param {module:activity} activity The activity instance that owns the context\n *\n */\n\n/**\n * @callback windowEventHandler Handler for ActivityWindow events - e.g window joined to activity, window removed from\n * activity\n * @param {module:activity} activity\n * @param {module:activityWindow} window\n * @param {string} event 'joined' or 'removed'\n */\n\n/**\n * @callback activityStatusChangeHandler Handler for activity status changed events\n * @param {module:activity} activity\n * @param {activityStatus} newStatus\n * @param {activityStatus} oldStatus\n *\n */\n\n/**\n * @typedef {Object} windowDefinition\n * @property {string} type\n * @property {string} name\n * @property {Object} arguments\n */\n\n/**\n * @typedef {Object} bounds\n * @param {number} top\n * @param {number} left\n * @param {number} width\n * @param {number} height\n *\n */\n\n/**\n * @typedef {Object} agmInstance\n * @param {string} application\n * @param {string} pid\n * @param {string} machine\n * @param {string} user\n * @param {string} environment\n * @param {string} region\n */\n\n// Factory function for activity API\nexport class ActivityModule {\n    public static checkIsUsingGW3Implementation(connection: Glue42Core.Connection.API) {\n        return connection.protocolVersion === 3;\n    }\n\n    private _api: ActivityAPI;\n    private _isUsingGW3Implementation: boolean;\n    private _isUsingHCImplementation: boolean;\n    private _readyPromise: Promise<ActivityModule>;\n\n    get api(): ActivityAPI {\n        return this._api;\n    }\n\n    set api(value: ActivityAPI) {\n        this._api = value;\n    }\n\n    constructor(config: ActivityConfig) {\n        if (!config) {\n            throw new Error(\"config can not be null\");\n        }\n\n        // set log level\n        if (!util.isUndefined(config.logLevel)) {\n            Logger.Level = config.logLevel;\n        }\n\n        if (!util.isUndefinedOrNull(config.logger)) {\n            Logger.GlueLogger = config.logger;\n        }\n\n        // choose the correct bridge\n        let bridge: ActivityBridge;\n        this._isUsingHCImplementation = config.gdMajorVersion === 2;\n        this._isUsingGW3Implementation = ActivityModule.checkIsUsingGW3Implementation(config.connection);\n\n        if (this._isUsingHCImplementation) {\n            throw new Error(\"GD2 not supported\");\n        } else if (this._isUsingGW3Implementation) {\n            bridge = new GW3Bridge(config);\n        } else {\n            throw new Error(\"Unable to instantiate activity bridge implementation\");\n        }\n\n        if (!bridge) {\n            throw new Error(\"A bridge to native activity is needed to create activity lib.\");\n        }\n\n        ActivityAGM.AGM = config.agm;\n        const activityManager = new ActivityManager(bridge, !config.disableAutoAnnounce, config.windows);\n        const my = new My(activityManager, config.windows);\n        this._api = new ActivityAPI(activityManager, my);\n        this._readyPromise = activityManager.ready().then((_) => this);\n    }\n\n    public get isUsingHCImplementation(): boolean {\n        return this._isUsingHCImplementation;\n    }\n\n    public get isUsingGW3Implementation(): boolean {\n        return this._isUsingGW3Implementation;\n    }\n\n    public ready(callback?: (err: string, module: ActivityModule) => void): Promise<void> {\n        return nodeify(this._readyPromise, callback) as any as Promise<void>;\n    }\n}\n","export const ShutdownMethodName = \"T42.ACS.Shutdown\";\nexport const OnGDShutdownMethodName = \"T42.ACS.OnGDShutdown\";\nexport const RestartMethodName = \"T42.ACS.Restart\";\n\nexport const FeedbackMethodName = \"T42.ACS.Feedback\";\n\nexport const GetConfigurationRegionMethodName = \"T42.ACS.GetConfigurationRegion\";\nexport const SetConfigurationRegionMethodName = \"T42.ACS.SetConfigurationRegion\";\n\nexport const GetUserMethodName = \"T42.ACS.GetUser\";\nexport const GetBranchesMethodName = \"T42.ACS.GetBranches\";\nexport const GetCurrentBranchMethodName = \"T42.ACS.GetCurrentBranch\";\nexport const SetCurrentBranchMethodName = \"T42.ACS.SetCurrentBranch\";\n\nexport const GetFunctionalEntitlementMethodName = \"T42.ACS.GetFunctionalEntitlement\";\nexport const CanIMethodName = \"T42.ACS.CanI\";\n\nexport const StartApplicationMethodName = \"T42.ACS.StartApplication\";\nexport const StopApplicationMethodName = \"T42.ACS.StopApplication\";\nexport const ActivateApplicationMethodName = \"T42.ACS.ActivateApplication\";\nexport const RunApplicationMethodName = \"T42.ACS.RunApplication\";\n\nexport const OnEventMethodName = \"T42.ACS.OnEvent\";\n\nexport const GetApplicationsMethodName = \"T42.ACS.GetApplications\";\n","\"use strict\";\nfunction createRegistry(options) {\n    if (options && options.errorHandling\n        && typeof options.errorHandling !== \"function\"\n        && options.errorHandling !== \"log\"\n        && options.errorHandling !== \"silent\"\n        && options.errorHandling !== \"throw\") {\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\n    }\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\n    var callbacks = {};\n    function add(key, callback, replayArgumentsArr) {\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey) {\n            callbacksForKey = [];\n            callbacks[key] = callbacksForKey;\n        }\n        callbacksForKey.push(callback);\n        if (replayArgumentsArr) {\n            setTimeout(function () {\n                replayArgumentsArr.forEach(function (replayArgument) {\n                    var _a;\n                    if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {\n                        try {\n                            if (Array.isArray(replayArgument)) {\n                                callback.apply(undefined, replayArgument);\n                            }\n                            else {\n                                callback.apply(undefined, [replayArgument]);\n                            }\n                        }\n                        catch (err) {\n                            _handleError(err, key);\n                        }\n                    }\n                });\n            }, 0);\n        }\n        return function () {\n            var allForKey = callbacks[key];\n            if (!allForKey) {\n                return;\n            }\n            allForKey = allForKey.reduce(function (acc, element, index) {\n                if (!(element === callback && acc.length === index)) {\n                    acc.push(element);\n                }\n                return acc;\n            }, []);\n            if (allForKey.length === 0) {\n                delete callbacks[key];\n            }\n            else {\n                callbacks[key] = allForKey;\n            }\n        };\n    }\n    function execute(key) {\n        var argumentsArr = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            argumentsArr[_i - 1] = arguments[_i];\n        }\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey || callbacksForKey.length === 0) {\n            return [];\n        }\n        var results = [];\n        callbacksForKey.forEach(function (callback) {\n            try {\n                var result = callback.apply(undefined, argumentsArr);\n                results.push(result);\n            }\n            catch (err) {\n                results.push(undefined);\n                _handleError(err, key);\n            }\n        });\n        return results;\n    }\n    function _handleError(exceptionArtifact, key) {\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\n        if (_userErrorHandler) {\n            _userErrorHandler(errParam);\n            return;\n        }\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\n        if (options) {\n            switch (options.errorHandling) {\n                case \"log\":\n                    return console.error(msg);\n                case \"silent\":\n                    return;\n                case \"throw\":\n                    throw new Error(msg);\n            }\n        }\n        console.error(msg);\n    }\n    function clear() {\n        callbacks = {};\n    }\n    function clearKey(key) {\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey) {\n            return;\n        }\n        delete callbacks[key];\n    }\n    return {\n        add: add,\n        execute: execute,\n        clear: clear,\n        clearKey: clearKey\n    };\n}\n;\ncreateRegistry.default = createRegistry;\nmodule.exports = createRegistry;\n//# sourceMappingURL=index.js.map","export function objectValues(source: {[key: string]: any}): any[] {\n    if (!source) {\n        return [];\n    }\n    return Object.keys(source).map((key) => source[key]);\n}\n\nexport function objectClone(obj: {[key: string]: any}): any {\n    let result;\n    try {\n        result = JSON.parse(JSON.stringify(obj || {}));\n    } catch (error) {\n        result = {};\n    }\n\n    return result;\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, StartAppResult } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { objectClone } from \"./helper\";\n\nexport default class ApplicationImpl implements Glue42.AppManager.Application {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    // Additional properties of the Application\n    private _props: AppProps;\n\n    constructor(private _appManager: AppManagerImpl, private _name: string, private _agm: Glue42Core.AGM.API) {\n\n        // TODO: Replace string events with constants. The string declaration of the registry event name should only ever appear once. Ever. Period.\n\n        // subscribe for events from app-manager\n        _appManager.onInstanceStarted((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStarted\", instance);\n        });\n\n        _appManager.onInstanceStopped((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStopped\", instance);\n        });\n\n        _appManager.onAppRemoved((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appRemoved\", app);\n        });\n\n        _appManager.onAppChanged((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appChanged\", app);\n        });\n\n        _appManager.onAppAvailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appAvailable\", app);\n        });\n\n        _appManager.onAppUnavailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appUnavailable\", app);\n        });\n    }\n\n    get name(): string { return this._name; }\n    get title(): string { return this._props.Title; }\n    get version(): string { return this._props.Version; }\n    get autoStart(): boolean { return this._props.AutoStart; }\n    get isShell(): boolean { return this._props.IsShell; }\n    get caption(): string { return this._props.Caption; }\n    get hidden(): boolean { return this._props.IsHidden; }\n    get container(): string { return this._props.ApplicationName; }\n    get activityType(): string { return this._props.ActivityType; }\n    get activityWindowType(): string { return this._props.ActivityWindowType; }\n    get windowSettings(): { [key: string]: any } {\n        if (!this._props.Arguments) {\n            return {};\n        }\n        return objectClone(this._props.Arguments);\n    }\n    get allowMultiple(): boolean { return this._props.AllowMultiple; }\n    get available(): boolean { return this._props.IsReady || true; }\n    get icon(): string { return this._props.Icon; }\n    get iconURL(): string { return this._props.IconUrl; }\n    get sortOrder(): number { return this._props.SortOrder; }\n    get userProperties(): { [key: string]: any } {\n        if (!this._props.UserProperties) {\n            return {};\n        }\n        return objectClone(this._props.UserProperties);\n    }\n    get isActivity(): boolean {\n        return this._props.ActivityType !== undefined && this._props.ActivityType !== \"\";\n    }\n\n    get configuration(): Glue42.AppManager.LegacyAppConfigProperties {\n        return {\n            autoStart: this._props.AutoStart,\n            caption: this._props.Caption,\n            hidden: this._props.IsHidden,\n            container: this._props.ApplicationName,\n            activityType: this._props.ActivityType,\n            allowMultiple: this._props.AllowMultiple\n        };\n    }\n\n    get instances() {\n        return this._appManager.instances().filter((instance: Glue42.AppManager.Instance) => instance.application.name === this._name);\n    }\n\n    get type() {\n        return this._props.Type;\n    }\n\n    get mode() {\n        if (!this._props) {\n            // no info about the app\n            return \"unknown\";\n        }\n\n        // GD3 - we always have Mode from the stream object\n        if (this._props.Mode && typeof this._props.Mode === \"string\") {\n            return this._props.Mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // GD2\n        // return unknown for activity applications\n        if (this.isActivity) {\n            return \"unknown\";\n        }\n\n        // check definition -> hc.args.mode\n        if (this._props.Arguments && this._props.Arguments.mode && typeof this._props.Arguments.mode === \"string\") {\n            return this._props.Arguments.mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // if no hc.args.mode, check hc.WindowStyleAttributes\n        let styleAttributes = this._props.WindowStyleAttributes;\n        if (styleAttributes) {\n            // WindowStyleAttributes is not a valid JSON, we will need to find mode in the string\n            styleAttributes = styleAttributes.split(\" \").join(\"\");\n            const searchFor = \"mode:\\\"\";\n            const modeIndex = styleAttributes.indexOf(searchFor);\n            if (modeIndex !== -1) {\n                const startModeIndex = modeIndex + searchFor.length;\n                const stopModeIndex = styleAttributes.indexOf(\"\\\"\", startModeIndex);\n                const style = styleAttributes.substr(startModeIndex, stopModeIndex - startModeIndex);\n                if (style && typeof style === \"string\") {\n                    return style.toLowerCase() as Glue42.Windows.WindowMode;\n                }\n            }\n        }\n\n        // default mode for GD2\n        return \"flat\";\n    }\n\n    public updateFromProps(props: AppProps) {\n        if (!this._props) {\n            this._props = { Name: props.Name };\n        }\n\n        Object.keys(props).forEach((key) => {\n            (this._props as any)[key] = (props as any)[key];\n        });\n    }\n\n    public start(context?: unknown, options?: Glue42.AppManager.ApplicationStartOptions): Promise<Glue42.AppManager.Instance> {\n        return new Promise<Glue42.AppManager.Instance>(async (resolve, reject) => {\n            const name = this._name;\n            let startTimeout: number = 60000;\n\n            options = options || {};\n            context = context || {};\n            let waitForAGMInstance = options.waitForAGMReady ?? true;\n\n            const waitForApplicationInstance = (id: string) => {\n                let unsub: () => void;\n                // reject after some timeout\n                const timeout = setTimeout(() => {\n                    if (unsub) {\n                        unsub();\n                    }\n                    reject(`timed out while waiting for instance id ${id} for app ${this.name}`);\n                }, startTimeout);\n\n                const waitFunc = (i: Glue42.AppManager.Instance) => {\n                    if (i.id !== id) {\n                        return;\n                    }\n                    if (unsub) {\n                        unsub();\n                        unsub = undefined;\n                    }\n                    clearTimeout(timeout);\n                    resolve(i);\n                };\n\n                if (waitForAGMInstance) {\n                    unsub = this._appManager.onInstanceAgmServerReady(waitFunc);\n                } else {\n                    // if not there subscribe for instance events\n                    unsub = this._appManager.onInstanceStarted(waitFunc);\n                }\n            };\n\n            const result = await this._agm.invoke<StartAppResult>(AgmNames.StartApplicationMethodName,\n                {\n                    Name: name,\n                    Context: context,\n                    Options: options\n                },\n                \"best\",\n                {\n                    methodResponseTimeoutMs: startTimeout\n                });\n\n            const acsResult: StartAppResult = result.returned;\n            if (typeof acsResult.timeout !== \"undefined\") {\n                startTimeout = acsResult.timeout * 1000;\n            }\n            if (typeof acsResult.waitForInterop !== \"undefined\" && typeof options.waitForAGMReady === \"undefined\") {\n                waitForAGMInstance = acsResult.waitForInterop;\n            }\n\n            if (acsResult && acsResult.Id) {\n                if (this._appManager.mode === \"startOnly\") {\n                    // we're in startOnly mode, no stream, so we will simulate the instance\n                    // based on the data received from GD\n                    const instance = this._appManager.handleInstanceStarted({\n                        ActivityId: undefined,\n                        IsActivityOwner: undefined,\n                        Context: undefined,\n                        Title: undefined,\n                        AgmServers: undefined,\n                        Id: acsResult.Id,\n                        Name: acsResult.Name,\n                    });\n                    resolve(instance);\n                } else {\n                    // we received instance from ACS, let's wait until it appears on the stream\n                    waitForApplicationInstance(acsResult.Id);\n                }\n            } else {\n                // we haven't received instance from ACS - this might happen if the app does not\n                // support tracking instances (e.g. we start internet explorer with some url)\n                resolve(undefined);\n            }\n        });\n    }\n\n    public onInstanceStarted(callback: (instance: Glue42.AppManager.Instance) => any): void {\n        this._registry.add(\"instanceStarted\", callback);\n    }\n\n    public onInstanceStopped(callback: (instance: Glue42.AppManager.Instance) => any): void {\n        this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onAvailable(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onUnavailable(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onChanged(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appChanged\", callback);\n    }\n\n    public onRemoved(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appRemoved\", callback);\n    }\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { InstanceProps, WindowContext } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class InstanceImpl implements Glue42.AppManager.Instance {\n\n    public onAgmReady = this._addToRegistry(\"agmReady\");\n\n    public onStopped = this._addToRegistry(\"stopped\");\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    private _startUpContext: WindowContext;\n    private _title: string;\n    private _isActivityInstance: boolean;\n    private _activityId: string;\n    private _inActivity: boolean;\n    private _isActivityOwner: boolean;\n    private _agmInstance: Partial<Glue42Core.AGM.Instance>;\n    private _unsubscribeInstanceAgmServerReady: UnsubscribeFunction;\n    private _unsubscribeInstanceStopped: UnsubscribeFunction;\n\n    constructor(\n        private _id: string,\n        private _appName: string,\n        private _appManager: AppManagerImpl,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        startFailed?: boolean\n    ) {\n        if (startFailed) {\n            return;\n        }\n\n        this._unsubscribeInstanceStopped = this._appManager.onInstanceStopped((instance: Glue42.AppManager.Instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"stopped\", instance);\n        });\n\n        this._unsubscribeInstanceAgmServerReady = this._appManager.onInstanceAgmServerReady((instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"agmReady\", instance);\n        });\n    }\n\n    get id(): string { return this._id; }\n\n    get application(): Glue42.AppManager.Application { return this._appManager.application(this._appName); }\n\n    get activity(): Glue42.Activities.Activity {\n        if (!this._activities) {\n            throw new Error(\"This method requires glue.activities library to be enabled.\");\n        }\n        return this._activities.all.instances.get()\n            .filter((activityInstance: Glue42.Activities.Activity) => activityInstance.id === this._activityId)[0];\n    }\n\n    get isActivityOwner(): boolean { return this._isActivityOwner; }\n\n    // this property returns a list of activity window instances (not activity instances)\n    get activityInstances(): Glue42.AppManager.Instance[] {\n        return this._appManager.instances().filter((i) =>\n            i.application.type !== \"activity\" && // GD2 backward compatibility -  do not show activity instances into the activity window instances list\n            i.activityId && // glue js 2 and 3 bug and breaking change - they will show non activity window instances as activity in case of activityId === undefined\n            i.activityId === this._activityId);\n    }\n\n    get activityOwnerInstance(): Glue42.AppManager.Instance {\n        if (!this._activityId) {\n            return undefined;\n        }\n        return this.activityInstances.filter((inst) => (inst as InstanceImpl)?.isActivityOwner)[0];\n    }\n\n    get window(): Glue42.Windows.GDWindow {\n        if (!this._windows) {\n            throw new Error(\"This method requires glue.windows library to be enabled.\");\n        }\n\n        let win = this._windows.list().filter((w) => w.id === this._id)[0];\n        if (!win && this._activities && this.activity && this.activityOwnerInstance) {\n            // This is covering GD3 activity instance\n            win = this.activityOwnerInstance.window;\n        }\n\n        return win;\n    }\n\n    get context(): WindowContext {\n        return this._startUpContext ?? this.window?.context ?? {};\n    }\n\n    get title(): string { return this._title; }\n\n    get isActivityInstance(): boolean { return this._isActivityInstance; }\n\n    get activityId(): string { return this._activityId; }\n\n    get inActivity(): boolean { return this._inActivity; }\n\n    get isSingleWindowApp(): boolean { return !this._inActivity; }\n\n    get agm(): Partial<Glue42Core.AGM.Instance> {\n        return this._agmInstance;\n    }\n\n    // uses this.window and waits for the window to appear if needed\n    // we can not remove this.window for legacy reasons\n    public getWindow(): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            // try to get it the normal way\n            const result = this.window;\n            if (result) {\n                resolve(result);\n                return;\n            }\n\n            // if we can not find it directly wait for it to appear\n            const done = (error?: Error, window?: Glue42.Windows.GDWindow) => {\n                if (error) {\n                    reject(error);\n                }\n\n                if (window) {\n                    resolve(window);\n                }\n\n                setTimeout(() => {\n                    clearTimeout(timeout);\n                    unsub();\n                }, 0);\n            };\n\n            // if not found for 30 sec reject\n            const timeout = setTimeout(() => {\n                done(new Error(`can not find a window with id ${this._id}`));\n            }, 30000);\n\n            const unsub = this._windows.onWindowAdded((w) => {\n                if (w.id === this._id) {\n                    done(undefined, w);\n                }\n            });\n        });\n    }\n\n    public updateFromProps(props: InstanceProps): void {\n        this._startUpContext = props.Context;\n        this._title = props.Title;\n        this._isActivityInstance = false;\n        if (props.ActivityId && props.ActivityId !== \"\") {\n            this._activityId = props.ActivityId;\n            this._isActivityInstance = true;\n        }\n        this._isActivityOwner = props.IsActivityOwner;\n        if (!this._activityId && this._startUpContext && this._startUpContext.activityId) {\n            this._activityId = this._startUpContext.activityId;\n        }\n        this._inActivity = Boolean(this._activityId);\n\n        this.updateAgmInstanceFromProps(props);\n    }\n\n    public updateAgmInstanceFromProps(props: InstanceProps) {\n        if (!props.AgmServers) {\n            return;\n        }\n\n        const agmInstances: Glue42Core.AGM.Instance[] = props.AgmServers as Glue42Core.AGM.Instance[];\n        if (agmInstances) {\n            this._agmInstance = agmInstances[0];\n        }\n    }\n\n    public stop(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsubscribe = this._appManager.onInstanceStopped((instance) => {\n                if (instance.id === this._id) {\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            this._agm.invoke(\n                AgmNames.StopApplicationMethodName,\n                {\n                    Name: this._appName,\n                    Id: this._id\n                })\n                .then(() => {\n                    if (this._appManager.mode === \"startOnly\") {\n                        this._appManager.handleInstanceStopped({\n                            Name: this._appName,\n                            Id: this.id,\n                            Context: undefined,\n                            Title: undefined,\n                            ActivityId: undefined,\n                            IsActivityOwner: undefined,\n                            AgmServers: undefined\n                        });\n                        // in startOnly mode, resolve stop as soon as we receive\n                        resolve();\n                    }\n                })\n                .catch((err: any) => reject(err));\n        });\n    }\n\n    public activate(): Promise<Glue42Core.AGM.InvocationResult<any>> {\n        return this._agm.invoke(AgmNames.ActivateApplicationMethodName, { Name: this._appName, Id: this._id });\n    }\n\n    public done() {\n\n        // remove all handlers\n        this._registry.clear();\n        // remove subscriptions\n        this._unsubscribeInstanceAgmServerReady();\n        this._unsubscribeInstanceStopped();\n    }\n\n    public getContext(): Promise<object> {\n        return Promise.resolve(this.context);\n    }\n\n    private _addToRegistry(key: string) {\n        return (callback: (instance: Glue42.AppManager.Instance) => any) => {\n            this._registry.add(key, callback);\n        };\n    }\n}\n","import ApplicationImpl from \"./application\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport InstanceImpl from \"./instance\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class AppManagerImpl implements Glue42.AppManager.AppManager {\n\n    private _apps: { [key: string]: ApplicationImpl } = {};\n    private _instances: InstanceImpl[] = [];\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    constructor(\n        public mode: Glue42.AppManager.Mode,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        private _logger: Glue42Core.Logger.API,\n        private _gdMajorVersion: number\n    ) {\n        //\n    }\n\n    public application = (name: string) => {\n        return this._apps[name];\n    }\n\n    public applications = () => {\n        return Object.keys(this._apps).map((k: string) => this._apps[k]);\n    }\n\n    public instances = () => {\n        return this._instances;\n    }\n\n    public getMyInstance = () => {\n        if (this._gdMajorVersion >= 3) {\n            // GD3 check\n            const instanceId = window.glue42gd.appInstanceId;\n            return this._instances.filter((i) => i.id === instanceId)[0];\n        }\n\n        return undefined;\n    }\n\n    public handleAppAdded = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`adding app ${id}`);\n        this._apps[id] = new ApplicationImpl(this, id, this._agm);\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appAdded\", app);\n    }\n\n    public handleAppUpdated = (props: AppProps) => {\n        // TODO: check side effects, is this._apps updated?\n\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appChanged\", app);\n    }\n\n    public handleAppRemoved = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`removing app ${id}`);\n        const app = this.application(id);\n\n        // remove all instances related to the app\n        this._instances = this._instances.filter((i) => i.application.name !== app.name);\n\n        delete this._apps[id];\n\n        this._registry.execute(\"appRemoved\", app);\n    }\n\n    public handleAppReady = (props: AppProps) => {\n        const id = this._getAppId(props);\n        const app = this._getAppOrThrow(id);\n        app.updateFromProps(props);\n\n        if (app.available) {\n            this._registry.execute(\"appAvailable\", app);\n        } else {\n            this._registry.execute(\"appUnavailable\", app);\n        }\n    }\n\n    public handleInstanceStarted = (props: InstanceProps): InstanceImpl => {\n        this._logger.trace(`started app ${props.Name} ${props.Id}`);\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n\n        const instance = new InstanceImpl(id, appName, this, this._agm, this._activities, this._windows);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._instances.push(instance);\n\n        this._registry.execute(\"instanceStarted\", instance);\n        return instance;\n    }\n\n    public handleInstanceStopped = (props: InstanceProps) => {\n        this._logger.trace(`failed to start app ${props.Name} ${props.Id}`);\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        this._instances = this._instances.filter((i) => !this._matchInstance(i, id, appName));\n\n        this._registry.execute(\"instanceStopped\", instance);\n        instance.done();\n    }\n\n    public handleInstanceAgmServerReady = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        instance.updateAgmInstanceFromProps(props);\n\n        this._registry.execute(\"instanceAgmServerReady\", instance);\n    }\n\n    public handleInstanceStartFailed = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const startFailed = true;\n        const instance = new InstanceImpl(id, appName, undefined, undefined, undefined, undefined, startFailed);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._registry.execute(\"instanceStartFailed\", instance);\n    }\n\n    public handleInstanceUpdated = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const app = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, app);\n\n        this._updateInstanceFromProps(instance, props);\n    }\n\n    /** Event subscription methods */\n    public onInstanceStarted = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStarted\", callback, this._instances);\n    }\n\n    public onInstanceStartFailed = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStartFailed\", callback);\n    }\n\n    public onInstanceStopped = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onInstanceUpdated = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceChanged\", callback);\n    }\n\n    public onInstanceAgmServerReady = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceAgmServerReady\", callback);\n    }\n\n    public onAppAdded = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appAdded\", callback, Object.values(this._apps));\n    }\n\n    public onAppRemoved = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appRemoved\", callback);\n    }\n\n    public onAppAvailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onAppUnavailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onAppChanged = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appChanged\", callback);\n    }\n\n    private _getAppOrThrow(id: string) {\n        const result = this.application(id);\n        if (!result) {\n            throw Error(`app with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getAppId(props: AppProps) {\n        return props.Name;\n    }\n\n    private _matchInstance(instance: Glue42.AppManager.Instance, id: string, appName: string) {\n        return instance.id === id && instance.application.name === appName;\n    }\n\n    private _getInstanceByIdAndName(id: string, appName: string) {\n        return this._instances.filter((i) => this._matchInstance(i, id, appName))[0];\n    }\n\n    private _getInstanceOrThrow(id: string, appName: string) {\n        const result = this._getInstanceByIdAndName(id, appName);\n        if (!result) {\n            throw Error(`instance with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getInstanceId(props: InstanceProps) {\n        return props.Id;\n    }\n\n    private _getInstanceAppName(props: InstanceProps) {\n        return props.Name;\n    }\n\n    private _updateAppFromProps(props: AppProps) {\n        const id = this._getAppId(props);\n        this._logger.trace(`updating app with  + ${id}, ${props}`);\n        const app = this._getAppOrThrow(id);\n\n        app.updateFromProps(props);\n\n        return app;\n    }\n\n    private _updateInstanceFromProps(instance: InstanceImpl, props: InstanceProps) {\n        this._logger.trace(\"updating instance with \" + this._getInstanceId(props) + \" for app \" + this._getInstanceAppName(props));\n        instance.updateFromProps(props);\n    }\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { OnGDShutdownMethodName } from \"./const/agm-names\";\n\nfunction promisify(promise: Promise<any>, successCallback: (arg?: any) => void, errorCallback: (err?: any) => void) {\n    const isFunction = (arg: any) => {\n        return !!(arg && arg.constructor && arg.call && arg.apply);\n    };\n\n    if (!isFunction(successCallback) && !isFunction(errorCallback)) {\n        return promise;\n    }\n\n    if (!isFunction(successCallback)) {\n        successCallback = () => {\n            // EMPTY\n        };\n    } else if (!isFunction(errorCallback)) {\n        errorCallback = () => {\n            // EMPTY\n        };\n    }\n\n    promise.then(successCallback, errorCallback);\n}\n\nexport default class EntitlementsImpl implements Glue42.AppManager.Entitlements {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n    private _isMethodRegistered = false;\n\n    constructor(\n        private _agm: Glue42Core.AGM.API\n    ) {\n        //\n    }\n\n    public handleBranchModified = (branch: Glue42.AppManager.Branch) => {\n        this._registry.execute(\"branchChanged\", branch);\n    }\n\n    public handleBranchesModified = (branches: Glue42.AppManager.Branch[]) => {\n        this._registry.execute(\"branchesChanged\", branches);\n    }\n\n    public getRegion = (success?: (region: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        return promisify(\n            this._agmInvoke(\n                AgmNames.GetConfigurationRegionMethodName,\n                (e: Glue42Core.AGM.InvocationResult<{ Region: string }>) => e.returned.Region\n            ),\n            success,\n            error\n        );\n    }\n\n    public getBranches = (success?: (branches: Glue42.AppManager.Branch[]) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch[]> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetBranchesMethodName,\n            (e) => {\n                const obj = e.returned.Branches as { [key: string]: Glue42.AppManager.Branch };\n                return Object.keys(obj).map((key) => obj[key]);\n            }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getCurrentBranch = (success?: (branch: Glue42.AppManager.Branch) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetCurrentBranchMethodName,\n            (e) => e.returned.Branch,\n            undefined\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setRegion = (region: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetConfigurationRegionMethodName,\n            (e) => e.returned.ResultMessage,\n            { Region: region }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setCurrentBranch = (branch: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetCurrentBranchMethodName,\n            (e) => e.returned.ResultMessage,\n            { Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public currentUser = (success?: (user: Glue42.AppManager.UserInfo) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.UserInfo> => {\n        const promise = this._agmInvoke(AgmNames.GetUserMethodName);\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlement = (funct: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlementBranch = (funct: string, branch: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct, Branch: branch }\n        );\n        return promisify(promise, success, error);\n    }\n\n    public canI = (func: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public canIBranch = (func: string, branch: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func, Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public onBranchesChanged = (callback: (branches: Glue42.AppManager.Branch[]) => any): UnsubscribeFunction => {\n        return this._registry.add(\"branchesChanged\", callback);\n    }\n\n    public onBranchChanged = (callback: (branch: Glue42.AppManager.Branch) => any): UnsubscribeFunction => {\n        return this._registry.add(\"branchChanged\", callback);\n    }\n\n    public exit = (options?: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.ShutdownMethodName,\n            null,\n            options\n        );\n    }\n\n    public onShuttingDown = (callback: (args: Glue42.AppManager.ShuttingDownEventArgs) => Promise<{ prevent: boolean }>) => {\n        this.registerMethod();\n        return this._registry.add(\"onShuttingDown\", callback);\n    }\n\n    public restart = (options?: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.RestartMethodName,\n            null,\n            options\n        );\n    }\n\n    private registerMethod() {\n        if (!this._isMethodRegistered) {\n            this._agm.register(OnGDShutdownMethodName, async (args) => {\n                try {\n                    const results = await Promise.all(this._registry.execute(\"onShuttingDown\", args)) as Array<{ prevent: boolean }>;\n                    const prevent = results.some((r) => r.prevent);\n                    return { prevent };\n                } catch (error) {\n                    //\n                }\n            });\n            this._isMethodRegistered = true;\n        }\n    }\n\n    private _agmInvoke = (\n        method: string,\n        transformFunction?: (res: Glue42Core.AGM.InvocationResult<any>) => any,\n        args?: object\n    ): Promise<any> => {\n        args = args || {};\n        return new Promise((resolve, reject) => {\n            const errHandler: Glue42Core.AGM.InvokeErrorHandler = (error) => reject(error);\n            this._agm.invoke(method, args)\n                .then((result) => {\n                    if (!transformFunction) {\n                        transformFunction = (d: Glue42Core.AGM.InvocationResult<any>) => d.returned;\n                    }\n                    resolve(transformFunction(result));\n                })\n                .catch(errHandler);\n        });\n    }\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\n\nexport const InMemoryStoreCommandMethodName = \"T42.ACS.InMemoryStoreCommand\";\n\nexport type InMemoryStoreCommandArgs = InMemoryImportCommand | InMemoryExportCommand | InMemoryRemoveCommand | InMemoryClearCommand;\n\nexport interface GenericInMemoryCommand<C, A> {\n    command: C;\n    args?: A;\n}\n\ntype InMemoryImportCommand = GenericInMemoryCommand<\"import\", InMemoryImportArgs>;\ninterface InMemoryImportArgs {\n    apps: Glue42.AppManager.Definition[];\n    mode?: \"merge\" | \"replace\";\n}\n\ntype InMemoryRemoveCommand = GenericInMemoryCommand<\"remove\", { apps: string[] }>;\nexport interface InMemoryRemoveArgs {\n    apps: string[];\n}\n\ntype InMemoryExportCommand = GenericInMemoryCommand<\"export\", undefined>;\ntype InMemoryClearCommand = GenericInMemoryCommand<\"clear\", undefined>;\n\nexport interface InMemoryExportResult {\n    apps: Glue42.AppManager.Definition[];\n}\n\nexport class InMemoryStore implements Glue42.AppManager.InMemoryStore {\n\n    constructor(private interop: Glue42Core.Interop.API) {\n    }\n\n    public import(apps: Glue42.AppManager.Definition[], mode?: \"replace\" | \"merge\"): Promise<Glue42.AppManager.ImportResult> {\n        if (!apps || !Array.isArray(apps)) {\n            return Promise.reject(\"invalid apps argument - should be an array of application definitions\");\n        }\n        if (mode && mode !== \"replace\" && mode !== \"merge\") {\n            return Promise.reject(\"invalid mode argument - should be 'replace' or 'merge'\");\n        }\n\n        mode = mode ?? \"replace\";\n        const command: InMemoryImportCommand = {\n            command: \"import\",\n            args: {\n                apps,\n                mode\n            }\n        };\n        return this.interop.invoke<Glue42.AppManager.ImportResult>(InMemoryStoreCommandMethodName, command)\n            .then((r) => r.returned);\n    }\n\n    public export(): Promise<Glue42.AppManager.Definition[]> {\n        return this.interop.invoke<InMemoryExportResult>(InMemoryStoreCommandMethodName, { command: \"export\" })\n            .then((r) => r.returned.apps);\n    }\n\n    public remove(app: string): Promise<void> {\n        if (!app || typeof app !== \"string\") {\n            return Promise.reject(\"invalid app name, should be a string value\");\n        }\n        const command: InMemoryRemoveCommand = {\n            command: \"remove\",\n            args: {\n                apps: [app]\n            }\n        };\n        return this.interop.invoke<void>(InMemoryStoreCommandMethodName, command).then((r) => r.returned);\n    }\n\n    public clear(): Promise<void> {\n        const command: InMemoryClearCommand = {\n            command: \"clear\"\n        };\n        return this.interop.invoke<void>(InMemoryStoreCommandMethodName, command).then((r) => r.returned);\n    }\n\n    public createAppDef(name: string, url: string): Glue42.AppManager.Definition {\n        if (!url) {\n            url = \"https://google.com\";\n        }\n        return {\n            name,\n            type: \"window\",\n            title: name,\n            details: {\n                url\n            }\n        };\n    }\n}\n","import AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\nimport snapshot from \"./snapshot\";\nimport subscriptionFactory from \"./data-subscription\";\nimport { Glue42 } from \"../../glue\";\nimport { InMemoryStore } from \"./in-memory\";\n\nexport default (config: Glue42.AppManager.Config): Glue42.AppManager.API => {\n\n    if (!config) {\n        throw Error(\"config not set\");\n    }\n\n    if (!config.agm) {\n        throw Error(\"config.agm is missing\");\n    }\n\n    const START_ONLY: Glue42.AppManager.Mode = \"startOnly\";\n    const SKIP_ICONS: Glue42.AppManager.Mode = \"skipIcons\";\n    const FULL: Glue42.AppManager.Mode = \"full\";\n\n    const mode: Glue42.AppManager.Mode = config.mode || START_ONLY;\n    if (mode !== START_ONLY && mode !== SKIP_ICONS && mode !== FULL) {\n        throw new Error(`Invalid mode for appManager lib - ${mode} is not supported`);\n    }\n\n    const activities = config.activities;\n    const agm = config.agm;\n    const logger = config.logger;\n    const windows = config.windows;\n    const appManager = new AppManagerImpl(mode, agm, activities, windows, logger.subLogger(\"applications\"), config.gdMajorVersion);\n    const entitlements = new EntitlementsImpl(agm);\n\n    let readyPromise: Promise<void>;\n    if (mode === START_ONLY) {\n        readyPromise = snapshot(agm, appManager);\n    } else {\n        const subscription = subscriptionFactory(agm, appManager, entitlements, mode === SKIP_ICONS);\n        readyPromise = subscription.start();\n    }\n\n    const api: Glue42.AppManager.API = {\n        ready: () => readyPromise,\n\n        applications: appManager.applications,\n        application: appManager.application,\n\n        onAppAdded: appManager.onAppAdded,\n        onAppRemoved: appManager.onAppRemoved,\n        onAppChanged: appManager.onAppChanged,\n        onAppAvailable: appManager.onAppAvailable,\n        onAppUnavailable: appManager.onAppUnavailable,\n\n        instances: appManager.instances,\n        get myInstance() {\n            return appManager.getMyInstance();\n        },\n\n        onInstanceStarted: appManager.onInstanceStarted,\n        onInstanceStopped: appManager.onInstanceStopped,\n        onInstanceUpdated: appManager.onInstanceUpdated,\n        onInstanceStartFailed: appManager.onInstanceStartFailed,\n\n        getRegion: entitlements.getRegion,\n        getBranches: entitlements.getBranches,\n        getCurrentBranch: entitlements.getCurrentBranch,\n        getFunctionalEntitlement: entitlements.getFunctionalEntitlement,\n        getFunctionalEntitlementBranch: entitlements.getFunctionalEntitlementBranch,\n\n        setCurrentBranch: entitlements.setCurrentBranch,\n        setRegion: entitlements.setRegion,\n\n        currentUser: entitlements.currentUser,\n\n        canI: entitlements.canI,\n        canIBranch: entitlements.canIBranch,\n\n        onBranchesChanged: entitlements.onBranchesChanged,\n\n        exit: entitlements.exit,\n        restart: entitlements.restart,\n\n        onShuttingDown: entitlements.onShuttingDown,\n\n        inMemory: new InMemoryStore(agm)\n    };\n\n    return api;\n};\n","import * as AgmNames from \"./const/agm-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport AppManagerImpl from \"./app-manager\";\n\n/** Retrieves application snapshot from ACS */\nexport default function snapshot(agm: Glue42Core.AGM.API, appManager: AppManagerImpl): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n        agm.invoke(AgmNames.GetApplicationsMethodName, { skipIcon: true })\n            .then((response) => {\n                const data = response.returned;\n                if (!data) {\n                    resolve();\n                }\n\n                const applications = data.applications;\n                if (!applications) {\n                    resolve();\n                }\n\n                objectValues(applications).map((item) => appManager.handleAppAdded(item));\n\n                resolve();\n            })\n            .catch((err) => reject(`Error getting application snapshot: ${err.message}`));\n    });\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport * as EventNames from \"./const/event-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\n\n/** Subscribe for the AGM stream published by ACS and distributes events to applications and instances components */\nexport default function createDataSubscription(agm: Glue42Core.AGM.API, applications: AppManagerImpl, entitlements: EntitlementsImpl, skipIcons: boolean) {\n\n    let subscription: Glue42Core.AGM.Subscription;\n    const start = () => {\n        let resolveFunc: () => void;\n        let rejectFunc: (error?: any) => void;\n\n        const resultPromise = new Promise<void>((resolve, reject) => {\n            resolveFunc = resolve;\n            rejectFunc = reject;\n        });\n\n        agm.subscribe(AgmNames.OnEventMethodName, { arguments: { skipIcon: skipIcons }, waitTimeoutMs: 10000 })\n            .then((s) => {\n                subscription = s;\n                subscription.onData((streamData: Glue42Core.AGM.StreamData) => {\n                    const events: any = streamData.data;\n\n                    objectValues(events[EventNames.OnApplicationAddedEvent])\n                        .map((item: AppProps) => applications.handleAppAdded(item));\n\n                    objectValues(events[EventNames.OnApplicationChangedEvent])\n                        .map((item: AppProps) => applications.handleAppUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationRemovedEvent])\n                        .map((item: AppProps) => applications.handleAppRemoved(item));\n\n                    objectValues(events[EventNames.OnApplicationReadyEvent])\n                        .map((item: AppProps) => applications.handleAppReady(item));\n\n                    objectValues(events[EventNames.OnApplicationStartedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStarted(item));\n\n                    objectValues(events[EventNames.OnApplicationStartFailedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStartFailed(item));\n\n                    objectValues(events[EventNames.OnApplicationStoppedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStopped(item));\n\n                    objectValues(events[EventNames.OnApplicationUpdatedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationAgmServerReadyEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceAgmServerReady(item));\n\n                    objectValues(events[EventNames.OnBranchChangedEvent])\n                        .map((item: Glue42.AppManager.Branch) => entitlements.handleBranchModified(item));\n\n                    objectValues(events[EventNames.OnBranchesModifiedEvent])\n                        .map((item: Glue42.AppManager.Branch[]) => entitlements.handleBranchesModified(item));\n\n                    resolveFunc();\n                });\n\n                subscription.onFailed((err: any) => rejectFunc(err));\n\n            })\n            .catch((err: any) => rejectFunc(`Error subscribing for ${AgmNames.OnEventMethodName} stream. Err: ${err}`));\n\n        return resultPromise;\n    };\n\n    const stop = () => {\n        if (subscription) {\n            subscription.close();\n        }\n    };\n\n    return {\n        start,\n        stop\n    };\n}\n","import { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { PendingWindowState, WindowEvents, WindowWrapper } from \"./types\";\n\nexport class WindowStore {\n    private readonly waitForTimeoutInMilliseconds: number = 60000;\n    private _windows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindowsStates: { [key: string]: PendingWindowState } = {};\n    private _registry: CallbackRegistry;\n    private _logger: Glue42Core.Logger.API;\n\n    constructor() {\n        this._registry = CallbackFactory();\n    }\n\n    public init(logger: Glue42Core.Logger.API) {\n        this._logger = logger;\n    }\n\n    // Returns a window which either in Ready OR NOT 'ready' state (when the window is NOT marked with readyToShow)\n    public get(id: string): WindowWrapper {\n        return this._windows[id] || this._pendingWindows[id];\n    }\n\n    // Returns a window which is in 'ready' state (when the window is marked with readyToShow)\n    public getIfReady(id: string): WindowWrapper {\n        return this._windows[id];\n    }\n\n    public get list(): { [key: string]: WindowWrapper } {\n        return this._windows;\n    }\n\n    public add(window: WindowWrapper) {\n        const isExist = this._pendingWindows[window.API.id] ? true : false;\n        if (isExist) {\n            this._logger.error(`trying to add window with id ${window.API.id} from windowStore, which already exists`);\n            return;\n        }\n        const remote = window.API.windowType === \"remote\";\n        this._pendingWindows[window.API.id] = window;\n        this._pendingWindowsStates[window.API.id] = {\n            ready: false,\n            urlChanged: remote, // remote windows don't have url events\n        };\n\n        this._registry.execute(\"on-added\", window);\n    }\n\n    public remove(window: WindowWrapper) {\n        delete this._windows[window.API.id];\n        delete this._pendingWindows[window.API.id];\n        delete this._pendingWindowsStates[window.API.id];\n        this._registry.execute(\"on-removed\", window);\n    }\n\n    public setReadyState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.ready = true;\n\n        if (targetWindowState.urlChanged) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public setUrlChangedState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.urlChanged = true;\n\n        if (targetWindowState.ready) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public waitFor(id: string): Promise<WindowWrapper> {\n        return new Promise((resolve, reject) => {\n\n            let un: UnsubscribeFunction;\n\n            const timeout = setTimeout(() => {\n                un();\n                reject(\"waitFor timed out.\");\n            }, this.waitForTimeoutInMilliseconds);\n\n            const win = this._windows[id];\n            if (win) {\n                clearTimeout(timeout);\n                resolve(win);\n            } else {\n                un = this.onReadyWindow((w: WindowWrapper) => {\n                    if (w.API.id !== id) {\n                        return;\n                    }\n                    clearTimeout(timeout);\n                    un();\n                    resolve(w);\n                });\n            }\n        });\n    }\n\n    public onReadyWindow(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-ready\", callback);\n    }\n\n    public onAdded(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-added\", callback);\n    }\n\n    public onRemoved(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-removed\", callback);\n    }\n\n    // newly created windows now need to hear both \"ready\" and \"urlChanged\" events in otder to be markedReadyToShow\n    public markReadyToShow(windowId: string) {\n        if (this._pendingWindows[windowId]) {\n            this._windows[windowId] = this._pendingWindows[windowId];\n            delete this._pendingWindows[windowId];\n            delete this._pendingWindowsStates[windowId];\n        }\n\n        this._registry.execute(\"on-ready\", this._windows[windowId]);\n    }\n}\n\nexport default new WindowStore();\n","import { Glue42 } from \"../glue\";\n\nexport default class Utils {\n    public static getGDMajorVersion() {\n        if (typeof window === \"undefined\") {\n            return -1;\n        }\n        if (!window.glueDesktop) {\n            return -1;\n        }\n        if (!window.glueDesktop.version) {\n            return -1;\n        }\n        const ver = Number(window.glueDesktop.version.substr(0, 1));\n        return isNaN(ver) ? -1 : ver;\n    }\n\n    public static callbackifyPromise<T>(\n        action: () => Promise<T>,\n        successCallback?: (args?: T) => void,\n        errorCallback?: (errorMessage: string) => void): Promise<T> {\n\n        const fail = (error: any) => {\n            let msg = error;\n            if (error instanceof Error) {\n                msg = error.message;\n            }\n            if (typeof errorCallback === \"function\") {\n                errorCallback(msg);\n                return;\n            }\n\n            return Promise.reject(msg);\n        };\n\n        try {\n            return action()\n                .then((result) => {\n                    if (typeof successCallback === \"function\") {\n                        successCallback(result);\n                    }\n                    return result;\n                })\n                .catch((error) => {\n                    return fail(error);\n                });\n        } catch (err) {\n            return fail(err);\n        }\n    }\n\n    public static getMonitor(bounds: Glue42.Windows.Bounds, displays?: Glue42.Screen[]): Glue42.Screen {\n        const monitorsSortedByOverlap = displays.map((m) => {\n            const { left, top, workingAreaWidth: width, workingAreaHeight: height } = m;\n            const overlap = this.calculateTotalOverlap({ left, top, width, height }, bounds);\n            return {\n                monitor: m,\n                totalOverlap: overlap\n            };\n        }).sort((a, b) => b.totalOverlap - a.totalOverlap);\n\n        return monitorsSortedByOverlap[0].monitor;\n    }\n\n    public static getDisplayCenterOfScreen(a: Partial<Glue42.Windows.Bounds>, display?: Glue42.Screen) {\n        const left = Math.floor(Math.max(display.left, (display.left + (display.workingAreaWidth - a.width) / 2)));\n        const top = Math.floor(Math.max(display.top, (display.top + (display.workingAreaHeight - a.height) / 2)));\n        return {\n            top,\n            left\n        };\n    }\n\n    private static calculateTotalOverlap(r1: Glue42.Windows.Bounds, r2: Glue42.Windows.Bounds) {\n        const r1x = r1.left;\n        const r1y = r1.top;\n        const r1xMax = r1x + r1.width;\n        const r1yMax = r1y + r1.height;\n\n        const r2x = r2.left;\n        const r2y = r2.top;\n        const r2xMax = r2x + r2.width;\n        const r2yMax = r2y + r2.height;\n\n        const xOverlap = Math.max(0, Math.min(r1xMax, r2xMax) - Math.max(r1x, r2x));\n        const yOverlap = Math.max(0, Math.min(r1yMax, r2yMax) - Math.max(r1y, r2y));\n\n        return xOverlap * yOverlap;\n    }\n}\n","import CallbackFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport {\n    Executor,\n    FrameButton,\n    Neighbours,\n    WindowConstructorOptions,\n    WindowEvents,\n    WindowWrapper,\n    FlashOptions,\n    DetachTabOptions,\n} from \"./types\";\nimport * as util from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nimport { default as windowStore } from \"./store\";\nimport GDWindow = Glue42.Windows.GDWindow;\nimport { CompositionChangedData } from \"./environment/gd/types\";\n\nexport default (id: string, options: WindowConstructorOptions, executor: Executor, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, agm: Glue42.AGM.API): WindowWrapper => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger.subLogger(`window ${id}`);\n\n    let resultWindow: Glue42.Windows.GDWindow;\n\n    const _id = id;\n    const _name: string = options.name;\n    const _mode: Glue42.Windows.WindowMode = options.mode;\n    let _bounds: Glue42.Windows.Bounds = options.bounds;\n    let _url: string = options.url;\n    let _title: string = options.title;\n    let _context: any = options.context ?? {};\n    let _frameColor: string = options.frameColor;\n    let _focus: boolean = options.focus;\n    let _neighbours: Neighbours = options.neighbours ?? {};\n    let _groupId: string = options.groupId;\n    let _isGroupHeaderVisible: boolean = options.isGroupHeaderVisible;\n    let _isTabHeaderVisible: boolean = options.isTabHeaderVisible;\n    let _isTabSelected: boolean = options.isTabSelected ?? false;\n    let _settings: Glue42.Windows.WindowSettings = options.settings;\n\n    // is Window visible\n    let _isVisible: boolean = options.isVisible;\n\n    // is Window sticky enable\n    let _isSticky: boolean = options.isSticky;\n\n    // Window state Collapsed | Expanded\n    let _isCollapsed: boolean = options.isCollapsed;\n\n    // Window state normal | maximized | minimized\n    let _windowState: Glue42.Windows.WindowState = options.state;\n\n    // tabGroupId only for window with 'Tab' mode\n    let _tabGroupId: string = options.tabGroupId;\n    let _tabIndex: number = options.tabIndex;\n\n    // window is locked or unlocked;\n    let _isLocked: boolean = options.isLocked;\n\n    let _group: Glue42.Windows.Group;\n\n    // Holding all frame buttons\n    let _frameButtons: Glue42.Windows.ButtonInfo[] = [];\n\n    // Holding the current zoom factor\n    let _zoomFactor = options.zoomFactor;\n\n    let _placementSettings: Glue42.Windows.PlacementSettings = options.placementSettings;\n\n    //#region \"AGM methods\"\n\n    function close(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!id) {\n                throw new Error(\"The window is already closed.\");\n            }\n            return executor.close(resultWindow);\n        }, success, error);\n    }\n\n    function navigate(newUrl: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(newUrl)) {\n                throw new Error(\"The new URL must be a non-empty string.\");\n            }\n            return executor.navigate(resultWindow, newUrl);\n        }, success, error);\n    }\n\n    function setStyle(style: Glue42.Windows.WindowStyle, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!style || Object.keys(style).length === 0 || Object.keys(style).every((key) => !key)) {\n                throw new Error(\"Invalid style arguments: \" + JSON.stringify(style));\n            }\n            if (style && style.focus !== undefined) {\n                if (typeof style.focus !== \"boolean\") {\n                    throw new Error(\"Focus must be a boolean value. Currently, only `focus: true` is supported.\");\n                } else if (style.focus === false) {\n                    _logger.warn(\"`focus: false` is not supported!\");\n                }\n            }\n            if (style && style.hidden !== undefined && typeof style.hidden !== \"boolean\") {\n                throw new Error(\"The `hidden` property must hold a boolean value.\");\n            }\n            for (const prop of [\"minHeight\", \"maxHeight\", \"minWidth\", \"maxWidth\"]) {\n                const styleAsAny = style as any;\n                const value = styleAsAny[prop];\n                if (prop in style) {\n                    if (util.isUndefinedOrNull(value)) {\n                        delete styleAsAny[prop];\n                        continue;\n                    }\n                    if (!util.isNumber(styleAsAny[prop])) {\n                        throw new Error(`\"${prop}\" must be a number`);\n                    }\n                }\n            }\n            return executor.setStyle(resultWindow, style);\n        }, success, error);\n    }\n    // REVIEW\n    function resetButtons(buttons: Glue42.Windows.WindowButtons, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(\n            () => executor.resetButtons(resultWindow, buttons),\n            success,\n            error\n        );\n    }\n\n    function setOnTop(onTop: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof onTop !== \"boolean\") {\n                throw new Error(\"`onTop` must hold a boolean value.\");\n            }\n            return executor.setOnTop(resultWindow, onTop);\n        }, success, error);\n    }\n\n    function setSizeConstraints(constraints: Glue42.Windows.SizeConstraints, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!constraints || Object.keys(constraints).every((value) => value === undefined)) {\n                throw new Error(\"The properties of `constraints` cannot be null or undefined.\");\n            }\n            return executor.setSizeConstraints(resultWindow, constraints);\n        }, success, error);\n    }\n\n    function setTitle(newTitle: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(newTitle)) {\n                throw new Error(\"`newTitle` must not be null or undefined.\");\n            }\n            if (newTitle === _title) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.setTitle(resultWindow, newTitle);\n        }, success, error);\n    }\n\n    function setSticky(isSticky: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof isSticky !== \"boolean\") {\n                throw new Error(\"`isSticky` must hold a boolean value.\");\n            }\n            return executor.setSticky(resultWindow, isSticky);\n        }, success, error);\n    }\n\n    function moveResize(bounds: Partial<Glue42.Windows.Bounds>, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(bounds)) {\n                throw new Error(\"The properties of `bounds` cannot be null or undefined.\");\n            }\n            return executor.moveResize(resultWindow, bounds);\n        }, success, error);\n    }\n\n    function addFrameButton(buttonInfo: Glue42.Windows.ButtonInfo, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof buttonInfo === \"undefined\" || Object.keys(buttonInfo).length === 0) {\n                throw new Error(\"Button info is not available.\");\n            }\n            if (util.isNullOrWhiteSpace(buttonInfo.buttonId)) {\n                throw new Error(\"`buttonId` must not be null or undefined.\");\n            }\n            if (util.isNullOrWhiteSpace(buttonInfo.imageBase64)) {\n                throw new Error(\"`imageBase64` must not be null or undefined.\");\n            }\n            return executor.addFrameButton(resultWindow, buttonInfo);\n        }, success, error);\n    }\n\n    function removeFrameButton(buttonId: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(buttonId)) {\n                throw new Error(\"`buttonId` must not be null or undefined.\");\n            }\n            return executor.removeFrameButton(resultWindow, buttonId);\n        }, success, error);\n    }\n\n    function activate(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_focus) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.activate(resultWindow);\n        }, success, error);\n    }\n\n    function focus(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_focus) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.focus(resultWindow);\n        }, success, error);\n    }\n\n    function maximizeRestore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.maximizeRestore(resultWindow);\n        }, success, error);\n    }\n\n    function maximize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"maximized\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.maximize(resultWindow);\n        }, success, error);\n    }\n\n    function restore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"normal\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.restore(resultWindow);\n        }, success, error);\n    }\n\n    function minimize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"minimized\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.minimize(resultWindow);\n        }, success, error);\n    }\n\n    function collapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_isCollapsed) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.collapse(resultWindow);\n        }, success, error);\n    }\n\n    function expand(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!_isCollapsed) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.expand(resultWindow);\n        }, success, error);\n    }\n\n    function toggleCollapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.toggleCollapse(resultWindow);\n        }, success, error);\n    }\n\n    function snap(target: string | Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(target)) {\n                throw new Error(`A target window is not specified - ${target}`);\n            }\n\n            if (typeof target === \"string\") {\n                const win = windowStore.get(target);\n                if (!win) {\n                    throw new Error(`Invalid \"target\" parameter or no such window. Invoked with: ${target}`);\n                }\n                target = win.API;\n            }\n            return executor.snap(resultWindow, target, direction);\n        }, success, error);\n    }\n\n    function attachTab(tab: Glue42.Windows.GDWindow | string, opt: number | Glue42.Windows.AttachOptions, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            const errorMessage = `Invalid \"tab\" parameter - must be an object with an \"id\" property or a string. Invoked for source window with ID:`;\n            if (util.isUndefinedOrNull(tab)) {\n                throw new Error(errorMessage + tab);\n            }\n            // tab === sourceWindow\n            let sourceWindow;\n            if (typeof tab === \"string\") {\n                sourceWindow = windowStore.get(tab)?.API;\n                if (util.isUndefinedOrNull(sourceWindow)) {\n                    throw new Error(errorMessage + sourceWindow);\n                }\n            } else if (!util.isUndefinedOrNull(tab.id)) {\n                sourceWindow = tab;\n            } else {\n                throw new Error(errorMessage);\n            }\n            const attachOptions: Glue42.Windows.AttachOptions = {};\n            if (!util.isUndefinedOrNull(opt)) {\n                if (typeof opt === \"number\") {\n                    attachOptions.index = opt;\n                } else {\n                    attachOptions.selected = opt.selected;\n                    attachOptions.index = opt.index;\n                }\n            }\n\n            return executor.attachTab(resultWindow, sourceWindow, attachOptions);\n        }, success, error);\n    }\n\n    function detachTab(opt: Glue42.Windows.DetachOptions = {}, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            const argsForSend: DetachTabOptions = {};\n            function isDetachRelative(o: Glue42.Windows.DetachOptions) {\n                return o.relativeTo !== undefined;\n            }\n            if (isDetachRelative(opt)) {\n                if (typeof opt.relativeTo === \"string\") {\n                    argsForSend.relativeTo = opt.relativeTo;\n                } else if (!util.isUndefinedOrNull(opt.relativeTo.id)) {\n                    argsForSend.relativeTo = opt.relativeTo.id;\n                }\n                if (!util.isUndefinedOrNull(opt.relativeDirection)) {\n                    argsForSend.relativeDirection = opt.relativeDirection;\n                }\n                if (!util.isUndefinedOrNull(opt.width)) {\n                    argsForSend.width = opt.width;\n                }\n                if (!util.isUndefinedOrNull(opt.height)) {\n                    argsForSend.height = opt.height;\n                }\n            } else {\n                if (!util.isUndefinedOrNull(opt.bounds)) {\n                    argsForSend.bounds = opt.bounds;\n                }\n            }\n            if (!util.isUndefinedOrNull(opt.hideTabHeader)) {\n                argsForSend.hideTabHeader = opt.hideTabHeader;\n            }\n            return executor.detachTab(resultWindow, argsForSend);\n        }, success, error);\n    }\n\n    function setVisible(toBeVisible?: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.setVisible(resultWindow, toBeVisible);\n        }, success, error);\n    }\n\n    function showLoader(loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        return executor.showLoader(resultWindow, loader);\n    }\n\n    function hideLoader(): Promise<Glue42.Windows.GDWindow> {\n        return executor.hideLoader(resultWindow);\n    }\n\n    function updateContext(context: any, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(context)) {\n                throw new Error(`\"context\" must not be null or undefined.`);\n            }\n\n            return executor.updateContext(resultWindow, context, false);\n        }, success, error);\n    }\n\n    function lock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.lock(resultWindow);\n        }, success, error);\n    }\n\n    function unlock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.unlock(resultWindow);\n        }, success, error);\n    }\n\n    function getIcon(success?: (icon: string) => void, error?: (error: string) => void): Promise<string> {\n        return utils.callbackifyPromise(() => {\n            return executor.getIcon(resultWindow);\n        }, success, error);\n    }\n\n    function setIcon(base64Image: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(base64Image)) {\n                throw new Error(`\"base64Imag\" must be a non-empty string.`);\n            }\n            return executor.setIcon(resultWindow, base64Image);\n        }, success, error);\n    }\n\n    function setFrameColor(frameColor: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(frameColor)) {\n                throw new Error(`\"frameColor\" must be a non-empty string`);\n            }\n            return executor.setFrameColor(resultWindow, frameColor);\n        }, success, error);\n    }\n\n    function setTabHeaderVisible(toBeTabHeaderVisible: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof toBeTabHeaderVisible !== \"boolean\") {\n                throw new Error(`\"toBeTabHeaderVisible\" must hold a boolean value.`);\n            }\n            return executor.setTabHeaderVisible(resultWindow, toBeTabHeaderVisible);\n        }, success, error);\n    }\n\n    async function setTabTooltip(tooltip: string): Promise<Glue42.Windows.GDWindow> {\n        if (util.isNullOrWhiteSpace(tooltip)) {\n            throw new Error(`\"${tooltip}\" must not be null or undefined`);\n        }\n        return executor.setTabTooltip(resultWindow, tooltip);\n    }\n\n    function showPopup(config: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.showPopup(resultWindow, config);\n    }\n\n    function createFlydown(config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return executor.createFlydown(resultWindow.id, config);\n    }\n\n    function setModalState(isModal: boolean): Promise<void> {\n        return executor.setModalState(resultWindow.id, isModal || false);\n    }\n\n    function zoomIn(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomIn(resultWindow);\n        }, success, error);\n    }\n\n    function zoomOut(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomOut(resultWindow);\n        }, success, error);\n    }\n\n    function setZoomFactor(zoomFactor: number, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            if (isNaN(zoomFactor)) {\n                throw new Error(`zoomFactor is not a number`);\n            }\n            return executor.setZoomFactor(resultWindow, zoomFactor);\n        }, success, error);\n    }\n\n    function showDevTools() {\n        return executor.showDevTools(resultWindow);\n    }\n\n    function capture(captureOptions: Glue42.Windows.CaptureOptions): Promise<string> {\n        return executor.capture(resultWindow, captureOptions);\n    }\n\n    function flash(suppliedOptions?: boolean, mode?: Glue42.Windows.FlashMode): Promise<Glue42.Windows.GDWindow> {\n        const flashOptions: FlashOptions = {\n            shouldFlash: true,\n            mode: \"auto\"\n        };\n\n        if (typeof suppliedOptions === \"boolean\") {\n            flashOptions.shouldFlash = suppliedOptions;\n        }\n\n        if (typeof mode !== \"undefined\") {\n            flashOptions.mode = mode;\n        }\n\n        return executor.flash(resultWindow, flashOptions);\n    }\n\n    function print(printOptions: Glue42.Windows.PrintOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.print(resultWindow, printOptions);\n    }\n\n    function printToPDF(printToPDFOptions: Glue42.Windows.PrintToPDFOptions): Promise<string> {\n        return executor.printToPDF(resultWindow, printToPDFOptions);\n    }\n\n    function ungroup(ungroupOptions?: Glue42.Windows.UngroupOptions): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const unGroupChanged = onGroupChanged(\n                (win: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => {\n                    if (id === win.id) {\n                        unGroupChanged();\n                        resolve(resultWindow);\n                    }\n                });\n\n            executor.ungroup(resultWindow, ungroupOptions)\n                .catch((e: string) => {\n                    unGroupChanged();\n                    reject(e);\n                });\n        });\n    }\n\n    function place(placementSettings: Glue42.Windows.PlacementSettings): Promise<void> {\n        return executor.place(resultWindow, placementSettings);\n    }\n\n    function refresh(ignoreCache: boolean) {\n        return executor.refresh(resultWindow, ignoreCache);\n    }\n\n    function download(url: string, opts: Glue42.Windows.DownloadOptions) {\n        return executor.download(resultWindow, url, opts);\n    }\n\n    function configure(settings: Glue42.Windows.WindowConfiguration) {\n        return executor.configureWindow(resultWindow, settings);\n    }\n\n    //#endregion \"AGM methods\"\n\n    //#region \"Events\"\n\n    function onTitleChanged(callback: (title: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onTitleChanged\", callback, [resultWindow.title, resultWindow]);\n    }\n\n    function onClose(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (id === undefined) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"onClose\", callback);\n    }\n\n    function onUrlChanged(callback: (url: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onUrlChanged\", callback);\n    }\n\n    function onFrameButtonAdded(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonAdded\", callback);\n    }\n\n    function onFrameButtonRemoved(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonRemoved\", callback);\n    }\n\n    function onFrameButtonClicked(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonClicked\", callback);\n    }\n\n    function onCollapsed(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (_isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"collapsed\", callback);\n    }\n\n    function onExpanded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (!_isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"expanded\", callback);\n    }\n\n    function onMaximized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"maximized\") {\n            return onEventCore(\"maximized\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"maximized\", callback);\n        }\n    }\n\n    function onMinimized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"minimized\") {\n            return onEventCore(\"minimized\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"minimized\", callback);\n        }\n    }\n\n    function onNormal(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"normal\") {\n            return onEventCore(\"normal\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"normal\", callback);\n        }\n    }\n\n    function onAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"attached\", callback);\n    }\n\n    function onDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"detached\", callback);\n    }\n\n    function onVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"visibility-changed\", callback);\n    }\n\n    function onContextUpdated(callback: (context: any, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"context-updated\", callback);\n    }\n\n    function onLockingChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"lock-changed\", callback);\n    }\n\n    function onBoundsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"bounds-changed\", callback);\n    }\n\n    function onFocusChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"focus-changed\", callback);\n    }\n\n    function onStickyChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"sticky-changed\", callback);\n    }\n\n    function onFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"frame-color-changed\", callback);\n    }\n\n    function onTabHeaderVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"tab-header-visibility-changed\", callback);\n    }\n\n    function onWindowAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"window-attached\", callback);\n    }\n\n    function onWindowDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"window-detached\", callback);\n    }\n\n    function onGroupChanged(callback: (window: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => void): UnsubscribeFunction {\n        return onEventCore(\"group-changed\", callback);\n    }\n\n    function onTabSelectionChanged(callback: (selectedWindow: Glue42.Windows.GDWindow, previousWindow: Glue42.Windows.GDWindow, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"tab-selection-changed\", callback);\n    }\n\n    function onClosing(callback: () => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        type GDHandler = (success: () => void, error: () => void) => void;\n        const callbackWrap: GDHandler = (success: () => void, error: () => void) => {\n            const promise = callback();\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onClosing(callbackWrap, id);\n    }\n\n    function onRefreshing(callback: (prevent: () => void) => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        type GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => void;\n        const callbackWrap: GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => {\n            const promise = callback(prevent);\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onRefreshing(callbackWrap, id);\n    }\n\n    function onZoomFactorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"zoom-factor-changed\", callback);\n    }\n\n    function onPlacementSettingsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"placementSettingsChanged\", callback);\n    }\n\n    function onNeighboursChanged(callback: (neighbours: Glue42.Windows.Neighbours, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"neighbours-changed\", callback);\n    }\n\n    function onEventCore(key: string, callback: any, replayArguments?: any[]) {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        return _registry.add(key, callback, replayArguments);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"Stream function\"\n\n    function handleUpdate(updated: WindowConstructorOptions) {\n        _url = updated.url;\n        _title = updated.title;\n        _context = updated.context || {};\n        _bounds = updated.bounds;\n        _frameColor = updated.frameColor;\n        _focus = updated.focus;\n        _neighbours = updated.neighbours || {};\n        _groupId = updated.groupId;\n        _isGroupHeaderVisible = updated.isGroupHeaderVisible;\n        _isTabHeaderVisible = updated.isTabHeaderVisible;\n        _isTabSelected = updated.isTabSelected;\n        _settings = updated.settings;\n        _isVisible = updated.isVisible;\n        _isSticky = updated.isSticky;\n        _isCollapsed = updated.isCollapsed;\n        _windowState = updated.state;\n        _tabGroupId = updated.tabGroupId;\n        _isLocked = updated.isLocked;\n        // _frameButtons = updated.fra;\n        // _group: Glue42.Windows.Group;\n        _zoomFactor = updated.zoomFactor;\n        _placementSettings = updated.placementSettings;\n    }\n\n    function handleTitleChanged(newTitle: string): void {\n        _title = newTitle;\n        executor.finished\n            .finally(() => {\n                _registry.execute(\"onTitleChanged\", newTitle, resultWindow);\n            });\n    }\n\n    function handleUrlChanged(newUrl: string): void {\n        _url = newUrl;\n        _registry.execute(\"onUrlChanged\", newUrl, resultWindow);\n    }\n\n    function handleVisibilityChanged(isVisible: boolean) {\n        if (isVisible === _isVisible) {\n            return;\n        }\n        _isVisible = isVisible;\n        _registry.execute(\"visibility-changed\", resultWindow);\n    }\n\n    function handleWindowSettingsChanged(settings: Glue42.Windows.WindowSettings): void {\n        _settings = settings;\n        _registry.execute(\"settings-changed\", resultWindow);\n    }\n\n    function handleContextUpdated(context: any): void {\n        _context = context;\n        _registry.execute(\"context-updated\", _context, resultWindow);\n    }\n\n    function handleWindowClose(): void {\n        if (id === undefined) {\n            return;\n        }\n        _registry.execute(\"onClose\", resultWindow);\n        id = undefined;\n    }\n\n    function handleFrameButtonAdded(frameButton: FrameButton): void {\n        const buttonObj: Glue42.Windows.ButtonInfo = [\"buttonId\", \"imageBase64\", \"order\", \"tooltip\"].reduce((memo: any, k) => {\n            memo[k] = frameButton[k];\n            return memo;\n        }, {}) as Glue42.Windows.ButtonInfo;\n\n        const frameButtonsIds = _frameButtons.map((btn) => {\n            return btn.buttonId;\n        });\n\n        if (frameButtonsIds.indexOf(frameButton.buttonId) === -1) {\n            _frameButtons.push(buttonObj);\n        }\n\n        _registry.execute(\"onFrameButtonAdded\", buttonObj, resultWindow);\n    }\n\n    function handleFrameButtonRemoved(frameButtonId: string): void {\n        let button: Glue42.Windows.ButtonInfo;\n        _frameButtons = _frameButtons.reduce((memo, btn) => {\n            if (btn.buttonId === frameButtonId) {\n                button = btn;\n            } else {\n                memo.push(btn);\n            }\n            return memo;\n        }, []);\n\n        if (button !== undefined) {\n            _registry.execute(\"onFrameButtonRemoved\", button, resultWindow);\n        }\n    }\n\n    function handleFrameButtonClicked(frameButton: FrameButton): void {\n        const button = _frameButtons.filter((btn) => {\n            return btn.buttonId === frameButton.buttonId;\n        });\n\n        if (button.length > 0) {\n            _registry.execute(\"onFrameButtonClicked\", button[0], resultWindow);\n        }\n    }\n\n    async function handleWindowChangeState(state: string): Promise<void> {\n        if (state === \"collapsed\") {\n            _isCollapsed = true;\n        } else if (state === \"expanded\") {\n            _isCollapsed = false;\n        } else {\n            _windowState = state as Glue42.Windows.WindowState;\n        }\n        await executor.finished;\n        _registry.execute(state, resultWindow);\n    }\n\n    function handleFrameIsLockedChanged(isLocked: boolean): void {\n        _isLocked = isLocked;\n        _registry.execute(\"lock-changed\", resultWindow);\n    }\n\n    function handleBoundsChanged(bounds: Glue42.Windows.Bounds): void {\n        if (_bounds.top === bounds.top && _bounds.left === bounds.left && _bounds.width === bounds.width && _bounds.height === bounds.height) {\n            return;\n        }\n        _bounds = bounds;\n        _registry.execute(\"bounds-changed\", resultWindow);\n    }\n\n    function handleFocusChanged(isFocused: boolean): void {\n        _focus = isFocused;\n        _registry.execute(\"focus-changed\", resultWindow);\n    }\n\n    function handleIsStickyChanged(isSticky: boolean): void {\n        _isSticky = isSticky;\n        _registry.execute(\"sticky-changed\", isSticky, resultWindow);\n    }\n\n    function handleFrameColorChanged(frameColor: string): void {\n        _frameColor = frameColor;\n        _registry.execute(\"frame-color-changed\", resultWindow);\n    }\n\n    function handleFrameAttached(tabGroupId: string, isTabHeaderVisible: boolean): void {\n        _tabGroupId = tabGroupId;\n        _isTabHeaderVisible = isTabHeaderVisible;\n        _registry.execute(\"frame-attached\", resultWindow);\n    }\n\n    function handleCompositionChanged(state: CompositionChangedData): void {\n        _neighbours = state.neighbors || {};\n        _tabIndex = state.index;\n        _registry.execute(\"neighbours-changed\", _neighbours, resultWindow);\n    }\n\n    function handleGroupHeaderVisibilityChanged(isGroupHeaderVisible: boolean): void {\n        _isGroupHeaderVisible = isGroupHeaderVisible;\n    }\n\n    function handleTabHeaderVisibilityChanged(isTabHeaderVisible: boolean): void {\n        if (_isTabHeaderVisible !== isTabHeaderVisible) {\n            _isTabHeaderVisible = isTabHeaderVisible;\n            _registry.execute(\"tab-header-visibility-changed\", resultWindow);\n        }\n    }\n\n    async function handleFrameSelectionChanged(newWindow: string, prevWindow: string) {\n        let selectedWindow: Glue42.Windows.GDWindow;\n        if (newWindow === id) {\n            _isTabSelected = true;\n            selectedWindow = resultWindow;\n        } else {\n            _isTabSelected = false;\n            selectedWindow = windowStore.get(newWindow) ? windowStore.get(newWindow).API : undefined;\n        }\n        const previousWindow = windowStore.get(prevWindow) ? windowStore.get(prevWindow).API : undefined;\n        await executor.finished;\n        _registry.execute(\"tab-selection-changed\", selectedWindow, previousWindow, resultWindow);\n    }\n\n    async function handleAttached(newTabGroupId: string, tabHeaderVisible: boolean, winsToBeNotified: WindowWrapper[]): Promise<void> {\n        _tabGroupId = newTabGroupId;\n        _isTabHeaderVisible = tabHeaderVisible;\n        await executor.finished;\n        winsToBeNotified.forEach((w) => {\n            w.Events.handleWindowAttached(resultWindow);\n        });\n        _registry.execute(\"attached\", resultWindow);\n    }\n\n    function handleWindowAttached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-attached\", win);\n    }\n\n    async function handleDetached(winsToBeNotified: WindowWrapper[]): Promise<void> {\n        _tabGroupId = undefined;\n        _isTabSelected = false;\n        await executor.finished;\n        winsToBeNotified.forEach((w) => {\n            w.Events.handleWindowDetached(resultWindow);\n        });\n        _registry.execute(\"detached\", resultWindow);\n    }\n\n    function handleWindowDetached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-detached\", win);\n    }\n\n    function handleZoomFactorChanged(zoomFactor: number): void {\n        _zoomFactor = zoomFactor;\n        _registry.execute(\"zoom-factor-changed\", resultWindow);\n    }\n\n    function handlePlacementSettingsChanged(placementSettings: Glue42.Windows.PlacementSettings): void {\n        let promise: Promise<Glue42.Displays.Display>;\n        const copy = placementSettings as any;\n        if (!copy.display) {\n            promise = Promise.resolve(undefined);\n        } else {\n            const displayAPI = displayAPIGetter();\n            if (!displayAPI) {\n                // display API is disabled\n                promise = Promise.resolve(undefined);\n            } else {\n                const index = copy.display - 1;\n                promise = new Promise((resolve, reject) => {\n                    displayAPI.all().then((displays) => {\n                        const display = displays.find((d) => d.index === index);\n                        resolve(display);\n                    }).catch(reject);\n                });\n            }\n        }\n\n        promise.then((d) => {\n            copy.display = d;\n            _placementSettings = copy;\n            _registry.execute(\"placementSettingsChanged\", resultWindow);\n        });\n    }\n    //#endregion \"Stream function\"\n\n    //#region \"Group Events\"\n    function handleGroupChanged(newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) {\n        _group = newGroup;\n        _groupId = newGroup?.id;\n\n        if (!util.isUndefinedOrNull(newGroup) && !util.isUndefinedOrNull(oldGroup)) {\n            _registry.execute(\"group-changed\", resultWindow, newGroup, oldGroup);\n        }\n    }\n\n    //#region \"Internal function\"\n\n    function getAllTabs(): Glue42.Windows.GDWindow[] {\n        const allWindows = windowStore.list;\n        if (_mode.toLowerCase() !== \"tab\") {\n            return [];\n        }\n        const tabs = Object.keys(allWindows).reduce<GDWindow[]>((memo, win) => {\n            const window: WindowWrapper = allWindows[win];\n            if (window\n                && window.API.tabGroupId\n                && typeof window.API.tabGroupId !== \"undefined\"\n                && typeof resultWindow.tabGroupId !== \"undefined\"\n                && window.API.tabGroupId === resultWindow.tabGroupId) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n        return tabs.sort((w1, w2) => {\n            if (w1.tabIndex !== w2.tabIndex) {\n                if (w1.tabIndex === -1) {\n                    return Number.MAX_SAFE_INTEGER;\n                }\n                if (w2.tabIndex === -1) {\n                    return Number.MIN_SAFE_INTEGER;\n                }\n            }\n            return w1.tabIndex - w2.tabIndex;\n        });\n    }\n\n    function mapWindowIdsToWindowObjects(windowIdArr: string[]): Glue42.Windows.GDWindow[] {\n        return windowIdArr.reduce((memo, winId) => {\n            const window = windowStore.get(winId);\n            if (window) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n    }\n\n    function getNeighboursByDirection(direction: string): Glue42.Windows.GDWindow[] {\n        const windowIds = _neighbours[direction];\n        if (typeof windowIds !== \"undefined\") {\n            return mapWindowIdsToWindowObjects(windowIds);\n        }\n    }\n\n    function getApplicationName(): string {\n        if (_context._APPLICATION_NAME) {\n            return _context._APPLICATION_NAME;\n        }\n        if (_context && _context._t42 && _context._t42.application) {\n            return _context._t42.application;\n        }\n        const info = getWindowInfo();\n        if (!info) {\n            return undefined;\n        }\n\n        return info.applicationName;\n    }\n\n    function getWindowInfo() {\n        if (typeof window !== \"undefined\" && window.glue42gd && window.glue42gd.getWindowInfo) {\n            const info = window.glue42gd.getWindowInfo(id);\n            if (!info) {\n                return undefined;\n            } else {\n                return info;\n            }\n        }\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"API\"\n\n    resultWindow = {\n        get id() {\n            return _id;\n        },\n        get name() {\n            return _name;\n        },\n        get application() {\n            const appManager = appManagerGetter();\n            return appManager ? appManager.application(getApplicationName()) : undefined;\n        },\n        get hostInstance() {\n            return executor.hostInstance;\n        },\n        get agmInstance() {\n            if (typeof window !== \"undefined\" && window.glue42gd) {\n                return agm.servers().find((s) => s.windowId === this.id);\n            }\n            const appName = getApplicationName();\n            return appName ? { application: appName } : undefined;\n        },\n        get url() {\n            return _url;\n        },\n        get title() {\n            return _title;\n        },\n        get windowStyleAttributes() {\n            return _settings;\n        },\n        get settings() {\n            return _settings;\n        },\n        get tabGroupId() {\n            return _mode.toLowerCase() === \"tab\" ? _tabGroupId : undefined;\n        },\n        get tabIndex() {\n            return _mode.toLowerCase() === \"tab\" ? _tabIndex : undefined;\n        },\n        get frameButtons() {\n            return _frameButtons;\n        },\n        get mode() {\n            return _mode;\n        },\n        get state() {\n            return _windowState;\n        },\n        get isCollapsed() {\n            return _isCollapsed;\n        },\n        get isVisible() {\n            return _isVisible;\n        },\n        get isLocked() {\n            return _isLocked;\n        },\n        get context() {\n            return _context;\n        },\n        get bounds() {\n            return _bounds;\n        },\n        get minHeight() {\n            return _settings.minHeight;\n        },\n        get maxHeight() {\n            return _settings.maxHeight;\n        },\n        get minWidth() {\n            return _settings.minWidth;\n        },\n        get maxWidth() {\n            return _settings.maxWidth;\n        },\n        get isFocused() {\n            return _focus;\n        },\n        get frameColor() {\n            return _frameColor;\n        },\n        get opened() {\n            return resultWindow.id !== undefined;\n        },\n        get group() {\n            return _group;\n        },\n        get groupId() {\n            return _groupId;\n        },\n        get isSticky() {\n            return _isSticky;\n        },\n        get topNeighbours() {\n            return getNeighboursByDirection(\"top\");\n        },\n        get leftNeighbours() {\n            return getNeighboursByDirection(\"left\");\n        },\n        get rightNeighbours() {\n            return getNeighboursByDirection(\"right\");\n        },\n        get bottomNeighbours() {\n            return getNeighboursByDirection(\"bottom\");\n        },\n        get isGroupHeaderVisible() {\n            return _isGroupHeaderVisible;\n        },\n        get activityId() {\n            if (_context._t42) {\n                return _context._t42.activityId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityId;\n        },\n        get activityWindowId() {\n            if (_context._t42) {\n                return _context._t42.activityWindowId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityWindowId;\n        },\n        get windowType() {\n            return options.windowType || \"electron\";\n        },\n        get zoomFactor() {\n            return _zoomFactor;\n        },\n        get screen() {\n            if (typeof window !== \"undefined\" && window.glue42gd) {\n                return utils.getMonitor(resultWindow.bounds, (window.glue42gd as any).monitors);\n            }\n            return undefined;\n        },\n        get placementSettings(): Glue42.Windows.PlacementSettings {\n            return Object.assign({}, _placementSettings);\n        },\n        maximize,\n        restore,\n        minimize,\n        maximizeRestore,\n        collapse,\n        expand,\n        toggleCollapse,\n        focus,\n        activate,\n        moveResize,\n        setTitle,\n        setStyle,\n        setOnTop,\n        resetButtons,\n        setSizeConstraints,\n        navigate,\n        addFrameButton,\n        removeFrameButton,\n        setVisible,\n        show: () => setVisible(true),\n        hide: () => setVisible(false),\n        center: (screen) => moveResize(utils.getDisplayCenterOfScreen(resultWindow.bounds, screen || resultWindow.screen)),\n        close,\n        snap,\n        showLoader,\n        hideLoader,\n        updateContext,\n        lock,\n        unlock,\n        getIcon,\n        setIcon,\n        setFrameColor,\n        setTabTooltip,\n        attachTab,\n        detachTab,\n        setTabHeaderVisible,\n        showPopup,\n        createFlydown,\n        setModalState,\n        setZoomFactor,\n        zoomIn,\n        zoomOut,\n        showDevTools,\n        capture,\n        flash,\n        setSticky,\n        print,\n        printToPDF,\n        place,\n        ungroup,\n        refresh,\n        download,\n        configure,\n\n        onClose,\n        onUrlChanged,\n        onTitleChanged,\n        onFrameButtonAdded,\n        onFrameButtonRemoved,\n        onFrameButtonClicked,\n        onCollapsed,\n        onExpanded,\n        onMinimized,\n        onMaximized,\n        onNormal,\n        onAttached,\n        onDetached,\n        onVisibilityChanged,\n        onContextUpdated,\n        onLockingChanged,\n        onBoundsChanged,\n        onFrameColorChanged,\n        onFocusChanged,\n        onStickyChanged,\n        onGroupChanged,\n        onWindowAttached,\n        onWindowDetached,\n        onTabSelectionChanged,\n        onTabHeaderVisibilityChanged,\n        onClosing,\n        onRefreshing,\n        onZoomFactorChanged,\n        onPlacementSettingsChanged,\n        onNeighboursChanged,\n\n        get tabs() {\n            return getAllTabs();\n        },\n\n        get isTabHeaderVisible() {\n            return _isTabHeaderVisible;\n        },\n\n        get isTabSelected() {\n            return _isTabSelected;\n        },\n\n        // @glue42/web compatibility layer\n        getURL() {\n            return Promise.resolve(_url);\n        },\n\n        getTitle() {\n            return Promise.resolve(_title);\n        },\n\n        getBounds(): Promise<Glue42.Windows.Bounds> {\n            return Promise.resolve(_bounds);\n        },\n\n        getContext(): Promise<any> {\n            return Promise.resolve(_context);\n        },\n\n        setContext(context: any): Promise<GDWindow> {\n            if (util.isUndefinedOrNull(context)) {\n                throw new Error(`\"context\" must not be null or undefined, set to empty object if you want to clear it out.`);\n            }\n\n            return executor.updateContext(resultWindow, context, true);\n        },\n\n        getDisplay(): Promise<Glue42.Displays.Display> {\n            const displayAPI = displayAPIGetter();\n            return displayAPI.getByWindowId(id);\n        },\n\n        resizeTo(width?: number, height?: number): Promise<GDWindow> {\n            return moveResize({ width, height });\n        },\n\n        moveTo(top?: number, left?: number): Promise<GDWindow> {\n            return moveResize({ top, left });\n        },\n\n        async getParentWindow() {\n            const myParentId = (_settings as any).parentInstanceId;\n            if (!myParentId) {\n                return undefined;\n            }\n            return windowStore.list[myParentId]?.API;\n        },\n\n        async getChildWindows() {\n            return Object.keys(windowStore.list)\n                .map((key) => windowStore.list[key].API)\n                .filter((w) => {\n                    const parentId = (w.settings as any).parentInstanceId;\n                    return parentId === id;\n                });\n        }\n    };\n\n    //#endregion \"API\"\n\n    //#endregion \"Group Events\"\n\n    const events: WindowEvents = {\n        handleUpdate,\n\n        handleWindowClose,\n        handleWindowChangeState,\n        handleTitleChanged,\n        handleVisibilityChanged,\n        handleUrlChanged,\n        handleWindowSettingsChanged,\n        handleContextUpdated,\n        handleFrameIsLockedChanged,\n        handleBoundsChanged,\n        handleFocusChanged,\n        handleFrameButtonAdded,\n        handleFrameButtonRemoved,\n        handleFrameButtonClicked,\n        handleFrameColorChanged,\n        handleFrameAttached,\n        handleFrameSelectionChanged,\n        handleCompositionChanged,\n        handleGroupHeaderVisibilityChanged,\n        handleTabHeaderVisibilityChanged,\n        handleGroupChanged,\n        handleAttached,\n        handleDetached,\n        handleWindowAttached,\n        handleWindowDetached,\n        handleZoomFactorChanged,\n        handleIsStickyChanged,\n        handlePlacementSettingsChanged,\n    };\n\n    return {\n        API: resultWindow,\n        Events: events\n    };\n};\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n","'use strict';\n\nvar encode = require('./encode');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { DetachTabOptions, Executor, FlashOptions } from \"../../types\";\nimport { ShowFlydownData, ReformatedFlydownOptions, ReformatedFlydownZone, ReformatedPopupOptions, EventTypes } from \"./types\";\nimport { CallbackRegistry, default as CallbackFactory, UnsubscribeFunction } from \"callback-registry\";\nimport shortid from \"shortid\";\nimport windowStore from \"../../store\";\nimport { isNullOrWhiteSpace, isUndefinedOrNull } from \"../../../activity/helpers/util\";\n\nexport class GDExecutor implements Executor {\n    private agm: Glue42Core.AGM.API;\n    private agmTarget: {};\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _finished: Promise<void> = Promise.resolve();\n\n    public get hostInstance() {\n        return this.agmTarget;\n    }\n\n    public get finished() {\n        return this._finished;\n    }\n\n    public init(agm: Glue42Core.AGM.API, instance: Glue42Core.AGM.Instance | string) {\n        this.agm = agm;\n        this.agmTarget = instance;\n    }\n    // refactor\n    public handleEvent(data: any) {\n        this._registry.execute(\"event\", data);\n    }\n\n    public async open(options: Glue42.Windows.WindowCreateOptions) {\n        let finishedResolve: () => void;\n        this._finished = new Promise((resolve) => {\n            finishedResolve = resolve;\n        });\n        try {\n            const result = await this.agm.invoke<{ id: string }>(\"T42.Wnd.Create\", options, this.agmTarget);\n            if (result.returned === undefined) {\n                throw new Error(\"failed to execute T42.Wnd.Create - unknown reason\");\n            }\n\n            const id = result.returned.id;\n            const win = await windowStore.waitFor(id);\n            setTimeout(() => {\n                if (win.API.windowType === \"electron\") {\n                    // on normal windows urlCHanged has to be detected first in order for the window to be ready\n                    // that causes the user callbacks to miss urlChanged since they are not registered yet\n                    // here we 'replay' the urlChanged event\n                    win.Events.handleUrlChanged(win.API.url);\n                }\n            }, 0);\n            return win.API;\n        } catch (error) {\n            throw error;\n        } finally {\n            finishedResolve();\n        }\n    }\n\n    public async close(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"close\", { windowId: w.id }, `Closed`);\n        return w;\n    }\n\n    public async navigate(w: Glue42.Windows.GDWindow, newUrl: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"navigate\", { windowId: w.id, options: { url: newUrl } }, \"UrlChanged\");\n        return w;\n    }\n    // Calls the public methods of the window. No Call to GD is made\n    public async setStyle(w: Glue42.Windows.GDWindow, style: Glue42.Windows.WindowSettings): Promise<Glue42.Windows.GDWindow> {\n        const stylePromises: Array<Promise<any>> = [];\n        const wait = (promise: Promise<any>) => stylePromises.push(promise);\n\n        if (!isUndefinedOrNull(style.focus) && !w.isFocused) {\n            wait(w.focus());\n        }\n\n        // Todo: only if !isRestoring (hopefully setVisible does this check)\n        if (!isUndefinedOrNull(style.hidden)) {\n            const toBeVisible = !style.hidden;\n            wait(w.setVisible(toBeVisible));\n        }\n\n        if (!isUndefinedOrNull(style.onTop)) {\n            wait(w.setOnTop(style.onTop));\n        }\n\n        if (!isNullOrWhiteSpace(style.tabTooltip) || !isNullOrWhiteSpace((style as any).tabToolTip)) {\n            const toolTip = style.tabTooltip ?? (style as any).tabToolTip;\n            wait(w.setTabTooltip(toolTip));\n        }\n\n        if (!isNullOrWhiteSpace(style.tabTitle)) {\n            wait(this.execute(\"setTabTitle\", { windowId: w.id, options: { tabTitle: style.tabTitle } }));\n        }\n\n        const {\n            maxWidth, maxHeight, minWidth, minHeight,\n            allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize\n        } = style;\n\n        wait(w.setSizeConstraints({ maxWidth, maxHeight, minWidth, minHeight }));\n        wait(w.resetButtons({ allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize }));\n\n        await Promise.all(stylePromises);\n\n        return w;\n    }\n\n    public async setSizeConstraints(w: Glue42.Windows.GDWindow, constraints: Glue42.Windows.SizeConstraints): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setSizeConstraints\", { windowId: w.id, options: constraints });\n        return w;\n    }\n\n    public async setTabTooltip(w: Glue42.Windows.GDWindow, tabTooltip: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setTabTooltip\", { windowId: w.id, options: { tabTooltip } });\n        return w;\n    }\n\n    public async resetButtons(w: Glue42.Windows.GDWindow, buttonsConfig: Glue42.Windows.WindowButtons): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"resetButtons\", { windowId: w.id, options: buttonsConfig });\n        return w;\n    }\n\n    public async setOnTop(w: Glue42.Windows.GDWindow, onTop: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setOnTop\", { windowId: w.id, options: { onTop } });\n        return w;\n    }\n\n    public async setTitle(w: Glue42.Windows.GDWindow, newTitle: string): Promise<Glue42.Windows.GDWindow> {\n        const options = {\n            windowId: w.id,\n            options: {\n                title: newTitle\n            }\n        };\n        await this.execute(\"setTitle\", options, \"TitleChanged\");\n        return w;\n    }\n\n    public async setSticky(w: Glue42.Windows.GDWindow, isSticky: boolean): Promise<Glue42.Windows.GDWindow> {\n        const options = {\n            windowId: w.id,\n            options: {\n                isSticky\n            }\n        };\n        await this.execute(\"setSticky\", options);\n        return w;\n    }\n\n    public async moveResize(w: Glue42.Windows.GDWindow, bounds: Partial<Glue42.Windows.Bounds>): Promise<Glue42.Windows.GDWindow> {\n        if ((window.glueDesktop as any).versionNum < 31200) {\n            return new Promise(async (res, rej) => {\n                const resolveImmediately = this.areBoundsEqual(bounds, w);\n                let isDone = false;\n                const done = () => {\n                    if (isDone) {\n                        return;\n                    }\n                    isDone = true;\n\n                    if (unsubscribeBoundsChanged) {\n                        unsubscribeBoundsChanged();\n                        unsubscribeBoundsChanged = undefined;\n                    }\n                    res(w);\n                    if (resolveTimeout) {\n                        clearTimeout(resolveTimeout);\n                        resolveTimeout = undefined;\n                    }\n                };\n                let resolveTimeout: any;\n                let unsubscribeBoundsChanged: () => void;\n                if (!resolveImmediately) {\n                    unsubscribeBoundsChanged = w.onBoundsChanged((win: Glue42.Windows.GDWindow) => {\n                        if (!this.areBoundsEqual(bounds, win)) {\n                            return;\n                        }\n                        done();\n                    });\n                }\n\n                try {\n                    // always execute moveResize (we might have old bounds and prevent calls that are actually valid)\n                    await this.execute(\"moveResize\", { windowId: w.id, options: { bounds } });\n                } catch (error) {\n                    rej(error);\n                    return;\n                }\n\n                // if we're trying to resize with the bounds we already have\n                if (resolveImmediately) {\n                    done();\n                    return;\n                }\n\n                // if no bounds change in the next 1s resolve\n                resolveTimeout = setTimeout(() => {\n                    done();\n                }, 1000);\n            });\n        } else {\n            await this.execute(\"moveResize\", { windowId: w.id, options: { bounds } });\n        }\n        return w;\n    }\n\n    public async addFrameButton(w: Glue42.Windows.GDWindow, buttonInfo: Glue42.Windows.ButtonInfo): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"addButton\", { windowId: w.id, options: buttonInfo }, \"ButtonAdded\");\n        return w;\n    }\n\n    public async removeFrameButton(w: Glue42.Windows.GDWindow, buttonId: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"removeButton\", { windowId: w.id, options: buttonId }, \"ButtonRemoved\");\n        return w;\n    }\n\n    public async activate(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onFocusChanged(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"activate\", { windowId: w.id }, \"FocusChanged\"), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async focus(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onFocusChanged(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"focus\", { windowId: w.id }, \"FocusChanged\"), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async maximizeRestore(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"maximizeRestore\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async maximize(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"maximize\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async restore(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"restore\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async minimize(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"minimize\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async collapse(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"collapse\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async expand(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"expand\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async toggleCollapse(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"toggleCollapse\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async snap(w: Glue42.Windows.GDWindow, targetWindow: Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection): Promise<Glue42.Windows.GDWindow> {\n        const args: any = {\n            targetWindowId: targetWindow.id\n        };\n\n        if (direction) {\n            args.snappingEdge = direction;\n        }\n        await this.execute(\"snap\", { windowId: w.id, options: args }, \"CompositionChanged\", `CompositionChanged-${targetWindow.id}`);\n        return w;\n    }\n\n    public async attachTab(w: Glue42.Windows.GDWindow, sourceWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.AttachOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"attachTab\", {\n            windowId: w.id,\n            options: {\n                index: options,\n                sourceWindowId: sourceWindow.id,\n                targetWindowId: w.id,\n            }\n        }, `WindowFrameAdded-${sourceWindow.id}`, `WindowFrameRemoved-${sourceWindow.id}`);\n        return w;\n    }\n\n    public async detachTab(w: Glue42.Windows.GDWindow, options: DetachTabOptions): Promise<Glue42.Windows.GDWindow> {\n        const eventKeys: string[] = [\"WindowFrameRemoved\", `WindowFrameAdded`];\n        if (!isUndefinedOrNull(options?.relativeTo)) {\n            eventKeys.push(`CompositionChanged`);\n            eventKeys.push(`CompositionChanged-${options.relativeTo}`);\n        } else {\n            eventKeys.push(\"BoundsChanged\");\n        }\n        await this.execute(\"detachTab\", { windowId: w.id, options }, ...eventKeys);\n        return w;\n    }\n\n    public async setVisible(w: Glue42.Windows.GDWindow, toBeVisible: boolean = true): Promise<Glue42.Windows.GDWindow> {\n        let command: string;\n        if (toBeVisible) {\n            command = \"show\";\n        } else {\n            command = \"hide\";\n        }\n\n        await this.execute(command, { windowId: w.id }, \"VisibilityChanged\");\n        return w;\n    }\n\n    public async showLoader(w: Glue42.Windows.GDWindow, loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"showLoadingAnimation\", { windowId: w.id, options: loader });\n        return w;\n    }\n\n    public async hideLoader(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"hideLoadingAnimation\", { windowId: w.id });\n        return w;\n    }\n\n    public async updateContext(w: Glue42.Windows.GDWindow, context: any, replace: boolean): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            // as undefined values do not go through interop, setting a prop to undefined will lead to no change\n            // set this to null so it actually removes the prop\n            const contextWithoutUndefinedValues = this.swapUndefinedToNull(context);\n\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onContextUpdated(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"updateContext\", {\n                windowId: w.id, context: contextWithoutUndefinedValues, replace\n            }), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async lock(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"lockUnlock\", { windowId: w.id, options: { lock: true } }, \"FrameIsLockedChanged\");\n        return w;\n    }\n\n    public async unlock(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"lockUnlock\", { windowId: w.id, options: { lock: false } }, \"FrameIsLockedChanged\");\n        return w;\n    }\n\n    public async getIcon(w: Glue42.Windows.GDWindow): Promise<string> {\n        const result = await this.execute(\"getIcon\", {\n            windowId: w.id,\n            options: {}\n        });\n        return result.icon;\n    }\n\n    public async setIcon(w: Glue42.Windows.GDWindow, base64Image: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setIcon\", {\n            windowId: w.id,\n            options: {\n                dataURL: base64Image\n            }\n        });\n        return w;\n    }\n\n    public async setFrameColor(w: Glue42.Windows.GDWindow, frameColor: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setFrameColor\", { windowId: w.id, options: { frameColor } }, \"FrameColorChanged\");\n        return w;\n    }\n\n    public async setTabHeaderVisible(w: Glue42.Windows.GDWindow, toBeTabHeaderVisible: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setTabHeaderVisible\", {\n            windowId: w.id,\n            options: {\n                toShow: toBeTabHeaderVisible\n            }\n        }, \"TabHeaderVisibilityChanged\");\n        return w;\n    }\n\n    public async showPopup(targetWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        if (!options) {\n            throw new Error(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.targetLocation) {\n            optionsCopy.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation;\n        }\n\n        const reformatedOptions: ReformatedPopupOptions & { targetId: string } = {\n            ...optionsCopy,\n            popupBounds: optionsCopy.size,\n            targetId: targetWindow.id,\n            popupId: optionsCopy.windowId\n        };\n\n        await this.execute(\"showPopupWindow\", {\n            windowId: targetWindow.id,\n            options: reformatedOptions\n        });\n\n        return targetWindow;\n    }\n\n    public async createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        if (!options) {\n            throw new Error(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.horizontalOffset) {\n            optionsCopy.horizontalOffset = 0;\n        }\n\n        if (!optionsCopy.verticalOffset) {\n            optionsCopy.verticalOffset = 0;\n        }\n\n        const fullOptions: Glue42.Windows.FlydownOptions & { targetId: string, flydownBounds: Glue42.Windows.FlydownOptions[\"size\"] } = this.reformatFlydownOptions(windowId, optionsCopy);\n\n        return this.execute(\"setFlydownArea\", { windowId, options: fullOptions }).then(() => {\n            const zoneIds = fullOptions.zones.map((z) => z.id);\n\n            fullOptions.zones.forEach((z) => {\n                let callback: (...args: any[]) => any = typeof (z.flydownSize) === \"function\" ?\n                    z.flydownSize : () => z.flydownSize;\n\n                if (options.size instanceof Function && z.flydownSize) {\n                    callback = async (data: Glue42.Windows.ShowFlydownData, cancel: () => void) => {\n                        let result;\n                        // The options callback must be always invoked\n                        // If the property in the zone is null it will be automatically\n                        // assigned to the same callback from the code above reformatFlydownOptions\n                        if (options.size instanceof Function) {\n                            result = await options.size(data, cancel);\n                        }\n\n                        // If both are callbacks the zone has higher priority\n                        // If they are the same only one should be invoked\n                        if (z.flydownSize instanceof Function && z.flydownSize !== options.size) {\n                            return await z.flydownSize(data, cancel) || result;\n                        }\n\n                        // The options callback overwrites the bounds object specified in the zone\n                        return result || z.flydownSize;\n                    };\n                }\n                this._registry.clearKey(`${fullOptions.targetId}_${z.id}`);\n                this._registry.add(`${fullOptions.targetId}_${z.id}`, callback);\n            });\n\n            return {\n                destroy: () => this.clearFlydownArea(fullOptions.targetId, zoneIds),\n                options: optionsCopy\n            };\n        });\n    }\n\n    public async setModalState(windowId: string, isModal: boolean): Promise<void> {\n        return this.execute(\"setModalState\", { windowId, options: { isModal } });\n    }\n\n    public async handleFlydownBoundsRequested(targetId: string, data: ShowFlydownData) {\n        const cancelCallback = () => data.cancel = true;\n\n        const callbackData: Glue42.Windows.ShowFlydownData = {\n            zoneId: data.flydownId,\n            flydownWindowBounds: data.flydownWindowBounds,\n            flydownWindowId: data.flydownWindowId,\n        };\n\n        const responses = await Promise.all(this._registry.execute(`${targetId}_${data.flydownId}`, callbackData, cancelCallback));\n\n        if (responses.length === 1) {\n            const defaultResponse = { height: 0, width: 0, top: 0, left: 0 };\n            const response = typeof (responses[0]) === \"object\" && !Array.isArray(responses[0]) ? responses[0] : defaultResponse;\n            const responseOptions: ShowFlydownData = { ...data, flydownWindowBounds: response };\n\n            return responseOptions;\n        }\n    }\n\n    public async zoomIn(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomIn\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async zoomOut(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomOut\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async setZoomFactor(window: Glue42.Windows.GDWindow, zoomFactor: number): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setZoomFactor\", {\n            windowId: window.id,\n            options: {\n                zoomFactor\n            }\n        });\n        return window;\n    }\n\n    public async showDevTools(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"showDevTools\", {\n            windowId: window.id,\n        });\n\n        return window;\n    }\n\n    public async capture(window: Glue42.Windows.GDWindow, options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot = (await this.execute(\n            \"captureScreenshot\",\n            { windowId: window.id, options: { ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async captureGroup(windowIds: string[], options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot: string = (await this.execute(\n            \"captureGroupScreenshot\",\n            { windowId: windowIds[0], options: { groupWindowIds: windowIds, ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async flash(resultWindow: Glue42.Windows.GDWindow, options: FlashOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"flash\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n\n        return resultWindow;\n    }\n\n    public async configure(windowId: string, options: Glue42.Windows.WindowsConfiguration): Promise<void> {\n        return this.execute(\n            \"configure\",\n            { windowId, options: { ...options } }\n        );\n    }\n\n    public async print(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PrintOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"print\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n        return resultWindow;\n    }\n\n    public async printToPDF(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PrintToPDFOptions): Promise<string> {\n        const filePath: string = (await this.execute(\n            \"printToPDF\",\n            { windowId: resultWindow.id, options: { ...options } }\n        )).filePath;\n\n        return filePath;\n    }\n\n    public async place(window: Glue42.Windows.GDWindow, options: Glue42.Windows.PlacementSettings): Promise<void> {\n        const copy = { ...options } as any;\n        if (!options.display || options.display === \"current\") {\n            copy.display = await window.getDisplay();\n        }\n        // Glue42.Displays.API works with zero based array of displays, which means that the first monitor has index 0\n        // whereas GD works with non zero based array of displays, which means that the first monitor has index 1\n        copy.display = copy.display.index + 1;\n        return this.execute(\n            \"place\",\n            { windowId: window.id, options: { ...copy } }\n        );\n    }\n\n    public async refresh(resultWindow: Glue42.Windows.GDWindow, ignoreCache: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"refresh\", { windowId: resultWindow.id, options: { ignoreCache } });\n        return resultWindow;\n    }\n\n    public async download(resultWindow: Glue42.Windows.GDWindow, url: string, options: Glue42.Windows.DownloadOptions & { enableDownloadBar?: boolean } = {}): Promise<Glue42.Windows.DownloadResult> {\n        options.enableDownloadBar = !options.silent;\n        const result: { fileSize: number, fullPath: string, success: boolean } = await this.execute(\"downloadURL\", { windowId: resultWindow.id, options: { url, options } });\n        return {\n            url,\n            path: result.fullPath,\n            size: result.fileSize,\n        };\n    }\n\n    public async configureWindow(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.WindowConfiguration): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"configureWindow\", { windowId: resultWindow.id, options });\n        return resultWindow;\n    }\n\n    /**\n     * Invokes the container\n     * @param command\n     * @param options\n     * @param {...string} eventKeys which events types to be awaited before resolving - used only < GD 3.12\n     * @returns Invocation result\n     */\n    public async execute(command: string, options: any & { windowId: string }, ...eventKeys: string[]): Promise<any> {\n        const params = {\n            ...options,\n            command,\n        };\n        let finishedResolve: () => void;\n        this._finished = new Promise((resolve) => {\n            finishedResolve = resolve;\n        });\n        try {\n            if ((window.glueDesktop as any).versionNum < 31200) {\n                return await this.executeWithoutToken(params, ...eventKeys);\n            } else {\n                return await this.executeWithToken(params);\n            }\n        } catch (error) {\n            throw error;\n        } finally {\n            finishedResolve();\n        }\n    }\n\n    public async ungroup(w: Glue42.Windows.GDWindow, options: Glue42.Windows.UngroupOptions): Promise<Glue42.Windows.GDWindow> {\n        const args = {\n            windowId: w.id,\n            options\n        };\n        await this.execute(\"ungroup\", args);\n        return w;\n    }\n\n    public onClosing(callback: (success: () => void, error: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addCloseHandler(callback, id);\n        }\n    }\n\n    public onRefreshing(callback: (success: () => void, error: () => void, prevent: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addRefreshHandler(callback, id);\n        }\n    }\n\n    private reformatFlydownOptions(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        const assignGeneralIfUnassigned = (zone: Glue42.Windows.FlydownZone, prop: keyof Glue42.Windows.FlydownZone & keyof Glue42.Windows.FlydownOptions) => {\n            if (options[prop] && (zone[prop] === undefined || zone[prop] === null)) {\n                const valueFromOptions = options[prop];\n                (zone[prop] as any) = valueFromOptions;\n            }\n        };\n\n        const zones: ReformatedFlydownOptions[\"zones\"] = options.zones.map((z) => {\n            assignGeneralIfUnassigned(z, \"windowId\");\n            assignGeneralIfUnassigned(z, \"targetLocation\");\n\n            if (options.size && (z.flydownSize === undefined || z.flydownSize === null)) {\n                z.flydownSize = options.size;\n            }\n\n            (z as ReformatedFlydownZone).flydownBounds = z.flydownSize as any;\n            (z as ReformatedFlydownZone).flydownId = z.windowId;\n\n            if (!z.targetLocation) {\n                z.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation.Bottom;\n            }\n\n            return z;\n        });\n\n        return {\n            ...options,\n            zones,\n            targetId: windowId,\n            flydownBounds: options.size,\n            flydownActiveArea: options.activeArea\n        };\n    }\n\n    private clearFlydownArea(windowId: string, areaIds: string[]) {\n        return this.execute(\"clearFlydownWindowArea\", {\n            windowId,\n            options: {}\n        }).then(() => {\n            areaIds.forEach((id) => {\n                this._registry.clearKey(`${windowId}_${id}`);\n            });\n        });\n    }\n\n    private executeWithoutToken(params: { windowId: string }, ...eventKeys: string[]) {\n        const uns: UnsubscribeFunction[] = [];\n        const executed = eventKeys?.filter((k) => !isUndefinedOrNull(k)).map((key) => {\n            return new Promise<void>((r) => {\n                const [type, windowId = params.windowId] = key.split(\"-\");\n                uns.push(this._registry.add(\"event\", (data: { windowId: string, type: string }) => {\n                    if (data.type === type && data.windowId === windowId) {\n                        r();\n                    }\n                }));\n            });\n        });\n        const action = new Promise<any>((resolve, reject) => {\n            this.agm.invoke<any>(\"T42.Wnd.Execute\", params, this.agmTarget)\n                .then((i) => {\n                    if (i.returned && i.returned.errorMsg) {\n                        reject(i);\n                    } else {\n                        resolve(i.returned);\n                    }\n                })\n                .catch((e) => reject(e));\n        });\n        return Promise.all([action, ...executed])\n            .then((r) => {\n                return r[0];\n            })\n            .finally(() => {\n                uns.forEach((un) => un());\n            });\n    }\n\n    private async executeWithToken(options: any) {\n        let un: UnsubscribeFunction;\n        try {\n            const token = shortid.generate();\n            const event = new Promise<void>((r) => {\n                un = this._registry.add(\"event\", (data: any) => {\n                    if (data.token === token) {\n                        r();\n                    }\n                });\n            });\n            const execute = new Promise<any>((resolve, reject) => {\n                options.token = token;\n                this.agm.invoke<any>(\"T42.Wnd.Execute\", options, this.agmTarget)\n                    .then((i) => {\n                        if (i.returned && i.returned.errorMsg) {\n                            reject(i);\n                        } else {\n                            resolve(i.returned);\n                        }\n                    })\n                    .catch((i) => {\n                        reject(i);\n                    });\n            });\n\n            const result = await Promise.all([execute, event]);\n            return result[0];\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    private areBoundsEqual(requested: Partial<Glue42.Windows.Bounds>, w: Glue42.Windows.GDWindow) {\n        const current = w.bounds;\n        const settings = w.settings;\n        let height = requested.height;\n        let width = requested.width;\n        if (requested.height < settings.minHeight) {\n            height = settings.minHeight;\n        }\n        if (requested.height > settings.maxHeight) {\n            height = settings.maxHeight;\n        }\n        if (requested.width < settings.minWidth) {\n            width = settings.minWidth;\n        }\n        if (requested.width > settings.maxWidth) {\n            width = settings.maxWidth;\n        }\n\n        const areHeightsEqual = height ? current.height === height : true;\n        const areWidthsEqual = width ? current.width === width : true;\n        const areLeftsEqual = requested.left ? current.left === requested.left : true;\n        const areTopsEqual = requested.top ? current.top === requested.top : true;\n\n        return areHeightsEqual && areWidthsEqual && areLeftsEqual && areTopsEqual;\n    }\n\n    private swapUndefinedToNull(context: any) {\n        try {\n            // swap top level undefined values to null-s\n            const copy: any = {};\n            for (const key of Object.keys(context)) {\n                let value = context[key];\n                if (typeof value === \"undefined\") {\n                    value = null;\n                }\n                copy[key] = value;\n            }\n            return copy;\n        } catch {\n            return context;\n        }\n    }\n}\n\nexport default new GDExecutor();\n","import { default as windowStore } from \"../store\";\nimport { WindowWrapper } from \"../types\";\n\nexport function getWindowsByTabGroupId(windowId: string, tabGroupId: string): WindowWrapper[] {\n    const windows = windowStore.list;\n    return Object.keys(windows).reduce((memo, id) => {\n        const win = windows[id];\n        if (win.API.tabGroupId === tabGroupId && win.API.id !== windowId) {\n            memo.push(win);\n        }\n        return memo;\n    }, []);\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { default as windowStore } from \"../../store\";\nimport { Environment, Executor, WindowConstructorOptions, WindowEvents, WindowWrapper } from \"../../types\";\nimport windowFactory from \"../../window\";\nimport { default as executor } from \"./executor\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport {\n    FullInfoEvent,\n    StreamEvent,\n    WindowInfo,\n    GroupHeaderVisibilityChanged,\n    UrlChanged,\n    TitleChanged,\n    BoundsChanged,\n    FocusChanged,\n    CompositionChanged,\n    ExtendedStreamEvent,\n    EventWithResponseData,\n    ResponseTypes,\n    IsStickyChanged\n} from \"./types\";\nimport { getWindowsByTabGroupId } from \"../helpers\";\n\nexport default class GDEnvironment implements Environment {\n\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _agm: Glue42Core.AGM.API;\n    private _logger: Glue42Core.Logger.API;\n    private _waitTimeout: number = 10000;\n    private _agmInstance: Glue42Core.AGM.Instance | \"best\" | \"all\";\n    private _windowId: string;\n    private _appManagerGetter: () => Glue42.AppManager.API;\n    private _displayAPIGetter: () => Glue42.Displays.API;\n\n    constructor(agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, instance?: Glue42Core.AGM.Instance, wndId?: string) {\n        this._agm = agm;\n        this._logger = logger.subLogger(\"gd-env\");\n        this._agmInstance = this.normalizeInstance(instance);\n        this._windowId = wndId;\n        this._appManagerGetter = appManagerGetter;\n        this._displayAPIGetter = displayAPIGetter;\n    }\n\n    public init(): Promise<GDEnvironment> {\n        return new Promise((resolve, reject) => {\n            // if we don't have an Instance, thats means that we are running outside from any Tick42 Containers\n            // so our target is best\n            if (typeof this._agmInstance === \"undefined\") {\n                this._agmInstance = \"best\";\n            }\n\n            this._agm.registerAsync(\"T42.Wnd.OnEventWithResponse\", (args, caller, success, err) => {\n                this.respondToEvent(args as any).then(success).catch(err);\n            });\n\n            const streamPromise = new Promise<void>((streamResolve, streamReject) => {\n                this._agm.subscribe(\"T42.Wnd.OnEvent\", {\n                    waitTimeoutMs: this._waitTimeout,\n                    target: this._agmInstance,\n                    onData: (streamData: any) => {\n                        this.updateWindow(streamData.data, resolve);\n                        executor.handleEvent(streamData.data);\n                    },\n                    onConnected: (instance) => {\n                        this._agmInstance = this.normalizeInstance(instance);\n                        // Init the executor\n                        executor.init(this._agm, this._agmInstance);\n                    }\n                }).catch((err: any) => {\n                    reject(\"Can not subscribe for stream T42.Wnd.OnEvent. Err: \" + err);\n                });\n            });\n        });\n    }\n\n    public get executor(): Executor {\n        return executor;\n    }\n\n    public open(name: string, url: string, options: any): Promise<Glue42.Windows.GDWindow> {\n        options = options || {};\n        const copyOptions = { ...options };\n\n        if (copyOptions.relativeTo !== undefined && typeof copyOptions.relativeTo !== \"string\") {\n            copyOptions.relativeTo = copyOptions.relativeTo.id || \"\";\n        }\n\n        copyOptions.name = name;\n        copyOptions.url = url;\n\n        // This is for compatibility between gd2 and gd3\n        copyOptions.windowState = options.windowState || options.state;\n        // Otherwise glue desktop throws an error for extra properties\n        delete copyOptions.state;\n\n        return this.executor.open(copyOptions);\n    }\n\n    public createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return this.executor.createFlydown(windowId, options);\n    }\n\n    public async showPopup(windowId: string, options: Glue42.Windows.PopupOptions): Promise<void> {\n        const window = windowStore.get(windowId);\n        await this.executor.showPopup(window.API, options);\n    }\n\n    public tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-attached\", callback);\n    }\n\n    public tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-detached\", callback);\n    }\n\n    public onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void) {\n        return this._registry.add(\"frame-color-changed\", callback);\n    }\n\n    public onEvent(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"window-event\", callback);\n    }\n\n    public my(): string {\n        return this._windowId;\n    }\n\n    public execute<T>(command: string, windowId: string, options: {}): Promise<Glue42Core.AGM.InvocationResult<T>> {\n        return this._agm.invoke<T>(\"T42.Wnd.Execute\", {\n            command,\n            options,\n            windowId,\n        });\n    }\n\n    /** Groups */\n    public onCompositionChanged(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"composition-changed\", callback);\n    }\n\n    public onGroupHeaderVisibilityChanged(callback: (stream: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"group-header-changed\", callback);\n    }\n\n    public onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"got-focus\", callback);\n    }\n\n    public onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"lost-focus\", callback);\n    }\n\n    // TODO revise it\n    private normalizeInstance(instance: Glue42Core.AGM.Instance) {\n        if (!instance) {\n            return undefined;\n        }\n        return {\n            application: instance.application,\n            machine: instance.machine,\n            user: instance.user,\n        };\n    }\n    private respondToEvent(args: EventWithResponseData): Promise<ResponseTypes> {\n        if (args.type === \"ShowFlydownBoundsRequested\") {\n            return this.executor.handleFlydownBoundsRequested(args.data.windowId, args.data);\n        }\n\n        return Promise.reject(`There isn't a handler for ${args.type}`);\n    }\n\n    private updateWindow(windowInfo: StreamEvent, readyResolve: (env: GDEnvironment) => void) {\n        const extendedStreamEvent = this.getExtendedStreamEvent(windowInfo);\n\n        // this is the snapshot of all windows\n        if (windowInfo.type === \"Snapshot\") {\n            const windowInfoFullInfoEvent = (windowInfo as FullInfoEvent);\n            windowInfoFullInfoEvent.windows.forEach((w) => {\n                const existingWindow = windowStore.get(w.id);\n                if (existingWindow) {\n                    existingWindow.Events.handleUpdate(this.mapToWindowConstructorOptions(w));\n                } else {\n                    const win = this.createWindow(w.id, w);\n                    windowStore.markReadyToShow(win.API.id);\n                }\n                this._registry.execute(\"window-event\", extendedStreamEvent);\n            });\n            readyResolve(this);\n            return;\n        }\n\n        // global event\n        if (windowInfo.type === \"CommandExecuted\") {\n            this._registry.execute(\"window-event\", extendedStreamEvent);\n            return;\n        }\n\n        // if new window handle it separately\n        if (windowInfo.type === \"Created\") {\n            const windowInfoCreatedEvent = (windowInfo as StreamEvent);\n            const win = this.createWindow(windowInfoCreatedEvent.windowId, windowInfoCreatedEvent.data || {});\n            windowStore.setReadyState(win.API.id);\n            this._registry.execute(\"window-event\", extendedStreamEvent);\n            return;\n        }\n\n        // otherwise check if the window is in our internal collections and update its state\n        const windowObjectAndEvents: WindowWrapper = windowStore.get((windowInfo as StreamEvent).windowId);\n        if (!windowObjectAndEvents) {\n            this._logger.error(`received update for unknown window. Stream:', ${JSON.stringify(windowInfo, null, 4)}`);\n            return;\n        }\n\n        const theWindow: Glue42.Windows.GDWindow = windowObjectAndEvents.API;\n        const theWindowEvents: WindowEvents = windowObjectAndEvents.Events;\n\n        // handle bounds changed\n        if (windowInfo.type === \"BoundsChanged\") {\n            const windowInfoBoundsChangedEvent = (windowInfo as BoundsChanged);\n            theWindowEvents.handleBoundsChanged(windowInfoBoundsChangedEvent.data);\n        }\n\n        // handle url changed\n        if (windowInfo.type === \"UrlChanged\") {\n            const windowInfoUrlChangedEvent = (windowInfo as UrlChanged);\n            windowStore.setUrlChangedState(windowInfoUrlChangedEvent.windowId);\n            theWindowEvents.handleUrlChanged(windowInfoUrlChangedEvent.data);\n        }\n\n        // handle title changed\n        if (windowInfo.type === \"TitleChanged\") {\n            const windowInfoTitleChanged = (windowInfo as TitleChanged);\n            theWindowEvents.handleTitleChanged(windowInfoTitleChanged.data);\n        }\n\n        // handle isSticky changed\n        if (windowInfo.type === \"IsStickyChanged\") {\n            const windowInfoIsStickyChangedChanged = (windowInfo as IsStickyChanged);\n            theWindowEvents.handleIsStickyChanged(windowInfoIsStickyChangedChanged.data);\n        }\n\n        // handle visibility changed\n        if (windowInfo.type === \"VisibilityChanged\") {\n            theWindowEvents.handleVisibilityChanged(windowInfo.data);\n        }\n\n        // handle context changed\n        if (windowInfo.type === \"ContextChanged\") {\n            theWindowEvents.handleContextUpdated(windowInfo.data);\n        }\n\n        // handle window state changed\n        if (windowInfo.type === \"StateChanged\") {\n            theWindowEvents.handleWindowChangeState(windowInfo.data);\n        }\n\n        // handle frame color changed\n        if (windowInfo.type === \"FrameColorChanged\") {\n            theWindowEvents.handleFrameColorChanged(windowInfo.data);\n            this._registry.execute(\"frame-color-changed\", theWindow);\n        }\n\n        // handle composition changed - groups API\n        if (windowInfo.type === \"CompositionChanged\") {\n            const windowInfoCompositionChanged = windowInfo as CompositionChanged;\n            theWindowEvents.handleCompositionChanged(windowInfoCompositionChanged.data);\n            this._registry.execute(\"composition-changed\", windowInfoCompositionChanged.data);\n        }\n\n        if (windowInfo.type === \"GroupHeaderVisibilityChanged\") {\n            const info = windowInfo as GroupHeaderVisibilityChanged;\n            theWindowEvents.handleGroupHeaderVisibilityChanged(info.data.groupHeaderVisible);\n            this._registry.execute(\"group-header-changed\", info.data);\n        }\n\n        // handle focus changed\n        if (windowInfo.type === \"FocusChanged\") {\n            const windowInfoFocusChanged = (windowInfo as FocusChanged);\n            this.focusChanged(theWindowEvents, theWindow, windowInfoFocusChanged.data);\n        }\n\n        if (windowInfo.type === \"WindowFrameChanged\") {\n            theWindowEvents.handleFrameAttached(windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n            this._registry.execute(\"frame-changed\");\n        }\n\n        if (windowInfo.type === \"WindowFrameAdded\") {\n            const winsToBeNotified = getWindowsByTabGroupId(theWindow.id, windowInfo.data.frameId);\n            theWindowEvents.handleAttached(windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible, winsToBeNotified)\n                .then(async () => {\n                    // don't fire the event if it is the first window\n                    if (winsToBeNotified.length > 0) {\n                        await executor.finished;\n                        this._registry.execute(\"tab-attached\", theWindow, windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n                    }\n                });\n        }\n\n        if (windowInfo.type === \"WindowFrameRemoved\") {\n            // In the event, tabGroupId is empty, will be update on the next event FrameAttached\n            const oldTabGroupId = theWindow.tabGroupId;\n            const winsToBeNotified = getWindowsByTabGroupId(theWindow.id, oldTabGroupId);\n            theWindowEvents.handleDetached(winsToBeNotified)\n                .then(async () => {\n                    // don't fire the event if it is the first window\n                    if (winsToBeNotified.length > 0) {\n                        await executor.finished;\n                        this._registry.execute(\"tab-detached\", theWindow, windowInfo.data.frameId, theWindow.tabGroupId);\n                    }\n                });\n        }\n\n        if (windowInfo.type === \"TabHeaderVisibilityChanged\") {\n            theWindowEvents.handleTabHeaderVisibilityChanged(windowInfo.data.isTabHeaderVisible);\n        }\n\n        if (windowInfo.type === \"FrameSelectionChanged\") {\n            theWindowEvents.handleFrameSelectionChanged(windowInfo.data.newWindowId, windowInfo.data.prevWindowId);\n        }\n\n        if (windowInfo.type === \"ButtonClicked\") {\n            theWindowEvents.handleFrameButtonClicked(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonAdded\") {\n            theWindowEvents.handleFrameButtonAdded(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonRemoved\") {\n            theWindowEvents.handleFrameButtonRemoved(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"WindowZoomFactorChanged\") {\n            theWindowEvents.handleZoomFactorChanged(windowInfo.data);\n        }\n\n        // Clear the window on close event\n        if (windowInfo.type === \"Closed\") {\n            windowStore.remove(windowObjectAndEvents);\n            theWindowEvents.handleWindowClose();\n        }\n\n        if (windowInfo.type === \"FrameIsLockedChanged\") {\n            theWindowEvents.handleFrameIsLockedChanged(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"PlacementSettingsChanged\") {\n            theWindowEvents.handlePlacementSettingsChanged(windowInfo.data);\n        }\n\n        // expose to external listeners\n        this._registry.execute(\"window-event\", extendedStreamEvent);\n    }\n\n    private createWindow(windowId: string, options: WindowInfo): WindowWrapper {\n        const wrapper = windowStore.get(windowId);\n        const windowObjAndEvents: WindowWrapper = windowFactory(windowId, this.mapToWindowConstructorOptions(options), executor, this._logger, this._appManagerGetter, this._displayAPIGetter, this._agm);\n        windowStore.add(windowObjAndEvents);\n        return windowObjAndEvents;\n    }\n\n    private focusChanged(theWindowEvents: WindowEvents, theWindow: Glue42.Windows.GDWindow, focus: boolean) {\n        theWindowEvents.handleFocusChanged(focus);\n        if (focus) {\n            this._registry.execute(\"got-focus\", theWindow);\n        } else {\n            this._registry.execute(\"lost-focus\", theWindow);\n        }\n    }\n\n    private mapToWindowConstructorOptions(args: WindowInfo): WindowConstructorOptions {\n        // TODO\n        return {\n            name: args.name,\n            context: args.context,\n            bounds: args.bounds,\n            url: args.url,\n            title: args.title,\n            isVisible: args.isVisible,\n            focus: args.isFocused,\n            state: args.state,\n            frameColor: args.frameColor,\n            groupId: args.groupId,\n            neighbours: args.neighbors,\n            isFocused: args.isFocused,\n            isGroupHeaderVisible: args.groupHeaderVisible,\n            isCollapsed: args.isCollapsed,\n            tabGroupId: args.frameId,\n            mode: args.mode,\n            isTabHeaderVisible: args.isTabHeaderVisible,\n            isTabSelected: args.isActiveTab,\n            settings: args.settings,\n            windowType: args.windowType,\n            zoomFactor: args.zoomFactor,\n            // focus: args.focus,\n            isLocked: args.isLocked,\n            placementSettings: args.placementSettings,\n            isSticky: args.isSticky,\n            tabIndex: args.tabIndex\n            // settings: windowStyleAttributes,\n        };\n    }\n\n    private getExtendedStreamEvent(streamEvent: StreamEvent): StreamEvent | ExtendedStreamEvent {\n        try {\n            // some events (e.g. Snapshot) do not have windowIds\n            if (!streamEvent.windowId) {\n                return streamEvent;\n            }\n\n            // try to get the window, if not there return the original event\n            const window = windowStore.get(streamEvent.windowId);\n            if (!window) {\n                return streamEvent;\n            }\n\n            const result: ExtendedStreamEvent = {\n                state: streamEvent.type,\n                windowName: window.API.name,\n                ...streamEvent\n            };\n\n            if (result.state === \"WindowFrameAdded\") {\n                result.state = \"TabAttached\";\n            }\n\n            if (result.state === \"StateChanged\") {\n                result.state = result.data.charAt(0).toUpperCase() + result.data.slice(1);\n            }\n\n            if (result.state === \"ButtonAdded\") {\n                result.state = \"FrameButtonAdded\";\n            }\n\n            if (result.state === \"ButtonRemoved\") {\n                result.state = \"FrameButtonRemoved\";\n            }\n\n            return result;\n        } catch (error) {\n            return streamEvent;\n        }\n    }\n}\n","import callbackRegistry, { CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { default as windowStore } from \"./store\";\nimport { Executor, GroupInternal, GroupWrapper, WindowWrapper } from \"./types\";\nimport { isNullOrWhiteSpace, isUndefinedOrNull } from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nexport default (id: string, executor: Executor): GroupWrapper => {\n\n    const _registry: CallbackRegistry = callbackRegistry();\n\n    const _windowsId: string[] = [];\n\n    //#region \"API functions\"\n\n    async function addWindow(winId: string): Promise<void> {\n        if (_windowsId.indexOf(winId) === -1) {\n            _windowsId.push(winId);\n            const win: WindowWrapper = windowStore.get(winId);\n            win.Events.handleGroupChanged(groupObject, undefined);\n            await executor.finished;\n            _registry.execute(\"window-added\", groupObject, win.API);\n        }\n    }\n\n    async function removeWindow(win: WindowWrapper): Promise<void> {\n        const index: number = _windowsId.indexOf(win.API.id);\n        if (index !== -1) {\n            _windowsId.splice(index, 1);\n            win.Events.handleGroupChanged(undefined, groupObject);\n            await executor.finished;\n            _registry.execute(\"window-removed\", groupObject, win.API);\n        }\n    }\n\n    function find(window: string | Glue42.Windows.GDWindow, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        let winId: string;\n        if (typeof window === \"string\") {\n            winId = window;\n        } else if (!isUndefinedOrNull(window)) {\n            winId = window.id;\n        }\n\n        const win = _mapToWindowObject(winId);\n        if (win) {\n            if (typeof success === \"function\") {\n                success(win);\n            }\n            return win;\n        } else {\n            if (typeof error === \"function\") {\n                error(`No window with ID: ${winId}`);\n            }\n        }\n    }\n\n    function windows(success?: (windows: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const mappedWindows: Glue42.Windows.GDWindow[] = _mapToWindowObjects();\n        if (typeof success === \"function\") {\n            success(mappedWindows);\n        }\n        return mappedWindows;\n    }\n\n    async function execute(command: string, options: any & { windowId: string }, ...keys: string[]): Promise<Glue42.Windows.Group> {\n        await executor.execute<Glue42.Windows.Group>(command, options, ...keys);\n        return groupObject;\n    }\n\n    //#endregion \"API functions\"\n\n    //#region \"Stream function\"\n\n    function handleGroupHeaderVisibilityChanged(windowInfo: any): void {\n        _registry.execute(\"header-visibility-changed\", groupObject);\n    }\n\n    //#endregion \"Stream function\"\n\n    //#region \"Internal function\"\n\n    function _mapToWindowObjects(): Glue42.Windows.GDWindow[] {\n        const winObjects: Glue42.Windows.GDWindow[] = [];\n\n        _windowsId.forEach((winId) => {\n            const windowObject = _mapToWindowObject(winId);\n            if (typeof windowObject !== \"undefined\") {\n                winObjects.push(windowObject);\n            }\n        });\n\n        return winObjects;\n    }\n\n    function _mapToWindowObject(windowId: string): Glue42.Windows.GDWindow {\n        return windowStore.get(windowId) ? windowStore.get(windowId).API : undefined;\n    }\n\n    function _getGroupHeaderVisibility(): boolean {\n        // if one of the windows has a flag hideGroupHeader the group header should be off.\n        const windowWithHiddenHeader = _mapToWindowObjects().find((w) => !w.isGroupHeaderVisible);\n        const _isGroupHeaderVisible = windowWithHiddenHeader === undefined;\n\n        return _isGroupHeaderVisible;\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"Events\"\n\n    function onHeaderVisibilityChanged(callback?: (group: Glue42.Windows.Group) => void): () => void {\n        return _registry.add(\"header-visibility-changed\", callback);\n    }\n\n    function onWindowAdded(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function onWindowRemoved(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"API\"\n\n    const groupObject: Glue42.Windows.Group = {\n        id,\n        get windows() {\n            return windows();\n        },\n        find,\n        get isHeaderVisible() {\n            return _getGroupHeaderVisibility();\n        },\n        showHeader: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"setGroupHeaderVisibility\", { windowId: _windowsId[0], options: { toShow: true } }, ..._windowsId.map((w) => `GroupHeaderVisibilityChanged-${w}`));\n            }, success, error);\n        },\n        hideHeader: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"setGroupHeaderVisibility\", { windowId: _windowsId[0], options: { toShow: false } }, ..._windowsId.map((w) => `GroupHeaderVisibilityChanged-${w}`));\n            }, success, error);\n        },\n        getTitle: async () => {\n            const r = await executor.execute<{ title: string }>(\"getGroupTitle\", { windowId: _windowsId[0] });\n            return r.title;\n        },\n        setTitle: async (title: string) => {\n            if (isNullOrWhiteSpace(title)) {\n                throw new Error(\"`title` must not be null or undefined.\");\n            }\n            return execute(\"setGroupTitle\", { windowId: _windowsId[0], options: { title } });\n        },\n        capture: (captureOptions: Glue42.Windows.CaptureOptions) => {\n            return executor.captureGroup(_windowsId, captureOptions);\n        },\n        maximize: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"maximizeGroup\", { windowId: _windowsId[0] }, ..._windowsId.map((w) => `StateChanged-${w}`));\n            }, success, error);\n        },\n        restore: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"restoreGroup\", { windowId: _windowsId[0] }, ..._windowsId.map((w) => `StateChanged-${w}`));\n            }, success, error);\n        },\n        onHeaderVisibilityChanged,\n        onWindowAdded,\n        onWindowRemoved,\n    };\n\n    const internal: GroupInternal = {\n        get windows() {\n            return _windowsId;\n        },\n        addWindow,\n        removeWindow,\n        handleGroupHeaderVisibilityChanged,\n    };\n\n    return {\n        groupAPI: groupObject,\n        groupInternal: internal,\n    };\n\n    //#endregion \"API\"\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { isNullOrWhiteSpace, isUndefinedOrNull } from \"../activity/helpers/util\";\nimport { CompositionChangedData } from \"./environment/gd/types\";\nimport groupFactory from \"./group\";\nimport { default as windowStore } from \"./store\";\nimport {\n    Environment,\n    GroupsInternal,\n    GroupsWrapper,\n    GroupWrapper,\n    WindowWrapper\n} from \"./types\";\n\nexport default (environment: Environment, logger: Glue42Core.Logger.API): GroupsWrapper => {\n    const _registry: CallbackRegistry = callbackRegistry();\n    const _groups: { [key: string]: GroupWrapper } = {};\n    let heardForWindowsCounter: number = -1;\n\n    // Getting already existing windows and create Group API for each window\n    const windows = windowStore.list;\n    Object.keys(windows).forEach((k) => {\n        const win = windows[k];\n        const groupId = win.API.groupId;\n        const winId = win.API.id;\n        // hidden windows doesn't have groupId\n        if (!isNullOrWhiteSpace(groupId)) {\n            addWindow(groupId, winId);\n        }\n    });\n\n    windowStore.onRemoved((w) => {\n        const group = findGroupWrapperByWindow(w.API);\n        removeWindow(group, w);\n    });\n\n    environment.onCompositionChanged((windowInfo: CompositionChangedData) => {\n        handleCompositionChanged(windowInfo);\n    });\n\n    environment.onGroupHeaderVisibilityChanged((windowInfo) => {\n        const windowId = windowInfo.windowId;\n        const group: Glue42.Windows.Group = findGroupByWindow(windowId);\n        if (typeof group !== \"undefined\") {\n            const groupEvents: GroupWrapper = _groups[group.id];\n\n            if (heardForWindowsCounter === -1) {\n                heardForWindowsCounter = group.windows.length;\n            }\n\n            heardForWindowsCounter--;\n            if (heardForWindowsCounter === 0) {\n                heardForWindowsCounter = -1;\n                groupEvents.groupInternal.handleGroupHeaderVisibilityChanged(windowInfo);\n            }\n        }\n    });\n\n    // Methods\n\n    function my(): Glue42.Windows.Group {\n        return findGroupByWindow(environment.my());\n    }\n\n    function list(success?: (groups: Glue42.Windows.Group[]) => void): Glue42.Windows.Group[] {\n        const result: Glue42.Windows.Group[] = Object.keys(_groups).map((groupId) => {\n            if (_groups[groupId]) {\n                return _groups[groupId].groupAPI;\n            }\n\n        });\n\n        if (typeof success === \"function\") {\n            success(result);\n        }\n        return result;\n    }\n\n    function findGroupByWindow(winId: string | Glue42.Windows.GDWindow, success?: (group: Glue42.Windows.Group) => void, error?: (error: string) => void): Glue42.Windows.Group {\n        let windowId: string;\n        if (typeof winId === \"string\") {\n            windowId = winId;\n        } else if (!isUndefinedOrNull(winId)) {\n            windowId = winId.id;\n        }\n        const result = Object.values(_groups).find((groupObj) => {\n            const group: Glue42.Windows.Group = groupObj.groupAPI;\n            const wins = group.windows.filter((w) => w.id === windowId);\n            return wins.length;\n        });\n        if (result) {\n            if (typeof success === \"function\") {\n                success(result.groupAPI);\n            }\n            return result.groupAPI;\n        } else {\n            if (typeof error === \"function\") {\n                error(`Cannot find the group of the window.`);\n            }\n        }\n    }\n\n    // Events\n    function onWindowMoved(callback?: (windowId: string, oldTabGroupId: string, newGroupId: string) => void): UnsubscribeFunction {\n        return _registry.add(\"window-moved\", callback);\n    }\n\n    // Private\n\n    function createOrGet(groupId: string): GroupWrapper {\n        if (!_groups.hasOwnProperty(groupId)) {\n            const createdGroup: GroupWrapper = groupFactory(groupId, environment.executor);\n            _groups[groupId] = createdGroup;\n            return createdGroup;\n        } else {\n            return _groups[groupId];\n        }\n    }\n\n    function deleteIfEmpty(group: GroupWrapper): void {\n        if (group.groupAPI.windows.length === 0) {\n            delete _groups[group.groupAPI.id];\n        }\n    }\n\n    // hidden window doesn't have a groupId\n    function addWindow(groupId: string, winId: string) {\n        const group = createOrGet(groupId);\n        group.groupInternal.addWindow(winId);\n        return group;\n    }\n\n    function removeWindow(group: GroupWrapper, win: WindowWrapper) {\n        if (!group) {\n            return;\n        }\n        group.groupInternal.removeWindow(win);\n        deleteIfEmpty(group);\n    }\n\n    function handleCompositionChanged(state: CompositionChangedData): void {\n        const groupId = state.groupId;\n        const windowId = state.windowId;\n        const win = windowStore.get(windowId);\n        if (!win) {\n            return;\n        }\n        const currentGroup = findGroupWrapperByWindow(win.API);\n        // if the window's visibility is changed to hidden, remove from the group\n        // or the window is closed.\n        if (isUndefinedOrNull(groupId)) {\n            removeWindow(currentGroup, win);\n            return;\n        }\n        // if the window's visibility is changed to visible, addOrCreate the group\n        if (isUndefinedOrNull(currentGroup) && !isUndefinedOrNull(groupId)) {\n            addWindow(groupId, win.API.id);\n            return;\n        }\n\n        if (currentGroup.groupAPI.id !== groupId) {\n            moveWindow(win, currentGroup.groupAPI.id, groupId);\n        }\n    }\n\n    function moveWindow(win: WindowWrapper, from: string, to: string) {\n        const winId = win.API.id;\n        const fromGroup = _groups[from];\n        removeWindow(fromGroup, win);\n        const toGroup = addWindow(to, winId);\n        win.Events.handleGroupChanged(toGroup.groupAPI, fromGroup.groupAPI);\n        _registry.execute(\"window-moved\", winId, from, to);\n    }\n\n    function findGroupWrapperByWindow(winId: string | Glue42.Windows.GDWindow): GroupWrapper {\n        let windowId: string;\n        if (typeof winId === \"string\") {\n            windowId = winId;\n        } else if (!isUndefinedOrNull(winId)) {\n            windowId = winId.id;\n        }\n        return Object.values(_groups).find((groupObj) => {\n            const groupInternal = groupObj.groupInternal;\n            const wins = groupInternal.windows.filter((id) => id === windowId);\n            return wins.length;\n        });\n    }\n\n    //#region \"API\"\n\n    const groups = {\n        get my() {\n            return my();\n        },\n        list,\n        findGroupByWindow,\n    };\n\n    //#endregion \"API\n\n    const events: GroupsInternal = { onWindowMoved };\n\n    return {\n        groupsAPI: groups,\n        groupsEvents: events,\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Environment, GroupsWrapper, WindowWrapper } from \"./types\";\n\nimport { default as envDetector } from \"./environment/detector\";\nimport groupsFactory from \"./groups\";\nimport { default as windowStore } from \"./store\";\nimport executor from \"./environment/gd/executor\";\nimport * as util from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, gdMajorVersion: number): Glue42.Windows.API => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger;\n    let groups: GroupsWrapper;\n    let environment: Environment;\n\n    windowStore.init(_logger);\n\n    const isReady = new Promise<void>((resolve, reject) => {\n        envDetector(agm, _logger, appManagerGetter, displayAPIGetter, gdMajorVersion)\n            .then((env) => {\n                environment = env;\n                groups = groupsFactory(env, _logger);\n                resolve();\n            })\n            .catch((e) => {\n                const err = `Environment detector fails with: ${e}`;\n                _logger.error(err);\n                reject(err);\n            });\n    });\n\n    function ready() {\n        return isReady;\n    }\n\n    function my(): Glue42.Windows.GDWindow {\n        const myWindow = windowStore.getIfReady(environment.my());\n        return myWindow ? myWindow.API : undefined;\n    }\n\n    function open(name: string, url: string, options?: Glue42.Windows.WindowSettings, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(name)) {\n                throw new Error(\"The window name is missing.\");\n            }\n            if (util.isNullOrWhiteSpace(url)) {\n                throw new Error(\"The window URL is missing.\");\n            }\n\n            if (!util.isUndefinedOrNull(options)) {\n                const optionsAsAny = options as any;\n                for (const prop of [\"minHeight\", \"maxHeight\", \"minWidth\", \"maxWidth\", \"width\", \"height\", \"top\", \"left\"]) {\n                    if (prop in optionsAsAny) {\n                        const value = optionsAsAny[prop];\n                        if (util.isUndefinedOrNull(value)) {\n                            delete optionsAsAny[prop];\n                            continue;\n                        }\n                        if (!util.isNumber(value)) {\n                            const errMessage = `${prop} must be a number`;\n                            throw new Error(errMessage);\n                        }\n                        if (optionsAsAny[prop] === \"width\" || optionsAsAny[prop] === \"height\") {\n                            if (value <= 0) {\n                                const errMessage = `${prop} must be a positive number`;\n                                throw new Error(errMessage);\n                            }\n                        }\n                    }\n                }\n            }\n            return environment.open(name, url, options);\n        }, success, error);\n    }\n\n    function find(name: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (window?.API?.name === name) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n\n        const win = windowsForListing[0];\n        if (win) {\n            if (typeof success === \"function\") {\n                success(windowsForListing[0]);\n            }\n            return windowsForListing[0];\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with name:\" + name);\n            }\n        }\n    }\n\n    function findById(id: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (typeof window !== \"undefined\" && window.API.id === id) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n        const win = windowsForListing[0];\n        if (win) {\n            if (typeof success === \"function\") {\n                success(windowsForListing[0]);\n            }\n            return windowsForListing[0];\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with such id:\" + id);\n            }\n        }\n    }\n\n    function list(success?: (window: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows)\n            .map((k) => {\n                return windows[k].API;\n            });\n\n        if (typeof success !== \"function\") {\n            return windowsForListing;\n        }\n\n        success(windowsForListing);\n    }\n\n    function configure(options: Glue42.Windows.WindowsConfiguration): Promise<void> {\n        const win = my();\n        const winId = win ? win.id : \"\";\n        return executor.configure(winId, options);\n    }\n\n    function windowAdded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function windowRemoved(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    function tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.tabAttached(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.tabDetached(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowFrameColorChanged(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowGotFocus(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowLostFocus(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onEvent(callback: (stream: any) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onEvent(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function createFlydown(targetId: string, config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return environment.createFlydown(targetId, config);\n    }\n\n    function showPopup(targetId: string, config: Glue42.Windows.PopupOptions): Promise<void> {\n        return environment.showPopup(targetId, config);\n    }\n\n    function handleWindowAdded(w: WindowWrapper) {\n        _registry.execute(\"window-added\", w.API);\n    }\n\n    function handleWindowRemoved(w: WindowWrapper) {\n        _registry.execute(\"window-removed\", w.API);\n    }\n\n    windowStore.onReadyWindow(handleWindowAdded);\n    windowStore.onRemoved(handleWindowRemoved);\n\n    // The API itself\n    return {\n        my,\n        open,\n        find,\n        findById,\n        list,\n        ready,\n        onWindowAdded: windowAdded,\n        windowAdded,\n        onWindowRemoved: windowRemoved,\n        windowRemoved,\n        onTabAttached: tabAttached,\n        onTabDetached: tabDetached,\n        onWindowFrameColorChanged,\n\n        get groups() {\n            return groups.groupsAPI;\n        },\n        onWindowGotFocus,\n        onWindowLostFocus,\n        onEvent,\n        createFlydown,\n        showPopup,\n        configure\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { Environment } from \"./../types\";\nimport { default as GD } from \"./gd/gd\";\nimport { Glue42 } from \"../../../glue\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, gdMajorVersion: number): Promise<Environment> => {\n    const _logger = logger;\n    return new Promise((resolve, reject) => {\n        if (gdMajorVersion === 2) {\n            // We are running in HC\n            _logger.trace(\"running in HC\");\n            throw new Error(\"GD2 not supported\");\n        } else if (gdMajorVersion >= 3) {\n            // We are running in GD 3\n            // TODO expose instance in glu42gd\n            _logger.trace(\"running in GD 3\");\n            const gd = new GD(agm, _logger, appManagerGetter, displayAPIGetter, undefined, window.glue42gd.windowId);\n            gd.init()\n                .then(resolve)\n                .catch(reject);\n        } else {\n            // We are running in Browser or Node, we should check which stream is available\n            // But we need to pass the container as dependency\n            const gdPromise = new GD(agm, _logger, appManagerGetter, displayAPIGetter).init();\n            const wait = (ms: number) => new Promise((res, rej) => setTimeout(() => { rej(\"timeout waiting for streams\"); }, ms));\n            Promise.race([gdPromise, wait(10000)])\n                .then(resolve)\n                .catch(reject);\n        }\n    });\n};\n","import { Glue42 } from \"../../glue\";\n\n// provides a unified way to access layouts array\nexport class LayoutStore {\n    private layouts: Glue42.Layouts.Layout[] = [];\n\n    public removeWhere(condition: (l: Glue42.Layouts.Layout) => boolean) {\n        this.layouts = this.layouts.filter(condition);\n    }\n\n    public add(item: Glue42.Layouts.Layout) {\n        this.layouts.push(item);\n    }\n\n    public get all(): Glue42.Layouts.Layout[] {\n        return this.layouts;\n    }\n\n    public where(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout[] {\n        return this.layouts.filter(condition);\n    }\n\n    public first(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout {\n        return this.where(condition)[0];\n    }\n}\n\nexport default new LayoutStore();\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry } from \"callback-registry\";\nimport { LayoutsLibConfiguration } from \"./types\";\nimport { isBoolean } from \"../activity/helpers/util\";\n\nconst SaveContextMethodName = \"T42.HC.GetSaveContext\";\ndeclare var htmlContainer: any;\n\n/**\n * Logic for apps that want to provide custom context on save\n */\nexport default class ContextProvider {\n\n    private interop: Glue42.Interop.API;\n\n    constructor(private config: LayoutsLibConfiguration, private activitiesGetter: () => Glue42.Activities.API, private callbacks: CallbackRegistry, private logger: Glue42.Logger.API) {\n        this.interop = config.agm;\n        this.registerRequestMethods();\n    }\n\n    public onSaveRequested(callback: (info?: Glue42.Layouts.SaveRequestContext) => Glue42.Layouts.SaveRequestResponse) {\n        return this.callbacks.add(\"saveRequested\", callback);\n    }\n\n    private isActivityOwner() {\n        // fallback for GD2 - remove once the bellow code is tested\n        if (typeof htmlContainer !== \"undefined\") {\n            const context = htmlContainer.getContext();\n            return context && context._t42 && context._t42.activityIsOwner;\n        }\n\n        // check if we're the activity owners\n        const activities = this.activitiesGetter();\n        if (!activities) {\n            return false;\n        }\n\n        if (!activities.inActivity) {\n            return false;\n        }\n\n        const myWindow = activities.my.window;\n        const myActivity = activities.my.activity;\n\n        if (!myActivity && !myWindow) {\n            return false;\n        }\n\n        return myActivity.owner.id === myWindow.id;\n    }\n\n    private registerRequestMethods() {\n        this.interop.register<Glue42.Layouts.SaveRequestContext>(SaveContextMethodName, (args) => {\n            const usersCbs = this.callbacks.execute(\"saveRequested\", args);\n            if (usersCbs?.length > 1) {\n                this.logger.warn(`Multiple subscriptions for \"glue.layouts.onSaveRequested\" - only the first one will be used`);\n            }\n            const requestResult = usersCbs[0] as Glue42.Layouts.SaveRequestResponse;\n            const autoSaveWindowContext = this.config.autoSaveWindowContext;\n\n            if (isBoolean(autoSaveWindowContext) && autoSaveWindowContext) {\n                return { autoSaveWindowContext };\n            }\n            // always include the window context\n            const result: Glue42.Layouts.SaveRequestResponse = { windowContext: requestResult?.windowContext, activityContext: undefined };\n\n            // if we're the activity owner put the context too\n            if (this.isActivityOwner()) {\n                result.activityContext = requestResult?.activityContext;\n            }\n\n            return result;\n        });\n    }\n}\n","// A simple transformation that makes object to start with lowercase\n// Note that this is not full implementation as it supports only:\n// undefined, null, arrays, number, string, bool. Anything out of this\n// list is considered Object\nexport default function transformACSLayout(something: { [key: string]: any }): { [key: string]: any } {\n    if (!something) {\n        return something;\n    }\n\n    if (Array.isArray(something)) {\n        return something.map((item) => {\n            return transformACSLayout(item);\n        });\n    }\n\n    if (typeof something === \"string\" || typeof something === \"number\" || typeof something === \"boolean\") {\n        return something;\n    }\n\n    const initial: { [key: string]: any } = {};\n    return Object.keys(something).reduce((accumulator, current) => {\n        const value = something[current];\n        const convertedValue = transformACSLayout(value);\n\n        let key = current;\n        if (current[0].toLowerCase() !== current[0]) {\n            key = current[0].toLowerCase() + current.substr(1);\n        }\n\n        accumulator[key] = convertedValue;\n        return accumulator;\n    }, initial);\n}\n","import { Glue42 } from \"../../glue\";\n\nexport default class LayoutImpl implements Glue42.Layouts.Layout {\n    /** Name of the layout */\n    public name: string;\n\n    /** Type of the layout */\n    public type: Glue42.Layouts.LayoutType;\n\n    /** Array of components describing the applications that are saved in the layout */\n    public components: Glue42.Layouts.LayoutComponent[];\n\n    /** Context passed when the layout was saved */\n    public context: any;\n\n    /** Metadata passed when the layout was saved */\n    public metadata: any;\n\n    /** Version of the layout */\n    public version: string;\n\n    /** Displays of the layout */\n    public displays: any;\n\n    constructor(data: any) {\n        this.name = data.name;\n        this.type = data.type;\n        this.components = data.components;\n        this.context = data.context;\n        this.metadata = data.metadata;\n        this.version = data.version;\n        this.displays = data.displays;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { LayoutsStream, HibernationResumeMessage, UpdateLayoutComponentContextMessage, LayoutsLibConfiguration } from \"./types\";\nimport store from \"./store\";\nimport generate from \"shortid\";\nimport { ACSSaveLayoutMessage, ACSRestoreMessage, ACSRestoreOptionsMessage, ACSMessage, ACSRenameMessage, ACSRemoveLayoutMessage, ACSImportMessage, ExportResultMessage } from \"./types\";\nimport { Glue42Core } from \"@glue42/core\";\nimport ContextProvider from \"./contextProvider\";\nimport transformACSLayout from \"./transform\";\nimport LayoutImpl from \"./layout\";\nimport { isBoolean, isNullOrWhiteSpace, isNumber, isObject, isString, isUndefinedOrNull } from \"../activity/helpers/util\";\n\nexport default class LayoutsAPIImpl implements Glue42.Layouts.API {\n    private appManager: Glue42.AppManager.API;\n    private provider: ContextProvider;\n\n    constructor(private config: LayoutsLibConfiguration, private stream: LayoutsStream, private callbacks: CallbackRegistry, logger: Glue42.Logger.API) {\n        this.appManager = config.appManager;\n        this.onEvent = stream.onEvent;\n        this.provider = new ContextProvider(config, config.activityGetter, callbacks, logger);\n        stream.subscribe();\n    }\n\n    public async setDefaultGlobal(name: string): Promise<void> {\n        await this.config.agm.invoke(\"T42.ACS.SelectDefaultLayout\", { name });\n        return;\n    }\n\n    public async clearDefaultGlobal(): Promise<void> {\n        await this.config.agm.invoke(\"T42.ACS.DeselectDefaultLayout\");\n        return;\n    }\n\n    public async getDefaultGlobal(): Promise<Glue42.Layouts.Layout | undefined> {\n        const result = await this.config.agm.invoke(\"T42.ACS.GetDefaultLayout\");\n        const layout = result.returned;\n        if (!layout) {\n            return undefined;\n        }\n        if (this.isSlimMode()) {\n            return layout;\n        }\n        return this.list().find((l) => l.name === layout.name && l.type === \"Global\");\n    }\n\n    public ready(): Promise<void> {\n        if (this.config.mode === \"fullWaitSnapshot\") {\n            return this.stream.gotSnapshot;\n        }\n        return this.stream.ready;\n    }\n\n    public save(layout: Glue42.Layouts.NewLayoutOptions): Promise<Glue42.Layouts.Layout> {\n        return new Promise<Glue42.Layouts.Layout>((resolve, reject) => {\n\n            this.verifyNotSlimMode();\n\n            if (isUndefinedOrNull(layout)) {\n                return reject(new Error(\"layout is required\"));\n            }\n\n            if (isNullOrWhiteSpace(layout.name)) {\n                return reject(new Error(\"layout.name argument is required\"));\n            }\n\n            if (isNullOrWhiteSpace(layout.type)) {\n                layout.type = \"Global\";\n            }\n\n            if (!isNullOrWhiteSpace(layout.activityId)) {\n                layout.type = \"Activity\";\n            }\n\n            const layoutObject: ACSSaveLayoutMessage = {\n                name: layout.name,\n                type: layout.type,\n                context: layout.context ?? {},\n                metadata: layout.metadata ?? {},\n                options: {},\n            };\n\n            if (layout.type === \"Activity\") {\n                let actId = layout.activityId;\n                if (!actId) {\n                    if (!this.appManager.myInstance.inActivity) {\n                        return reject(new Error(\"Current application is not in activity. Cannot save activity layout for it.\"));\n                    }\n                    actId = this.appManager.myInstance.activityId;\n                }\n                layoutObject.activityId = actId;\n            } else if (layout.type === \"Global\") {\n                if (Array.isArray(layout.ignoreInstances)) {\n                    layoutObject.options.ignoreInstances = layout.ignoreInstances;\n                }\n                if (Array.isArray(layout.instances)) {\n                    layoutObject.options.instances = layout.instances;\n                }\n            } else {\n                return reject(new Error(`layout type ${layout.type} is not supported`));\n            }\n\n            this.invokeMethodAndTrack(\"T42.ACS.SaveLayout\", layoutObject, resolve, reject);\n        });\n    }\n\n    public restore(options: Glue42.Layouts.RestoreOptions): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n            // TODO add validations...\n            if (isUndefinedOrNull(options)) {\n                return reject(new Error(\"options argument is required\"));\n            }\n\n            if (isNullOrWhiteSpace(options.name)) {\n                return reject(new Error(\"options.name argument is required\"));\n            }\n\n            if (isNullOrWhiteSpace(options.type)) {\n                options.type = \"Global\";\n            }\n\n            if (!isNullOrWhiteSpace(options.activityIdToJoin)) {\n                options.type = \"Activity\";\n            }\n\n            if (options.type === \"Activity\") {\n                if (isUndefinedOrNull(options.setActivityContext)) {\n                    options.setActivityContext = true;\n                }\n                if (typeof options.setActivityContext !== \"boolean\") {\n                    return reject(new Error(\"`setActivityContext` must hold a boolean value.\"));\n                }\n                options.activityIdToJoin = options.activityIdToJoin ?? this.appManager.myInstance.activityId;\n            }\n\n            // backwards compatibility\n            if (!isUndefinedOrNull(options.closeRunningInstance)) {\n                options.closeRunningInstances = options.closeRunningInstance;\n            }\n\n            if (isUndefinedOrNull(options.closeRunningInstances)) {\n                options.closeRunningInstances = true;\n            }\n\n            if (!isBoolean(options.closeRunningInstances)) {\n                return reject(new Error(\"`closeRunningInstances` must hold a boolean value.\"));\n            }\n\n            if (isUndefinedOrNull(options.closeMe)) {\n                options.closeMe = options.closeRunningInstances;\n            }\n\n            if (!isBoolean(options.closeMe)) {\n                return reject(new Error(\"`closeMe` must hold a boolean value.\"));\n            }\n\n            if (!isUndefinedOrNull(options.context) && !isObject(options.context)) {\n                return reject(new Error(\"`context` must hold an object value.\"));\n            }\n\n            if (!isUndefinedOrNull(options.timeout) && typeof options.timeout !== \"number\") {\n                return reject(new Error(\"`timeout` must hold an number value.\"));\n            }\n\n            options.context = options.context ?? {};\n\n            const restoreOptions: ACSRestoreOptionsMessage = {\n                activityToJoin: options.activityIdToJoin,\n                setActivityContext: options.setActivityContext,\n                ignoreActivityWindowTypes: options.ignoreActivityWindowTypes,\n                // not used in GD3\n                // restoreActivityOwner: options.restoreActivityOwner,\n                // closeOldWindows: options.closeRunningInstance,\n                reuseExistingWindows: options.reuseWindows,\n\n                closeRunningInstances: options.closeRunningInstances, // new\n                excludeFromClosing: options.closeMe ? [] : [this.appManager.myInstance.id]\n            };\n\n            const arg: ACSRestoreMessage = {\n                type: options.type,\n                name: options.name,\n                context: options.context,\n                options: restoreOptions\n            };\n            if (options.timeout) {\n                arg.timeout = options.timeout;\n            }\n\n            this.invokeMethodAndTrack(\"T42.ACS.RestoreLayout\", arg, resolve, reject, true);\n        });\n    }\n\n    public remove(type: string, name: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!name) {\n                return reject(new Error(\"name argument is required\"));\n            }\n\n            if (!type) {\n                return reject(new Error(\"type argument is required\"));\n            }\n\n            const msg: ACSRemoveLayoutMessage = {\n                type,\n                name,\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RemoveLayout\", msg, resolve, reject);\n        });\n    }\n\n    public list(): Glue42.Layouts.Layout[] {\n        this.verifyNotSlimMode();\n        return store.all;\n    }\n\n    public import(layouts: Glue42.Layouts.Layout[], mode?: Glue42.Layouts.ImportMode): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n            if (!isUndefinedOrNull(mode)) {\n                if (mode !== \"merge\" && mode !== \"replace\") {\n                    return reject(new Error(`${mode} is not supported - only \"merge\" and \"replace\"`));\n                }\n            }\n            const msg: ACSImportMessage = {\n                mode: mode || \"replace\",\n                layouts\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ImportLayouts\", msg, resolve, reject, true);\n        });\n    }\n\n    public export(layoutType?: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.Layout[]> {\n        return new Promise<Glue42.Layouts.Layout[]>((resolve, reject) => {\n            const handleResult = (result: ExportResultMessage) => {\n                let layouts: Glue42.Layouts.Layout[] = this.getObjectValues(result.Layouts).map((t) => new LayoutImpl(transformACSLayout(t)));\n                if (layoutType) {\n                    layouts = layouts.filter((l) => l.type === layoutType);\n                }\n                resolve(layouts);\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ExportLayouts\", {}, handleResult, reject, true);\n        });\n    }\n\n    public rename(layout: Glue42.Layouts.Layout, newName: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!layout) {\n                return reject(new Error(\"layout argument is required\"));\n            }\n\n            if (!layout.name) {\n                return reject(new Error(\"name argument is required\"));\n            }\n\n            if (!layout.type) {\n                return reject(new Error(\"type argument is required\"));\n            }\n\n            const msg: ACSRenameMessage = { type: layout.type, oldName: layout.name, newName };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RenameLayout\", msg, resolve, reject);\n        });\n    }\n\n    public updateMetadata(layout: Glue42.Layouts.Layout): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!layout) {\n                return reject(new Error(\"layout argument is required\"));\n            }\n\n            if (!layout.name) {\n                return reject(new Error(\"name argument is required\"));\n            }\n\n            if (!layout.type) {\n                return reject(new Error(\"type argument is required\"));\n            }\n\n            if (!layout.metadata) {\n                return reject(new Error(\"metadata argument is required\"));\n            }\n\n            const layoutObject: any = {\n                name: layout.name,\n                type: layout.type,\n                metadata: layout.metadata\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateMetadata\", layoutObject, resolve, reject, true);\n        });\n    }\n\n    public hibernate(name: string, options?: Glue42.Layouts.HibernationOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(new Error(\"name cannot be empty\"));\n            }\n            options = options || {};\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context: options.context || {},\n                metadata: options.metadata || {},\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.HibernateLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public resume(name: string, context?: any, options?: Glue42.Layouts.ResumeOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(new Error(\"name cannot be empty\"));\n            }\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context,\n                ...options\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.ResumeLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public async getCurrentLayout(): Promise<Glue42.Layouts.Layout | undefined> {\n        const result = await this.config.agm.invoke(\"T42.ACS.GetCurrentLayout\", {}, \"best\", { methodResponseTimeoutMs: 120 * 1000 });\n        let layout = result.returned.layout;\n        if (!layout) {\n            return undefined;\n        }\n        if (!this.isSlimMode()) {\n            // we have internal if we track layouts (so not slim mode), if not return the object we received from GD\n            layout = this.list().find((l) => l.name === layout.name && l.type === layout.type);\n        }\n        return layout;\n    }\n\n    public onAdded(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        const result = this.callbacks.add(\"added\", callback);\n\n        if (store.all.length > 0) {\n            store.all.forEach((layout) => {\n                try {\n                    callback(layout);\n                } catch (err) { /** */ }\n            });\n        }\n\n        return result;\n    }\n\n    public onRemoved(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"removed\", callback);\n    }\n\n    public onChanged(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"changed\", callback);\n    }\n\n    public onRestored(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"restored\", callback);\n    }\n\n    public onRenamed(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"renamed\", callback);\n    }\n\n    public onEvent(callback: (event: any) => void): () => void {\n        return this.stream.onEvent(callback);\n    }\n\n    public onSaveRequested(callback: (info?: Glue42.Layouts.SaveRequestContext) => Glue42.Layouts.SaveRequestResponse): UnsubscribeFunction {\n        return this.provider.onSaveRequested(callback);\n    }\n\n    public updateAppContextInCurrent(context: object): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (context && typeof context !== \"object\") {\n                return reject(new Error(\"context must be an object\"));\n            }\n            context = context ?? {};\n            const request: UpdateLayoutComponentContextMessage = {\n                context\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateLayoutComponentContext\", request, resolve, reject, true);\n        });\n    }\n\n    public updateDefaultContext(context: object): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (context && typeof context !== \"object\") {\n                return reject(new Error(\"context must be an object\"));\n            }\n            context = context ?? {};\n            const request: UpdateLayoutComponentContextMessage = {\n                context\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateDefaultContext\", request, resolve, reject, true);\n        });\n    }\n\n    public async get(name: string, type: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.Layout> {\n        const matching = this.list().find((l) => l.name === name && l.type === type);\n        if (!matching) {\n            throw new Error(`cannot find layout with name=${name} and type=${type}`);\n        }\n        return matching;\n    }\n\n    public async getAll(type: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.LayoutSummary[]> {\n        const matching = this.list().filter((l) => type === l.type);\n        return matching;\n    }\n\n    private isSlimMode() {\n        return this.config.mode === \"slim\";\n    }\n\n    private verifyNotSlimMode() {\n        if (this.isSlimMode()) {\n            throw Error(\"Operation not allowed in slim mode. Run in full mode.\");\n        }\n    }\n\n    private invokeMethodAndTrack(methodName: string, args: ACSMessage, resolve: (result: any) => void, reject: (err: any) => void, skipStreamEvent?: boolean) {\n        let streamEventReceived = skipStreamEvent;\n        let agmResult: any;\n\n        const token = generate();\n        args.token = token;\n\n        const handleResult = () => {\n            if (streamEventReceived && agmResult) {\n                resolve(agmResult);\n            }\n        };\n\n        if (!skipStreamEvent) {\n            this.stream.waitFor(token)\n                .then(() => {\n                    streamEventReceived = true;\n                    handleResult();\n                })\n                .catch((err: any) => {\n                    reject(err);\n                });\n        }\n\n        const responseHandler = (result: Glue42Core.AGM.InvocationResult<any>) => {\n            if (!result.returned) {\n                return reject(new Error(\"No result from method \" + methodName));\n            }\n\n            if (result.returned.status && (result.returned.status !== \"Success\" && result.returned.status !== \"PartialSuccess\")) {\n                return reject(new Error(result.returned));\n            }\n\n            agmResult = result.returned;\n            handleResult();\n        };\n\n        this.config.agm.invoke(methodName, args, \"best\", { methodResponseTimeoutMs: 120 * 1000 })\n            .then(responseHandler)\n            .catch((err: any) => reject(err));\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n}\n","import { LayoutsStream } from \"../types\";\nimport store, { LayoutStore } from \"../store\";\nimport { ACSStreamData, ACSLayout } from \"./messages\";\nimport LayoutImpl from \"../layout\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport transformACSLayout from \"../transform\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\n/**\n * ACS event stream related to layouts\n */\nexport default class ACSStream implements LayoutsStream {\n\n    public ready: Promise<void>;\n    public gotSnapshot: Promise<void>;\n\n    private resolveReady: () => void;\n    private rejectReady: (err: any) => void;\n\n    private resolveGotSnapshot: () => void;\n    private rejectGotSnapshot: (err: any) => void;\n\n    constructor(private agm: Glue42Core.AGM.API, private callbacks: CallbackRegistry) {\n\n        this.ready = new Promise<void>((resolve, reject) => {\n            this.resolveReady = resolve;\n            this.rejectReady = reject;\n        });\n\n        this.gotSnapshot = new Promise<void>((resolve, reject) => {\n            this.resolveGotSnapshot = resolve;\n            this.rejectGotSnapshot = reject;\n        });\n    }\n\n    public subscribe(noRetry?: boolean) {\n        const transform = (obj: object) => {\n            return this.getObjectValues(obj).map((t) => transformACSLayout(t));\n        };\n\n        // if we don't have OnLayoutEvent stream  we're running pre 2.1 GD version or outside GD,\n        if (!this.checkForLayoutEventMethod()) {\n            // if no retry resolve right away\n            if (noRetry) {\n                this.resolveReady();\n            }\n\n            // if we should retry, schedule  one more time\n            setTimeout(() => {\n                this.subscribe(true);\n            }, 500);\n        } else {\n            this.agm.subscribe(\"T42.ACS.OnLayoutEvent\", { waitTimeoutMs: 10000 })\n                .then((subs) => {\n                    subs.onData((args) => {\n                        const data = args.data as ACSStreamData;\n                        if (data.IsSnapshot) {\n                            this.resolveGotSnapshot();\n                        }\n\n                        this.addLayouts(transform(data.OnLayoutAdded));\n                        this.removeLayouts(transform(data.OnLayoutRemoved));\n                        this.changeLayouts(transform(data.OnLayoutChanged));\n                        this.renameLayouts(transform(data.OnLayoutRenamed));\n                        this.restoredLayout(transform(data.OnLayoutRestored));\n                        this.callbacks.execute(\"streamEvent\", data);\n                    });\n\n                    subs.onFailed((err) => {\n                        const msg = \"can not subscribe to T42.ACS.OnLayoutEvent \" + err;\n                        this.rejectReady(msg);\n                        this.rejectGotSnapshot(msg);\n                    });\n\n                    this.resolveReady();\n                })\n                .catch((err) => {\n                    const msg = \"Error subscribing for T42.ACS.OnLayoutEvent stream. Err: \" + err;\n                    this.rejectReady(msg);\n                    this.rejectGotSnapshot(msg);\n                });\n        }\n    }\n\n    public onEvent(callback: (streamEvent: ACSStreamData) => void): UnsubscribeFunction {\n        return this.callbacks.add(\"streamEvent\", callback);\n    }\n\n    public waitFor(token: string, timeout?: number): Promise<void> {\n        if (!timeout) {\n            timeout = 10000; // default timeout is 10 seconds\n        }\n        return new Promise<void>((resolve, reject) => {\n            let done = false;\n            const unsubscribe = this.onEvent((streamEvent) => {\n                if (streamEvent.Token === token) {\n                    done = true;\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            setTimeout(() => {\n                if (!done) {\n                    reject(\"timed out\");\n                }\n            }, timeout);\n        });\n    }\n\n    private checkForLayoutEventMethod() {\n        try {\n            return this.agm\n                .methods()\n                .map((m) => m.name)\n                .indexOf(\"T42.ACS.OnLayoutEvent\") !== -1;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    private addLayouts(layoutsData: any[]) {\n        if (!layoutsData) {\n            return;\n        }\n\n        layoutsData.forEach((layoutData) => {\n            const layout = new LayoutImpl(layoutData);\n            store.add(layout);\n            this.callbacks.execute(\"added\", layout);\n        });\n    }\n\n    private removeLayouts(removedLayouts: any[]) {\n        if (!removedLayouts) {\n            return;\n        }\n        removedLayouts.forEach((removedLayout) => {\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, removedLayout));\n\n            this.callbacks.execute(\"removed\", removedLayout);\n        });\n    }\n\n    private changeLayouts(changedLayouts: any[]) {\n        if (!changedLayouts) {\n            return;\n        }\n\n        changedLayouts.forEach((changedLayout) => {\n            // removed the changed layout and push it again\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, changedLayout));\n            store.add(new LayoutImpl(changedLayout));\n            // execute callback\n            this.callbacks.execute(\"changed\", changedLayout);\n        });\n\n    }\n\n    private renameLayouts(renamedLayouts: any[]) {\n        if (!renamedLayouts) {\n            return;\n        }\n\n        renamedLayouts.forEach((renamedLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: renamedLayout.type, name: renamedLayout.oldName }));\n\n            if (!existingLayout) {\n                throw Error(\"received rename event for unknown layout with type \" + renamedLayout.type + \" and name \" + renamedLayout.oldName);\n            }\n\n            existingLayout.name = renamedLayout.newName;\n\n            this.callbacks.execute(\"renamed\", existingLayout);\n        });\n    }\n\n    private compareLayouts(layout1: { name: string, type: string }, layout2: { name: string, type: string }) {\n        return layout1.name === layout2.name && layout1.type === layout2.type;\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n\n    private restoredLayout(restoredLayouts: any[]) {\n\n        if (!restoredLayouts) {\n            return;\n        }\n\n        restoredLayouts.forEach((restoredLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: restoredLayout.type, name: restoredLayout.name }));\n            this.callbacks.execute(\"restored\", existingLayout);\n        });\n    }\n}\n","import Layouts from \"./layouts\";\nimport ACSStream from \"./stream/acsStream\";\nimport streamNull from \"./stream/nullStream\";\nimport {LayoutsLibConfiguration, LayoutsStream } from \"./types\";\nimport callbackRegistry, { CallbackRegistry } from \"callback-registry\";\n\nexport default function(config: LayoutsLibConfiguration): Layouts {\n\n    if (!config.agm) {\n        throw Error(\"config.agm is required\");\n    }\n\n    if (!config.logger) {\n        throw Error(\"config.logger is required\");\n    }\n\n    // default mode to slim\n    config.mode = config.mode || \"slim\";\n\n    const logger = config.logger;\n    const callbacks: CallbackRegistry = callbackRegistry();\n\n    let acsStream: LayoutsStream;\n\n    if (config.mode === \"full\" || \"fullWaitSnapshot\") {\n        acsStream = new ACSStream(config.agm, callbacks);\n    } else {\n        acsStream = streamNull();\n    }\n\n    return new Layouts(config, acsStream, callbacks, logger);\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport CallbackFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport CaptureOptions = Glue42.Displays.CaptureOptions;\n\nconst T42DisplayCommand = \"T42.Displays.Command\";\nconst T42DisplayOnEvent = \"T42.Displays.OnEvent\";\n\nexport default class DisplayManager implements Glue42.Displays.API {\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _registered = false;\n\n    constructor(\n        private _agm: Glue42Core.AGM.API,\n        private _logger: Glue42Core.Logger.API,\n    ) {\n        //\n    }\n\n    public all = async (): Promise<Glue42.Displays.Display[]> => {\n        const displays = await this.callGD<Glue42.Displays.Display[]>(DisplayCommand.GetAll, {});\n        return displays.map(this.decorateDisplay);\n    }\n\n    public get = async (id: number): Promise<Glue42.Displays.Display> => {\n        const display = await this.callGD<Glue42.Displays.Display>(DisplayCommand.Get, { id });\n        return this.decorateDisplay(display);\n    }\n\n    public getPrimary = async (): Promise<Glue42.Displays.Display> => {\n        const primary = (await this.all()).find((d) => d.isPrimary);\n        return primary;\n    }\n\n    public getByWindowId(id: string): Promise<Glue42.Displays.Display> {\n        const current = this.callGD<Glue42.Displays.Display>(DisplayCommand.GetByWindowId, { id });\n        return current;\n    }\n\n    public capture = async (options: CaptureOptions): Promise<string> => {\n        const screenshot = await this.callGD<string>(DisplayCommand.Capture, { ...options });\n        return screenshot;\n    }\n\n    public captureAll = async (options: Glue42.Displays.CaptureAllOptions): Promise<string | string[]> => {\n        const screenshots = await this.callGD<string | string[]>(DisplayCommand.CaptureAll, { ...options });\n        return screenshots;\n    }\n\n    public getMousePosition = async (): Promise<Glue42.Displays.Point> => {\n        const point = await this.callGD<Glue42.Displays.Point>(DisplayCommand.GetMousePosition);\n        return point;\n    }\n\n    public onDisplayChanged(cb: (displays: Glue42.Displays.Display[]) => void) {\n        this.register();\n        return this._registry.add(\"on-display-changed\", cb);\n    }\n\n    private callGD = async <T>(command: string, options?: object): Promise<T> => {\n        // Consider targeting only GD\n        const invocationResult = await this._agm.invoke(T42DisplayCommand, { options: { ...options }, command });\n        return invocationResult.returned.data;\n    }\n\n    private decorateDisplay = (original: Glue42.Displays.Display): Glue42.Displays.Display => {\n        const decoratedDisplay = {\n            ...original,\n            capture: (size: SizeOptions) => this.capture({ id: original.id, size })\n        };\n        const workAreaAsAny = decoratedDisplay.workArea as any;\n        workAreaAsAny.x = workAreaAsAny.left;\n        workAreaAsAny.y = decoratedDisplay.workArea.top;\n        return decoratedDisplay;\n    }\n\n    private register() {\n        if (this._registered) {\n            return;\n        }\n        this._registered = true;\n        this._agm.register(T42DisplayOnEvent, (args, caller) => {\n            const event = args.event;\n            const data = args.data;\n            switch (event) {\n                case \"display-changed\":\n                    this._registry.execute(\"on-display-changed\", data.displays.map(this.decorateDisplay));\n                    break;\n                default:\n                    this._logger.warn(`unknown event - ${event}`);\n                    break;\n            }\n        });\n    }\n}\n\ntype SizeOptions = Glue42.Displays.ScaleOptions | Glue42.Displays.AbsoluteSizeOptions;\n\nenum DisplayCommand {\n    Capture = \"capture\",\n    CaptureAll = \"captureAll\",\n    GetAll = \"getAll\",\n    Get = \"get\",\n    GetByWindowId = \"getByWindowId\",\n    GetMousePosition = \"getMousePosition\",\n}\n","import { Glue42 } from \"../../glue\";\nimport { ChannelsImpl } from \"./channels\";\n\nlet interop: Glue42.Interop.API;\nlet windowId: string;\n\nexport async function setupAGM(interopLib: Glue42.Interop.API, channels: ChannelsImpl) {\n    interop = interopLib;\n\n    if (typeof window !== \"undefined\") {\n        if (window.glue42gd) {\n            windowId = window.glue42gd.windowId;\n        }\n    }\n\n    if (!windowId) {\n        // not supported\n        return;\n    }\n\n    await interop.register(\"T42.Channels.Command\", (args: any) => {\n        const command = args.command;\n        if (!command) {\n            throw new Error(\"missing command argument\");\n        }\n        if (command === \"join\") {\n            const id = args.channel;\n            if (!id) {\n                throw new Error(\"missing argument id\");\n            }\n            // this is coming from GD (which means from selector switch, join without triggering selection change again)\n            channels.joinNoSelectorSwitch(id);\n            return;\n        }\n        if (command === \"leave\") {\n            channels.leaveNoSelectorSwitch();\n            return;\n        }\n        if (command === \"get\") {\n            const id = channels.current();\n            return { id };\n        }\n        throw new Error(`unknown command ${command}`);\n    });\n\n    // agm interface is available for SW windows only\n    interop.invoke(\"T42.Channels.Announce\", { swId: windowId, instance: interop.instance.instance });\n}\n\nexport async function switchChannel(channel?: string, id?: string) {\n    interop.invoke(\"T42.Channels.Announce\", {\n        swId: id ?? windowId,\n        command: \"switchChannel\",\n        data: { newChannel: channel }\n    });\n}\n","import { Glue42 } from \"../../glue\";\n\nconst CONTEXT_PREFIX = \"___channel___\";\n\nexport class SharedContextSubscriber {\n    private unsubscribeFunc: () => void;\n    private callback: any;\n\n    constructor(private contexts: Glue42.Contexts.API) {\n    }\n\n    public subscribe(callback: any): void {\n        this.callback = callback;\n    }\n\n    public subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (!this.isChannel(name)) {\n            return Promise.reject(new Error(`Channel with name: ${name} doesn't exist!`));\n        }\n\n        const contextName = this.createContextName(name);\n\n        return this.contexts.subscribe(contextName, (data, _, __, ___, extraData) => {\n            callback(data.data, data, extraData?.updaterId);\n        });\n    }\n\n    /** Unsubscribes from the current shared context, and subscribe to the passed one */\n    public async switchChannel(name: string): Promise<void> {\n        this.unsubscribe();\n        const contextName = this.createContextName(name);\n        this.unsubscribeFunc = await this.contexts.subscribe(contextName, (data, _, __, ___, extraData) => {\n            if (this.callback) {\n                this.callback(data.data, data, extraData?.updaterId);\n            }\n        });\n    }\n\n    public unsubscribe(): void {\n        if (this.unsubscribeFunc) {\n            this.unsubscribeFunc();\n        }\n    }\n\n    public all(): string[] {\n        const contextNames = this.contexts.all();\n        const channelContextNames = contextNames.filter((contextName) => contextName.startsWith(CONTEXT_PREFIX));\n        const channelNames = channelContextNames.map((channelContextName) => channelContextName.substr(CONTEXT_PREFIX.length));\n        return channelNames;\n    }\n\n    public getContextData(name: string): Promise<Glue42.Channels.ChannelContext> {\n        return new Promise((resolve, reject) => {\n            if (!this.isChannel(name)) {\n                return reject(new Error(`A channel with name: ${name} doesn't exist!`));\n            }\n\n            const contextName = this.createContextName(name);\n\n            this.contexts.subscribe(contextName, (data) => {\n                resolve(data);\n            }).then((unsubscribeFunc) => unsubscribeFunc());\n        });\n    }\n\n    public updateChannel(name: string, data: { name: string, meta: any, data: any }): Promise<void> {\n        const contextName = this.createContextName(name);\n        return this.contexts.update(contextName, data);\n    }\n\n    public updateData(name: string, data: any) {\n        const contextName = this.createContextName(name);\n        if (this.contexts.setPathSupported) {\n            const pathValues: Glue42.Contexts.PathValue[] = Object.keys(data).map((key) => {\n                return {\n                    path: `data.` + key,\n                    value: data[key]\n                };\n            });\n            return this.contexts.setPaths(contextName, pathValues);\n        } else {\n            // pre 3.10, note that we update the data property only\n            return this.contexts.update(contextName, { data });\n        }\n    }\n\n    public isChannel(name: string): boolean {\n        return this.all().some((channelName) => channelName === name);\n    }\n\n    private createContextName(name: string): string {\n        return CONTEXT_PREFIX + name;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { switchChannel } from \"./agm\";\n\nexport class ChannelsImpl implements Glue42.Channels.API {\n    private subsKey = \"subs\";\n    private changedKey = \"changed\";\n    private isInitialJoin = true;\n\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n    private currentContext: string;\n\n    constructor(private shared: SharedContextSubscriber, private interop: Glue42.Interop.API, private getWindows: () => Glue42.Windows.API, private logger: Glue42.Logger.API) {\n        this.shared.subscribe(this.handler.bind(this));\n\n        if (typeof window !== \"undefined\" && typeof window.glue42gd !== \"undefined\") {\n            this.currentContext = (window.glue42gd as any).initialChannel;\n            if (this.currentContext) {\n                this.joinNoSelectorSwitch(this.currentContext);\n            }\n        }\n    }\n\n    public subscribe(callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): () => void {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        return this.registry.add(this.subsKey, callback);\n    }\n\n    public async subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Please provide the name as a string!\");\n        }\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        const unsubscribeFunc = await this.shared.subscribeFor(name, callback);\n        return unsubscribeFunc;\n    }\n\n    public async publish(data: object, name?: string): Promise<void> {\n        if (typeof data !== \"object\") {\n            throw new Error(\"Please provide the data as an object!\");\n        }\n\n        if (name) {\n            if (typeof name !== \"string\") {\n                throw new Error(\"Please provide the name as a string!\");\n            }\n\n            if (!this.shared.isChannel(name)) {\n                return Promise.reject(new Error(`A channel with name: ${name} doesn't exist!`));\n            }\n\n            return this.shared.updateData(name, data);\n        }\n\n        if (!this.currentContext) {\n            throw new Error(\"Not joined to any channel!\");\n        }\n        return this.shared.updateData(this.currentContext, data);\n    }\n\n    public all(): Promise<string[]> {\n        const channelNames = this.shared.all();\n        return Promise.resolve(channelNames);\n    }\n\n    public async list(): Promise<Glue42.Channels.ChannelContext[]> {\n        const channelNames = await this.all();\n        const channelContexts = await Promise.all(channelNames.map((channelName) => this.get(channelName)));\n        return channelContexts;\n    }\n\n    public get(name: string): Promise<Glue42.Channels.ChannelContext> {\n        if (typeof name !== \"string\") {\n            return Promise.reject(new Error(\"Please provide the channel name as a string!\"));\n        }\n\n        return this.shared.getContextData(name);\n    }\n\n    /* Returns info about my channel */\n    public getMy(): Promise<Glue42.Channels.ChannelContext> {\n        if (!this.currentContext) {\n            return Promise.resolve(undefined);\n        }\n        return this.get(this.currentContext);\n    }\n\n    public async join(name: string): Promise<void> {\n        return this.joinCore(name);\n    }\n\n    public async joinNoSelectorSwitch(name: string): Promise<void> {\n        return this.joinCore(name, false);\n    }\n\n    public leave() {\n        return this.leaveCore();\n    }\n\n    public leaveNoSelectorSwitch() {\n        return this.leaveCore(false);\n    }\n\n    public current(): string {\n        return this.currentContext;\n    }\n\n    public my(): string {\n        return this.current();\n    }\n\n    public changed(callback: (channel: string) => void): () => void {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n\n        return this.registry.add(this.changedKey, callback);\n    }\n\n    public onChanged(callback: (channel: string) => void): () => void {\n        return this.changed(callback);\n    }\n\n    public async add(info: Glue42.Channels.ChannelContext): Promise<Glue42.Channels.ChannelContext> {\n        if (typeof info !== \"object\") {\n            throw new Error(\"Please provide the info as an object!\");\n        }\n        if (typeof info.name === \"undefined\") {\n            throw new Error(\"info.name is missing!\");\n        }\n        if (typeof info.name !== \"string\") {\n            throw new Error(\"Please provide the info.name as a string!\");\n        }\n        if (typeof info.meta === \"undefined\") {\n            throw new Error(\"info.meta is missing!\");\n        }\n        if (typeof info.meta !== \"object\") {\n            throw new Error(\"Please provide the info.meta as an object!\");\n        }\n        if (typeof info.meta.color === \"undefined\") {\n            throw new Error(\"info.meta.color is missing!\");\n        }\n        if (typeof info.meta.color !== \"string\") {\n            throw new Error(\"Please provide the info.meta.color as a string!\");\n        }\n\n        const context: Glue42.Channels.ChannelContext = {\n            name: info.name,\n            meta: info.meta || {},\n            data: info.data || {}\n        };\n\n        // Note that we use `update` instead of `add` so that if the channel already exists we don't overwrite it.\n        await this.shared.updateChannel(info.name, context);\n\n        return context;\n    }\n\n    public async getWindowsOnChannel(channel: string): Promise<Glue42.Windows.GDWindow[]> {\n        const windowInfos = await this.getWindowsWithChannels({ channels: [channel] });\n        return windowInfos.map((w) => w.window);\n    }\n\n    public async getWindowsWithChannels(filter: Glue42.Channels.WindowWithChannelFilter): Promise<Glue42.Channels.WindowOnChannelInfo[]> {\n        try {\n            const info = await this.interop.invoke<{ windows: Array<{ windowId: string, channel: string, application: string }> }>(\"T42.Channels.Announce\", { command: \"getChannelsInfo\", data: { filter } });\n            const windows = this.getWindows();\n            if (info?.returned?.windows) {\n                return info.returned.windows.map((windowInfo) => {\n                    const window = windows.findById(windowInfo.windowId);\n                    return {\n                        window,\n                        channel: windowInfo.channel,\n                        application: windowInfo.application\n                    };\n                });\n            }\n        } catch (er) {\n            this.logger.error(`Error getting all channel enabled windows. This method is available since Glue42 3.12`, er);\n        }\n        return [];\n    }\n\n    private handler(data: object, context: Glue42.Channels.ChannelContext, updaterId: string): any {\n        this.registry.execute(this.subsKey, data, context, updaterId);\n    }\n\n    private async joinCore(name: string, changeSelector: boolean = true) {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Please provide the channel name as a string!\");\n        }\n\n        if (!this.isInitialJoin && name === this.currentContext) {\n            // ignore joining the channel that we're already on, except when this is the very first call\n            return;\n        }\n        this.isInitialJoin = false;\n\n        // Checks if a channel exists with the provided name.\n        const doesChannelExist = (channelName: string): boolean => {\n            const channelNames = this.shared.all();\n            return channelNames.includes(channelName);\n        };\n\n        // Wait for 3k ms for the channel to appear if it doesn't already exist.\n        if (!doesChannelExist(name)) {\n            const channelExistsPromise = new Promise<void>((resolve, reject) => {\n                let timeoutId: NodeJS.Timeout;\n\n                // Check every 100 ms for a channel with the provided name.\n                const intervalId = setInterval(() => {\n                    if (doesChannelExist(name)) {\n                        clearTimeout(timeoutId);\n                        clearInterval(intervalId);\n                        resolve();\n                    }\n                }, 100);\n\n                timeoutId = setTimeout(() => {\n                    clearInterval(intervalId);\n\n                    return reject(new Error(`A channel with name: ${name} doesn't exist!`));\n                }, 3000);\n            });\n\n            await channelExistsPromise;\n        }\n\n        this.currentContext = name;\n        await this.shared.switchChannel(name);\n        if (changeSelector) {\n            switchChannel(name);\n        }\n        this.registry.execute(this.changedKey, name);\n    }\n\n    private leaveCore(changeSelector = true): Promise<void> {\n        this.currentContext = undefined;\n        this.registry.execute(this.changedKey, undefined);\n        this.shared.unsubscribe();\n        if (changeSelector) {\n            switchChannel();\n        }\n        return Promise.resolve();\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { setupAGM } from \"./agm\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { ChannelsImpl } from \"./channels\";\n\nexport function factory(contexts: Glue42.Contexts.API, agm: Glue42.AGM.API, getWindows: () => Glue42.Windows.API, logger: Glue42.Logger.API): Glue42.Channels.API & { ready: () => Promise<void>; } {\n    const sharedContexts = new SharedContextSubscriber(contexts);\n    const channels = new ChannelsImpl(sharedContexts, agm, getWindows, logger);\n\n    setupAGM(agm, channels);\n\n    return {\n        subscribe: channels.subscribe.bind(channels),\n        subscribeFor: channels.subscribeFor.bind(channels),\n        publish: channels.publish.bind(channels),\n        all: channels.all.bind(channels),\n        list: channels.list.bind(channels),\n        get: channels.get.bind(channels),\n        join: channels.join.bind(channels),\n        leave: channels.leave.bind(channels),\n        // @ignore-ed, but kept for backwards compatibility.\n        current: channels.current.bind(channels),\n        my: channels.my.bind(channels),\n        // @ignore-ed, but kept for backwards compatibility.\n        changed: channels.changed.bind(channels),\n        onChanged: channels.onChanged.bind(channels),\n        // @ignore-ed as currently not entirely supported by the framework.\n        add: channels.add.bind(channels),\n        getWindowsOnChannel: channels.getWindowsOnChannel.bind(channels),\n        getWindowsWithChannels: channels.getWindowsWithChannels.bind(channels),\n        getMy: channels.getMy.bind(channels),\n        ready: () => (contexts as any).ready()\n    };\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\n\r\nconst CommandMethod = \"T42.Hotkeys.Command\";\r\nconst InvokeMethod = \"T42.Hotkeys.Invoke\";\r\n\r\nconst RegisterCommand = \"register\";\r\nconst UnregisterCommand = \"unregister\";\r\nconst UnregisterAllCommand = \"unregisterAll\";\r\n\r\nexport class HotkeysImpl implements Glue42.Hotkeys.API {\r\n\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private firstHotkey = true;\r\n    private hotkeys = new Map<string, Glue42.Hotkeys.HotkeyInfo>();\r\n\r\n    constructor(private agm: Glue42.AGM.API) {\r\n    }\r\n\r\n    public async register(info: string | Glue42.Hotkeys.HotkeyInfo, callback: Glue42.Hotkeys.HotkeyCallback): Promise<void> {\r\n        if (typeof info === \"undefined\") {\r\n            throw new Error(\"Hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof info === \"string\") {\r\n            info = {\r\n                hotkey: info\r\n            };\r\n        } else {\r\n            if (!info.hotkey) {\r\n                throw new Error(\"Info's hotkey parameter missing\");\r\n            }\r\n\r\n            info = {\r\n                hotkey: info.hotkey,\r\n                description: info.description\r\n            };\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(info.hotkey);\r\n        if (this.hotkeys.has(hkToLower)) {\r\n            throw new Error(`Shortcut for ${hkToLower} already registered`);\r\n        }\r\n\r\n        // if very first a hotkey is registered by this application register invoke AGM method\r\n        if (this.firstHotkey) {\r\n            this.firstHotkey = false;\r\n            await this.registerInvokeAGMMethod();\r\n        }\r\n        // store the callback\r\n        this.registry.add(hkToLower, callback);\r\n\r\n        // invoke GD method\r\n        await this.agm.invoke(CommandMethod, { command: RegisterCommand, hotkey: hkToLower, description: info.description });\r\n\r\n        this.hotkeys.set(hkToLower, info);\r\n    }\r\n\r\n    public async unregister(hotkey: string): Promise<void> {\r\n        if (typeof hotkey === \"undefined\") {\r\n            throw new Error(\"hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof hotkey !== \"string\") {\r\n            throw new Error(\"hotkey parameter must be string\");\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterCommand, hotkey: hkToLower });\r\n        this.hotkeys.delete(hkToLower);\r\n        this.registry.clearKey(hkToLower);\r\n    }\r\n\r\n    public async unregisterAll(): Promise<void> {\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterAllCommand });\r\n        this.hotkeys.clear();\r\n        this.registry.clear();\r\n    }\r\n\r\n    /**\r\n     * Whether this application has registered accelerator.\r\n     * @param hotkey\r\n     */\r\n    public isRegistered(hotkey: string): boolean {\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        return this.hotkeys.has(hkToLower);\r\n    }\r\n\r\n    private registerInvokeAGMMethod(): void {\r\n        this.agm.register(InvokeMethod, (args: {\r\n            key: string;\r\n        }) => {\r\n            const hkToLower = args.key.toLowerCase();\r\n            const info = this.hotkeys.get(hkToLower);\r\n            this.registry.execute(hkToLower, info);\r\n        });\r\n    }\r\n\r\n    private formatHotkey(hotkey: string): string {\r\n        if (hotkey) {\r\n            return hotkey.replace(/\\s/g, \"\").toLowerCase();\r\n        }\r\n    }\r\n}\r\n","import { Glue42 } from \"../glue\";\nimport { ActivitiesLibConfigObject, LibConfigObject, InternalConfig, LayoutsLibConfigObject, AppManagerLibConfigObject } from \"./types\";\n\ninterface InputModeObject {\n    mode?: boolean | string;\n    logger?: Glue42.LoggerConfig;\n}\n\nexport default (options: Glue42.Config): InternalConfig => {\n\n    // Possible options per lib (this is InputLibConfig type)\n    // * false - library is disabled (e.g. config.appManager = false)\n    // * true - library is enabled in running in default mode (e.g config.appManager = true).\n    //          Exception is if default mode is false - in that case it runs default true mode.\n    // * string - start in some mode (e.g. config.appManager = \"full\")\n    // * object - allows further customization (e.g config.appManager = {mode: \"full\", someSetting: 42})\n    //\n    // Some libs support different running modes, some do not.\n    //\n    // Currently defaults are:\n    // appManager: disabled\n    // layouts: enabled in 'slim' mode\n    // activities: enabled in 'trackMyTypeAndInitiatedFromMe' mode\n    // windows: enabled (does not support modes)\n    //\n    // InputLibConfig is transformed to LibConfigObject\n\n    type InputLibConfig = boolean | string | InputModeObject;\n\n    /**\n     * Transforms InputLibConfig (the config as specified from the user)\n     * to LibConfigObject(internal library configuration)\n     */\n    function getLibConfig<T extends LibConfigObject<string>>(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): T {\n\n        // if value is false return undefined\n        if (typeof value === \"boolean\" && !value) {\n            return undefined;\n        }\n\n        // find the mode of the library\n        const mode = getModeAsString(value, defaultMode, trueMode);\n\n        // if object we will replace the mode because appManager = {mode: true, setting: 42}\n        // should be turned into appManager = {mode: 'slim', setting: 42}\n        if (typeof value === \"object\") {\n            value.mode = mode;\n            return value as T;\n        }\n\n        return {\n            mode,\n        } as T;\n    }\n\n    /**\n     * Finds the mode based for a given library\n     * 1. If object we call recursively using object.mode for value\n     * 1. If the user hasn't specified anything we use the hard coded defaults\n     * 3. If the value is false or it got defaulted to false, we return undefined\n     * 4. If the value is true we return trueMode or defaultMode (if trueMode is undefined)\n     */\n    function getModeAsString(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): string {\n\n        if (typeof value === \"object\") {\n            // 1. if object\n            return getModeAsString(value.mode, defaultMode, trueMode) + \"\";\n        } else if (typeof value === \"undefined\") {\n            // 2. if the user does not pass anything\n            if (typeof defaultMode === \"boolean\" && !defaultMode) {\n                // 3. if gets defaulted to false, the library should be off\n                return undefined;\n            } else {\n                return defaultMode + \"\";\n            }\n        } else if (typeof value === \"boolean\") {\n            // 4. if the user passes true, use trueMode or defaultMode\n            if (value) {\n                // if the user passes true, use trueMode or defaultMode\n                return ((trueMode === undefined) ? defaultMode : trueMode) + \"\";\n            } else {\n                // 3. if the user passes false, the library should be off\n                return undefined;\n            }\n        }\n\n        return value + \"\";\n    }\n\n    const appDefaultMode = false;\n    const appDefaultTrueMode = \"startOnly\";\n\n    const activitiesDefaultMode = \"trackMyTypeAndInitiatedFromMe\";\n\n    const layoutsDefaultMode = \"slim\";\n\n    return {\n        layouts: getLibConfig<LayoutsLibConfigObject>(options.layouts, layoutsDefaultMode),\n        activities: getLibConfig<ActivitiesLibConfigObject>(options.activities, activitiesDefaultMode),\n        appManager: getLibConfig<AppManagerLibConfigObject>(options.appManager, appDefaultMode, appDefaultTrueMode),\n        windows: getLibConfig<LibConfigObject<string>>(options.windows, true),\n        channels: getLibConfig<LibConfigObject<string>>(options.channels || false, false),\n        displays: getLibConfig<LibConfigObject<string>>(options.displays, true)\n    };\n};\n","import { Glue42 } from \"../../glue\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\n\nexport class Glue42Notification implements Glue42.Notifications.Glue42Notification {\n    public readonly actions: Glue42.Notifications.Glue42NotificationAction[];\n    public badge: string;\n    public body: string;\n    public data: any;\n    public dir: NotificationDirection;\n    public icon: string;\n    public image: string;\n    public lang: string;\n    public renotify: boolean;\n    public requireInteraction: boolean;\n    public silent: boolean;\n    public tag: string;\n    public timestamp: number;\n    public title: string;\n    public readonly vibrate: number[];\n\n    public onclick: ((this: Notification, ev: Event) => any) | null;\n    public onclose: ((this: Notification, ev: Event) => any) | null;\n    public onerror: ((this: Notification, ev: Event) => any) | null;\n    public onshow: ((this: Notification, ev: Event) => any) | null;\n    public onaction: ((this: Notification, ev: Glue42.Notifications.ActionEvent) => any) | null;\n\n    private callbacks: CallbackRegistry = callbackRegistry();\n\n    public constructor(public options: Glue42.Notifications.Glue42NotificationOptions) {\n        this.actions = options.actions;\n        this.body = options.body;\n        this.badge = options.badge;\n        this.data = options.data;\n        this.dir = options.dir;\n        this.icon = options.icon;\n        this.image = options.image;\n        this.lang = options.lang;\n        this.renotify = options.renotify;\n        this.requireInteraction = options.requireInteraction;\n        this.silent = options.silent;\n        this.tag = options.tag;\n        this.timestamp = options.timestamp;\n        this.title = options.title;\n    }\n\n    public close(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    public addEventListener<K extends \"click\" | \"close\" | \"error\" | \"show\">(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(type: any, listener: any, options?: any) {\n        this.callbacks.add(type, listener);\n    }\n    public removeEventListener<K extends \"click\" | \"close\" | \"error\" | \"show\">(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    public removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    public removeEventListener(type: any, listener: any, options?: any) {\n        // DO NOTHING FOR NOW\n    }\n    public dispatchEvent(event: Event): boolean {\n        this.callbacks.execute(event.type, event);\n        return true;\n    }\n}\n","import { Glue42 } from \"../../glue\";\n\nexport class PanelAPI implements Glue42.Notifications.NotificationPanelAPI {\n    constructor(private interop: Glue42.Interop.API) {\n    }\n\n    public toggle(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Show\");\n    }\n    public show(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Show\", { show: true });\n    }\n    public hide(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Hide\");\n    }\n    public isVisible(): Promise<boolean> {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Notification } from \"./notification\";\nimport { GnsNotificationSettings, GnsNotificationActionSettings, GnsNotificationActionPayload } from \"./types\";\nimport generate from \"shortid\";\nimport { PanelAPI } from \"./panel\";\nconst STARTING_INDEX = 0;\n\nexport class Notifications implements Glue42.Notifications.API {\n    public panel: PanelAPI;\n\n    private methodsRegistered: boolean = false;\n    private readonly methodNameRoot = \"T42.Notifications.Handler-\" + generate();\n    private nextId = 0;\n    private notifications: { [id: string]: Glue42Notification } = {};\n\n    constructor(private interop: Glue42.Interop.API) {\n        this.panel = new PanelAPI(interop);\n    }\n\n    public get maxActions(): number {\n        return 2;\n    }\n\n    public async raise(options: Glue42.Notifications.Glue42NotificationOptions): Promise<Glue42.Notifications.Glue42Notification> {\n        if (!options) {\n            throw new Error(\"invalid options - should be an object\");\n        }\n        if (!options.title) {\n            throw new Error(\"invalid options - should have title\");\n        }\n        if (!this.methodsRegistered) {\n            const bunchOfPromises = [];\n            for (let index = STARTING_INDEX; index < this.maxActions; index++) {\n                bunchOfPromises.push(\n                    this.interop.register(this.methodNameRoot + \"_\" + index, this.handleNotificationAction.bind(this))\n                );\n            }\n\n            await Promise.all(bunchOfPromises);\n            this.methodsRegistered = true;\n        }\n\n        // transform actions\n        const id = String(this.nextId++);\n        const type = options.type ?? \"Notification\";\n        const notification: GnsNotificationSettings = {\n            title: options.title,\n            type,\n            severity: options.severity ?? \"None\",\n            description: options.body,\n            glueRoutingDetailMethodName: this.methodNameRoot + \"_\" + STARTING_INDEX,\n            actions: [],\n            sourceId: id,\n            source: options.source\n        };\n\n        if (options.actions) {\n            const validActions = options.actions.slice(0, this.maxActions);\n\n            let index = STARTING_INDEX;\n            for (const action of validActions) {\n                const args: GnsNotificationActionPayload = { // this should include user arguments (action.interop?.arguments)\n                    g42notificationId: id,\n                    g42action: action.action,\n                    g42interopMethod: action.interop?.method,\n                    g42interopTarget: action.interop?.target,\n                };\n                // TODO, properly convert between args and GNS value\n                const parameters = Object.keys(args).map((key) => {\n                    const value = (args as any)[key];\n                    return {\n                        name: key,\n                        value: {\n                            stringValue: value\n                        }\n                    };\n                });\n\n                const glueAction: GnsNotificationActionSettings = {\n                    name: this.methodNameRoot + \"_\" + index,\n                    description: action.title,\n                    displayName: action.title,\n                    parameters\n                };\n\n                notification.actions.push(glueAction);\n                index++;\n            }\n        }\n\n        if (options.icon) {\n            notification.attributes = notification.attributes || [];\n            notification.attributes.push(\n                { key: \"icon\", value: { stringValue: options.icon } }\n            );\n        }\n\n        if (options.data) {\n            notification.attributes = notification.attributes || [];\n            const dataAsString = JSON.stringify(options.data);\n            notification.attributes.push(\n                { key: \"data\", value: { stringValue: dataAsString } }\n            );\n        }\n\n        await this.interop.invoke(\"T42.GNS.Publish.RaiseNotification\", { notification });\n\n        const g42notification = new Glue42Notification(options);\n        this.notifications[id] = g42notification;\n        return g42notification;\n    }\n\n    public async setFilter(filter: Glue42.Notifications.NotificationFilter): Promise<Glue42.Notifications.NotificationFilter> {\n        const result = await this.interop.invoke(\"T42.Notifications.Filter\", filter);\n        return result.returned;\n    }\n\n    public async getFilter(): Promise<Glue42.Notifications.NotificationFilter> {\n        const result = await this.interop.invoke(\"T42.Notifications.Filter\");\n        return result.returned;\n    }\n\n    private handleNotificationAction(args: any) {\n        if (args.g42notificationId) {\n            // action click\n            const payload: GnsNotificationActionPayload = args as GnsNotificationActionPayload;\n            const id = payload.g42notificationId;\n            const notification = this.notifications[id];\n            if (!notification) {\n                return;\n            }\n\n            // user event\n            const event = new Event(\"onaction\");\n            (event as Glue42.Notifications.ActionEvent).action = payload.g42action;\n            if (notification.onaction) {\n                notification.onaction(event as Glue42.Notifications.ActionEvent);\n            }\n\n            // interop\n            const actionDefinition = (notification.actions || []).find((item) => item.action === payload.g42action);\n            const actionInterop = actionDefinition.interop;\n            if (actionInterop) {\n                this.interop.invoke(actionInterop.method, actionInterop.arguments || {}, actionInterop.target || \"best\");\n            }\n\n            // dispatch\n            notification.dispatchEvent(event);\n        } else if (args.notification && args.notification.sourceNotificationId) {\n            // notification click\n            const id = args.notification.sourceNotificationId;\n            const notification = this.notifications[id];\n            if (!notification) {\n                return;\n            }\n\n            // user event\n            const event = new Event(\"onclick\");\n            if (notification.onclick) {\n                notification.onclick(event);\n            }\n\n            // interop call\n            const clickInterop = notification.options.clickInterop;\n            if (clickInterop) {\n                this.interop.invoke(clickInterop.method, clickInterop.arguments || {}, clickInterop.target || \"best\");\n            }\n\n            // dispatch\n            notification.dispatchEvent(event);\n        }\n    }\n}\n","import CallbackRegistryFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\nimport { Glue42 } from \"../../glue\";\r\nimport { Glue42Core } from \"@glue42/core\";\r\n\r\nconst ThemesConfigurationMethodName = \"T42.Themes.Configuration\";\r\ninterface ThemesConfiguration {\r\n    setThemesMethodName: string;\r\n    getThemesMethodName: string;\r\n    sharedContextName: string;\r\n    getThemesConfigurationMethodName: string;\r\n}\r\ninterface GetResult {\r\n    all: Glue42.Themes.Theme[];\r\n    selected: string;\r\n}\r\nexport class ThemesImpl implements Glue42.Themes.API {\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private sharedContextName: string;\r\n    private getMethodName: string;\r\n    private setMethodName: string;\r\n    private isSubscribed = false;\r\n\r\n    constructor(private core: Glue42Core.GlueCore) {\r\n        this.getConfiguration();\r\n    }\r\n\r\n    public async list(): Promise<Glue42.Themes.Theme[]> {\r\n        await this.getConfiguration();\r\n        if (!this.getMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n        return (await this.getAll()).returned.all;\r\n    }\r\n\r\n    public async getCurrent(): Promise<Glue42.Themes.Theme> {\r\n        await this.getConfiguration();\r\n        if (!this.getMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n        const all = await this.getAll();\r\n        return all.returned.all.find((t) => t.name === all.returned.selected);\r\n    }\r\n\r\n    public async select(theme: string): Promise<void> {\r\n        await this.getConfiguration();\r\n        if (!this.setMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n\r\n        await this.core.interop.invoke(this.setMethodName, { theme });\r\n    }\r\n\r\n    public onChanged(callback: (theme: Glue42.Themes.Theme) => any): UnsubscribeFunction {\r\n        this.subscribe();\r\n        return this.registry.add(\"changed\", callback);\r\n    }\r\n\r\n    private async getConfiguration() {\r\n        try {\r\n            if (this.sharedContextName) {\r\n                return;\r\n            }\r\n            const config = await this.core.interop.invoke<ThemesConfiguration>(ThemesConfigurationMethodName);\r\n            this.sharedContextName = config.returned.sharedContextName;\r\n            this.getMethodName = config.returned.getThemesMethodName;\r\n            this.setMethodName = config.returned.setThemesMethodName;\r\n        } catch (error) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async getAll() {\r\n        await this.getConfiguration();\r\n        return await this.core.interop.invoke<GetResult>(this.getMethodName);\r\n    }\r\n\r\n    private async subscribe() {\r\n        await this.getConfiguration();\r\n        if (this.isSubscribed) {\r\n            return;\r\n        }\r\n        this.isSubscribed = true;\r\n        this.core.contexts.subscribe(this.sharedContextName, (data: { all: Glue42.Themes.Theme[], selected: string }) => {\r\n            if (data && data.all && data.selected) {\r\n                this.registry.execute(\"changed\", data.all.find((t) => t.name === data.selected));\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Glue42 } from \"../../glue\";\nimport { AppDefinition, GetWindowsInfoResult, GetWindowsInfoResultItem, IntentInfo } from \"./types\";\n\nconst GLUE42_FDC3_INTENTS_METHOD_PREFIX = \"Tick42.FDC3.Intents.\";\n\nexport class Intents implements Glue42.Intents.API {\n    constructor(private interop: Glue42.Interop.API, private windows: Glue42.Windows.API, private logger: Glue42.Logger.API) {\n    }\n\n    public async find(intentFilter?: string | Glue42.Intents.IntentFilter): Promise<Glue42.Intents.Intent[]> {\n        let intents = await this.all();\n        if (typeof intentFilter === \"undefined\") {\n            return intents;\n        }\n\n        if (typeof intentFilter === \"string\") {\n            return intents.filter((intent) => intent.name === intentFilter);\n        }\n\n        if (typeof intentFilter !== \"object\") {\n            throw new Error(\"Please provide the intentFilter as a string or an object!\");\n        }\n\n        if (intentFilter.contextType) {\n            const ctToLower = intentFilter.contextType.toLowerCase();\n            intents = intents.filter((intent) => intent.handlers.some((handler) => handler.contextTypes?.some((ct) => ct.toLowerCase() === ctToLower)));\n        }\n\n        if (intentFilter.name) {\n            intents = intents.filter((intent) => intent.name === intentFilter.name);\n        }\n\n        return intents;\n    }\n\n    public async raise(intent: string | Glue42.Intents.IntentRequest): Promise<Glue42.Intents.IntentResult> {\n        if ((typeof intent !== \"string\" && typeof intent !== \"object\") || (typeof intent === \"object\" && typeof intent.intent !== \"string\")) {\n            throw new Error(\"Please provide the intent as a string or an object with an intent property!\");\n        }\n\n        if (typeof intent === \"string\") {\n            intent = {\n                intent\n            };\n        }\n\n        const intentName = intent.intent;\n        const intentDef = await this.get(intentName);\n\n        if (typeof intentDef === \"undefined\") {\n            throw new Error(`Intent ${intentName} not found.`);\n        }\n\n        const isDynamicIntent = !intentDef.handlers.some((intentDefHandler) => intentDefHandler.type === \"app\");\n\n        // Default to \"reuse\" in the case of a dynamic intent and to \"startNew\" if target isn't provided.\n        const target = intent.target || (isDynamicIntent ? \"reuse\" : \"startNew\");\n        // The handler that will execute the intent.\n        let handler: Glue42.Intents.IntentHandler;\n        const anAppHandler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"app\");\n        if (target === \"startNew\") {\n            handler = anAppHandler;\n        } else if (target === \"reuse\") {\n            const anInstanceHandler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"instance\");\n            handler = anInstanceHandler || anAppHandler;\n        } else if (target.instance) {\n            handler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"instance\" && intentHandler.instanceId === target.instance);\n        } else if (target.app) {\n            handler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"app\" && intentHandler.applicationName === target.app);\n        } else {\n            throw new Error(`Invalid intent target: ${JSON.stringify(target)}`);\n        }\n\n        if (!handler) {\n            throw new Error(`Can not raise intent for request ${JSON.stringify(intent)} - can not find intent handler.`);\n        }\n\n        let instanceId = handler.instanceId;\n        if (handler.type === \"app\") {\n            instanceId = await this.startApp(handler.applicationName, intent.options);\n        }\n\n        const result: Partial<Glue42.Intents.IntentResult> = await this.raiseIntentToInstance(instanceId, intentName, intent.context);\n        result.request = intent;\n        result.handler = handler;\n\n        return result as Glue42.Intents.IntentResult;\n    }\n\n    public async all(): Promise<Glue42.Intents.Intent[]> {\n        // Gathers all intents from:\n        // 1. Application definitions\n        // 2. Running instances (application can register dynamic intents by calling `addIntentListener()` that aren't predefined inside of their application definitions)\n        // It also populates intent handlers (actual entities that can handle the intent).\n        let apps: AppDefinition[];\n        try {\n            const result = await this.interop.invoke<{ applications: AppDefinition[] }>(\"T42.ACS.GetApplications\", { withIntentsInfo: true });\n            apps = result.returned.applications;\n        } catch (e) {\n            this.logger.error(`Failed to get the applications!`, e);\n            return [];\n        }\n        const intents: { [key: string]: Glue42.Intents.Intent } = {};\n        const appsWithIntents = apps.filter((app) => app.intents && app.intents.length > 0);\n        //  Gather app handlers from application definitions.\n        for (const app of appsWithIntents) {\n            for (const intentDef of app.intents) {\n                let intent = intents[intentDef.name];\n                if (!intent) {\n                    intent = {\n                        name: intentDef.name,\n                        handlers: [],\n                    };\n                    intents[intentDef.name] = intent;\n                }\n\n                const handler: Glue42.Intents.IntentHandler = {\n                    applicationName: app.name,\n                    applicationTitle: app.title || \"\",\n                    applicationDescription: app.caption,\n                    displayName: intentDef.displayName,\n                    contextTypes: intentDef.contexts,\n                    applicationIcon: app.icon,\n                    type: \"app\"\n                };\n\n                intent.handlers.push(handler);\n            }\n        }\n\n        const servers = this.interop.servers();\n        const serverWindowIds = servers.map((server) => server.windowId).filter((serverWindowId) => typeof serverWindowId !== \"undefined\");\n\n        const T42WndGetInfo = \"T42.Wnd.GetInfo\";\n        const isT42WndGetInfoMethodRegistered = this.interop.methods().some((method) => method.name === T42WndGetInfo);\n\n        let windowsInfos: GetWindowsInfoResultItem[];\n        // For backwards compatibility with previous versions of Glue Desktop, the windows' titles will be attempted to be obtained using the Windows API.\n        if (isT42WndGetInfoMethodRegistered) {\n            try {\n                const result = await this.interop.invoke<GetWindowsInfoResult>(T42WndGetInfo, { ids: serverWindowIds });\n                windowsInfos = result.returned.windows;\n            } catch (e) {\n                // Swallow the error. The windows' titles will be attempted to be obtained using the Windows API.\n            }\n        }\n\n        // Discover all running instances that provide intents, and add them to the corresponding intent.\n        for (const server of servers) {\n            await Promise.all(server.getMethods()\n                .filter((method) => method.name.startsWith(GLUE42_FDC3_INTENTS_METHOD_PREFIX))\n                .map(async (method) => {\n                    const intentName = method.name.replace(GLUE42_FDC3_INTENTS_METHOD_PREFIX, \"\");\n                    let intent = intents[intentName];\n                    if (!intent) {\n                        intent = {\n                            name: intentName,\n                            handlers: [],\n                        };\n                        intents[intentName] = intent;\n                    }\n                    const info = method.flags.intent as Omit<Glue42.Intents.AddIntentListenerRequest, \"intent\">;\n\n                    const app = apps.find((appWithIntents) => appWithIntents.name === server.application);\n                    let appIntent: IntentInfo | undefined;\n                    if (app && app.intents) {\n                        appIntent = app.intents.find((appDefIntent) => appDefIntent.name === intentName);\n                    }\n\n                    const title = await this.windowsIdToTitle(server.windowId, windowsInfos);\n                    const handler: Glue42.Intents.IntentHandler = {\n                        instanceId: server.instance,\n                        applicationName: server.application,\n                        applicationIcon: info.icon || app?.icon,\n                        applicationTitle: app?.title || \"\",\n                        applicationDescription: info.description || app?.caption,\n                        displayName: info.displayName || appIntent?.displayName,\n                        contextTypes: info.contextTypes || appIntent?.contexts,\n                        instanceTitle: title,\n                        type: \"instance\"\n                    };\n                    intent.handlers.push(handler);\n                }));\n        }\n\n        return Object.values(intents);\n    }\n\n    public addIntentListener(intent: string | Glue42.Intents.AddIntentListenerRequest, handler: (context: Glue42.Intents.IntentContext) => any): { unsubscribe: () => void } {\n        if ((typeof intent !== \"string\" && typeof intent !== \"object\") || (typeof intent === \"object\" && typeof intent.intent !== \"string\")) {\n            throw new Error(\"Please provide the intent as a string or an object with an intent property!\");\n        }\n        if (typeof handler !== \"function\") {\n            throw new Error(\"Please provide the handler as a function!\");\n        }\n\n        // `addIntentListener()` is sync.\n        // tslint:disable-next-line:no-console\n        const result: { unsubscribe: () => void } = { unsubscribe: () => console.log(\"Could not unsubscribe!\") };\n        const intentName = typeof intent === \"string\" ? intent : intent.intent;\n        const methodName = `${GLUE42_FDC3_INTENTS_METHOD_PREFIX}${intentName}`;\n        let intentFlag: Omit<Glue42.Intents.AddIntentListenerRequest, \"intent\"> = {};\n\n        if (typeof intent === \"object\") {\n            const { intent: removed, ...rest } = intent;\n            intentFlag = rest;\n        }\n\n        this.interop.register({ name: methodName, flags: { intent: intentFlag } }, (args: Glue42.Intents.IntentContext) => {\n            return handler(args);\n        }).then(() => {\n            result.unsubscribe = () => {\n                this.interop.unregister(methodName);\n            };\n        });\n\n        return result;\n    }\n\n    private async get(intent: string): Promise<Glue42.Intents.Intent> {\n        return (await this.all()).find((registeredIntent) => registeredIntent.name === intent);\n    }\n\n    private async startApp(application: string, options?: Glue42.AppManager.ApplicationStartOptions) {\n        const result = await this.interop.invoke<{ Name: string, Id: string }>(\"T42.ACS.StartApplication\", { Name: application, options });\n        return result.returned.Id;\n    }\n\n    private async raiseIntentToInstance(instanceId: string, intent: string, context?: Glue42.Intents.IntentContext): Promise<{ result: any }> {\n        const methodName = `${GLUE42_FDC3_INTENTS_METHOD_PREFIX}${intent}`;\n        let interopServer = this.interop.servers().find((server) => server.instance === instanceId);\n        if (!interopServer) {\n            // Wait 30 sec for the server to appear.\n            await (new Promise((resolve, reject) => {\n                let timeoutId: any;\n\n                const unsub = this.interop.serverAdded((server) => {\n                    if (server.instance === instanceId) {\n                        interopServer = server;\n                        resolve();\n                        clearTimeout(timeoutId);\n                        unsub();\n                    }\n                });\n\n                timeoutId = setTimeout(() => {\n                    unsub();\n                    reject(new Error(`Can not find interop server for instance ${instanceId}`));\n                }, 30 * 1000);\n            }));\n        }\n\n        const method = interopServer.getMethods().find((registeredMethod) => registeredMethod.name === methodName);\n        if (!method) {\n            // Wait 10 sec for the method to appear.\n            await (new Promise((resolve, reject) => {\n                let timeoutId: any;\n\n                const unsub = this.interop.methodAdded((addedMethod) => {\n                    if (addedMethod.name === methodName) {\n                        resolve();\n                        clearTimeout(timeoutId);\n                        unsub();\n                    }\n                });\n\n                timeoutId = setTimeout(() => {\n                    unsub();\n                    reject(new Error(`Can not find interop method ${methodName} for instance ${instanceId}`));\n                }, 10 * 1000);\n            }));\n        }\n\n        const result = await this.interop.invoke(methodName, context, { instance: instanceId });\n\n        return {\n            result: result.returned\n        };\n    }\n\n    private async windowsIdToTitle(id: string, windowsInfos?: GetWindowsInfoResultItem[]): Promise<string> {\n        if (typeof windowsInfos !== \"undefined\") {\n            return windowsInfos.find((windowsInfo) => windowsInfo.id === id)?.title;\n        }\n\n        // The Windows API could be undefined e.g. when running inside of a node environment.\n        const window = this.windows?.findById(id);\n        const title = await window?.getTitle();\n        return title;\n    }\n}\n","import { Glue42 } from \"../glue\";\n\nexport class InitInfo {\n\n    public reject: (reason?: any) => void;\n    public resolve: (value: Glue42.Glue | PromiseLike<Glue42.Glue>) => void;\n    public numberOfCalls: number = 0;\n\n    private promise: Promise<Glue42.Glue>;\n\n    constructor() {\n        this.numberOfCalls = 1;\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n\n    public getPromise() {\n        this.numberOfCalls++;\n        return this.promise;\n    }\n\n    public done(g: Glue42.Glue) {\n        this.resolve(g);\n    }\n\n    public error(e: Error) {\n        this.reject(e);\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { isFunction, isObject, isString } from \"../activity/helpers/util\";\n\nexport interface AppPreferences {\n    app: string;\n    data: any;\n    lastUpdate: Date;\n}\n\nexport class Prefs {\n\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n    private interopMethodRegistered = false;\n\n    constructor(private appName: string, private interop: Glue42.Interop.API) {\n    }\n\n    public async get(app?: string): Promise<AppPreferences | undefined> {\n        const data = (await this.interop.invoke(\"T42.Prefs.Get\", { app: app ?? this.appName }));\n        return data.returned;\n    }\n\n    public async set(data: any, options?: { app: string }): Promise<void> {\n        this.verifyDataObject(data);\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: options?.app ?? this.appName, data, merge: false });\n    }\n\n    public async setFor(app: string, data: any): Promise<void> {\n        this.verifyApp(app);\n        this.verifyDataObject(data);\n        return this.set(data, { app });\n    }\n\n    public async update(data: any, options?: { app: string }) {\n        this.verifyDataObject(data);\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: options?.app ?? this.appName, data, merge: true });\n    }\n\n    public async updateFor(app: string, data: any) {\n        this.verifyApp(app);\n        this.verifyDataObject(data);\n        return this.update(data, { app });\n    }\n\n    public async clear(app?: string) {\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: app ?? this.appName, clear: true });\n    }\n\n    public async clearFor(app: string) {\n        this.verifyApp(app);\n        await this.interop.invoke(\"T42.Prefs.Set\", { app, clear: true });\n    }\n\n    public async getAll(): Promise<AppPreferences[]> {\n        const data = (await this.interop.invoke(\"T42.Prefs.Get\"));\n        return data.returned;\n    }\n\n    public async clearAll() {\n        await this.interop.invoke(\"T42.Prefs.Set\", { clear: true });\n    }\n\n    public subscribe(callback: (prefs: AppPreferences) => void): () => void {\n        this.verifyCallback(callback);\n        return this.subscribeFor(this.appName, callback);\n    }\n\n    public subscribeFor(app: string, callback: (prefs: AppPreferences) => void): () => void {\n        this.verifyApp(app);\n        this.verifyCallback(callback);\n        const unsubscribeFn = this.registry.add(app, callback);\n\n        // register the method if needed and then send the subscription request\n        this.registerInteropIfNeeded()\n            .then(() => {\n                this.interop.invoke(\"T42.Prefs.Get\", { app, subscribe: true });\n            });\n\n        return () => {\n            unsubscribeFn();\n        };\n    }\n\n    private async registerInteropIfNeeded() {\n        if (this.interopMethodRegistered) {\n            return;\n        }\n        this.interopMethodRegistered = true;\n\n        await this.interop.register(\"T42.Prefs.Update\", (args) => {\n            this.registry.execute(args.app, args);\n        });\n    }\n\n    private verifyApp(app: string) {\n        if (!app) {\n            throw new Error(`app should be defined`);\n        }\n        if (!isString(app)) {\n            throw new Error(`app should be a string`);\n        }\n    }\n    private verifyDataObject(data: any) {\n        if (!data) {\n            throw new Error(`data should be defined`);\n        }\n        if (!isObject(data)) {\n            throw new Error(`data should be an object`);\n        }\n    }\n\n    private verifyCallback(callback: any) {\n        if (!isFunction(callback)) {\n            throw new Error(`callback should be defined`);\n        }\n    }\n}\n","import CoreFactory, { Glue42Core } from \"@glue42/core\";\nimport { ActivityModule } from \"./activity/main\";\nimport AppManagerFactory from \"./app-manager/main\";\nimport WindowsFactory from \"./windows/main\";\nimport LayoutsFactory from \"./layouts/main\";\nimport DisplayManager from \"./displays/displayManager\";\nimport { factory as channels } from \"./channels/main\";\nimport { factory as hotkeys } from \"./hotkeys/main\";\n\nimport { Glue42 } from \"../glue\";\nimport { version } from \"../package.json\";\nimport prepareConfig from \"./config\";\nimport { LibConfigObject } from \"./types\";\nimport { ActivityMode } from \"./activity/activityConfig\";\nimport Utils from \"./utils\";\nimport { Notifications } from \"./notifications/main\";\nimport { factory as themes } from \"./themes/main\";\nimport { Intents } from \"./intents/intents\";\nimport { InitInfo } from \"./initInfo\";\nimport { Prefs } from \"./prefs/index\";\n\nlet initInfo: InitInfo;\nconst factory = async (options: Glue42.Config): Promise<Glue42.Glue> => {\n    // if running in GD, do not allow creating multiple instance of this API in the same page\n    const glue42gd: Glue42.GDObject = typeof window !== \"undefined\" && window.glue42gd;\n    if (glue42gd) {\n        if (initInfo) {\n            return initInfo.getPromise();\n        } else {\n            initInfo = new InitInfo();\n        }\n    }\n    const g = await factoryCore(options, glue42gd);\n    initInfo?.resolve(g);\n    return g;\n};\n\nconst factoryCore = async (options: Glue42.Config, glue42gd: Glue42.GDObject): Promise<Glue42.Glue> => {\n\n    const gdMajorVersion = Utils.getGDMajorVersion();\n    // get config object\n    // basically selecting some properties (and defaulting them)\n    // it's used to extract things like layouts, appManager, activities etc things\n    // that glueCore itself doesn't know about\n    options = options || {};\n    const glueConfig = prepareConfig(options);\n    options.gateway = options.gateway || {};\n\n    let _appManager: any;\n    let _activity: any;\n    let _windows: any;\n    let _displays: any;\n\n    // dependency graph:\n    //   windows: agm, appManager (via getter)\n    //   activities: contexts, agm, logger, windows, appManager (via getter)\n    //   appManager: agm, windows, logger, activities\n    //   layouts: agm, appManager, logger\n    function createWindows(core: Glue42Core.GlueCore) {\n        if (glueConfig.windows) {\n\n            const windowsLogger = getLibLogger(\"windows\", core.logger, glueConfig.windows);\n\n            _windows = WindowsFactory(\n                core.agm,\n                windowsLogger,\n                () => {\n                    return _appManager;\n                },\n                () => {\n                    return _displays;\n                },\n                gdMajorVersion);\n            debugLog(_windows);\n            return _windows;\n        }\n    }\n\n    function createActivities(core: Glue42Core.GlueCore) {\n        if (glueConfig.activities) {\n            if (ActivityModule.checkIsUsingGW3Implementation && ActivityModule.checkIsUsingGW3Implementation(core.connection)) {\n\n                const activityLogger = getLibLogger(\"activity\", core.logger, glueConfig.activities);\n\n                _activity = new ActivityModule({\n                    connection: core.connection,\n                    contexts: core.contexts,\n                    agm: core.agm,\n                    logger: activityLogger,\n                    logLevel: \"info\",\n                    disableAutoAnnounce: false,\n                    disposeRequestHandling: \"exit\",\n                    announcementInfo: null,\n                    windows: _windows,\n                    appManagerGetter: () => {\n                        return _appManager;\n                    },\n                    mode: glueConfig.activities.mode as ActivityMode,\n                    typesToTrack: glueConfig.activities.typesToTrack,\n                    activityId: glue42gd?.activityInfo?.activityId,\n                    gdMajorVersion\n                }).api;\n                debugLog(_activity);\n                return _activity;\n            }\n        }\n    }\n\n    function createAppManager(core: Glue42Core.GlueCore) {\n        if (!glueConfig.appManager) {\n            return;\n        }\n\n        const logger = getLibLogger(\"appManager\", core.logger, glueConfig.appManager);\n\n        // AppManager v3\n        _appManager = AppManagerFactory({\n            agm: core.agm,\n            windows: _windows,\n            logger,\n            activities: _activity,\n            mode: glueConfig.appManager.mode,\n            gdMajorVersion\n        });\n        debugLog(_appManager);\n        return _appManager;\n    }\n\n    function createLayouts(core: Glue42Core.GlueCore) {\n        if (!glueConfig.layouts) {\n            return;\n        }\n\n        const logger = getLibLogger(\"layouts\", core.logger, glueConfig.layouts);\n        const layoutsConfig = glueConfig.layouts;\n        const lay = LayoutsFactory({\n            agm: core.agm,\n            appManager: _appManager,\n            activityGetter: () => _activity,\n            logger,\n            mode: layoutsConfig.mode,\n            autoSaveWindowContext: layoutsConfig.autoSaveWindowContext ?? false,\n            gdMajorVersion\n        });\n        debugLog(lay);\n        return lay;\n    }\n\n    function createChannels(core: Glue42Core.GlueCore) {\n        if (!glueConfig.channels) {\n            return;\n        }\n\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use channels without context\n            return;\n        }\n\n        // Logger\n        const logger = getLibLogger(\"channels\", core.logger, glueConfig.channels);\n\n        const channelsAPI = channels(core.contexts, core.agm, () => _windows, logger);\n\n        debugLog(channelsAPI);\n        return channelsAPI;\n    }\n\n    function createHotkeys(core: Glue42Core.GlueCore) {\n        const hotkeysAPI = hotkeys(core.agm);\n\n        debugLog(hotkeysAPI);\n        return hotkeysAPI;\n    }\n\n    function createIntents(core: Glue42Core.GlueCore) {\n        const intentsAPI = new Intents(core.agm, _windows, core.logger.subLogger(\"intents\"));\n\n        debugLog(intentsAPI);\n        return intentsAPI;\n    }\n\n    function createNotifications(core: Glue42Core.GlueCore) {\n        const notificationsAPI = new Notifications(core.interop);\n\n        debugLog(notificationsAPI);\n        return notificationsAPI;\n    }\n\n    function createDisplaysApi(core: Glue42Core.GlueCore) {\n        if (glueConfig.displays) {\n            const displaysLogger = getLibLogger(\"displays\", core.logger, glueConfig.displays);\n\n            _displays = new DisplayManager(core.agm, displaysLogger);\n            debugLog(_displays);\n            return _displays;\n        }\n    }\n\n    function createThemes(core: Glue42Core.GlueCore) {\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use themes without context\n            return;\n        }\n        const themesAPI = themes(core);\n\n        debugLog(themesAPI);\n        return themesAPI;\n    }\n\n    function createPrefs(core: Glue42Core.GlueCore) {\n        const appName = options.application ?? glue42gd?.application ?? core.interop.instance.application;\n        const prefs = new Prefs(appName, core.interop);\n\n        debugLog(prefs);\n        return prefs;\n    }\n\n    function getLibLogger(loggerName: string, logger: Glue42Core.Logger.API, config: LibConfigObject<string>) {\n        const newLogger = logger.subLogger(loggerName);\n\n        if (config && config.logger) {\n            const loggerConfig = config.logger;\n            if (loggerConfig.console) {\n                newLogger.consoleLevel(loggerConfig.console);\n            }\n            if (loggerConfig.publish) {\n                newLogger.publishLevel(loggerConfig.publish);\n            }\n            // not supported in GD3\n            // if (loggerConfig.metrics) {\n            //  newLogger.metricsLevel(loggerConfig.metrics);\n            // }\n        }\n\n        return newLogger;\n    }\n\n    const ext: Glue42Core.Extension = {\n        // define extra libraries for glue-core to raise\n        libs: [\n            { name: \"windows\", create: createWindows },\n            { name: \"activities\", create: createActivities },\n            { name: \"appManager\", create: createAppManager },\n            { name: \"layouts\", create: createLayouts },\n            { name: \"channels\", create: createChannels },\n            { name: \"hotkeys\", create: createHotkeys },\n            { name: \"displays\", create: createDisplaysApi },\n            { name: \"intents\", create: createIntents },\n            { name: \"notifications\", create: createNotifications },\n            { name: \"themes\", create: createThemes },\n            { name: \"prefs\", create: createPrefs }\n        ],\n\n        version,\n\n        enrichGlue: (glue: Glue42Core.GlueCore) => {\n            // put some data to config\n            glue.config.activities = glueConfig.activities;\n            glue.config.windows = glueConfig.windows;\n            glue.config.appManager = glueConfig.appManager;\n            glue.config.layouts = glueConfig.layouts;\n            glue.config.channels = glueConfig.channels;\n            glue.config.displays = glueConfig.displays;\n        },\n    };\n\n    const currentLog: any[] = [];\n    if (typeof window !== \"undefined\") {\n        if (!(window as any).glueFactoryLog) {\n            (window as any).glueFactoryLog = [];\n        }\n        (window as any).glueFactoryLog.push(currentLog);\n    }\n\n    function debugLog(entry: any) {\n        currentLog.push(entry);\n    }\n\n    const glueApi = (await CoreFactory(options, ext)) as Glue42.Glue;\n\n    // Decorate the ready glue object with extra functionalities coming from the user-defined libraries.\n    if (Array.isArray(options?.libraries) && options.libraries.length) {\n        await Promise.all(options.libraries.map((lib) => lib(glueApi, options)));\n    }\n\n    return glueApi;\n};\n\nfactory.coreVersion = (CoreFactory as any).version;\nfactory.version = version;\nfactory.initInfo = initInfo;\n\nexport default factory;\n","import { Glue42 } from \"../../glue\";\nimport { HotkeysImpl } from \"./hotkeys\";\n\nexport function factory(agm: Glue42.AGM.API): Glue42.Hotkeys.API & { ready: () => Promise<void>; } {\n    const hotkeys = new HotkeysImpl(agm);\n\n    return {\n        register: hotkeys.register.bind(hotkeys),\n        unregister: hotkeys.unregister.bind(hotkeys),\n        unregisterAll: hotkeys.unregisterAll.bind(hotkeys),\n        isRegistered: hotkeys.isRegistered.bind(hotkeys),\n\n        ready: () => Promise.resolve()\n    };\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { ThemesImpl } from \"./themes\";\r\nimport { Glue42Core } from \"@glue42/core\";\r\n\r\nexport function factory(core: Glue42Core.GlueCore): Glue42.Themes.API & { ready: () => Promise<void>; } {\r\n    const themes = new ThemesImpl(core);\r\n\r\n    return {\r\n        list: themes.list.bind(themes),\r\n        getCurrent: themes.getCurrent.bind(themes),\r\n        select: themes.select.bind(themes),\r\n        onChanged: themes.onChanged.bind(themes),\r\n        ready: () => Promise.resolve(),\r\n    };\r\n}\r\n","import CreateGlue from \"./glue\";\n\nlet whatToExpose = CreateGlue;\nlet shouldSetToWindow = true;\n\nif (typeof window !== \"undefined\") {\n    // if glue42gd (running in GD3) and autoInjected\n    const glue42gd = (window as any).glue42gd;\n    if (glue42gd && glue42gd.autoInjected) {\n        whatToExpose = (window as any).Glue;\n        // no need to set to window, it's already there\n        shouldSetToWindow = false;\n    }\n\n    if (shouldSetToWindow) {\n        (window as any).Glue = whatToExpose;\n    }\n\n    // remove GlueCore from the window object (injected by Glue-core)\n    delete (window as any).GlueCore;\n}\n// add default library for ES6 modules\n(whatToExpose as any).default = whatToExpose;\n\nexport default whatToExpose;\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__spreadArrays","il","r","k","a","j","jl","MetricTypes","getMetricTypeByValue","metric","type","getTypeByValue","Date","serializeMetric","serializedMetrics","values","keys","reduce","memo","key","innerType","composite","defineNestedComposite","description","context","name","normalizeMetricName","path","join","getMetricValueByType","now","publishNestedComposite","getTime","Boolean","toString","flatten","arr","flat","toFlatten","concat","isArray","composeMsgForRootStateMetric","system","merged","root","getAggregateState","highestState","sort","state","aggregateDesc","msg","forEach","m","idx","slice","aggregateDescription","Helpers","definition","parent","transport","Error","BaseMetric","createMetric","defineProperty","get","_a","repo","enumerable","configurable","update","newValue","updateMetric","NumberMetric","_super","incrementBy","num","increment","decrement","decrementBy","ObjectMetric","mergeValues","_this","StringMetric","TimestampMetric","protocol","separator","_transport","_name","_description","_repo","_parent","_path","_buildPath","shadowedSystem","_state","id","_subSystems","_metrics","_getOrCreateMetric","metricObject","expectedType","metricDef","matching","filter","shadowedMetric","existing","catch","me","subSystems","metrics","subSystem","nameSystem","descriptionSystem","match","_system","getState","setState","stateDescription","updateSystem","stringMetric","timestampMetric","objectMetric","numberMetric","aggState","shadowedSubSystem","createSystem","Repository","options","init","addSystemMetrics","clickStream","undefined","rootSystem","useClickStream","navigator","userAgent","document","clickStream_1","documentClickHandler","target","className","getAttribute","timestamp","tagName","toLowerCase","href","title","page","window","location","addEventListener","attachEvent","urlMetric","appNameMetric","startUrl","glue42gd","appName","NullProtocol","PerfTracker","api","initialPublishTimeout","publishInterval","lastCount","scheduleCollection","setTimeout","collect","setInterval","collectMemory","collectEntries","memory","performance","JSON","stringify","totalJSHeapSize","usedJSHeapSize","allEntries","getEntries","jsonfiedEntries","map","toJSON","connection","config","joinPromise","session","replayRepo","replaySystem","ss","createMetricsMsg","Description","Value","send","metricClone","cloneMetric","updateMetricCore","canUpdate","publishMetricsMsg","sendFireAndForget","canUpdateMetric","_b","resolveReadyPromise","domain","onJoined","reconnect","defineRootMetricsMsg","service","instance","shadowedUpdateMetric","stateObj","rootMetric","peer_id","peerId","gw3","disableAutoAppSystem","featureMetric","reportingSystem","def","featureMetricFunc","action","payload","addFAVSupport","perfConfig","pagePerformanceMetrics","enabled","initPerf","createRegistry","errorHandling","_userErrorHandler","callbacks","_handleError","exceptionArtifact","errParam","stack","console","error","add","callback","replayArgumentsArr","callbacksForKey","replayArgument","includes","err","allForKey","acc","element","index","execute","argumentsArr","_i","results","clear","clearKey","default","lib","InProcTransport","settings","logger","registry","gw","facade","connect","_client","message","messageHandler","client","sendObject","_msg","onMessage","onConnectedChanged","close","open","SharedWorkerTransport","workerFile","worker","SharedWorker","port","onmessage","data","postMessage","Utils","getGDMajorVersion","glueDesktop","version","ver","Number","substr","isNaN","isNode","_isNode","global","process","PromiseWrapper","resolved","promise","delay","time","timers","timer","timerName","marks","endTime","period","startTime","mark","currentTime","diff","timerObj","stop","WebSocketConstructor","require","WebSocket","WS","startupTimer","_running","_registry","wsRequests","ws","waitForSocketConnection","info","pw","failed","readyState","openSocket","retryInterval","retriesLeft","reconnectInterval","notifyForSocketState","debug","initiateSocket","retries","onerror","reason","seen_1","WeakSet","has","notifyStatusChanged","onclose","onopen","identity","application","wsRequest","status","seed","alphabet","previousSeed","shuffled","randomFromSeed","nextValue","_seed_","ORIGINAL","reset","setCharacters","_alphabet_","unique","split","item","ind","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","Math","floor","splice","shuffle","alphabet_1","characters","lookup","crypto","msCrypto","randomByteBrowser","getRandomValues","random","dest","Uint8Array","encode_1","number","loopCounter","str","pow","decode_1","indexOf","isValid","len","lib$1","fn","module","exports","createCommonjsModule","counter","previousSeconds","clusterWorkerId","generate","seconds","seedValue","workerId","newCharacters","decode","shortid","domainSession","successMessages","errorMessages","_latestOptions","isJoined","tryReconnecting","_connectionOn","disconnected","loggedIn","on","handleSuccessMessage","handleErrorMessage","sm","requestsMap","destination","wasReconnect","handleJoined","requestId","request_id","entry","success","getNextRequestId","tag","skipPeerId","successMsg","_tag","errorMsg","warn","leave","onLeft","connected","GW3ProtocolImpl","protocolVersion","datePrefix","datePrefixLen","dateMinLen","datePrefixFirstChar","_isLoggedIn","shouldTryLogin","initialLogin","initialLoginAttempts","sessions","handleDisconnected","ping","processStringMessage","parse","substring","milliseconds","parseInt","ex","msgType","createStringMessage","oldToJson","datePrefix_1","processObjectMessage","createObjectMessage","login","authentication","e_1","helloMsg","sendOptions","welcomeMsg","token","err_1","_c","loginConfig","username","password","gatewayToken","getNewGWToken","method","flowName","provider","flowCallback","sessionId","secret","globalDomain","subLogger","maxRetries","reconnectAttempts","Buffer","from","resolvedIdentity","resolved_identity","availableDomains","available_domains","access_token","setLoggedIn","logout","promises","pingTimer","clearTimeout","all","domainName","domainLogger","bind","authToken","res","getGWToken","MessageReplayerImpl","specs","specsNames","messages","subs","subsRefCount","specs_1","spec","name_1","_loop_1","refCount","this_1","sub","processMessage","types","isDone","name_2","drain","off","PromisePlus","executor","timeoutMilliseconds","timeoutMessage","timeout","WebPlatformTransport","parentReady","iAmConnected","children","extContentAvailable","extContentConnecting","extContentConnected","parentInExtMode","parentPingTimeout","connectionRequestTimeout","defaultTargetString","connectionAccepted","handle","handleConnectionAccepted","connectionRejected","handleConnectionRejected","connectionRequest","handleConnectionRequest","handleParentReady","parentPing","handleParentPing","platformPing","handlePlatformPing","platformUnload","handlePlatformUnload","platformReady","handlePlatformReady","clientUnload","handleClientUnload","manualUnload","handleManualUnload","extConnectionResponse","handleExtConnectionResponse","extSetupRequest","handleExtSetupRequest","glue42ext","setUpMessageListener","setUpUnload","opener","top","parentType","publicWindowId","glue42ExtOut","windowId","event","waitParent","requestConnectionPermissionFromExt","initiateRemoteConnection","connectionResolve","connectionReject","myClientId","bridgeInstanceId","request","glue42core","clientId","clientType","parentWindowId","connectionNotPossibleMsg","parentCheck","isIframe","self","parentPingResolve","checkMessageTypeValid","messageType","ownWindowId","extMode","handleAcceptanceOfMyRequest","handleAcceptanceOfGrandChildRequest","processExtContentConnection","applicationName","extData","glue42ExtInc","child","find","c","grandChildId","source","origin","rejectConnectionRequest","typeToValidate","rejection","waitForContentScript","extConnectionResolve","extConnectionReject","approved","content","Connection","messageHandlers","ids","_connected","isTrace","inproc","sharedWorker","webPlatform","canPublish","handleConnectionChanged","handleTransportMessage","replaySpecs","replayer","isObjectBasedTransport","trace","strMessage","isLoggedIn","authRequest","distributeMessage","handlers","handlerId","handler","loggerError","log","msgObj","order","Logger","logFn","subLoggers","customLogFn","loggerFullName","includeTimeAndLevel","existingSub","publishLevel","level","_publishLevel","consoleLevel","_consoleLevel","publishMessage","compareWith","loggerName","interop","Interop","methods","InteropMethodName","invoke","prefix","date","getHours","getMinutes","getSeconds","getMilliseconds","toPrint","GW_MESSAGE_CREATE_CONTEXT","GW_MESSAGE_ACTIVITY_CREATED","GW_MESSAGE_ACTIVITY_DESTROYED","GW_MESSAGE_CONTEXT_CREATED","GW_MESSAGE_CONTEXT_ADDED","GW_MESSAGE_SUBSCRIBE_CONTEXT","GW_MESSAGE_SUBSCRIBED_CONTEXT","GW_MESSAGE_UNSUBSCRIBE_CONTEXT","GW_MESSAGE_DESTROY_CONTEXT","GW_MESSAGE_CONTEXT_DESTROYED","GW_MESSAGE_UPDATE_CONTEXT","GW_MESSAGE_CONTEXT_UPDATED","GW_MESSAGE_JOINED_ACTIVITY","ContextMessageReplaySpec","GW3ContextData","contextId","isAnnounced","activityId","updateCallbacks","hasCallbacks","applyContextDelta","delta","deepClone","commands","command","deletePath","setValueToPath","added_1","added","updated_1","updated","removed","mergeObjectsProperties","obj","hash","WeakMap","Set","RegExp","flags","set","Map","val","what","withWhat","right","left","deepEqual","x","pathArr","isSubset","superObj","subObj","every","ele","InvokeStatus","GW3Bridge","_contextNameToData","_gw3Subscriptions","_nextCallbackSubscriptionNumber","_contextNameToId","_contextIdToName","_protocolVersion","_connection","_logger","_gw3Session","subscribeToContextCreatedMessages","subscribeToContextUpdatedMessages","subscribeToContextDestroyedMessages","handleContextCreatedMessage","handleContextUpdatedMessage","handleContextDestroyedMessage","contextsDomainInfo","uri","dispose","contextName","createContext","lifetime","createContextMsg","context_id","contextData","hasReceivedSnapshot","currentContext","calculatedDelta","calculateContextDeltaV2","calculateContextDeltaV1","gwResponse","handleUpdated","updaterId","setPath","setPathSupported","setPaths","pathValues","pathValues_1","pathValue","pathValues_2","subscribe","_d","_r","un","unsubscribe","thisCallbackSubscriptionNumber","hadCallbacks","clone","joinedActivity","sentExplicitSubscription","sendSubscribe","subscriptionKey","sendUnsubscribe","destroy","extraData","oldContext","invokeUpdateCallbacks","createdMessageTypes_1","createdMessageType","contextCreatedMsg","activity_id","updatedMessageTypes_1","updatedMessageType","contextUpdatedMsg","justSeen","context_snapshot","updater_id","updateCallbackIndex","updateCallback","destroyedMessageTypes_1","destroyedMessageType","destroyedMsg","to","ContextsModule","_bridge","checkName","checkData","checkPath","paths","paths_1","ready","promisify","successCallback","errorCallback","rejectAfter","ms","clearTimeoutIfThere","Client","configuration","callProtocolSubscribe","targetServers","stream","successProxy","errorProxy","methodResponseTimeout","waitTimeoutMs","methodDef","method_response_timeout","wait_for_method_timeout","delayTillNow","currentServers","getServerMethodsByFilterAndTarget","retry_1","streamInfo","servers","methodFilter","filterCopy","getServers","serverMethodMap","server","getMethods","methodsForInstance","getMethodsForInstance","methodAdded","onMethodAdded","methodRemoved","onMethodRemoved","serverAdded","onServerAdded","serverRemoved","onServerRemoved","serverMethodAdded","onServerMethodAdded","serverMethodRemoved","onServerMethodRemoved","argumentObj","additionalOptions","getInvokePromise","methodDefinition","serversMethodMap","errorObj","additionalOptionsCopy","invokePromises","invocationMessages","methodResponseTimeoutMs","tryToAwaitForMethods","supportsStreaming","objectTypes","metadata","called_with","executed_by","returned","serversMethodPair","invId","invokePromise","race","invocationId","getInvocationResultObj","invocationResults","calledWith","all_return_values","invokeMessage","Success","allValues","currentValue","all_errors","allErrors","currError","invResult","interval","clearInterval","filterByTarget","matches","myMatches","serverMethodPair","instanceMatch","localMachine","isLocal","instanceFilter","instanceDefinition","containsProps","methodMatch","repoMethod","prop","isMatch","filterValue","repoMethodValue","filterValueEl","String","matchingServers","resultMethodsObject","methodKey","identifier","prev","current","matchingMethods","ServerSubscription","subscription","branchKey","closeSingleSubscription","pushDataToSingle","Request","requestContext","accept","acceptRequestOnBranch","acceptOnBranch","branch","rejectRequest","ServerStreaming","onSubRequest","rc","rm","handleSubRequest","onSubAdded","handleSubAdded","onSubRemoved","handleSubRemoved","streamCallbacks","subscriptionRequestHandler","subscriptionAddedHandler","subscriptionRemovedHandler","ServerBranch","subscriptions","getSubscriptionList","closeAllSubscriptions","pushData","ServerStream","_protocol","_repoMethod","_server","branches","bList","getBranchList","def2","accepts","displayName","returns","unregister","updateRepoMethod","Server","serverRepository","invocations","currentlyUnregistering","streaming","onInvoked","onMethodInvoked","createStream","streamDef","existingStream","streamMethodDefinition","getList","some","serverMethod","protocolState","streamUserObject","repoId","remove","register","wrappedCallbackFunction","resultCallback","resultValue","args","userCallback","registerCore","registerAsync","wrappedCallback","resultCalled_1","methodResult","userCallbackAsync","forStream","methodToBeRemoved","unregisterWithPredicate","removeMethodsOrStreams","filterPredicate","methodsOrStreamsToRemove","methodsToRemove","methodUnregPromises","addAsCurrentlyUnregistering","methodName","theFunction","unregisterInProgress","methodToExecute","invocationArgs","unStrException","_value","methodInvocationResult","InstanceWrapper","API","wrapped","getStreams","refreshWrappedObject","refresh","unwrap","user","pid","machine","environment","region","hideMethodSystemFlags","ClientRepository","methodsCount","myServer","wrapper","unwrappedInstance","addServer","serverId","serverEntry","removeServerById","methodId","removeServerMethod","addServerMethod","createMethodIdentifier","that","gatewayId","display_name","object_types","input_signature","result_signature","getServersByMethod","clientMethodDefinition","extractMethodsFromServers","hideServerMethodSystemFlags","unsubscribeFunc","serversWithMethodsToReplay","returnUnsubWithDelayedReplay","methodsToReplay","unsubCalled","getServerById","methodInfo","allServers","collectionToReplay","clientMethods","entries","ServerRepository","nextId","getById","SUBSCRIPTION_REQUEST","SUBSCRIPTION_ADDED","SUBSCRIPTION_REMOVED","ServerStreaming$1","repository","ERR_URI_SUBSCRIPTION_FAILED","nextStreamId","handleAddInterest","handleRemoveInterest","streamingMethod","subscriptionsMap","branchKeyToStreamIdMap","streamId","getStreamId","subscription_id","subscribeMsg","stream_id","sendSubscriptionFailed","br","dropSubscriptionMessage","closeMultipleSubscriptions","subscriptionsToClose","drop","allSubscriptions","onSubscriptionLifetimeEvent","method_id","eventName","handlerFunc","getNextStreamId","caller_id","arguments_kv","subscriptionId","errorMessage","reason_uri","needleBranch","ServerProtocol","clientRepository","handleInvokeMessage","isStreaming","registerMsg","restrictions","invocation_id","callerId","UserSubscription","subscriptionData","params","trackedServers","pair","onData","dataCallback","queued","dataItem","onClosed","closedCallback","onFailed","onConnected","setNewSubscription","newSub","STATUS_AWAITING_ACCEPT","STATUS_SUBSCRIBED","ERR_MSG_SUB_FAILED","ON_CLOSE_MSG_CLIENT_INIT","ClientStreaming","subscriptionsList","subscriptionIdToLocalKeyMap","nextSubLocalKey","handleErrorSubscribing","errorResponse","subLocalKey","pendingSub","timeoutId","callArgs","callOnClosedHandlers","handleSubscribed","acceptingServer","isFirstResponse","serverInstance","handleEventData","trackedServersFound","isPrivateData","oob","sendingServerId","receivedStreamData","requestArguments","private","onDataHandlers","queuedData","handleSubscriptionCancelled","expectedNewLength","closers","getNextSubscriptionLocalKey","registerSubscription","server_id","drainSubscriptions","subsInfo","localKey","closeSubscription","closingServer","closersCount","closingServerId","ClientProtocol","handlePeerAdded","handlePeerRemoved","handleMethodsAddedMessage","handleMethodsRemovedMessage","handleResultMessage","handleInvocationError","newPeerId","new_peer_id","remoteId","meta","local","serverInfo","removedPeerId","removed_id","methodIdList","gW3ProtocolFactory","libConfig","readyPromise","existingSubscriptions_1","registeredMethods","registeredMethods_1","handleReconnect","protocolPromise","waitForMethod","MessageBus","publish","topic","routingKey","removeEmptyValues","routing_key","target_identity","response","watchOnEvent","keysMatch","cleaned","obj1","obj2","keysObj1","allMatch","GlueCore","userConfig","ext","gdVersion","preloadPromise","gdPreloadPromise","_interop","_contexts","_bus","_allowTrace","glueInitTimer","internalConfig","_e","nodeStartingContext","startingContextString","env","_GD_STARTING_CONTEXT_","_f","getApplication","glue42electron","uid","applicationConfig","instanceId","gwConfig","gateway","gwURL","uniqueAppName","appInstanceId","getConnection","windowAsAny","containerApplication","htmlContainer","containerName","bus","auth","gwToken","getAuth","gdConsoleLevel","defaultLevel","consoleLogLevel","getLogger","contexts","libs","customLogger","prepareConfig","registerLib","inner","initTime","initEndTime","initStartTime","setupInterop","initTimer","agmConfig","setupContexts","hasActivities","activities","setupBus","setupExternalLibs","externalLibs","createCallback","setupExternalLib","authPromise","authConfig","metricsPublishingEnabledFunc","getMetricsPublishingEnabled","libsReadyPromises","coreVersion","glue","feedback","feedbackInfo","agm","glueVer","glueConfig","browser","timing","initTimes","duration","extOptions","enrichGlue","updatePerfData","deprecatedDecorator","wrong","proper","agmAny","method_added","method_removed","server_added","server_method_aded","server_method_removed","ActivityEntity","_id","_update","other","_updateCore","_beforeDelete","isNumber","arg","isString","isObject","isUndefined","isUndefinedOrNull","isNullOrWhiteSpace","test","isBoolean","isFunction","ifNotUndefined","doWithIt","ActivityType","ownerWindow","helperWindows","super","_ownerWindow","_helperWindows","hw","covertToWindowDef","initiate","_manager","windowType","WindowType","appByWindowTypeGetter","_appByWindowTypeGetter","windows","getWindows","activity","isIndependent","createWindow","EntityEvent","entitiy","entity","EntityEventContext","eventType","ActivityStatusChangeEventContext","newStatus","oldStatus","EntityEventType","StatusChange","ActivityContextChangedEventContext","ActivityContextChange","ActivityState","ActivityAGM","_activity","_ensureHasAgm","AGM","util.isUndefinedOrNull","w","methodNames","methodsForWindow","currentWindowMethod","activityServers","util.isString","potentialTargets","util.isArray","firstElem","_isInstance","_isActivityWindow","win","parameters","AttachedActivityDescriptor","manager","ownerActivityId","_ownerActivityId","ownerId","windowIds","frameColor","detach","descriptor","detachActivities","nextTick","cb","nodeify","util.isFunction","resp","Activity","actType","_actType","_status","_context","_ownerId","_agm","getActivityType","owner","addWindow","addWindowToActivity","createStackedWindows","windowTypes","leaveWindowFromActivity","getWindowsByType","setContext","setActivityContext","updateContext","updateActivityContext","onStatusChange","subscribeActivityEvents","ns","os","onWindowEvent","subscribeWindowEvents","onContextChanged","subscribeActivityContextChanged","act","stopActivity","attach","attachActivities","onActivityAttached","subscribeActivitiesAttached","newActId","oldActId","onDetached","subscribeActivitiesDetached","newAct","originalActivity","_updateDescriptors","allStates","_attached","attached","setFrameColor","color","callbacksToWait","underlyingWindow","getFrameColor","LogLevel","GlueLogger","_glueLogger","static","GetTypeName","Level","Trace","_getMessage","Debug","Info","Warn","object","exec","ActivityWindow","windowGetter","hcWindowId","Get","_type","_activityId","_instance","_isIndependent","_windowGetter","_hcWindowId","getBounds","getWindowBounds","getWindowType","util.isUndefined","getActivityById","isOwner","setVisible","isVisible","setWindowVisibility","activate","focus","activateWindow","setBounds","bounds","setWindowBounds","closeWindow","onActivityJoined","_subscribeForActivityWindowEvent","ActivityWindowJoinedActivity","onActivityRemoved","ActivityWindowLeftActivity","ActivityStatus","getMessage","gwMmessageError","gwMessageAddActivityTypes","gwMessageActivityCreated","gwMessageActivityDestroyed","gwMessageActivityInitiated","gwMessageJoinedActivity","gwMessageActivityJoined","gwMessageActivityLeft","gwMessageOwnerChanged","gwMessageAddPeerFactories","gwMessagePeerFactoriesAdded","gwMessagePeerFactoriesRemoved","gwMessagePeerCreated","_config","_windows","_sessionJoinedPromise","_sessionJoinedPromiseResolve","_activityJoinedPromise","_activityJoinedPromiseResolve","addRefreshHandler","setGWToken","nameToWindowType","windowName","owner_type","helper_types","peer_type","owner_id","activity_type","bridgeType","forwardActivityTypeMessagesToStatusEventHandlers","handleActivityCreatedMessage","handleActivityDestroyedMessage","forwardActivityMessagesToStatusEventHandlers","forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers","forwardPeerFactoryMessagesToStatusEventHandlers","forwardPeerFactoryMessagesToPeerFactoryRequests","handlePeerFactoriesAdded","handlePeerFactoriesRemoved","forwardActivityWindowMessagesToEventHandlers","disposeRequestHandling","my","exit","mode","activity_types","typesToTrack","initReady","onActivityTypeStatusChange","_activityTypeStatusChangeCallbacks","registerActivityType","activityTypeName","toActivityPeerConfig","windowDefinition","activityType","activityTypeGwMessageEntityToActivityType","invokeCallbacks","Added","unregisterActivityType","Removed","onWindowTypeStatusChange","_windowTypeStatusChangeCallbacks","registerWindowFactory","factory","_peerFactoriesRegisteredByUs","factories","peerFactoryGwMessageEntityToWindowType","unregisterWindowFactory","factory_ids","onActivityStatusChange","_activityChangeCallbacks","initiateActivity","initiateMsg","initial_context","isOverrideTypeDefinition","types_override","helpers","wd","sendCreateAndMapResultingMessagesToPromise","initMsg","_activityTypesInitiatedFromMe","fullReplace","removedKeys","announceWindow","activityWindowId","registerWindow","independent","shouldSendReady","activityInfo","_activityWindowChangeCallbacks","getAgmInstance","generateWindowGetter","onActivityWindowChange","layout","width","height","cellSize","joinPeer","joinActivity","peer_name","created_id","destroy_peer_id","getAnnouncementInfo","announcementInfo","activityWindowType","activityWindowIndependent","activityWindowName","search","URLSearchParams","searchParams","maybeName","target_id","Updated","leaveActivity","getActivityTypes","getWindowTypes","getActivities","getActivityWindows","windowDefinitions","visible","cloneActivity","cloneOptions","into","merge","newActivityInfo","onActivitiesAttached","onActivitiesDetached","onActivityAttachedDescriptorsRefreshed","getAttachedDescriptors","getRandomRequestId","forwardAddedAndRemovedMessagesToEventHandler","addedMessageType","removedMessageType","mapper","getGetEntityEvent","isAdded","sub1","sub2","forwardMessageToEventHandler","getEntityEvent","ent","h","initiatedMessageType","initiatedMessageFilter","createdMessageFilter","cancelledMessageType","cancelledMessageFilter","createdMessageToPromiseResolution","listenForRecreates","reqId","resolveCreatedPromise","rejectCreatedPromise","createdPromise","initiatedSubscription","createdSubscription","cancelledSubscription","errorSubscription","initiatedMessageAck","dropSubscriptions","dropSubscription","msg4","recreated","msg1","msg2","msg3","toReturn","peerFactoryIdAndOwnerIdToWindowType","factoryId","peerType","_peerIdAndFactoryIdToPeerType","_contextSubscriptions","subscribeToContext","async","unsubscribeContext","activityCreatedMessage","participants","createdMessage","activityGwMessageToActivity","activityToActivityStatusChangeEvent","peer_factory","gateway_token","joinedMessage","joinedId","joined_id","joinedType","joined_type","joinedName","joined_name","left_id","list","ActivityMy","_m","am","_subscribeMyContextChanged","_subscribeMyWindowEvent","_subscribeActivitiesAttached","_subscribeActivitiesDetached","onWindowFrameColorChanged","_subscribeWindowFrameColorChanged","_w","announcedWindows","myWin","_myActivityJoinedCallbacks","onActivityLeft","_myActivityRemovedCallbacks","_myContextUpdateCallbacks","_myAttached","onActivityDetached","_myDetached","onAttachedToActivity","_myAttachedTo","onDetachedFromActivity","_myDetachedFrom","onFrameColorChanged","_myActivityFrameColorChanged","myActivity","_notifyMyContextChanged","_notifyMyWindowEvent","callbackStore","_notifyAttached","_notifyDetached","_notifyAttachedTo","_notifyDetachedFrom","detached","oldAct","ReadyMarker","signalsToWait","_signals","_callbacks","setCallback","isSet","isError","_error","signal","getError","EntityObservableCollection","processNew","_processNew","addOne","items","_items","internalEntity","_updateInternalCollections","_notifyListeners","getByName","getOrWait","entityAddedHandler","_listeners","listener","entityAsAny","isActivityDestroy","Destroyed","isWindowClose","Closed","oldEntity","ActivityManager","bridge","autoAnnounce","_activityTypes","_grabEntity","_windowTypes","_activities","_dataReadyMarker","_descriptorsMarker","_readyMarker","dataErr","_announcedWindows","errCatch","refreshDescriptors","_handleActivitiesAttached","_handleActivitiesDetached","_handleActivityDescriptorsRefreshed","_handleWindowFrameColorChanged","_subscribeForData","aw","_getInitialData","usingHc","ownerWindowType","helperWindowTypes","ownerDefinition","helperDefinitions","relativeTo","relativeDirection","windowStyleAttributes","actId","subscribeActivityTypeEvents","at","factoryMethod","util.isObject","getName","array","predicate","util.some","currentWindow","windowEventHandler","unsubscribeWindowEvents","subscribeWindowTypeEvents","wt","wrappingHandler","_windowHandlers","found","windowTypeOrConfiguration","relativeToWindow","invalidKeys","filteredWindowTypeOrConfiguration","wid","relativeWindowTypes","stackedWindow","tasks","removedKey","descriptors","stateWrapped","u","_attachedCallbacks","_detachedCallbacks","subscribeActivityFrameColorChanged","_frameColorChangesCallbacks","ac","descriptorAsObjectFromAPI","oldActivityId","newActivityId","ActivityManagementAPI","_my","activityTypes","_getActivityTypesWrapper","_getWindowTypesWrapper","registerFactory","unregisterFactory","announce","instances","onAttached","onActivityFrameColorChanged","ActivityAPI","_mgr","aware","inActivity","getAvailableFrameColors","ActivityModule","logLevel","_isUsingHCImplementation","gdMajorVersion","_isUsingGW3Implementation","checkIsUsingGW3Implementation","activityManager","disableAutoAnnounce","My","_api","_readyPromise","isUsingHCImplementation","isUsingGW3Implementation","GetFunctionalEntitlementMethodName","CanIMethodName","OnEventMethodName","objectValues","objectClone","ApplicationImpl","_appManager","CallbackRegistryFactory","onInstanceStarted","onInstanceStopped","onAppRemoved","app","onAppChanged","onAppAvailable","onAppUnavailable","_props","Title","Version","autoStart","AutoStart","isShell","IsShell","caption","Caption","hidden","IsHidden","container","ApplicationName","ActivityWindowType","windowSettings","Arguments","allowMultiple","AllowMultiple","available","IsReady","icon","Icon","iconURL","IconUrl","sortOrder","SortOrder","userProperties","UserProperties","isActivity","Type","Mode","styleAttributes","WindowStyleAttributes","searchFor","modeIndex","startModeIndex","stopModeIndex","style","updateFromProps","props","Name","start","startTimeout","waitForAGMInstance","waitForAGMReady","waitForApplicationInstance","unsub","waitFunc","onInstanceAgmServerReady","acsResult","Context","Options","waitForInterop","Id","handleInstanceStarted","ActivityId","IsActivityOwner","AgmServers","onAvailable","onUnavailable","onChanged","onRemoved","InstanceImpl","_appName","startFailed","_addToRegistry","_unsubscribeInstanceStopped","_unsubscribeInstanceAgmServerReady","activityInstance","isActivityOwner","_isActivityOwner","activityInstances","activityOwnerInstance","inst","_startUpContext","_title","isActivityInstance","_isActivityInstance","_inActivity","isSingleWindowApp","_agmInstance","getWindow","onWindowAdded","updateAgmInstanceFromProps","agmInstances","handleInstanceStopped","getContext","AppManagerImpl","_gdMajorVersion","_apps","_instances","_getAppId","_updateAppFromProps","_getAppOrThrow","_getInstanceId","_getInstanceAppName","_updateInstanceFromProps","_getInstanceOrThrow","_matchInstance","_getInstanceByIdAndName","EntitlementsImpl","_agmInvoke","Region","Branches","Branch","ResultMessage","funct","AgmNames.GetFunctionalEntitlementMethodName","Entitlement","Function","func","AgmNames.CanIMethodName","Result","registerMethod","transformFunction","_isMethodRegistered","prevent","InMemoryStoreCommandMethodName","InMemoryStore","import","apps","export","createAppDef","url","details","START_ONLY","SKIP_ICONS","appManager","entitlements","skipIcon","applications","handleAppAdded","snapshot","skipIcons","resolveFunc","rejectFunc","resultPromise","AgmNames.OnEventMethodName","streamData","events","handleAppUpdated","handleAppRemoved","handleAppReady","handleInstanceStartFailed","handleInstanceUpdated","handleInstanceAgmServerReady","handleBranchModified","handleBranchesModified","subscriptionFactory","onAppAdded","myInstance","getMyInstance","onInstanceUpdated","onInstanceStartFailed","getRegion","getBranches","getCurrentBranch","getFunctionalEntitlement","getFunctionalEntitlementBranch","setCurrentBranch","setRegion","currentUser","canI","canIBranch","onBranchesChanged","restart","onShuttingDown","inMemory","CallbackFactory","_pendingWindows","getIfReady","remote","_pendingWindowsStates","urlChanged","setReadyState","targetWindowState","markReadyToShow","setUrlChangedState","waitFor","waitForTimeoutInMilliseconds","onReadyWindow","onAdded","fail","displays","workingAreaWidth","workingAreaHeight","monitor","totalOverlap","calculateTotalOverlap","display","max","r1","r2","r1x","r1y","r1xMax","r1yMax","r2x","r2y","r2xMax","r2yMax","min","appManagerGetter","displayAPIGetter","resultWindow","_mode","_group","_bounds","_url","_frameColor","_focus","_neighbours","neighbours","_groupId","groupId","_isGroupHeaderVisible","isGroupHeaderVisible","_isTabHeaderVisible","isTabHeaderVisible","_isTabSelected","isTabSelected","_settings","_isVisible","_isSticky","isSticky","_isCollapsed","isCollapsed","_windowState","_tabGroupId","tabGroupId","_tabIndex","tabIndex","_isLocked","isLocked","_frameButtons","_zoomFactor","zoomFactor","_placementSettings","placementSettings","moveResize","utils","callbackifyPromise","toBeVisible","onGroupChanged","onEventCore","replayArguments","getNeighboursByDirection","direction","winId","windowStore","getApplicationName","_APPLICATION_NAME","_t42","getWindowInfo","hostInstance","agmInstance","frameButtons","minHeight","maxHeight","minWidth","maxWidth","isFocused","opened","group","topNeighbours","leftNeighbours","rightNeighbours","bottomNeighbours","screen","getMonitor","monitors","maximize","restore","minimize","maximizeRestore","collapse","expand","toggleCollapse","setTitle","newTitle","setStyle","styleAsAny","util.isNumber","setOnTop","onTop","resetButtons","buttons","setSizeConstraints","constraints","navigate","newUrl","util.isNullOrWhiteSpace","addFrameButton","buttonInfo","buttonId","imageBase64","removeFrameButton","show","hide","center","getDisplayCenterOfScreen","snap","showLoader","loader","hideLoader","lock","unlock","getIcon","setIcon","base64Image","setTabTooltip","tooltip","attachTab","tab","opt","sourceWindow","attachOptions","selected","detachTab","argsForSend","hideTabHeader","setTabHeaderVisible","toBeTabHeaderVisible","showPopup","createFlydown","setModalState","isModal","setZoomFactor","zoomIn","zoomOut","showDevTools","capture","captureOptions","flash","suppliedOptions","flashOptions","shouldFlash","setSticky","print","printOptions","printToPDF","printToPDFOptions","place","ungroup","ungroupOptions","unGroupChanged","newGroup","oldGroup","ignoreCache","download","opts","configure","configureWindow","onClose","onUrlChanged","onTitleChanged","onFrameButtonAdded","onFrameButtonRemoved","onFrameButtonClicked","onCollapsed","onExpanded","onMinimized","onMaximized","onNormal","onVisibilityChanged","onContextUpdated","onLockingChanged","onBoundsChanged","onFocusChanged","onStickyChanged","onWindowAttached","onWindowDetached","onTabSelectionChanged","onTabHeaderVisibilityChanged","onClosing","onRefreshing","onZoomFactorChanged","onPlacementSettingsChanged","onNeighboursChanged","tabs","allWindows","w1","w2","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getAllTabs","getURL","getTitle","getDisplay","getByWindowId","resizeTo","moveTo","myParentId","parentInstanceId","Events","handleUpdate","handleWindowClose","handleWindowChangeState","finished","handleTitleChanged","finally","handleVisibilityChanged","handleUrlChanged","handleWindowSettingsChanged","handleContextUpdated","handleFrameIsLockedChanged","handleBoundsChanged","handleFocusChanged","handleFrameButtonAdded","frameButton","buttonObj","btn","handleFrameButtonRemoved","frameButtonId","button","handleFrameButtonClicked","handleFrameColorChanged","handleFrameAttached","handleFrameSelectionChanged","newWindow","prevWindow","selectedWindow","previousWindow","handleCompositionChanged","neighbors","handleGroupHeaderVisibilityChanged","handleTabHeaderVisibilityChanged","handleGroupChanged","handleAttached","newTabGroupId","tabHeaderVisible","winsToBeNotified","handleWindowAttached","handleDetached","handleWindowDetached","handleZoomFactorChanged","handleIsStickyChanged","handlePlacementSettingsChanged","copy","displayAPI","randomByte","encode","build","require$$0","agmTarget","_finished","handleEvent","finishedResolve","stylePromises","wait","tabTooltip","tabToolTip","toolTip","tabTitle","allowClose","allowCollapse","allowLockUnlock","allowMaximize","allowMinimize","buttonsConfig","versionNum","rej","resolveImmediately","areBoundsEqual","unsubscribeBoundsChanged","resolveTimeout","targetWindow","targetWindowId","snappingEdge","sourceWindowId","eventKeys","replace","contextWithoutUndefinedValues","swapUndefinedToNull","dataURL","toShow","optionsCopy","targetLocation","reformatedOptions","popupBounds","size","targetId","popupId","horizontalOffset","verticalOffset","fullOptions","reformatFlydownOptions","zoneIds","zones","z","flydownSize","cancel","clearFlydownArea","callbackData","zoneId","flydownId","flydownWindowBounds","flydownWindowId","responses","defaultResponse","groupWindowIds","filePath","enableDownloadBar","silent","fullPath","fileSize","executeWithoutToken","executeWithToken","addCloseHandler","assignGeneralIfUnassigned","zone","valueFromOptions","flydownBounds","flydownActiveArea","activeArea","areaIds","uns","executed","requested","areHeightsEqual","areWidthsEqual","areLeftsEqual","areTopsEqual","getWindowsByTabGroupId","GDEnvironment","wndId","normalizeInstance","_windowId","_appManagerGetter","_displayAPIGetter","caller","respondToEvent","streamResolve","streamReject","_waitTimeout","updateWindow","copyOptions","windowState","tabAttached","tabDetached","onEvent","onCompositionChanged","onGroupHeaderVisibilityChanged","onWindowGotFocus","onWindowLostFocus","handleFlydownBoundsRequested","windowInfo","readyResolve","extendedStreamEvent","getExtendedStreamEvent","existingWindow","mapToWindowConstructorOptions","windowInfoCreatedEvent","windowObjectAndEvents","theWindow","theWindowEvents","windowInfoBoundsChangedEvent","windowInfoUrlChangedEvent","windowInfoTitleChanged","windowInfoIsStickyChangedChanged","windowInfoCompositionChanged","groupHeaderVisible","windowInfoFocusChanged","focusChanged","frameId","oldTabGroupId","newWindowId","prevWindowId","windowObjAndEvents","windowFactory","isActiveTab","streamEvent","charAt","toUpperCase","callbackRegistry","_windowsId","groupObject","_mapToWindowObjects","winObjects","windowObject","_mapToWindowObject","mappedWindows","isHeaderVisible","showHeader","hideHeader","captureGroup","onHeaderVisibilityChanged","onWindowRemoved","groupAPI","groupInternal","removeWindow","_groups","heardForWindowsCounter","findGroupByWindow","groupObj","createdGroup","groupFactory","createOrGet","deleteIfEmpty","findGroupWrapperByWindow","currentGroup","fromGroup","toGroup","moveWindow","groupEvents","groupsAPI","groupsEvents","onWindowMoved","groups","isReady","GD","gdPromise","envDetector","groupsFactory","myWindow","windowAdded","windowRemoved","optionsAsAny","windowsForListing","findById","onTabAttached","unsubFunc","unsubscribed","onTabDetached","removeWhere","condition","layouts","where","first","ContextProvider","activitiesGetter","registerRequestMethods","onSaveRequested","activityIsOwner","usersCbs","requestResult","autoSaveWindowContext","windowContext","activityContext","transformACSLayout","something","accumulator","convertedValue","LayoutImpl","components","LayoutsAPIImpl","activityGetter","isSlimMode","l","gotSnapshot","save","verifyNotSlimMode","layoutObject","ignoreInstances","invokeMethodAndTrack","activityIdToJoin","closeRunningInstance","closeRunningInstances","closeMe","restoreOptions","activityToJoin","ignoreActivityWindowTypes","reuseExistingWindows","reuseWindows","excludeFromClosing","store","layoutType","getObjectValues","Layouts","rename","newName","oldName","updateMetadata","hibernate","resume","onRestored","onRenamed","updateAppContextInCurrent","updateDefaultContext","skipStreamEvent","agmResult","streamEventReceived","handleResult","ACSStream","resolveReady","rejectReady","resolveGotSnapshot","rejectGotSnapshot","noRetry","transform","checkForLayoutEventMethod","IsSnapshot","addLayouts","OnLayoutAdded","removeLayouts","OnLayoutRemoved","changeLayouts","OnLayoutChanged","renameLayouts","OnLayoutRenamed","restoredLayout","OnLayoutRestored","Token","layoutsData","layoutData","removedLayouts","removedLayout","existingLayout","compareLayouts","changedLayouts","changedLayout","renamedLayouts","renamedLayout","layout1","layout2","restoredLayouts","acsStream","DisplayManager","callGD","DisplayCommand","GetAll","decorateDisplay","isPrimary","Capture","CaptureAll","GetMousePosition","original","decoratedDisplay","workAreaAsAny","workArea","GetByWindowId","onDisplayChanged","_registered","switchChannel","channel","swId","newChannel","CONTEXT_PREFIX","SharedContextSubscriber","subscribeFor","isChannel","createContextName","___","startsWith","channelContextName","getContextData","updateChannel","updateData","channelName","ChannelsImpl","shared","initialChannel","joinNoSelectorSwitch","subsKey","channelNames","getMy","joinCore","leaveCore","leaveNoSelectorSwitch","changed","changedKey","getWindowsWithChannels","channels","er","changeSelector","isInitialJoin","doesChannelExist","channelExistsPromise","intervalId","sharedContexts","interopLib","setupAGM","getWindowsOnChannel","CommandMethod","HotkeysImpl","hotkey","hkToLower","formatHotkey","hotkeys","firstHotkey","registerInvokeAGMMethod","delete","isRegistered","getLibConfig","defaultMode","trueMode","getModeAsString","Glue42Notification","actions","badge","dir","image","lang","renotify","requireInteraction","removeEventListener","dispatchEvent","PanelAPI","toggle","Notifications","panel","maxActions","methodsRegistered","bunchOfPromises","methodNameRoot","handleNotificationAction","notification","severity","glueRoutingDetailMethodName","sourceId","validActions","g42notificationId","g42action","g42interopMethod","g42interopTarget","stringValue","glueAction","attributes","dataAsString","g42notification","notifications","Event","onaction","actionInterop","sourceNotificationId","onclick","clickInterop","ThemesImpl","core","getConfiguration","getMethodName","getAll","theme","setMethodName","sharedContextName","getThemesMethodName","setThemesMethodName","isSubscribed","GLUE42_FDC3_INTENTS_METHOD_PREFIX","Intents","intentFilter","intents","intent","contextType","ctToLower","contextTypes","ct","intentName","intentDef","isDynamicIntent","intentDefHandler","anAppHandler","intentHandler","startApp","raiseIntentToInstance","withIntentsInfo","appsWithIntents","applicationTitle","applicationDescription","applicationIcon","serverWindowIds","serverWindowId","T42WndGetInfo","windowsInfos","appWithIntents","appIntent","appDefIntent","windowsIdToTitle","instanceTitle","addIntentListener","intentFlag","rest","registeredIntent","interopServer","registeredMethod","addedMethod","windowsInfo","InitInfo","numberOfCalls","getPromise","Prefs","verifyDataObject","verifyApp","verifyCallback","unsubscribeFn","registerInteropIfNeeded","interopMethodRegistered","initInfo","factoryCore","_displays","getLibLogger","newLogger","loggerConfig","windowsLogger","WindowsFactory","debugLog","activityLogger","AppManagerFactory","layoutsConfig","lay","LayoutsFactory","channelsAPI","hotkeysAPI","unregisterAll","displaysLogger","intentsAPI","notificationsAPI","themesAPI","themes","getCurrent","select","prefs","currentLog","glueFactoryLog","glueApi","CoreFactory","libraries","whatToExpose","CreateGlue","shouldSetToWindow","autoInjected","Glue"],"mappings":"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"}