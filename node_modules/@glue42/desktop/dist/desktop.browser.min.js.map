{"version":3,"file":"desktop.browser.min.js","sources":["../node_modules/@glue42/core/dist/core.es.js","../src/activity/entities/activityEntity.ts","../src/activity/helpers/util.ts","../src/activity/entities/activityType.ts","../src/activity/entities/windowType.ts","../src/activity/contracts/entityEvent.ts","../src/activity/core/activityAGM.ts","../src/activity/entities/attachedActivityDescriptor.ts","../src/activity/helpers/promiseExtensions.ts","../src/activity/entities/activity.ts","../src/activity/helpers/logger.ts","../src/activity/entities/activityWindow.ts","../src/activity/contracts/activityStatus.ts","../src/activity/bridges/gw3Bridge.ts","../src/activity/API/activityMyAPI.ts","../src/activity/helpers/readyMarker.ts","../src/activity/helpers/entityObservableCollection.ts","../src/activity/core/activityManager.ts","../src/activity/API/activityManagementAPI.ts","../src/activity/API/activityAPI.ts","../src/activity/activityModule.ts","../src/app-manager/const/agm-names.ts","../node_modules/callback-registry/lib/index.js","../src/app-manager/helper.ts","../src/app-manager/application.ts","../src/app-manager/instance.ts","../src/app-manager/app-manager.ts","../src/app-manager/entitlements.ts","../src/app-manager/in-memory.ts","../src/app-manager/main.ts","../src/app-manager/snapshot.ts","../src/app-manager/data-subscription.ts","../src/windows/store.ts","../src/utils.ts","../src/windows/window.ts","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/encode.js","../node_modules/shortid/lib/decode.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/index.js","../src/windows/environment/gd/executor.ts","../src/windows/environment/helpers.ts","../src/windows/environment/gd/gd.ts","../src/windows/group.ts","../src/windows/groups.ts","../src/windows/main.ts","../src/windows/environment/detector.ts","../src/layouts/store.ts","../src/layouts/contextProvider.ts","../src/layouts/transform.ts","../src/layouts/layout.ts","../src/layouts/layouts.ts","../src/layouts/stream/acsStream.ts","../src/layouts/main.ts","../src/displays/displayManager.ts","../src/channels/agm.ts","../src/channels/contexts.ts","../src/channels/channels.ts","../src/channels/main.ts","../src/hotkeys/hotkeys.ts","../src/config.ts","../src/notifications/notification.ts","../src/notifications/panel.ts","../src/notifications/main.ts","../src/themes/themes.ts","../src/intents/intents.ts","../src/initInfo.ts","../src/prefs/index.ts","../src/glue.ts","../src/hotkeys/main.ts","../src/themes/main.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nvar MetricTypes = {\r\n    STRING: 1,\r\n    NUMBER: 2,\r\n    TIMESTAMP: 3,\r\n    OBJECT: 4\r\n};\n\nfunction getMetricTypeByValue(metric) {\r\n    if (metric.type === MetricTypes.TIMESTAMP) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (metric.type === MetricTypes.NUMBER) {\r\n        return \"number\";\r\n    }\r\n    else if (metric.type === MetricTypes.STRING) {\r\n        return \"string\";\r\n    }\r\n    else if (metric.type === MetricTypes.OBJECT) {\r\n        return \"object\";\r\n    }\r\n    return \"unknown\";\r\n}\r\nfunction getTypeByValue(value) {\r\n    if (value.constructor === Date) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return \"number\";\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        return \"string\";\r\n    }\r\n    else if (typeof value === \"object\") {\r\n        return \"object\";\r\n    }\r\n    else {\r\n        return \"string\";\r\n    }\r\n}\r\nfunction serializeMetric(metric) {\r\n    var serializedMetrics = {};\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"object\") {\r\n        var values = Object.keys(metric.value).reduce(function (memo, key) {\r\n            var innerType = getTypeByValue(metric.value[key]);\r\n            if (innerType === \"object\") {\r\n                var composite = defineNestedComposite(metric.value[key]);\r\n                memo[key] = {\r\n                    type: \"object\",\r\n                    description: \"\",\r\n                    context: {},\r\n                    composite: composite,\r\n                };\r\n            }\r\n            else {\r\n                memo[key] = {\r\n                    type: innerType,\r\n                    description: \"\",\r\n                    context: {},\r\n                };\r\n            }\r\n            return memo;\r\n        }, {});\r\n        serializedMetrics.composite = values;\r\n    }\r\n    serializedMetrics.name = normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name);\r\n    serializedMetrics.type = type;\r\n    serializedMetrics.description = metric.description;\r\n    serializedMetrics.context = {};\r\n    return serializedMetrics;\r\n}\r\nfunction defineNestedComposite(values) {\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var type = getTypeByValue(values[key]);\r\n        if (type === \"object\") {\r\n            memo[key] = {\r\n                type: \"object\",\r\n                description: \"\",\r\n                context: {},\r\n                composite: defineNestedComposite(values[key]),\r\n            };\r\n        }\r\n        else {\r\n            memo[key] = {\r\n                type: type,\r\n                description: \"\",\r\n                context: {},\r\n            };\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction normalizeMetricName(name) {\r\n    if (typeof name !== \"undefined\" && name.length > 0 && name[0] !== \"/\") {\r\n        return \"/\" + name;\r\n    }\r\n    else {\r\n        return name;\r\n    }\r\n}\r\nfunction getMetricValueByType(metric) {\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"timestamp\") {\r\n        return Date.now();\r\n    }\r\n    else {\r\n        return publishNestedComposite(metric.value);\r\n    }\r\n}\r\nfunction publishNestedComposite(values) {\r\n    if (typeof values !== \"object\") {\r\n        return values;\r\n    }\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var value = values[key];\r\n        if (typeof value === \"object\" && value.constructor !== Date) {\r\n            memo[key] = publishNestedComposite(value);\r\n        }\r\n        else if (value.constructor === Date) {\r\n            memo[key] = new Date(value).getTime();\r\n        }\r\n        else if (value.constructor === Boolean) {\r\n            memo[key] = value.toString();\r\n        }\r\n        else {\r\n            memo[key] = value;\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction flatten(arr) {\r\n    return arr.reduce(function (flat, toFlatten) {\r\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\r\n    }, []);\r\n}\r\nfunction getHighestState(arr) {\r\n    return arr.sort(function (a, b) {\r\n        if (!a.state) {\r\n            return 1;\r\n        }\r\n        if (!b.state) {\r\n            return -1;\r\n        }\r\n        return b.state - a.state;\r\n    })[0];\r\n}\r\nfunction aggregateDescription(arr) {\r\n    var msg = \"\";\r\n    arr.forEach(function (m, idx, a) {\r\n        var path = m.path.join(\".\");\r\n        if (idx === a.length - 1) {\r\n            msg += path + \".\" + m.name + \": \" + m.description;\r\n        }\r\n        else {\r\n            msg += path + \".\" + m.name + \": \" + m.description + \",\";\r\n        }\r\n    });\r\n    if (msg.length > 100) {\r\n        return msg.slice(0, 100) + \"...\";\r\n    }\r\n    else {\r\n        return msg;\r\n    }\r\n}\r\nfunction composeMsgForRootStateMetric(system) {\r\n    var aggregatedState = system.root.getAggregateState();\r\n    var merged = flatten(aggregatedState);\r\n    var highestState = getHighestState(merged);\r\n    var aggregateDesc = aggregateDescription(merged);\r\n    return {\r\n        description: aggregateDesc,\r\n        value: highestState.state,\r\n    };\r\n}\n\nfunction gw3 (connection, config) {\r\n    var _this = this;\r\n    if (!connection || typeof connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var joinPromise;\r\n    var session;\r\n    var init = function (repo) {\r\n        var resolveReadyPromise;\r\n        joinPromise = new Promise(function (resolve) {\r\n            resolveReadyPromise = resolve;\r\n        });\r\n        session = connection.domain(\"metrics\");\r\n        session.onJoined(function (reconnect) {\r\n            if (!reconnect && resolveReadyPromise) {\r\n                resolveReadyPromise();\r\n                resolveReadyPromise = undefined;\r\n            }\r\n            var rootStateMetric = {\r\n                name: \"/State\",\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var defineRootMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [rootStateMetric],\r\n            };\r\n            session.send(defineRootMetricsMsg);\r\n            if (reconnect) {\r\n                replayRepo(repo);\r\n            }\r\n        });\r\n        session.join({\r\n            system: config.system,\r\n            service: config.service,\r\n            instance: config.instance\r\n        });\r\n    };\r\n    var replayRepo = function (repo) {\r\n        replaySystem(repo.root);\r\n    };\r\n    var replaySystem = function (system) {\r\n        createSystem(system);\r\n        system.metrics.forEach(function (m) {\r\n            createMetric(m);\r\n        });\r\n        system.subSystems.forEach(function (ss) {\r\n            replaySystem(ss);\r\n        });\r\n    };\r\n    var createSystem = function (system) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metric, createMetricsMsg;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (system.parent === undefined) {\r\n                        return [2];\r\n                    }\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    metric = {\r\n                        name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                        type: \"object\",\r\n                        composite: {\r\n                            Description: {\r\n                                type: \"string\",\r\n                                description: \"\",\r\n                            },\r\n                            Value: {\r\n                                type: \"number\",\r\n                                description: \"\",\r\n                            },\r\n                        },\r\n                        description: \"System state\",\r\n                        context: {},\r\n                    };\r\n                    createMetricsMsg = {\r\n                        type: \"define\",\r\n                        metrics: [metric],\r\n                    };\r\n                    session.send(createMetricsMsg);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateSystem = function (system, state) { return __awaiter(_this, void 0, void 0, function () {\r\n        var shadowedUpdateMetric, stateObj, rootMetric;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    shadowedUpdateMetric = {\r\n                        type: \"publish\",\r\n                        values: [{\r\n                                name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                                value: {\r\n                                    Description: state.description,\r\n                                    Value: state.state,\r\n                                },\r\n                                timestamp: Date.now(),\r\n                            }],\r\n                    };\r\n                    session.send(shadowedUpdateMetric);\r\n                    stateObj = composeMsgForRootStateMetric(system);\r\n                    rootMetric = {\r\n                        type: \"publish\",\r\n                        peer_id: connection.peerId,\r\n                        values: [{\r\n                                name: \"/State\",\r\n                                value: {\r\n                                    Description: stateObj.description,\r\n                                    Value: stateObj.value,\r\n                                },\r\n                                timestamp: Date.now(),\r\n                            }],\r\n                    };\r\n                    session.send(rootMetric);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var createMetric = function (metric) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metricClone, m, createMetricsMsg;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    metricClone = cloneMetric(metric);\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    m = serializeMetric(metricClone);\r\n                    createMetricsMsg = {\r\n                        type: \"define\",\r\n                        metrics: [m],\r\n                    };\r\n                    session.send(createMetricsMsg);\r\n                    if (typeof metricClone.value !== \"undefined\") {\r\n                        updateMetricCore(metricClone);\r\n                    }\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateMetric = function (metric) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metricClone;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    metricClone = cloneMetric(metric);\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    updateMetricCore(metricClone);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateMetricCore = function (metric) {\r\n        if (canUpdate()) {\r\n            var value = getMetricValueByType(metric);\r\n            var publishMetricsMsg = {\r\n                type: \"publish\",\r\n                values: [{\r\n                        name: normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name),\r\n                        value: value,\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            return session.sendFireAndForget(publishMetricsMsg);\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    var cloneMetric = function (metric) {\r\n        var metricClone = __assign({}, metric);\r\n        if (typeof metric.value === \"object\" && metric.value !== null) {\r\n            metricClone.value = __assign({}, metric.value);\r\n        }\r\n        return metricClone;\r\n    };\r\n    var canUpdate = function () {\r\n        var _a;\r\n        try {\r\n            var func = (_a = config.canUpdateMetric) !== null && _a !== void 0 ? _a : (function () { return true; });\r\n            return func();\r\n        }\r\n        catch (_b) {\r\n            return true;\r\n        }\r\n    };\r\n    return {\r\n        init: init,\r\n        createSystem: createSystem,\r\n        updateSystem: updateSystem,\r\n        createMetric: createMetric,\r\n        updateMetric: updateMetric,\r\n    };\r\n}\n\nvar Helpers = {\r\n    validate: function (definition, parent, transport) {\r\n        if (definition === null || typeof definition !== \"object\") {\r\n            throw new Error(\"Missing definition\");\r\n        }\r\n        if (parent === null || typeof parent !== \"object\") {\r\n            throw new Error(\"Missing parent\");\r\n        }\r\n        if (transport === null || typeof transport !== \"object\") {\r\n            throw new Error(\"Missing transport\");\r\n        }\r\n    },\r\n};\n\nvar BaseMetric = (function () {\r\n    function BaseMetric(definition, system, transport, value, type) {\r\n        this.definition = definition;\r\n        this.system = system;\r\n        this.transport = transport;\r\n        this.value = value;\r\n        this.type = type;\r\n        this.path = [];\r\n        Helpers.validate(definition, system, transport);\r\n        this.path = system.path.slice(0);\r\n        this.path.push(system.name);\r\n        this.name = definition.name;\r\n        this.description = definition.description;\r\n        transport.createMetric(this);\r\n    }\r\n    Object.defineProperty(BaseMetric.prototype, \"repo\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.system) === null || _a === void 0 ? void 0 : _a.repo;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseMetric.prototype, \"id\", {\r\n        get: function () { return this.system.path + \"/\" + name; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BaseMetric.prototype.update = function (newValue) {\r\n        this.value = newValue;\r\n        return this.transport.updateMetric(this);\r\n    };\r\n    return BaseMetric;\r\n}());\n\nvar NumberMetric = (function (_super) {\r\n    __extends(NumberMetric, _super);\r\n    function NumberMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.NUMBER) || this;\r\n    }\r\n    NumberMetric.prototype.incrementBy = function (num) {\r\n        this.update(this.value + num);\r\n    };\r\n    NumberMetric.prototype.increment = function () {\r\n        this.incrementBy(1);\r\n    };\r\n    NumberMetric.prototype.decrement = function () {\r\n        this.incrementBy(-1);\r\n    };\r\n    NumberMetric.prototype.decrementBy = function (num) {\r\n        this.incrementBy(num * -1);\r\n    };\r\n    return NumberMetric;\r\n}(BaseMetric));\n\nvar ObjectMetric = (function (_super) {\r\n    __extends(ObjectMetric, _super);\r\n    function ObjectMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.OBJECT) || this;\r\n    }\r\n    ObjectMetric.prototype.update = function (newValue) {\r\n        this.mergeValues(newValue);\r\n        return this.transport.updateMetric(this);\r\n    };\r\n    ObjectMetric.prototype.mergeValues = function (values) {\r\n        var _this = this;\r\n        return Object.keys(this.value).forEach(function (k) {\r\n            if (typeof values[k] !== \"undefined\") {\r\n                _this.value[k] = values[k];\r\n            }\r\n        });\r\n    };\r\n    return ObjectMetric;\r\n}(BaseMetric));\n\nvar StringMetric = (function (_super) {\r\n    __extends(StringMetric, _super);\r\n    function StringMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.STRING) || this;\r\n    }\r\n    return StringMetric;\r\n}(BaseMetric));\n\nvar TimestampMetric = (function (_super) {\r\n    __extends(TimestampMetric, _super);\r\n    function TimestampMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.TIMESTAMP) || this;\r\n    }\r\n    TimestampMetric.prototype.now = function () {\r\n        this.update(new Date());\r\n    };\r\n    return TimestampMetric;\r\n}(BaseMetric));\n\nfunction system(name, repo, protocol, parent, description) {\r\n    if (!repo) {\r\n        throw new Error(\"Repository is required\");\r\n    }\r\n    if (!protocol) {\r\n        throw new Error(\"Transport is required\");\r\n    }\r\n    var _transport = protocol;\r\n    var _name = name;\r\n    var _description = description || \"\";\r\n    var _repo = repo;\r\n    var _parent = parent;\r\n    var _path = _buildPath(parent);\r\n    var _state = {};\r\n    var id = _arrayToString(_path, \"/\") + name;\r\n    var root = repo.root;\r\n    var _subSystems = [];\r\n    var _metrics = [];\r\n    function subSystem(nameSystem, descriptionSystem) {\r\n        if (!nameSystem || nameSystem.length === 0) {\r\n            throw new Error(\"name is required\");\r\n        }\r\n        var match = _subSystems.filter(function (s) { return s.name === nameSystem; });\r\n        if (match.length > 0) {\r\n            return match[0];\r\n        }\r\n        var _system = system(nameSystem, _repo, _transport, me, descriptionSystem);\r\n        _subSystems.push(_system);\r\n        return _system;\r\n    }\r\n    function setState(state, stateDescription) {\r\n        _state = { state: state, description: stateDescription };\r\n        _transport.updateSystem(me, _state);\r\n    }\r\n    function stringMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.STRING, value, function (metricDef) { return new StringMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function numberMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.NUMBER, value, function (metricDef) { return new NumberMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function objectMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.OBJECT, value, function (metricDef) { return new ObjectMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function timestampMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.TIMESTAMP, value, function (metricDef) { return new TimestampMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function _getOrCreateMetric(metricObject, expectedType, value, createMetric) {\r\n        var metricDef = { name: \"\" };\r\n        if (typeof metricObject === \"string\") {\r\n            metricDef = { name: metricObject };\r\n        }\r\n        else {\r\n            metricDef = metricObject;\r\n        }\r\n        var matching = _metrics.filter(function (shadowedMetric) { return shadowedMetric.name === metricDef.name; });\r\n        if (matching.length > 0) {\r\n            var existing = matching[0];\r\n            if (existing.type !== expectedType) {\r\n                throw new Error(\"A metric named \" + metricDef.name + \" is already defined with different type.\");\r\n            }\r\n            if (typeof value !== \"undefined\") {\r\n                existing\r\n                    .update(value)\r\n                    .catch(function () { });\r\n            }\r\n            return existing;\r\n        }\r\n        var metric = createMetric(metricDef);\r\n        _metrics.push(metric);\r\n        return metric;\r\n    }\r\n    function _buildPath(shadowedSystem) {\r\n        if (!shadowedSystem || !shadowedSystem.parent) {\r\n            return [];\r\n        }\r\n        var path = _buildPath(shadowedSystem.parent);\r\n        path.push(shadowedSystem.name);\r\n        return path;\r\n    }\r\n    function _arrayToString(path, separator) {\r\n        return ((path && path.length > 0) ? path.join(separator) : \"\");\r\n    }\r\n    function getAggregateState() {\r\n        var aggState = [];\r\n        if (Object.keys(_state).length > 0) {\r\n            aggState.push({\r\n                name: _name,\r\n                path: _path,\r\n                state: _state.state,\r\n                description: _state.description,\r\n            });\r\n        }\r\n        _subSystems.forEach(function (shadowedSubSystem) {\r\n            var result = shadowedSubSystem.getAggregateState();\r\n            if (result.length > 0) {\r\n                aggState.push.apply(aggState, result);\r\n            }\r\n        });\r\n        return aggState;\r\n    }\r\n    var me = {\r\n        get name() {\r\n            return _name;\r\n        },\r\n        get description() {\r\n            return _description;\r\n        },\r\n        get repo() {\r\n            return _repo;\r\n        },\r\n        get parent() {\r\n            return _parent;\r\n        },\r\n        path: _path,\r\n        id: id,\r\n        root: root,\r\n        get subSystems() {\r\n            return _subSystems;\r\n        },\r\n        get metrics() {\r\n            return _metrics;\r\n        },\r\n        subSystem: subSystem,\r\n        getState: function () {\r\n            return _state;\r\n        },\r\n        setState: setState,\r\n        stringMetric: stringMetric,\r\n        timestampMetric: timestampMetric,\r\n        objectMetric: objectMetric,\r\n        numberMetric: numberMetric,\r\n        getAggregateState: getAggregateState,\r\n    };\r\n    _transport.createSystem(me);\r\n    return me;\r\n}\n\nvar Repository = (function () {\r\n    function Repository(options, protocol) {\r\n        protocol.init(this);\r\n        this.root = system(\"\", this, protocol);\r\n        this.addSystemMetrics(this.root, options.clickStream || options.clickStream === undefined);\r\n    }\r\n    Repository.prototype.addSystemMetrics = function (rootSystem, useClickStream) {\r\n        if (typeof navigator !== \"undefined\") {\r\n            rootSystem.stringMetric(\"UserAgent\", navigator.userAgent);\r\n        }\r\n        if (useClickStream && typeof document !== \"undefined\") {\r\n            var clickStream_1 = rootSystem.subSystem(\"ClickStream\");\r\n            var documentClickHandler = function (e) {\r\n                var _a;\r\n                if (!e.target) {\r\n                    return;\r\n                }\r\n                var target = e.target;\r\n                var className = target ? (_a = target.getAttribute(\"class\")) !== null && _a !== void 0 ? _a : \"\" : \"\";\r\n                clickStream_1.objectMetric(\"LastBrowserEvent\", {\r\n                    type: \"click\",\r\n                    timestamp: new Date(),\r\n                    target: {\r\n                        className: className,\r\n                        id: target.id,\r\n                        type: \"<\" + target.tagName.toLowerCase() + \">\",\r\n                        href: target.href || \"\",\r\n                    },\r\n                });\r\n            };\r\n            clickStream_1.objectMetric(\"Page\", {\r\n                title: document.title,\r\n                page: window.location.href,\r\n            });\r\n            if (document.addEventListener) {\r\n                document.addEventListener(\"click\", documentClickHandler);\r\n            }\r\n            else {\r\n                document.attachEvent(\"onclick\", documentClickHandler);\r\n            }\r\n        }\r\n        var startTime = rootSystem.stringMetric(\"StartTime\", (new Date()).toString());\r\n        var urlMetric = rootSystem.stringMetric(\"StartURL\", \"\");\r\n        var appNameMetric = rootSystem.stringMetric(\"AppName\", \"\");\r\n        if (typeof window !== \"undefined\") {\r\n            if (typeof window.location !== \"undefined\") {\r\n                var startUrl = window.location.href;\r\n                urlMetric.update(startUrl);\r\n            }\r\n            if (typeof window.glue42gd !== \"undefined\") {\r\n                appNameMetric.update(window.glue42gd.appName);\r\n            }\r\n        }\r\n    };\r\n    return Repository;\r\n}());\n\nvar NullProtocol = (function () {\r\n    function NullProtocol() {\r\n    }\r\n    NullProtocol.prototype.init = function (repo) {\r\n    };\r\n    NullProtocol.prototype.createSystem = function (system) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.updateSystem = function (metric, state) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.createMetric = function (metric) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.updateMetric = function (metric) {\r\n        return Promise.resolve();\r\n    };\r\n    return NullProtocol;\r\n}());\n\nvar PerfTracker = (function () {\r\n    function PerfTracker(api, initialPublishTimeout, publishInterval) {\r\n        this.api = api;\r\n        this.lastCount = 0;\r\n        this.initialPublishTimeout = 10 * 1000;\r\n        this.publishInterval = 60 * 1000;\r\n        this.initialPublishTimeout = initialPublishTimeout !== null && initialPublishTimeout !== void 0 ? initialPublishTimeout : this.initialPublishTimeout;\r\n        this.publishInterval = publishInterval !== null && publishInterval !== void 0 ? publishInterval : this.publishInterval;\r\n        this.scheduleCollection();\r\n        this.system = this.api.subSystem(\"performance\", \"Performance data published by the web application\");\r\n    }\r\n    PerfTracker.prototype.scheduleCollection = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this.collect();\r\n            setInterval(function () {\r\n                _this.collect();\r\n            }, _this.publishInterval);\r\n        }, this.initialPublishTimeout);\r\n    };\r\n    PerfTracker.prototype.collect = function () {\r\n        try {\r\n            this.collectMemory();\r\n            this.collectEntries();\r\n        }\r\n        catch (_a) {\r\n        }\r\n    };\r\n    PerfTracker.prototype.collectMemory = function () {\r\n        var memory = window.performance.memory;\r\n        this.system.stringMetric(\"memory\", JSON.stringify({\r\n            totalJSHeapSize: memory.totalJSHeapSize,\r\n            usedJSHeapSize: memory.usedJSHeapSize\r\n        }));\r\n    };\r\n    PerfTracker.prototype.collectEntries = function () {\r\n        var allEntries = window.performance.getEntries();\r\n        if (allEntries.length <= this.lastCount) {\r\n            return;\r\n        }\r\n        this.lastCount = allEntries.length;\r\n        var jsonfiedEntries = allEntries.map(function (i) { return i.toJSON(); });\r\n        this.system.stringMetric(\"entries\", JSON.stringify(jsonfiedEntries));\r\n    };\r\n    return PerfTracker;\r\n}());\n\nvar metrics = (function (options) {\r\n    var protocol;\r\n    if (!options.connection || typeof options.connection !== \"object\") {\r\n        protocol = new NullProtocol();\r\n    }\r\n    else {\r\n        protocol = gw3(options.connection, options);\r\n    }\r\n    var repo = new Repository(options, protocol);\r\n    var rootSystem = repo.root;\r\n    if (!options.disableAutoAppSystem) {\r\n        rootSystem = rootSystem.subSystem(\"App\");\r\n    }\r\n    var api = addFAVSupport(rootSystem);\r\n    initPerf(api, options.pagePerformanceMetrics);\r\n    return api;\r\n});\r\nvar perf;\r\nfunction initPerf(api, config) {\r\n    var _a, _b;\r\n    if (typeof window === \"undefined\") {\r\n        return;\r\n    }\r\n    var perfConfig = (_b = (_a = window === null || window === void 0 ? void 0 : window.glue42gd) === null || _a === void 0 ? void 0 : _a.metrics) === null || _b === void 0 ? void 0 : _b.pagePerformanceMetrics;\r\n    if (perfConfig) {\r\n        config = perfConfig;\r\n    }\r\n    if (config === null || config === void 0 ? void 0 : config.enabled) {\r\n        perf = new PerfTracker(api, config.initialPublishTimeout, config.publishInterval);\r\n    }\r\n}\r\nfunction addFAVSupport(system) {\r\n    var reportingSystem = system.subSystem(\"reporting\");\r\n    var def = {\r\n        name: \"features\"\r\n    };\r\n    var featureMetric;\r\n    var featureMetricFunc = function (name, action, payload) {\r\n        if (typeof name === \"undefined\" || name === \"\") {\r\n            throw new Error(\"name is mandatory\");\r\n        }\r\n        else if (typeof action === \"undefined\" || action === \"\") {\r\n            throw new Error(\"action is mandatory\");\r\n        }\r\n        else if (typeof payload === \"undefined\" || payload === \"\") {\r\n            throw new Error(\"payload is mandatory\");\r\n        }\r\n        if (!featureMetric) {\r\n            featureMetric = reportingSystem.objectMetric(def, { name: name, action: action, payload: payload });\r\n        }\r\n        else {\r\n            featureMetric.update({\r\n                name: name,\r\n                action: action,\r\n                payload: payload\r\n            });\r\n        }\r\n    };\r\n    system.featureMetric = featureMetricFunc;\r\n    return system;\r\n}\n\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback, replayArgumentsArr) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        if (replayArgumentsArr) {\r\n            setTimeout(function () {\r\n                replayArgumentsArr.forEach(function (replayArgument) {\r\n                    var _a;\r\n                    if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {\r\n                        try {\r\n                            if (Array.isArray(replayArgument)) {\r\n                                callback.apply(undefined, replayArgument);\r\n                            }\r\n                            else {\r\n                                callback.apply(undefined, [replayArgument]);\r\n                            }\r\n                        }\r\n                        catch (err) {\r\n                            _handleError(err, key);\r\n                        }\r\n                    }\r\n                });\r\n            }, 0);\r\n        }\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            if (allForKey.length === 0) {\r\n                delete callbacks[key];\r\n            }\r\n            else {\r\n                callbacks[key] = allForKey;\r\n            }\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    function clearKey(key) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            return;\r\n        }\r\n        delete callbacks[key];\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear,\r\n        clearKey: clearKey\r\n    };\r\n}\r\ncreateRegistry.default = createRegistry;\r\nvar lib = createRegistry;\n\nvar InProcTransport = (function () {\r\n    function InProcTransport(settings, logger) {\r\n        var _this = this;\r\n        this.registry = lib();\r\n        this.gw = settings.facade;\r\n        this.gw.connect(function (_client, message) {\r\n            _this.messageHandler(message);\r\n        }).then(function (client) {\r\n            _this.client = client;\r\n        });\r\n    }\r\n    Object.defineProperty(InProcTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    InProcTransport.prototype.sendObject = function (msg) {\r\n        if (this.client) {\r\n            this.client.send(msg);\r\n            return Promise.resolve(undefined);\r\n        }\r\n        else {\r\n            return Promise.reject(\"not connected\");\r\n        }\r\n    };\r\n    InProcTransport.prototype.send = function (_msg) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    InProcTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    InProcTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    InProcTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.name = function () {\r\n        return \"in-memory\";\r\n    };\r\n    InProcTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return InProcTransport;\r\n}());\n\nvar SharedWorkerTransport = (function () {\r\n    function SharedWorkerTransport(workerFile, logger) {\r\n        var _this = this;\r\n        this.logger = logger;\r\n        this.registry = lib();\r\n        this.worker = new SharedWorker(workerFile);\r\n        this.worker.port.onmessage = function (e) {\r\n            _this.messageHandler(e.data);\r\n        };\r\n    }\r\n    Object.defineProperty(SharedWorkerTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SharedWorkerTransport.prototype.sendObject = function (msg) {\r\n        this.worker.port.postMessage(msg);\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.send = function (_msg) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    SharedWorkerTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    SharedWorkerTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    SharedWorkerTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.name = function () {\r\n        return \"shared-worker\";\r\n    };\r\n    SharedWorkerTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return SharedWorkerTransport;\r\n}());\n\nvar Utils = (function () {\r\n    function Utils() {\r\n    }\r\n    Utils.getGDMajorVersion = function () {\r\n        if (typeof window === \"undefined\") {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop) {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop.version) {\r\n            return undefined;\r\n        }\r\n        var ver = Number(window.glueDesktop.version.substr(0, 1));\r\n        return isNaN(ver) ? undefined : ver;\r\n    };\r\n    Utils.isNode = function () {\r\n        if (typeof Utils._isNode !== \"undefined\") {\r\n            return Utils._isNode;\r\n        }\r\n        if (typeof window !== \"undefined\") {\r\n            Utils._isNode = false;\r\n            return false;\r\n        }\r\n        try {\r\n            Utils._isNode = Object.prototype.toString.call(global.process) === \"[object process]\";\r\n        }\r\n        catch (e) {\r\n            Utils._isNode = false;\r\n        }\r\n        return Utils._isNode;\r\n    };\r\n    return Utils;\r\n}());\n\nvar PromiseWrapper = (function () {\r\n    function PromiseWrapper() {\r\n        var _this = this;\r\n        this.rejected = false;\r\n        this.resolved = false;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = function (t) {\r\n                _this.resolved = true;\r\n                resolve(t);\r\n            };\r\n            _this.reject = function (err) {\r\n                _this.rejected = true;\r\n                reject(err);\r\n            };\r\n        });\r\n    }\r\n    PromiseWrapper.delay = function (time) {\r\n        return new Promise(function (resolve) { return setTimeout(resolve, time); });\r\n    };\r\n    Object.defineProperty(PromiseWrapper.prototype, \"ended\", {\r\n        get: function () {\r\n            return this.rejected || this.resolved;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PromiseWrapper;\r\n}());\n\nvar timers = {};\r\nfunction getAllTimers() {\r\n    return timers;\r\n}\r\nfunction timer (timerName) {\r\n    var existing = timers[timerName];\r\n    if (existing) {\r\n        return existing;\r\n    }\r\n    var marks = [];\r\n    function now() {\r\n        return new Date().getTime();\r\n    }\r\n    var startTime = now();\r\n    mark(\"start\", startTime);\r\n    var endTime;\r\n    var period;\r\n    function stop() {\r\n        endTime = now();\r\n        mark(\"end\", endTime);\r\n        period = endTime - startTime;\r\n        return period;\r\n    }\r\n    function mark(name, time) {\r\n        var currentTime = time !== null && time !== void 0 ? time : now();\r\n        var diff = 0;\r\n        if (marks.length > 0) {\r\n            diff = currentTime - marks[marks.length - 1].time;\r\n        }\r\n        marks.push({ name: name, time: currentTime, diff: diff });\r\n    }\r\n    var timerObj = {\r\n        get startTime() {\r\n            return startTime;\r\n        },\r\n        get endTime() {\r\n            return endTime;\r\n        },\r\n        get period() {\r\n            return period;\r\n        },\r\n        stop: stop,\r\n        mark: mark,\r\n        marks: marks\r\n    };\r\n    timers[timerName] = timerObj;\r\n    return timerObj;\r\n}\n\nvar WebSocketConstructor = Utils.isNode() ? require(\"ws\") : window.WebSocket;\r\nvar WS = (function () {\r\n    function WS(settings, logger) {\r\n        this.startupTimer = timer(\"connection\");\r\n        this._running = true;\r\n        this._registry = lib();\r\n        this.wsRequests = [];\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        if (!this.settings.ws) {\r\n            throw new Error(\"ws is missing\");\r\n        }\r\n    }\r\n    WS.prototype.onMessage = function (callback) {\r\n        return this._registry.add(\"onMessage\", callback);\r\n    };\r\n    WS.prototype.send = function (msg, options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(function () {\r\n                var _a;\r\n                try {\r\n                    (_a = _this.ws) === null || _a === void 0 ? void 0 : _a.send(msg);\r\n                    resolve();\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }, reject);\r\n        });\r\n    };\r\n    WS.prototype.open = function () {\r\n        var _this = this;\r\n        this.logger.info(\"opening ws...\");\r\n        this._running = true;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(resolve, reject);\r\n        });\r\n    };\r\n    WS.prototype.close = function () {\r\n        this._running = false;\r\n        if (this.ws) {\r\n            this.ws.close();\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    WS.prototype.onConnectedChanged = function (callback) {\r\n        return this._registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WS.prototype.name = function () {\r\n        return \"ws \" + this.settings.ws;\r\n    };\r\n    WS.prototype.reconnect = function () {\r\n        var _a;\r\n        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.close();\r\n        var pw = new PromiseWrapper();\r\n        this.waitForSocketConnection(function () {\r\n            pw.resolve();\r\n        });\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.waitForSocketConnection = function (callback, failed) {\r\n        var _a;\r\n        failed = failed !== null && failed !== void 0 ? failed : (function () { });\r\n        if (!this._running) {\r\n            failed(\"wait for socket on \" + this.settings.ws + \" failed - socket closed by user\");\r\n            return;\r\n        }\r\n        if (((_a = this.ws) === null || _a === void 0 ? void 0 : _a.readyState) === 1) {\r\n            callback();\r\n            return;\r\n        }\r\n        this.wsRequests.push({ callback: callback, failed: failed });\r\n        if (this.wsRequests.length > 1) {\r\n            return;\r\n        }\r\n        this.openSocket();\r\n    };\r\n    WS.prototype.openSocket = function (retryInterval, retriesLeft) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        this.startupTimer.mark(\"opening-socket\");\r\n                        if (retryInterval === undefined) {\r\n                            retryInterval = this.settings.reconnectInterval;\r\n                        }\r\n                        if (retriesLeft !== undefined) {\r\n                            if (retriesLeft === 0) {\r\n                                this.notifyForSocketState(\"wait for socket on \" + this.settings.ws + \" failed - no more retries left\");\r\n                                return [2];\r\n                            }\r\n                            this.logger.debug(\"will retry \" + retriesLeft + \" more times (every \" + retryInterval + \" ms)\");\r\n                        }\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4, this.initiateSocket()];\r\n                    case 2:\r\n                        _b.sent();\r\n                        this.startupTimer.mark(\"socket-initiated\");\r\n                        this.notifyForSocketState();\r\n                        return [3, 4];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        setTimeout(function () {\r\n                            var retries = retriesLeft === undefined ? undefined : retriesLeft - 1;\r\n                            _this.openSocket(retryInterval, retries);\r\n                        }, retryInterval);\r\n                        return [3, 4];\r\n                    case 4: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WS.prototype.initiateSocket = function () {\r\n        var _this = this;\r\n        var pw = new PromiseWrapper();\r\n        this.logger.debug(\"initiating ws to \" + this.settings.ws + \"...\");\r\n        this.ws = new WebSocketConstructor(this.settings.ws || \"\");\r\n        this.ws.onerror = function (err) {\r\n            var reason = \"\";\r\n            try {\r\n                reason = JSON.stringify(err);\r\n            }\r\n            catch (error) {\r\n                var seen_1 = new WeakSet();\r\n                var replacer = function (key, value) {\r\n                    if (typeof value === \"object\" && value !== null) {\r\n                        if (seen_1.has(value)) {\r\n                            return;\r\n                        }\r\n                        seen_1.add(value);\r\n                    }\r\n                    return value;\r\n                };\r\n                reason = JSON.stringify(err, replacer);\r\n            }\r\n            pw.reject(\"error\");\r\n            _this.notifyStatusChanged(false, reason);\r\n        };\r\n        this.ws.onclose = function (err) {\r\n            _this.logger.info(\"ws closed \" + err);\r\n            pw.reject(\"closed\");\r\n            _this.notifyStatusChanged(false);\r\n        };\r\n        this.ws.onopen = function () {\r\n            var _a;\r\n            _this.startupTimer.mark(\"ws-opened\");\r\n            _this.logger.info(\"ws opened \" + ((_a = _this.settings.identity) === null || _a === void 0 ? void 0 : _a.application));\r\n            pw.resolve();\r\n            _this.notifyStatusChanged(true);\r\n        };\r\n        this.ws.onmessage = function (message) {\r\n            _this._registry.execute(\"onMessage\", message.data);\r\n        };\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.notifyForSocketState = function (error) {\r\n        this.wsRequests.forEach(function (wsRequest) {\r\n            if (error) {\r\n                if (wsRequest.failed) {\r\n                    wsRequest.failed(error);\r\n                }\r\n            }\r\n            else {\r\n                wsRequest.callback();\r\n            }\r\n        });\r\n        this.wsRequests = [];\r\n    };\r\n    WS.prototype.notifyStatusChanged = function (status, reason) {\r\n        this._registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    return WS;\r\n}());\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nvar randomFromSeed = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed$1(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nvar alphabet_1 = {\n    characters: characters,\n    seed: setSeed$1,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nvar randomByteBrowser = randomByte;\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByteBrowser() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nvar encode_1 = encode;\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet_1.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nvar decode_1 = decode;\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet_1.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nvar isValid = isShortId;\n\nvar lib$1 = createCommonjsModule(function (module) {\n\n\n\n\n\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId =  0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode_1(alphabet_1.lookup, version);\n    str = str + encode_1(alphabet_1.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode_1(alphabet_1.lookup, counter);\n    }\n    str = str + encode_1(alphabet_1.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet_1.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet_1.characters(newCharacters);\n    }\n\n    return alphabet_1.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode_1;\nmodule.exports.isValid = isValid;\n});\nvar lib_1 = lib$1.generate;\nvar lib_2 = lib$1.seed;\nvar lib_3 = lib$1.worker;\nvar lib_4 = lib$1.characters;\nvar lib_5 = lib$1.decode;\nvar lib_6 = lib$1.isValid;\n\nvar shortid = lib$1;\n\nfunction domainSession (domain, connection, logger, successMessages, errorMessages) {\r\n    if (domain == null) {\r\n        domain = \"global\";\r\n    }\r\n    successMessages = successMessages || [\"success\"];\r\n    errorMessages = errorMessages || [\"error\"];\r\n    var isJoined = false;\r\n    var tryReconnecting = false;\r\n    var _latestOptions;\r\n    var _connectionOn = false;\r\n    var callbacks = lib();\r\n    connection.disconnected(handleConnectionDisconnected);\r\n    connection.loggedIn(handleConnectionLoggedIn);\r\n    connection.on(\"success\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(\"error\", function (msg) { return handleErrorMessage(msg); });\r\n    connection.on(\"result\", function (msg) { return handleSuccessMessage(msg); });\r\n    if (successMessages) {\r\n        successMessages.forEach(function (sm) {\r\n            connection.on(sm, function (msg) { return handleSuccessMessage(msg); });\r\n        });\r\n    }\r\n    if (errorMessages) {\r\n        errorMessages.forEach(function (sm) {\r\n            connection.on(sm, function (msg) { return handleErrorMessage(msg); });\r\n        });\r\n    }\r\n    var requestsMap = {};\r\n    function join(options) {\r\n        _latestOptions = options;\r\n        return new Promise(function (resolve, reject) {\r\n            if (isJoined) {\r\n                resolve();\r\n                return;\r\n            }\r\n            var joinPromise;\r\n            if (domain === \"global\") {\r\n                joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject(\"not connected to gateway\");\r\n            }\r\n            else {\r\n                logger.debug(\"joining domain \" + domain);\r\n                var joinMsg = {\r\n                    type: \"join\",\r\n                    destination: domain,\r\n                    domain: \"global\",\r\n                    options: options,\r\n                };\r\n                joinPromise = send(joinMsg);\r\n            }\r\n            joinPromise\r\n                .then(function () {\r\n                handleJoined();\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                logger.debug(\"error joining \" + domain + \" domain: \" + JSON.stringify(err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function leave() {\r\n        if (domain === \"global\") {\r\n            return Promise.resolve();\r\n        }\r\n        logger.debug(\"stopping session \" + domain + \"...\");\r\n        var leaveMsg = {\r\n            type: \"leave\",\r\n            destination: domain,\r\n            domain: \"global\",\r\n        };\r\n        tryReconnecting = false;\r\n        return send(leaveMsg)\r\n            .then(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        })\r\n            .catch(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        });\r\n    }\r\n    function handleJoined() {\r\n        logger.debug(\"did join \" + domain);\r\n        isJoined = true;\r\n        var wasReconnect = tryReconnecting;\r\n        tryReconnecting = false;\r\n        callbacks.execute(\"onJoined\", wasReconnect);\r\n    }\r\n    function handleConnectionDisconnected() {\r\n        _connectionOn = false;\r\n        logger.debug(\"connection is down\");\r\n        isJoined = false;\r\n        tryReconnecting = true;\r\n        callbacks.execute(\"onLeft\", { disconnected: true });\r\n    }\r\n    function handleConnectionLoggedIn() {\r\n        _connectionOn = true;\r\n        if (tryReconnecting) {\r\n            logger.debug(\"connection is now up - trying to reconnect...\");\r\n            join(_latestOptions);\r\n        }\r\n    }\r\n    function onJoined(callback) {\r\n        if (isJoined) {\r\n            callback(false);\r\n        }\r\n        return callbacks.add(\"onJoined\", callback);\r\n    }\r\n    function onLeft(callback) {\r\n        if (!isJoined) {\r\n            callback();\r\n        }\r\n        return callbacks.add(\"onLeft\", callback);\r\n    }\r\n    function handleErrorMessage(msg) {\r\n        if (domain !== msg.domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.error(msg);\r\n    }\r\n    function handleSuccessMessage(msg) {\r\n        if (msg.domain !== domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.success(msg);\r\n    }\r\n    function getNextRequestId() {\r\n        return shortid();\r\n    }\r\n    function send(msg, tag, options) {\r\n        options = options || {};\r\n        msg.request_id = msg.request_id || getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        if (!options.skipPeerId) {\r\n            msg.peer_id = connection.peerId;\r\n        }\r\n        var requestId = msg.request_id;\r\n        return new Promise(function (resolve, reject) {\r\n            requestsMap[requestId] = {\r\n                success: function (successMsg) {\r\n                    delete requestsMap[requestId];\r\n                    successMsg._tag = tag;\r\n                    resolve(successMsg);\r\n                },\r\n                error: function (errorMsg) {\r\n                    logger.warn(\"GW error - \" + JSON.stringify(errorMsg) + \" for request \" + JSON.stringify(msg));\r\n                    delete requestsMap[requestId];\r\n                    errorMsg._tag = tag;\r\n                    reject(errorMsg);\r\n                },\r\n            };\r\n            connection\r\n                .send(msg, options)\r\n                .catch(function (err) {\r\n                requestsMap[requestId].error({ err: err });\r\n            });\r\n        });\r\n    }\r\n    function sendFireAndForget(msg) {\r\n        msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n        return connection.send(msg);\r\n    }\r\n    return {\r\n        join: join,\r\n        leave: leave,\r\n        onJoined: onJoined,\r\n        onLeft: onLeft,\r\n        send: send,\r\n        sendFireAndForget: sendFireAndForget,\r\n        on: function (type, callback) {\r\n            connection.on(type, function (msg) {\r\n                if (msg.domain !== domain) {\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(msg);\r\n                }\r\n                catch (e) {\r\n                    logger.error(\"Callback  failed: \" + e + \" \\n \" + e.stack + \" \\n msg was: \" + JSON.stringify(msg), e);\r\n                }\r\n            });\r\n        },\r\n        loggedIn: function (callback) { return connection.loggedIn(callback); },\r\n        connected: function (callback) { return connection.connected(callback); },\r\n        disconnected: function (callback) { return connection.disconnected(callback); },\r\n        get peerId() {\r\n            return connection.peerId;\r\n        },\r\n        get domain() {\r\n            return domain;\r\n        },\r\n    };\r\n}\n\nvar GW3ProtocolImpl = (function () {\r\n    function GW3ProtocolImpl(connection, settings, logger) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.protocolVersion = 3;\r\n        this.datePrefix = \"#T42_DATE#\";\r\n        this.datePrefixLen = this.datePrefix.length;\r\n        this.dateMinLen = this.datePrefixLen + 1;\r\n        this.datePrefixFirstChar = this.datePrefix[0];\r\n        this.registry = lib();\r\n        this._isLoggedIn = false;\r\n        this.shouldTryLogin = true;\r\n        this.initialLogin = true;\r\n        this.initialLoginAttempts = 3;\r\n        this.sessions = [];\r\n        connection.disconnected(function () {\r\n            _this.handleDisconnected();\r\n        });\r\n        this.ping();\r\n    }\r\n    Object.defineProperty(GW3ProtocolImpl.prototype, \"isLoggedIn\", {\r\n        get: function () {\r\n            return this._isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GW3ProtocolImpl.prototype.processStringMessage = function (message) {\r\n        var _this = this;\r\n        var msg = JSON.parse(message, function (key, value) {\r\n            if (typeof value !== \"string\") {\r\n                return value;\r\n            }\r\n            if (value.length < _this.dateMinLen) {\r\n                return value;\r\n            }\r\n            if (value[0] !== _this.datePrefixFirstChar) {\r\n                return value;\r\n            }\r\n            if (value.substring(0, _this.datePrefixLen) !== _this.datePrefix) {\r\n                return value;\r\n            }\r\n            try {\r\n                var milliseconds = parseInt(value.substring(_this.datePrefixLen, value.length), 10);\r\n                if (isNaN(milliseconds)) {\r\n                    return value;\r\n                }\r\n                return new Date(milliseconds);\r\n            }\r\n            catch (ex) {\r\n                return value;\r\n            }\r\n        });\r\n        return {\r\n            msg: msg,\r\n            msgType: msg.type,\r\n        };\r\n    };\r\n    GW3ProtocolImpl.prototype.createStringMessage = function (message) {\r\n        var oldToJson = Date.prototype.toJSON;\r\n        try {\r\n            var datePrefix_1 = this.datePrefix;\r\n            Date.prototype.toJSON = function () {\r\n                return datePrefix_1 + this.getTime();\r\n            };\r\n            var result = JSON.stringify(message);\r\n            return result;\r\n        }\r\n        finally {\r\n            Date.prototype.toJSON = oldToJson;\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.processObjectMessage = function (message) {\r\n        if (!message.type) {\r\n            throw new Error(\"Object should have type property\");\r\n        }\r\n        return {\r\n            msg: message,\r\n            msgType: message.type,\r\n        };\r\n    };\r\n    GW3ProtocolImpl.prototype.createObjectMessage = function (message) {\r\n        return message;\r\n    };\r\n    GW3ProtocolImpl.prototype.login = function (config, reconnect) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authentication, token, e_1, _a, helloMsg, sendOptions, welcomeMsg, msg, token, _b, err_1;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"logging in...\");\r\n                        this.loginConfig = config;\r\n                        if (!this.loginConfig) {\r\n                            this.loginConfig = { username: \"\", password: \"\" };\r\n                        }\r\n                        this.shouldTryLogin = true;\r\n                        authentication = {};\r\n                        this.connection.gatewayToken = config.gatewayToken;\r\n                        if (!config.gatewayToken) return [3, 5];\r\n                        if (!reconnect) return [3, 4];\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        return [4, this.getNewGWToken()];\r\n                    case 2:\r\n                        token = _c.sent();\r\n                        config.gatewayToken = token;\r\n                        return [3, 4];\r\n                    case 3:\r\n                        e_1 = _c.sent();\r\n                        this.logger.warn(\"failed to get GW token when reconnecting \" + ((e_1 === null || e_1 === void 0 ? void 0 : e_1.message) || e_1));\r\n                        return [3, 4];\r\n                    case 4:\r\n                        authentication.method = \"gateway-token\";\r\n                        authentication.token = config.gatewayToken;\r\n                        this.connection.gatewayToken = config.gatewayToken;\r\n                        return [3, 10];\r\n                    case 5:\r\n                        if (!(config.flowName === \"sspi\")) return [3, 9];\r\n                        authentication.provider = \"win\";\r\n                        authentication.method = \"access-token\";\r\n                        if (!(config.flowCallback && config.sessionId)) return [3, 7];\r\n                        _a = authentication;\r\n                        return [4, config.flowCallback(config.sessionId, null)];\r\n                    case 6:\r\n                        _a.token =\r\n                            (_c.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        return [3, 8];\r\n                    case 7: throw new Error(\"Invalid SSPI config\");\r\n                    case 8: return [3, 10];\r\n                    case 9:\r\n                        if (config.token) {\r\n                            authentication.method = \"access-token\";\r\n                            authentication.token = config.token;\r\n                        }\r\n                        else if (config.username) {\r\n                            authentication.method = \"secret\";\r\n                            authentication.login = config.username;\r\n                            authentication.secret = config.password;\r\n                        }\r\n                        else {\r\n                            throw new Error(\"invalid auth message\" + JSON.stringify(config));\r\n                        }\r\n                        _c.label = 10;\r\n                    case 10:\r\n                        helloMsg = {\r\n                            type: \"hello\",\r\n                            identity: this.settings.identity,\r\n                            authentication: authentication\r\n                        };\r\n                        if (config.sessionId) {\r\n                            helloMsg.request_id = config.sessionId;\r\n                        }\r\n                        this.globalDomain = domainSession(\"global\", this.connection, this.logger.subLogger(\"global-domain\"), [\r\n                            \"welcome\",\r\n                            \"token\",\r\n                            \"authentication-request\"\r\n                        ]);\r\n                        sendOptions = { skipPeerId: true };\r\n                        if (this.initialLogin) {\r\n                            sendOptions.retryInterval = this.settings.reconnectInterval;\r\n                            sendOptions.maxRetries = this.settings.reconnectAttempts;\r\n                        }\r\n                        _c.label = 11;\r\n                    case 11:\r\n                        _c.trys.push([11, 19, 20, 21]);\r\n                        welcomeMsg = void 0;\r\n                        _c.label = 12;\r\n                    case 12:\r\n                        return [4, this.globalDomain.send(helloMsg, undefined, sendOptions)];\r\n                    case 13:\r\n                        msg = _c.sent();\r\n                        if (!(msg.type === \"authentication-request\")) return [3, 16];\r\n                        token = Buffer.from(msg.authentication.token, \"base64\");\r\n                        if (!(config.flowCallback && config.sessionId)) return [3, 15];\r\n                        _b = helloMsg.authentication;\r\n                        return [4, config.flowCallback(config.sessionId, token)];\r\n                    case 14:\r\n                        _b.token =\r\n                            (_c.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        _c.label = 15;\r\n                    case 15:\r\n                        helloMsg.request_id = config.sessionId;\r\n                        return [3, 12];\r\n                    case 16:\r\n                        if (msg.type === \"welcome\") {\r\n                            welcomeMsg = msg;\r\n                            return [3, 18];\r\n                        }\r\n                        else if (msg.type === \"error\") {\r\n                            throw new Error(\"Authentication failed: \" + msg.reason);\r\n                        }\r\n                        else {\r\n                            throw new Error(\"Unexpected message type during authentication: \" + msg.type);\r\n                        }\r\n                    case 17: return [3, 12];\r\n                    case 18:\r\n                        this.initialLogin = false;\r\n                        this.logger.debug(\"login successful with peerId \" + welcomeMsg.peer_id);\r\n                        this.connection.peerId = welcomeMsg.peer_id;\r\n                        this.connection.resolvedIdentity = welcomeMsg.resolved_identity;\r\n                        this.connection.availableDomains = welcomeMsg.available_domains;\r\n                        if (welcomeMsg.options) {\r\n                            this.connection.token = welcomeMsg.options.access_token;\r\n                            this.connection.info = welcomeMsg.options.info;\r\n                        }\r\n                        this.setLoggedIn(true);\r\n                        return [2, welcomeMsg.resolved_identity];\r\n                    case 19:\r\n                        err_1 = _c.sent();\r\n                        this.logger.error(\"error sending hello message - \" + (err_1.message || err_1.msg || err_1.reason || err_1), err_1);\r\n                        throw err_1;\r\n                    case 20:\r\n                        if (config && config.flowCallback && config.sessionId) {\r\n                            config.flowCallback(config.sessionId, null);\r\n                        }\r\n                        return [7];\r\n                    case 21: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promises;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"logging out...\");\r\n                        this.shouldTryLogin = false;\r\n                        if (this.pingTimer) {\r\n                            clearTimeout(this.pingTimer);\r\n                        }\r\n                        promises = this.sessions.map(function (session) {\r\n                            session.leave();\r\n                        });\r\n                        return [4, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.loggedIn = function (callback) {\r\n        if (this._isLoggedIn) {\r\n            callback();\r\n        }\r\n        return this.registry.add(\"onLoggedIn\", callback);\r\n    };\r\n    GW3ProtocolImpl.prototype.domain = function (domainName, domainLogger, successMessages, errorMessages) {\r\n        var session = this.sessions.filter(function (s) { return s.domain === domainName; })[0];\r\n        if (!session) {\r\n            session = domainSession(domainName, this.connection, domainLogger, successMessages, errorMessages);\r\n            this.sessions.push(session);\r\n        }\r\n        return session;\r\n    };\r\n    GW3ProtocolImpl.prototype.handleDisconnected = function () {\r\n        var _this = this;\r\n        this.setLoggedIn(false);\r\n        var tryToLogin = this.shouldTryLogin;\r\n        if (tryToLogin && this.initialLogin) {\r\n            if (this.initialLoginAttempts <= 0) {\r\n                return;\r\n            }\r\n            this.initialLoginAttempts--;\r\n        }\r\n        this.logger.debug(\"disconnected - will try new login?\" + this.shouldTryLogin);\r\n        if (this.shouldTryLogin) {\r\n            if (!this.loginConfig) {\r\n                throw new Error(\"no login info\");\r\n            }\r\n            this.connection.login(this.loginConfig, true)\r\n                .catch(function () {\r\n                setTimeout(_this.handleDisconnected.bind(_this), _this.settings.reconnectInterval || 1000);\r\n            });\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.setLoggedIn = function (value) {\r\n        this._isLoggedIn = value;\r\n        if (this._isLoggedIn) {\r\n            this.registry.execute(\"onLoggedIn\");\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.ping = function () {\r\n        var _this = this;\r\n        if (!this.shouldTryLogin) {\r\n            return;\r\n        }\r\n        if (this._isLoggedIn) {\r\n            this.connection.send({ type: \"ping\" });\r\n        }\r\n        this.pingTimer = setTimeout(function () {\r\n            _this.ping();\r\n        }, 30 * 1000);\r\n    };\r\n    GW3ProtocolImpl.prototype.authToken = function () {\r\n        var createTokenReq = {\r\n            type: \"create-token\"\r\n        };\r\n        if (!this.globalDomain) {\r\n            return Promise.reject(new Error(\"no global domain session\"));\r\n        }\r\n        return this.globalDomain.send(createTokenReq)\r\n            .then(function (res) {\r\n            return res.token;\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.getNewGWToken = function () {\r\n        if (typeof window !== undefined) {\r\n            var glue42gd = window.glue42gd;\r\n            if (glue42gd) {\r\n                return glue42gd.getGWToken();\r\n            }\r\n        }\r\n        return Promise.reject(new Error(\"not running in GD\"));\r\n    };\r\n    return GW3ProtocolImpl;\r\n}());\n\nvar MessageReplayerImpl = (function () {\r\n    function MessageReplayerImpl(specs) {\r\n        this.specsNames = [];\r\n        this.messages = {};\r\n        this.subs = {};\r\n        this.subsRefCount = {};\r\n        this.specs = {};\r\n        for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\r\n            var spec = specs_1[_i];\r\n            this.specs[spec.name] = spec;\r\n            this.specsNames.push(spec.name);\r\n        }\r\n    }\r\n    MessageReplayerImpl.prototype.init = function (connection) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var _loop_1 = function (type) {\r\n                var refCount = this_1.subsRefCount[type];\r\n                if (!refCount) {\r\n                    refCount = 0;\r\n                }\r\n                refCount += 1;\r\n                this_1.subsRefCount[type] = refCount;\r\n                if (refCount > 1) {\r\n                    return \"continue\";\r\n                }\r\n                var sub = connection.on(type, function (msg) { return _this.processMessage(type, msg); });\r\n                this_1.subs[type] = sub;\r\n            };\r\n            var this_1 = this;\r\n            for (var _b = 0, _c = this.specs[name_1].types; _b < _c.length; _b++) {\r\n                var type = _c[_b];\r\n                _loop_1(type);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.processMessage = function (type, msg) {\r\n        if (this.isDone || !msg) {\r\n            return;\r\n        }\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_2 = _a[_i];\r\n            if (this.specs[name_2].types.indexOf(type) !== -1) {\r\n                var messages = this.messages[name_2] || [];\r\n                this.messages[name_2] = messages;\r\n                messages.push(msg);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.drain = function (name, callback) {\r\n        var _a;\r\n        if (callback) {\r\n            (this.messages[name] || []).forEach(callback);\r\n        }\r\n        delete this.messages[name];\r\n        for (var _i = 0, _b = this.specs[name].types; _i < _b.length; _i++) {\r\n            var type = _b[_i];\r\n            this.subsRefCount[type] -= 1;\r\n            if (this.subsRefCount[type] <= 0) {\r\n                (_a = this.connection) === null || _a === void 0 ? void 0 : _a.off(this.subs[type]);\r\n                delete this.subs[type];\r\n                delete this.subsRefCount[type];\r\n            }\r\n        }\r\n        delete this.specs[name];\r\n        if (!this.specs.length) {\r\n            this.isDone = true;\r\n        }\r\n    };\r\n    return MessageReplayerImpl;\r\n}());\n\nvar PromisePlus = function (executor, timeoutMilliseconds, timeoutMessage) {\r\n    return new Promise(function (resolve, reject) {\r\n        var timeout = setTimeout(function () {\r\n            var message = timeoutMessage || \"Promise timeout hit: \" + timeoutMilliseconds;\r\n            reject(message);\r\n        }, timeoutMilliseconds);\r\n        var providedPromise = new Promise(executor);\r\n        providedPromise\r\n            .then(function (result) {\r\n            clearTimeout(timeout);\r\n            resolve(result);\r\n        })\r\n            .catch(function (error) {\r\n            clearTimeout(timeout);\r\n            reject(error);\r\n        });\r\n    });\r\n};\n\nvar WebPlatformTransport = (function () {\r\n    function WebPlatformTransport(settings, logger, identity) {\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.identity = identity;\r\n        this.parentReady = false;\r\n        this.iAmConnected = false;\r\n        this.rejected = false;\r\n        this.children = [];\r\n        this.extContentAvailable = false;\r\n        this.extContentConnecting = false;\r\n        this.extContentConnected = false;\r\n        this.parentInExtMode = false;\r\n        this.parentPingTimeout = 3000;\r\n        this.connectionRequestTimeout = 5000;\r\n        this.defaultTargetString = \"*\";\r\n        this.registry = lib();\r\n        this.messages = {\r\n            connectionAccepted: { name: \"connectionAccepted\", handle: this.handleConnectionAccepted.bind(this) },\r\n            connectionRejected: { name: \"connectionRejected\", handle: this.handleConnectionRejected.bind(this) },\r\n            connectionRequest: { name: \"connectionRequest\", handle: this.handleConnectionRequest.bind(this) },\r\n            parentReady: { name: \"parentReady\", handle: this.handleParentReady.bind(this) },\r\n            parentPing: { name: \"parentPing\", handle: this.handleParentPing.bind(this) },\r\n            platformPing: { name: \"platformPing\", handle: this.handlePlatformPing.bind(this) },\r\n            platformUnload: { name: \"platformUnload\", handle: this.handlePlatformUnload.bind(this) },\r\n            platformReady: { name: \"platformReady\", handle: this.handlePlatformReady.bind(this) },\r\n            clientUnload: { name: \"clientUnload\", handle: this.handleClientUnload.bind(this) },\r\n            manualUnload: { name: \"manualUnload\", handle: this.handleManualUnload.bind(this) },\r\n            extConnectionResponse: { name: \"extConnectionResponse\", handle: this.handleExtConnectionResponse.bind(this) },\r\n            extSetupRequest: { name: \"extSetupRequest\", handle: this.handleExtSetupRequest.bind(this) }\r\n        };\r\n        this.extContentAvailable = !!window.glue42ext;\r\n        this.setUpMessageListener();\r\n        this.setUpUnload();\r\n        if (!this.settings.port) {\r\n            this.parent = window.opener || window.top;\r\n            this.parentType = window.opener ? \"opener\" :\r\n                window.name.indexOf(\"#wsp\") !== -1 ? \"workspace\" : \"top\";\r\n        }\r\n    }\r\n    Object.defineProperty(WebPlatformTransport.prototype, \"transportWindowId\", {\r\n        get: function () {\r\n            return this.publicWindowId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WebPlatformTransport.prototype.sendObject = function (msg) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.extContentConnected) {\r\n                    return [2, window.postMessage({ glue42ExtOut: msg }, this.defaultTargetString)];\r\n                }\r\n                if (!this.port) {\r\n                    throw new Error(\"Cannot send message, because the port was not opened yet\");\r\n                }\r\n                this.port.postMessage(msg);\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(WebPlatformTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WebPlatformTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    WebPlatformTransport.prototype.send = function () {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    WebPlatformTransport.prototype.onConnectedChanged = function (callback) {\r\n        return this.registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WebPlatformTransport.prototype.open = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"opening a connection to the web platform gateway.\");\r\n                        return [4, this.connect()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.notifyStatusChanged(true);\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    WebPlatformTransport.prototype.name = function () {\r\n        return \"web-platform\";\r\n    };\r\n    WebPlatformTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    WebPlatformTransport.prototype.connect = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.parentReady) {\r\n                            this.logger.debug(\"cancelling connection attempt, because this client's parent has already given a ready signal\");\r\n                            return [2];\r\n                        }\r\n                        if (this.settings.port) {\r\n                            this.logger.debug(\"opening an internal web platform connection\");\r\n                            this.port = this.settings.port;\r\n                            this.publicWindowId = this.settings.windowId;\r\n                            if (this.identity) {\r\n                                this.identity.windowId = this.publicWindowId;\r\n                            }\r\n                            this.port.onmessage = function (event) { return _this.registry.execute(\"onMessage\", event.data); };\r\n                            this.logger.debug(\"internal web platform connection completed\");\r\n                            return [2];\r\n                        }\r\n                        if (!this.parentType || !this.parent) {\r\n                            throw new Error(\"Cannot initiate a connection, because there is no opener, no top and no port.\");\r\n                        }\r\n                        this.logger.debug(\"opening a \" + (this.parentType === \"opener\" ? \"child\" : \"grandchild\") + \" client web platform connection\");\r\n                        return [4, this.waitParent(this.parent, this.parentType)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (!this.parentInExtMode) return [3, 3];\r\n                        return [4, this.requestConnectionPermissionFromExt()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3: return [4, this.initiateRemoteConnection(this.parent, this.parentType)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.logger.debug(\"the \" + (this.parentType === \"opener\" ? \"child\" : \"grandchild\") + \" client is connected\");\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.initiateRemoteConnection = function (target, parentType) {\r\n        var _this = this;\r\n        return PromisePlus(function (resolve, reject) {\r\n            _this.connectionResolve = resolve;\r\n            _this.connectionReject = reject;\r\n            _this.myClientId = shortid();\r\n            var bridgeInstanceId = _this.parentType === \"workspace\" ? window.name.substring(0, window.name.indexOf(\"#wsp\")) : window.name;\r\n            var request = {\r\n                glue42core: {\r\n                    type: _this.messages.connectionRequest.name,\r\n                    clientId: _this.myClientId,\r\n                    clientType: parentType === \"top\" || parentType === \"workspace\" ? \"grandChild\" : \"child\",\r\n                    bridgeInstanceId: bridgeInstanceId\r\n                }\r\n            };\r\n            _this.logger.debug(\"sending connection request to \" + parentType);\r\n            if (_this.extContentConnecting) {\r\n                request.glue42core.clientType = \"child\";\r\n                request.glue42core.bridgeInstanceId = _this.myClientId;\r\n                request.glue42core.parentWindowId = _this.parentWindowId;\r\n                return window.postMessage(request, _this.defaultTargetString);\r\n            }\r\n            target.postMessage(request, _this.defaultTargetString);\r\n        }, this.connectionRequestTimeout, \"The connection to the opener/top window timed out\");\r\n    };\r\n    WebPlatformTransport.prototype.waitParent = function (target, parentType) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connectionNotPossibleMsg, parentCheck, error_1;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        connectionNotPossibleMsg = \"Cannot initiate glue, because this window was not opened or created by a glue client\";\r\n                        parentCheck = PromisePlus(function (resolve, reject) {\r\n                            var isIframe = window.self !== window.top;\r\n                            if (parentType === \"top\" && !isIframe) {\r\n                                return reject(connectionNotPossibleMsg);\r\n                            }\r\n                            _this.parentPingResolve = resolve;\r\n                            var message = {\r\n                                glue42core: {\r\n                                    type: parentType === \"opener\" ? _this.messages.platformPing.name : _this.messages.parentPing.name\r\n                                }\r\n                            };\r\n                            _this.logger.debug(\"checking for \" + parentType + \" window availability\");\r\n                            target.postMessage(message, _this.defaultTargetString);\r\n                        }, this.parentPingTimeout, connectionNotPossibleMsg);\r\n                        if (!this.extContentAvailable) {\r\n                            return [2, parentCheck];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 5]);\r\n                        return [4, parentCheck];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2];\r\n                    case 3:\r\n                        error_1 = _a.sent();\r\n                        this.logger.debug(\"the parent check failed, but there is an associated extension content script, requesting permission...\");\r\n                        return [4, this.requestConnectionPermissionFromExt()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [3, 5];\r\n                    case 5: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.setUpMessageListener = function () {\r\n        var _this = this;\r\n        if (this.settings.port) {\r\n            this.logger.debug(\"skipping generic message listener, because this is an internal client\");\r\n            return;\r\n        }\r\n        window.addEventListener(\"message\", function (event) {\r\n            var _a;\r\n            var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n            if (!data || _this.rejected) {\r\n                return;\r\n            }\r\n            if (!_this.checkMessageTypeValid(data.type)) {\r\n                _this.logger.error(\"cannot handle the incoming glue42 core message, because the type is invalid: \" + data.type);\r\n                return;\r\n            }\r\n            var messageType = data.type;\r\n            _this.logger.debug(\"received valid glue42core message of type: \" + messageType);\r\n            _this.messages[messageType].handle(event);\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.setUpUnload = function () {\r\n        var _this = this;\r\n        if (this.settings.port) {\r\n            this.logger.debug(\"skipping unload event listener, because this is an internal client\");\r\n            return;\r\n        }\r\n        window.addEventListener(\"beforeunload\", function () {\r\n            var _a, _b;\r\n            if (_this.extContentConnected) {\r\n                return;\r\n            }\r\n            var message = {\r\n                glue42core: {\r\n                    type: _this.messages.clientUnload.name,\r\n                    data: {\r\n                        clientId: _this.myClientId,\r\n                        ownWindowId: (_a = _this.identity) === null || _a === void 0 ? void 0 : _a.windowId\r\n                    }\r\n                }\r\n            };\r\n            if (_this.parent) {\r\n                _this.parent.postMessage(message, _this.defaultTargetString);\r\n            }\r\n            (_b = _this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.handleParentReady = function (event) {\r\n        var _a;\r\n        this.logger.debug(\"handling the ready signal from the parent, by resoling the pending promise.\");\r\n        this.parentReady = true;\r\n        var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n        if (data && data.extMode) {\r\n            this.logger.debug(\"my parent is connected to its content script, fetching windowId and proceeding with content script connection\");\r\n            this.parentWindowId = data.extMode.windowId;\r\n            this.parentInExtMode = true;\r\n        }\r\n        if (this.parentPingResolve) {\r\n            this.parentPingResolve();\r\n            delete this.parentPingResolve;\r\n            return;\r\n        }\r\n        this.logger.debug(\"silently handling the ready signal from the top parent, because there is no defined promise\");\r\n    };\r\n    WebPlatformTransport.prototype.handlePlatformReady = function () {\r\n        this.logger.debug(\"the web platform gave the ready signal\");\r\n        this.parentReady = true;\r\n        if (this.parentPingResolve) {\r\n            this.parentPingResolve();\r\n            delete this.parentPingResolve;\r\n            return;\r\n        }\r\n        this.logger.debug(\"silently handling the ready signal from the top parent, because there is no defined promise\");\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionAccepted = function (event) {\r\n        var _a;\r\n        var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n        if (this.myClientId === data.clientId) {\r\n            return this.handleAcceptanceOfMyRequest(data);\r\n        }\r\n        return this.handleAcceptanceOfGrandChildRequest(data, event);\r\n    };\r\n    WebPlatformTransport.prototype.handleAcceptanceOfMyRequest = function (data) {\r\n        var _this = this;\r\n        this.logger.debug(\"handling a connection accepted signal targeted at me.\");\r\n        if (this.extContentConnecting) {\r\n            return this.processExtContentConnection(data);\r\n        }\r\n        if (!data.port) {\r\n            this.logger.error(\"cannot set up my connection, because I was not provided with a port\");\r\n            return;\r\n        }\r\n        this.publicWindowId = this.parentType === \"opener\" ? window.name :\r\n            this.parentType === \"top\" ? data.parentWindowId :\r\n                window.name.substring(0, window.name.indexOf(\"#wsp\"));\r\n        if (this.identity && this.parentType !== \"top\") {\r\n            this.identity.windowId = this.publicWindowId;\r\n        }\r\n        if (this.identity && data.appName) {\r\n            this.identity.application = data.appName;\r\n            this.identity.applicationName = data.appName;\r\n        }\r\n        this.port = data.port;\r\n        this.port.onmessage = function (e) { return _this.registry.execute(\"onMessage\", e.data); };\r\n        if (this.connectionResolve) {\r\n            this.logger.debug(\"my connection is set up, calling the connection resolve.\");\r\n            this.connectionResolve();\r\n            delete this.connectionResolve;\r\n            return;\r\n        }\r\n        this.logger.error(\"unable to call the connection resolve, because no connection promise was found\");\r\n    };\r\n    WebPlatformTransport.prototype.processExtContentConnection = function (data) {\r\n        var _this = this;\r\n        this.logger.debug(\"handling a connection accepted signal targeted at me for extension content connection.\");\r\n        this.extContentConnecting = false;\r\n        this.extContentConnected = true;\r\n        this.publicWindowId = this.parentWindowId || this.myClientId;\r\n        if (this.extContentConnecting && this.identity) {\r\n            this.identity.windowId = this.publicWindowId;\r\n        }\r\n        if (this.identity && data.appName) {\r\n            this.identity.application = data.appName;\r\n            this.identity.applicationName = data.appName;\r\n        }\r\n        window.addEventListener(\"message\", function (event) {\r\n            var _a;\r\n            var extData = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42ExtInc;\r\n            if (!extData) {\r\n                return;\r\n            }\r\n            _this.registry.execute(\"onMessage\", extData);\r\n        });\r\n        if (this.connectionResolve) {\r\n            this.logger.debug(\"my connection is set up, calling the connection resolve.\");\r\n            this.connectionResolve();\r\n            delete this.connectionResolve;\r\n            return;\r\n        }\r\n    };\r\n    WebPlatformTransport.prototype.handleAcceptanceOfGrandChildRequest = function (data, event) {\r\n        if (this.extContentConnecting || this.extContentConnected) {\r\n            this.logger.debug(\"cannot process acceptance of a grandchild, because I am connected to a content script\");\r\n            return;\r\n        }\r\n        this.logger.debug(\"handling a connection accepted signal targeted at a grandchild: \" + data.clientId);\r\n        var child = this.children.find(function (c) { return c.grandChildId === data.clientId; });\r\n        if (!child) {\r\n            this.logger.error(\"cannot handle connection accepted for grandchild: \" + data.clientId + \", because there is no grandchild with this id\");\r\n            return;\r\n        }\r\n        child.connected = true;\r\n        this.logger.debug(\"the grandchild connection for \" + data.clientId + \" is set up, forwarding the success message and the gateway port\");\r\n        data.parentWindowId = this.publicWindowId;\r\n        child.source.postMessage(event.data, child.origin, [data.port]);\r\n        return;\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionRejected = function () {\r\n        this.logger.debug(\"handling a connection rejection. Most likely the reason is that this window was not created by a glue API call\");\r\n        if (this.connectionReject) {\r\n            this.connectionReject(\"The platform connection was rejected. Most likely because this window was not created by a glue API call\");\r\n            delete this.connectionReject;\r\n        }\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionRequest = function (event) {\r\n        if (this.extContentConnecting) {\r\n            this.logger.debug(\"This connection request event is targeted at the extension content\");\r\n            return;\r\n        }\r\n        var source = event.source;\r\n        var data = event.data.glue42core;\r\n        if (!data.clientType || data.clientType !== \"grandChild\") {\r\n            return this.rejectConnectionRequest(source, event.origin, \"rejecting a connection request, because the source was not opened by a glue API call\");\r\n        }\r\n        if (!data.clientId) {\r\n            return this.rejectConnectionRequest(source, event.origin, \"rejecting a connection request, because the source did not provide a valid id\");\r\n        }\r\n        if (this.parentType !== \"opener\" || !this.parent) {\r\n            return this.rejectConnectionRequest(source, event.origin, \"Cannot forward the connection request, because no direct connection to the platform was found\");\r\n        }\r\n        this.logger.debug(\"handling a connection request for a grandchild: \" + data.clientId);\r\n        this.children.push({ grandChildId: data.clientId, source: source, connected: false, origin: event.origin });\r\n        this.logger.debug(\"grandchild: \" + data.clientId + \" is prepared, forwarding connection request to the platform\");\r\n        this.parent.postMessage(event.data, this.defaultTargetString);\r\n    };\r\n    WebPlatformTransport.prototype.handleParentPing = function (event) {\r\n        if (!this.parentReady) {\r\n            this.logger.debug(\"my parent is not ready, I am ignoring the parent ping\");\r\n            return;\r\n        }\r\n        if (!this.iAmConnected) {\r\n            this.logger.debug(\"i am not fully connected yet, I am ignoring the parent ping\");\r\n            return;\r\n        }\r\n        var message = {\r\n            glue42core: {\r\n                type: this.messages.parentReady.name\r\n            }\r\n        };\r\n        if (this.extContentConnected) {\r\n            message.glue42core.extMode = { windowId: this.myClientId };\r\n        }\r\n        var source = event.source;\r\n        this.logger.debug(\"responding to a parent ping with a ready message\");\r\n        source.postMessage(message, event.origin);\r\n    };\r\n    WebPlatformTransport.prototype.handlePlatformUnload = function (event) {\r\n        this.logger.debug(\"detected a web platform unload\");\r\n        this.parentReady = false;\r\n        if (this.children.length) {\r\n            this.logger.debug(\"forwarding the platform unload to all known children and starting platform discovery polling\");\r\n            this.children.forEach(function (child) { return child.source.postMessage(event.data, child.origin); });\r\n        }\r\n        this.notifyStatusChanged(false, \"Gateway unloaded\");\r\n    };\r\n    WebPlatformTransport.prototype.handleManualUnload = function () {\r\n        var _a, _b;\r\n        var message = {\r\n            glue42core: {\r\n                type: this.messages.clientUnload.name,\r\n                data: {\r\n                    clientId: this.myClientId,\r\n                    ownWindowId: (_a = this.identity) === null || _a === void 0 ? void 0 : _a.windowId\r\n                }\r\n            }\r\n        };\r\n        if (this.parent) {\r\n            this.parent.postMessage(message, this.defaultTargetString);\r\n        }\r\n        if (this.extContentConnected) {\r\n            return window.postMessage({ glue42ExtOut: message }, this.defaultTargetString);\r\n        }\r\n        (_b = this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);\r\n    };\r\n    WebPlatformTransport.prototype.handleClientUnload = function (event) {\r\n        var data = event.data.glue42core;\r\n        var clientId = data === null || data === void 0 ? void 0 : data.data.clientId;\r\n        if (!clientId) {\r\n            this.logger.warn(\"cannot process grand child unload, because the provided id was not valid\");\r\n            return;\r\n        }\r\n        var foundChild = this.children.find(function (child) { return child.grandChildId === clientId; });\r\n        if (!foundChild) {\r\n            this.logger.warn(\"cannot process grand child unload, because this client is unaware of this grandchild\");\r\n            return;\r\n        }\r\n        this.logger.debug(\"handling grandchild unload for id: \" + clientId);\r\n        this.children = this.children.filter(function (child) { return child.grandChildId !== clientId; });\r\n    };\r\n    WebPlatformTransport.prototype.handlePlatformPing = function () {\r\n        this.logger.error(\"cannot handle platform ping, because this is not a platform calls handling component\");\r\n    };\r\n    WebPlatformTransport.prototype.notifyStatusChanged = function (status, reason) {\r\n        this.iAmConnected = status;\r\n        this.registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    WebPlatformTransport.prototype.checkMessageTypeValid = function (typeToValidate) {\r\n        return typeof typeToValidate === \"string\" && !!this.messages[typeToValidate];\r\n    };\r\n    WebPlatformTransport.prototype.rejectConnectionRequest = function (source, origin, reason) {\r\n        this.rejected = true;\r\n        this.logger.error(reason);\r\n        var rejection = {\r\n            glue42core: {\r\n                type: this.messages.connectionRejected.name\r\n            }\r\n        };\r\n        source.postMessage(rejection, origin);\r\n    };\r\n    WebPlatformTransport.prototype.requestConnectionPermissionFromExt = function () {\r\n        var _this = this;\r\n        return this.waitForContentScript()\r\n            .then(function () { return PromisePlus(function (resolve, reject) {\r\n            _this.extConnectionResolve = resolve;\r\n            _this.extConnectionReject = reject;\r\n            var message = {\r\n                glue42core: {\r\n                    type: \"extSetupRequest\"\r\n                }\r\n            };\r\n            _this.logger.debug(\"permission request to the extension content script was sent\");\r\n            window.postMessage(message, _this.defaultTargetString);\r\n        }, _this.parentPingTimeout, \"Cannot initialize glue, because this app was not opened or created by a Glue Client and the request for extension connection timed out\"); });\r\n    };\r\n    WebPlatformTransport.prototype.handleExtConnectionResponse = function (event) {\r\n        var _a;\r\n        var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n        if (!data.approved && this.extConnectionReject) {\r\n            return this.extConnectionReject(\"Cannot initialize glue, because this app was not opened or created by a Glue Client and the request for extension connection was rejected\");\r\n        }\r\n        if (this.extConnectionResolve) {\r\n            this.extContentConnecting = true;\r\n            this.logger.debug(\"The extension connection was approved, proceeding.\");\r\n            this.extConnectionResolve();\r\n            delete this.extConnectionResolve;\r\n        }\r\n    };\r\n    WebPlatformTransport.prototype.handleExtSetupRequest = function () {\r\n        return;\r\n    };\r\n    WebPlatformTransport.prototype.waitForContentScript = function () {\r\n        var _a;\r\n        var contentReady = !!((_a = window.glue42ext) === null || _a === void 0 ? void 0 : _a.content);\r\n        if (contentReady) {\r\n            return Promise.resolve();\r\n        }\r\n        return PromisePlus(function (resolve) {\r\n            window.addEventListener(\"Glue42EXTReady\", function () {\r\n                resolve();\r\n            });\r\n        }, this.connectionRequestTimeout, \"The content script was available, but was never heard to be ready\");\r\n    };\r\n    return WebPlatformTransport;\r\n}());\n\nvar Connection = (function () {\r\n    function Connection(settings, logger) {\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.messageHandlers = {};\r\n        this.ids = 1;\r\n        this.registry = lib();\r\n        this._connected = false;\r\n        this.isTrace = false;\r\n        settings = settings || {};\r\n        settings.reconnectAttempts = settings.reconnectAttempts || 10;\r\n        settings.reconnectInterval = settings.reconnectInterval || 1000;\r\n        if (settings.inproc) {\r\n            this.transport = new InProcTransport(settings.inproc, logger.subLogger(\"inMemory\"));\r\n        }\r\n        else if (settings.sharedWorker) {\r\n            this.transport = new SharedWorkerTransport(settings.sharedWorker, logger.subLogger(\"shared-worker\"));\r\n        }\r\n        else if (settings.webPlatform) {\r\n            this.transport = new WebPlatformTransport(settings.webPlatform, logger.subLogger(\"web-platform\"), settings.identity);\r\n        }\r\n        else if (settings.ws !== undefined) {\r\n            this.transport = new WS(settings, logger.subLogger(\"ws\"));\r\n        }\r\n        else {\r\n            throw new Error(\"No connection information specified\");\r\n        }\r\n        this.isTrace = logger.canPublish(\"trace\");\r\n        logger.debug(\"starting with \" + this.transport.name() + \" transport\");\r\n        this.protocol = new GW3ProtocolImpl(this, settings, logger.subLogger(\"protocol\"));\r\n        this.transport.onConnectedChanged(this.handleConnectionChanged.bind(this));\r\n        this.transport.onMessage(this.handleTransportMessage.bind(this));\r\n        if (settings.replaySpecs && settings.replaySpecs.length) {\r\n            this.replayer = new MessageReplayerImpl(settings.replaySpecs);\r\n            this.replayer.init(this);\r\n        }\r\n    }\r\n    Object.defineProperty(Connection.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.protocol) === null || _a === void 0 ? void 0 : _a.protocolVersion;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Connection.prototype.send = function (message, options) {\r\n        if (this.transport.sendObject &&\r\n            this.transport.isObjectBasedTransport) {\r\n            var msg = this.protocol.createObjectMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + JSON.stringify(msg));\r\n            }\r\n            return this.transport.sendObject(msg, options);\r\n        }\r\n        else {\r\n            var strMessage = this.protocol.createStringMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + strMessage);\r\n            }\r\n            return this.transport.send(strMessage, options);\r\n        }\r\n    };\r\n    Connection.prototype.on = function (type, messageHandler) {\r\n        type = type.toLowerCase();\r\n        if (this.messageHandlers[type] === undefined) {\r\n            this.messageHandlers[type] = {};\r\n        }\r\n        var id = this.ids++;\r\n        this.messageHandlers[type][id] = messageHandler;\r\n        return {\r\n            type: type,\r\n            id: id,\r\n        };\r\n    };\r\n    Connection.prototype.off = function (info) {\r\n        delete this.messageHandlers[info.type.toLowerCase()][info.id];\r\n    };\r\n    Object.defineProperty(Connection.prototype, \"isConnected\", {\r\n        get: function () {\r\n            return this.protocol.isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Connection.prototype.connected = function (callback) {\r\n        var _this = this;\r\n        return this.protocol.loggedIn(function () {\r\n            callback(_this.settings.ws || _this.settings.sharedWorker || \"\");\r\n        });\r\n    };\r\n    Connection.prototype.disconnected = function (callback) {\r\n        return this.registry.add(\"disconnected\", callback);\r\n    };\r\n    Connection.prototype.login = function (authRequest, reconnect) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var identity;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.transport.open()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        timer(\"connection\").mark(\"transport-opened\");\r\n                        identity = this.protocol.login(authRequest, reconnect);\r\n                        timer(\"connection\").mark(\"protocol-logged-in\");\r\n                        return [2, identity];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.protocol.logout()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4, this.transport.close()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.loggedIn = function (callback) {\r\n        return this.protocol.loggedIn(callback);\r\n    };\r\n    Connection.prototype.domain = function (domain, successMessages, errorMessages) {\r\n        return this.protocol.domain(domain, this.logger.subLogger(\"domain=\" + domain), successMessages, errorMessages);\r\n    };\r\n    Connection.prototype.authToken = function () {\r\n        return this.protocol.authToken();\r\n    };\r\n    Connection.prototype.reconnect = function () {\r\n        return this.transport.reconnect();\r\n    };\r\n    Connection.prototype.distributeMessage = function (message, type) {\r\n        var _this = this;\r\n        var handlers = this.messageHandlers[type.toLowerCase()];\r\n        if (handlers !== undefined) {\r\n            Object.keys(handlers).forEach(function (handlerId) {\r\n                var handler = handlers[handlerId];\r\n                if (handler !== undefined) {\r\n                    try {\r\n                        handler(message);\r\n                    }\r\n                    catch (error) {\r\n                        try {\r\n                            _this.logger.error(\"Message handler failed with \" + error.stack, error);\r\n                        }\r\n                        catch (loggerError) {\r\n                            console.log(\"Message handler failed\", error);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Connection.prototype.handleConnectionChanged = function (connected) {\r\n        if (this._connected === connected) {\r\n            return;\r\n        }\r\n        this._connected = connected;\r\n        if (connected) {\r\n            this.registry.execute(\"connected\");\r\n        }\r\n        else {\r\n            this.registry.execute(\"disconnected\");\r\n        }\r\n    };\r\n    Connection.prototype.handleTransportMessage = function (msg) {\r\n        var msgObj;\r\n        if (typeof msg === \"string\") {\r\n            msgObj = this.protocol.processStringMessage(msg);\r\n        }\r\n        else {\r\n            msgObj = this.protocol.processObjectMessage(msg);\r\n        }\r\n        if (this.isTrace) {\r\n            this.logger.trace(\"<< \" + JSON.stringify(msgObj));\r\n        }\r\n        this.distributeMessage(msgObj.msg, msgObj.msgType);\r\n    };\r\n    return Connection;\r\n}());\n\nvar order = [\"trace\", \"debug\", \"info\", \"warn\", \"error\", \"off\"];\r\nvar Logger = (function () {\r\n    function Logger(name, parent, logFn) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.subLoggers = [];\r\n        this.logFn = console;\r\n        this.customLogFn = false;\r\n        this.name = name;\r\n        if (parent) {\r\n            this.path = parent.path + \".\" + name;\r\n        }\r\n        else {\r\n            this.path = name;\r\n        }\r\n        this.loggerFullName = \"[\" + this.path + \"]\";\r\n        this.includeTimeAndLevel = !logFn;\r\n        if (logFn) {\r\n            this.logFn = logFn;\r\n            this.customLogFn = true;\r\n        }\r\n    }\r\n    Logger.prototype.subLogger = function (name) {\r\n        var existingSub = this.subLoggers.filter(function (subLogger) {\r\n            return subLogger.name === name;\r\n        })[0];\r\n        if (existingSub !== undefined) {\r\n            return existingSub;\r\n        }\r\n        Object.keys(this).forEach(function (key) {\r\n            if (key === name) {\r\n                throw new Error(\"This sub logger name is not allowed.\");\r\n            }\r\n        });\r\n        var sub = new Logger(name, this, this.customLogFn ? this.logFn : undefined);\r\n        this.subLoggers.push(sub);\r\n        return sub;\r\n    };\r\n    Logger.prototype.publishLevel = function (level) {\r\n        var _a;\r\n        if (level) {\r\n            this._publishLevel = level;\r\n        }\r\n        return this._publishLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.publishLevel());\r\n    };\r\n    Logger.prototype.consoleLevel = function (level) {\r\n        var _a;\r\n        if (level) {\r\n            this._consoleLevel = level;\r\n        }\r\n        return this._consoleLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.consoleLevel());\r\n    };\r\n    Logger.prototype.log = function (message, level, error) {\r\n        this.publishMessage(level || \"info\", message, error);\r\n    };\r\n    Logger.prototype.trace = function (message) {\r\n        this.log(message, \"trace\");\r\n    };\r\n    Logger.prototype.debug = function (message) {\r\n        this.log(message, \"debug\");\r\n    };\r\n    Logger.prototype.info = function (message) {\r\n        this.log(message, \"info\");\r\n    };\r\n    Logger.prototype.warn = function (message) {\r\n        this.log(message, \"warn\");\r\n    };\r\n    Logger.prototype.error = function (message, err) {\r\n        this.log(message, \"error\");\r\n    };\r\n    Logger.prototype.canPublish = function (level, compareWith) {\r\n        var levelIdx = order.indexOf(level);\r\n        var restrictionIdx = order.indexOf(compareWith || this.consoleLevel() || \"trace\");\r\n        return levelIdx >= restrictionIdx;\r\n    };\r\n    Logger.prototype.publishMessage = function (level, message, error) {\r\n        var loggerName = this.loggerFullName;\r\n        if (level === \"error\" && !error) {\r\n            var e = new Error();\r\n            if (e.stack) {\r\n                message =\r\n                    message +\r\n                        \"\\n\" +\r\n                        e.stack\r\n                            .split(\"\\n\")\r\n                            .slice(3)\r\n                            .join(\"\\n\");\r\n            }\r\n        }\r\n        if (this.canPublish(level, this.publishLevel())) {\r\n            var interop = Logger.Interop;\r\n            if (interop) {\r\n                try {\r\n                    if (interop.methods({ name: Logger.InteropMethodName }).length > 0) {\r\n                        interop.invoke(Logger.InteropMethodName, {\r\n                            msg: \"\" + message,\r\n                            logger: loggerName,\r\n                            level: level\r\n                        });\r\n                    }\r\n                }\r\n                catch (_a) {\r\n                }\r\n            }\r\n        }\r\n        if (this.canPublish(level)) {\r\n            var prefix = \"\";\r\n            if (this.includeTimeAndLevel) {\r\n                var date = new Date();\r\n                var time = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds() + \":\" + date.getMilliseconds();\r\n                prefix = \"[\" + time + \"] [\" + level + \"] \";\r\n            }\r\n            var toPrint = \"\" + prefix + loggerName + \": \" + message;\r\n            switch (level) {\r\n                case \"trace\":\r\n                    this.logFn.debug(toPrint);\r\n                    break;\r\n                case \"debug\":\r\n                    if (this.logFn.debug) {\r\n                        this.logFn.debug(toPrint);\r\n                    }\r\n                    else {\r\n                        this.logFn.log(toPrint);\r\n                    }\r\n                    break;\r\n                case \"info\":\r\n                    this.logFn.info(toPrint);\r\n                    break;\r\n                case \"warn\":\r\n                    this.logFn.warn(toPrint);\r\n                    break;\r\n                case \"error\":\r\n                    this.logFn.error(toPrint, error);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    Logger.InteropMethodName = \"T42.AppLogger.Log\";\r\n    return Logger;\r\n}());\n\nvar GW_MESSAGE_CREATE_CONTEXT = \"create-context\";\r\nvar GW_MESSAGE_ACTIVITY_CREATED = \"created\";\r\nvar GW_MESSAGE_ACTIVITY_DESTROYED = \"destroyed\";\r\nvar GW_MESSAGE_CONTEXT_CREATED = \"context-created\";\r\nvar GW_MESSAGE_CONTEXT_ADDED = \"context-added\";\r\nvar GW_MESSAGE_SUBSCRIBE_CONTEXT = \"subscribe-context\";\r\nvar GW_MESSAGE_SUBSCRIBED_CONTEXT = \"subscribed-context\";\r\nvar GW_MESSAGE_UNSUBSCRIBE_CONTEXT = \"unsubscribe-context\";\r\nvar GW_MESSAGE_DESTROY_CONTEXT = \"destroy-context\";\r\nvar GW_MESSAGE_CONTEXT_DESTROYED = \"context-destroyed\";\r\nvar GW_MESSAGE_UPDATE_CONTEXT = \"update-context\";\r\nvar GW_MESSAGE_CONTEXT_UPDATED = \"context-updated\";\r\nvar GW_MESSAGE_JOINED_ACTIVITY = \"joined\";\n\nvar ContextMessageReplaySpec = {\r\n    get name() {\r\n        return \"context\";\r\n    },\r\n    get types() {\r\n        return [\r\n            GW_MESSAGE_CREATE_CONTEXT,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_DESTROY_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_UPDATE_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_JOINED_ACTIVITY\r\n        ];\r\n    }\r\n};\n\nvar version = \"5.6.3\";\n\nfunction prepareConfig (configuration, ext, glue42gd) {\r\n    var _a, _b, _c, _d, _e;\r\n    var nodeStartingContext;\r\n    if (Utils.isNode()) {\r\n        var startingContextString = process.env._GD_STARTING_CONTEXT_;\r\n        if (startingContextString) {\r\n            try {\r\n                nodeStartingContext = JSON.parse(startingContextString);\r\n            }\r\n            catch (_f) {\r\n            }\r\n        }\r\n    }\r\n    function getConnection() {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        var gwConfig = configuration.gateway;\r\n        var protocolVersion = (_a = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.protocolVersion) !== null && _a !== void 0 ? _a : 3;\r\n        var reconnectInterval = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectInterval;\r\n        var reconnectAttempts = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectAttempts;\r\n        var defaultWs = \"ws://localhost:8385\";\r\n        var ws = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.ws;\r\n        var sharedWorker = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.sharedWorker;\r\n        var inproc = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.inproc;\r\n        var webPlatform = (_b = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.webPlatform) !== null && _b !== void 0 ? _b : undefined;\r\n        if (glue42gd) {\r\n            ws = glue42gd.gwURL;\r\n        }\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwURL) {\r\n            ws = nodeStartingContext.gwURL;\r\n        }\r\n        if (!ws && !sharedWorker && !inproc) {\r\n            ws = defaultWs;\r\n        }\r\n        var instanceId;\r\n        var windowId;\r\n        var pid;\r\n        var environment;\r\n        var region;\r\n        var appName = getApplication();\r\n        var uniqueAppName = appName;\r\n        if (typeof glue42gd !== \"undefined\") {\r\n            windowId = glue42gd.windowId;\r\n            pid = glue42gd.pid;\r\n            if (glue42gd.env) {\r\n                environment = glue42gd.env.env;\r\n                region = glue42gd.env.region;\r\n            }\r\n            uniqueAppName = (_c = glue42gd.application) !== null && _c !== void 0 ? _c : \"glue-app\";\r\n            instanceId = glue42gd.appInstanceId;\r\n        }\r\n        else if (Utils.isNode()) {\r\n            pid = process.pid;\r\n            if (nodeStartingContext) {\r\n                environment = nodeStartingContext.env;\r\n                region = nodeStartingContext.region;\r\n                instanceId = nodeStartingContext.instanceId;\r\n            }\r\n        }\r\n        else if (typeof (window === null || window === void 0 ? void 0 : window.glue42electron) !== \"undefined\") {\r\n            windowId = window === null || window === void 0 ? void 0 : window.glue42electron.instanceId;\r\n            pid = window === null || window === void 0 ? void 0 : window.glue42electron.pid;\r\n            environment = window === null || window === void 0 ? void 0 : window.glue42electron.env;\r\n            region = window === null || window === void 0 ? void 0 : window.glue42electron.region;\r\n            uniqueAppName = (_d = window === null || window === void 0 ? void 0 : window.glue42electron.application) !== null && _d !== void 0 ? _d : \"glue-app\";\r\n            instanceId = window === null || window === void 0 ? void 0 : window.glue42electron.instanceId;\r\n        }\r\n        else ;\r\n        var replaySpecs = (_f = (_e = configuration.gateway) === null || _e === void 0 ? void 0 : _e.replaySpecs) !== null && _f !== void 0 ? _f : [];\r\n        replaySpecs.push(ContextMessageReplaySpec);\r\n        var identity = {\r\n            application: uniqueAppName,\r\n            applicationName: appName,\r\n            windowId: windowId,\r\n            instance: instanceId,\r\n            process: pid,\r\n            region: region,\r\n            environment: environment,\r\n            api: ext.version || version\r\n        };\r\n        if (configuration.identity) {\r\n            identity = Object.assign(identity, configuration.identity);\r\n        }\r\n        return {\r\n            identity: identity,\r\n            reconnectInterval: reconnectInterval,\r\n            ws: ws,\r\n            sharedWorker: sharedWorker,\r\n            webPlatform: webPlatform,\r\n            inproc: inproc,\r\n            protocolVersion: protocolVersion,\r\n            reconnectAttempts: reconnectAttempts,\r\n            replaySpecs: replaySpecs,\r\n        };\r\n    }\r\n    function getApplication() {\r\n        if (configuration.application) {\r\n            return configuration.application;\r\n        }\r\n        if (glue42gd) {\r\n            return glue42gd.applicationName;\r\n        }\r\n        if (typeof window !== \"undefined\" && typeof window.glue42electron !== \"undefined\") {\r\n            return window.glue42electron.application;\r\n        }\r\n        var uid = shortid();\r\n        if (Utils.isNode()) {\r\n            if (nodeStartingContext) {\r\n                return nodeStartingContext.applicationConfig.name;\r\n            }\r\n            return \"NodeJS\" + uid;\r\n        }\r\n        if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\r\n            return document.title + (\" (\" + uid + \")\");\r\n        }\r\n        return uid;\r\n    }\r\n    function getAuth() {\r\n        var _a, _b, _c;\r\n        if (typeof configuration.auth === \"string\") {\r\n            return {\r\n                token: configuration.auth\r\n            };\r\n        }\r\n        if (configuration.auth) {\r\n            return configuration.auth;\r\n        }\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwToken) {\r\n            return {\r\n                gatewayToken: nodeStartingContext.gwToken\r\n            };\r\n        }\r\n        if (((_a = configuration.gateway) === null || _a === void 0 ? void 0 : _a.webPlatform) || ((_b = configuration.gateway) === null || _b === void 0 ? void 0 : _b.inproc) || ((_c = configuration.gateway) === null || _c === void 0 ? void 0 : _c.sharedWorker)) {\r\n            return {\r\n                username: \"glue42\", password: \"glue42\"\r\n            };\r\n        }\r\n    }\r\n    function getLogger() {\r\n        var _a, _b;\r\n        var config = configuration.logger;\r\n        var defaultLevel = \"warn\";\r\n        if (!config) {\r\n            config = defaultLevel;\r\n        }\r\n        var gdConsoleLevel;\r\n        if (glue42gd) {\r\n            gdConsoleLevel = glue42gd.consoleLogLevel;\r\n        }\r\n        if (typeof config === \"string\") {\r\n            return { console: gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config, publish: defaultLevel };\r\n        }\r\n        return {\r\n            console: (_a = gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config.console) !== null && _a !== void 0 ? _a : defaultLevel,\r\n            publish: (_b = config.publish) !== null && _b !== void 0 ? _b : defaultLevel\r\n        };\r\n    }\r\n    var connection = getConnection();\r\n    var application = getApplication();\r\n    if (typeof window !== \"undefined\") {\r\n        var windowAsAny = window;\r\n        var containerApplication = windowAsAny.htmlContainer ?\r\n            windowAsAny.htmlContainer.containerName + \".\" + windowAsAny.htmlContainer.application : (_a = windowAsAny === null || windowAsAny === void 0 ? void 0 : windowAsAny.glue42gd) === null || _a === void 0 ? void 0 : _a.application;\r\n        if (containerApplication) {\r\n            application = containerApplication;\r\n        }\r\n    }\r\n    return {\r\n        bus: (_b = configuration.bus) !== null && _b !== void 0 ? _b : false,\r\n        application: application,\r\n        auth: getAuth(),\r\n        logger: getLogger(),\r\n        connection: connection,\r\n        metrics: (_c = configuration.metrics) !== null && _c !== void 0 ? _c : true,\r\n        contexts: (_d = configuration.contexts) !== null && _d !== void 0 ? _d : true,\r\n        version: ext.version || version,\r\n        libs: (_e = ext.libs) !== null && _e !== void 0 ? _e : [],\r\n        customLogger: configuration.customLogger\r\n    };\r\n}\n\nvar GW3ContextData = (function () {\r\n    function GW3ContextData(contextId, name, isAnnounced, activityId) {\r\n        this.updateCallbacks = {};\r\n        this.contextId = contextId;\r\n        this.name = name;\r\n        this.isAnnounced = isAnnounced;\r\n        this.activityId = activityId;\r\n        this.context = {};\r\n    }\r\n    GW3ContextData.prototype.hasCallbacks = function () {\r\n        return Object.keys(this.updateCallbacks).length > 0;\r\n    };\r\n    GW3ContextData.prototype.getState = function () {\r\n        if (this.isAnnounced && this.hasCallbacks()) {\r\n            return 3;\r\n        }\r\n        if (this.isAnnounced) {\r\n            return 2;\r\n        }\r\n        if (this.hasCallbacks()) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n    return GW3ContextData;\r\n}());\n\nfunction applyContextDelta(context, delta, logger) {\r\n    try {\r\n        if (logger === null || logger === void 0 ? void 0 : logger.canPublish(\"trace\")) {\r\n            logger === null || logger === void 0 ? void 0 : logger.trace(\"applying context delta \" + JSON.stringify(delta) + \" on context \" + JSON.stringify(context));\r\n        }\r\n        if (!delta) {\r\n            return context;\r\n        }\r\n        if (delta.reset) {\r\n            context = __assign({}, delta.reset);\r\n            return context;\r\n        }\r\n        context = deepClone(context, undefined);\r\n        if (delta.commands) {\r\n            for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {\r\n                var command = _a[_i];\r\n                if (command.type === \"remove\") {\r\n                    deletePath(context, command.path);\r\n                }\r\n                else if (command.type === \"set\") {\r\n                    setValueToPath(context, command.value, command.path);\r\n                }\r\n            }\r\n            return context;\r\n        }\r\n        var added_1 = delta.added;\r\n        var updated_1 = delta.updated;\r\n        var removed = delta.removed;\r\n        if (added_1) {\r\n            Object.keys(added_1).forEach(function (key) {\r\n                context[key] = added_1[key];\r\n            });\r\n        }\r\n        if (updated_1) {\r\n            Object.keys(updated_1).forEach(function (key) {\r\n                mergeObjectsProperties(key, context, updated_1);\r\n            });\r\n        }\r\n        if (removed) {\r\n            removed.forEach(function (key) {\r\n                delete context[key];\r\n            });\r\n        }\r\n        return context;\r\n    }\r\n    catch (e) {\r\n        logger === null || logger === void 0 ? void 0 : logger.error(\"error applying context delta \" + JSON.stringify(delta) + \" on context \" + JSON.stringify(context), e);\r\n        return context;\r\n    }\r\n}\r\nfunction deepClone(obj, hash) {\r\n    hash = hash || new WeakMap();\r\n    if (Object(obj) !== obj) {\r\n        return obj;\r\n    }\r\n    if (obj instanceof Set) {\r\n        return new Set(obj);\r\n    }\r\n    if (hash.has(obj)) {\r\n        return hash.get(obj);\r\n    }\r\n    var result = obj instanceof Date ? new Date(obj)\r\n        : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\r\n            : obj.constructor ? new obj.constructor()\r\n                : Object.create(null);\r\n    hash.set(obj, result);\r\n    if (obj instanceof Map) {\r\n        Array.from(obj, function (_a) {\r\n            var key = _a[0], val = _a[1];\r\n            return result.set(key, deepClone(val, hash));\r\n        });\r\n    }\r\n    return Object.assign.apply(Object, __spreadArrays([result], Object.keys(obj).map(function (key) {\r\n        var _a;\r\n        return (_a = {}, _a[key] = deepClone(obj[key], hash), _a);\r\n    })));\r\n}\r\nvar mergeObjectsProperties = function (key, what, withWhat) {\r\n    var right = withWhat[key];\r\n    if (right === undefined) {\r\n        return what;\r\n    }\r\n    var left = what[key];\r\n    if (!left || !right) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    if (typeof left === \"string\" ||\r\n        typeof left === \"number\" ||\r\n        typeof left === \"boolean\" ||\r\n        typeof right === \"string\" ||\r\n        typeof right === \"number\" ||\r\n        typeof right === \"boolean\" ||\r\n        Array.isArray(left) ||\r\n        Array.isArray(right)) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    what[key] = Object.assign({}, left, right);\r\n    return what;\r\n};\r\nfunction deepEqual(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    if (!(x instanceof Object) || !(y instanceof Object)) {\r\n        return false;\r\n    }\r\n    if (x.constructor !== y.constructor) {\r\n        return false;\r\n    }\r\n    for (var p in x) {\r\n        if (!x.hasOwnProperty(p)) {\r\n            continue;\r\n        }\r\n        if (!y.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n        if (x[p] === y[p]) {\r\n            continue;\r\n        }\r\n        if (typeof (x[p]) !== \"object\") {\r\n            return false;\r\n        }\r\n        if (!deepEqual(x[p], y[p])) {\r\n            return false;\r\n        }\r\n    }\r\n    for (var p in y) {\r\n        if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction setValueToPath(obj, value, path) {\r\n    var pathArr = path.split(\".\");\r\n    var i;\r\n    for (i = 0; i < pathArr.length - 1; i++) {\r\n        if (!obj[pathArr[i]]) {\r\n            obj[pathArr[i]] = {};\r\n        }\r\n        if (typeof obj[pathArr[i]] !== \"object\") {\r\n            obj[pathArr[i]] = {};\r\n        }\r\n        obj = obj[pathArr[i]];\r\n    }\r\n    obj[pathArr[i]] = value;\r\n}\r\nfunction isSubset(superObj, subObj) {\r\n    return Object.keys(subObj).every(function (ele) {\r\n        if (typeof subObj[ele] === \"object\") {\r\n            return isSubset((superObj === null || superObj === void 0 ? void 0 : superObj[ele]) || {}, subObj[ele] || {});\r\n        }\r\n        return subObj[ele] === (superObj === null || superObj === void 0 ? void 0 : superObj[ele]);\r\n    });\r\n}\r\nfunction deletePath(obj, path) {\r\n    var pathArr = path.split(\".\");\r\n    var i;\r\n    for (i = 0; i < pathArr.length - 1; i++) {\r\n        if (!obj[pathArr[i]]) {\r\n            return;\r\n        }\r\n        obj = obj[pathArr[i]];\r\n    }\r\n    delete obj[pathArr[i]];\r\n}\n\nvar GW3Bridge = (function () {\r\n    function GW3Bridge(config) {\r\n        var _this = this;\r\n        var _a;\r\n        this._contextNameToData = {};\r\n        this._gw3Subscriptions = [];\r\n        this._nextCallbackSubscriptionNumber = 0;\r\n        this._contextNameToId = {};\r\n        this._contextIdToName = {};\r\n        this._protocolVersion = undefined;\r\n        this._connection = config.connection;\r\n        this._logger = config.logger;\r\n        this._gw3Session = this._connection.domain(\"global\", [\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n        ]);\r\n        this.subscribeToContextCreatedMessages();\r\n        this.subscribeToContextUpdatedMessages();\r\n        this.subscribeToContextDestroyedMessages();\r\n        (_a = this._connection.replayer) === null || _a === void 0 ? void 0 : _a.drain(ContextMessageReplaySpec.name, function (message) {\r\n            var type = message.type;\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if (type === GW_MESSAGE_CONTEXT_CREATED ||\r\n                type === GW_MESSAGE_CONTEXT_ADDED ||\r\n                type === GW_MESSAGE_ACTIVITY_CREATED) {\r\n                _this.handleContextCreatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT ||\r\n                type === GW_MESSAGE_CONTEXT_UPDATED ||\r\n                type === GW_MESSAGE_JOINED_ACTIVITY) {\r\n                _this.handleContextUpdatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_CONTEXT_DESTROYED ||\r\n                type === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n                _this.handleContextDestroyedMessage(message);\r\n            }\r\n        });\r\n    }\r\n    Object.defineProperty(GW3Bridge.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            var _a;\r\n            if (!this._protocolVersion) {\r\n                var contextsDomainInfo = this._connection.availableDomains.find(function (d) { return d.uri === \"context\"; });\r\n                this._protocolVersion = (_a = contextsDomainInfo === null || contextsDomainInfo === void 0 ? void 0 : contextsDomainInfo.version) !== null && _a !== void 0 ? _a : 1;\r\n            }\r\n            return this._protocolVersion;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GW3Bridge.prototype, \"setPathSupported\", {\r\n        get: function () {\r\n            return this.protocolVersion >= 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GW3Bridge.prototype.dispose = function () {\r\n        for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {\r\n            var sub = _a[_i];\r\n            this._connection.off(sub);\r\n        }\r\n        this._gw3Subscriptions.length = 0;\r\n        for (var contextName in this._contextNameToData) {\r\n            if (this._contextNameToId.hasOwnProperty(contextName)) {\r\n                delete this._contextNameToData[contextName];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.createContext = function (name, data) {\r\n        var _this = this;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_CREATE_CONTEXT,\r\n            domain: \"global\",\r\n            name: name,\r\n            data: data,\r\n            lifetime: \"retained\",\r\n        })\r\n            .then(function (createContextMsg) {\r\n            _this._contextNameToId[name] = createContextMsg.context_id;\r\n            _this._contextIdToName[createContextMsg.context_id] = name;\r\n            var contextData = _this._contextNameToData[name] || new GW3ContextData(createContextMsg.context_id, name, true, undefined);\r\n            contextData.isAnnounced = true;\r\n            contextData.name = name;\r\n            contextData.contextId = createContextMsg.context_id;\r\n            contextData.context = createContextMsg.data || data;\r\n            contextData.hasReceivedSnapshot = true;\r\n            _this._contextNameToData[name] = contextData;\r\n            return createContextMsg.context_id;\r\n        });\r\n    };\r\n    GW3Bridge.prototype.all = function () {\r\n        var _this = this;\r\n        return Object.keys(this._contextNameToData)\r\n            .filter(function (name) { return _this._contextNameToData[name].isAnnounced; });\r\n    };\r\n    GW3Bridge.prototype.update = function (name, delta) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contextData, currentContext, calculatedDelta;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        contextData = this._contextNameToData[name];\r\n                        if (!contextData || !contextData.isAnnounced) {\r\n                            return [2, this.createContext(name, delta)];\r\n                        }\r\n                        currentContext = contextData.context;\r\n                        if (!!contextData.hasCallbacks()) return [3, 2];\r\n                        return [4, this.get(contextData.name)];\r\n                    case 1:\r\n                        currentContext = _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        calculatedDelta = this.protocolVersion === 2 ?\r\n                            this.calculateContextDeltaV2(currentContext, delta) :\r\n                            this.calculateContextDeltaV1(currentContext, delta);\r\n                        if (!Object.keys(calculatedDelta.added).length\r\n                            && !Object.keys(calculatedDelta.updated).length\r\n                            && !calculatedDelta.removed.length\r\n                            && !((_a = calculatedDelta.commands) === null || _a === void 0 ? void 0 : _a.length)) {\r\n                            return [2, Promise.resolve()];\r\n                        }\r\n                        return [2, this._gw3Session\r\n                                .send({\r\n                                type: GW_MESSAGE_UPDATE_CONTEXT,\r\n                                domain: \"global\",\r\n                                context_id: contextData.contextId,\r\n                                delta: calculatedDelta,\r\n                            }, {}, { skipPeerId: false })\r\n                                .then(function (gwResponse) {\r\n                                _this.handleUpdated(contextData, calculatedDelta, {\r\n                                    updaterId: gwResponse.peer_id\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.set = function (name, data) {\r\n        var _this = this;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return this.createContext(name, data);\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { reset: data },\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.setPath = function (name, path, value) {\r\n        if (!this.setPathSupported) {\r\n            return Promise.reject(\"glue.contexts.setPath operation is not supported, use Glue42 3.10 or later\");\r\n        }\r\n        return this.setPaths(name, [{ path: path, value: value }]);\r\n    };\r\n    GW3Bridge.prototype.setPaths = function (name, pathValues) {\r\n        var _this = this;\r\n        if (!this.setPathSupported) {\r\n            return Promise.reject(\"glue.contexts.setPaths operation is not supported, use Glue42 3.10 or later\");\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            var obj = {};\r\n            for (var _i = 0, pathValues_1 = pathValues; _i < pathValues_1.length; _i++) {\r\n                var pathValue = pathValues_1[_i];\r\n                setValueToPath(obj, pathValue.value, pathValue.path);\r\n            }\r\n            return this.createContext(name, obj);\r\n        }\r\n        var commands = [];\r\n        for (var _a = 0, pathValues_2 = pathValues; _a < pathValues_2.length; _a++) {\r\n            var pathValue = pathValues_2[_a];\r\n            if (pathValue.value === null) {\r\n                commands.push({ type: \"remove\", path: pathValue.path });\r\n            }\r\n            else {\r\n                commands.push({ type: \"set\", path: pathValue.path, value: pathValue.value });\r\n            }\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { commands: commands }\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { added: {}, removed: [], updated: {}, commands: commands }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.get = function (name) {\r\n        var _this = this;\r\n        var _a;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return Promise.resolve({});\r\n        }\r\n        if (contextData && (!contextData.hasCallbacks() || !contextData.hasReceivedSnapshot)) {\r\n            return new Promise(function (resolve, _) { return __awaiter(_this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    this.subscribe(name, function (data, _d, _r, un) {\r\n                        _this.unsubscribe(un);\r\n                        resolve(data);\r\n                    });\r\n                    return [2];\r\n                });\r\n            }); });\r\n        }\r\n        var context = (_a = contextData === null || contextData === void 0 ? void 0 : contextData.context) !== null && _a !== void 0 ? _a : {};\r\n        return Promise.resolve(context);\r\n    };\r\n    GW3Bridge.prototype.subscribe = function (name, callback) {\r\n        var thisCallbackSubscriptionNumber = this._nextCallbackSubscriptionNumber;\r\n        this._nextCallbackSubscriptionNumber += 1;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData ||\r\n            !contextData.isAnnounced) {\r\n            contextData = contextData || new GW3ContextData(undefined, name, false, undefined);\r\n            this._contextNameToData[name] = contextData;\r\n            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n        var hadCallbacks = contextData.hasCallbacks();\r\n        contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n        if (!hadCallbacks) {\r\n            if (!contextData.joinedActivity) {\r\n                if (contextData.context && contextData.sentExplicitSubscription) {\r\n                    if (contextData.hasReceivedSnapshot) {\r\n                        var clone = deepClone(contextData.context);\r\n                        callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n                    }\r\n                    return Promise.resolve(thisCallbackSubscriptionNumber);\r\n                }\r\n                return this.sendSubscribe(contextData)\r\n                    .then(function () { return thisCallbackSubscriptionNumber; });\r\n            }\r\n            else {\r\n                if (contextData.hasReceivedSnapshot) {\r\n                    var clone = deepClone(contextData.context);\r\n                    callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n                }\r\n                return Promise.resolve(thisCallbackSubscriptionNumber);\r\n            }\r\n        }\r\n        else {\r\n            if (contextData.hasReceivedSnapshot) {\r\n                var clone = deepClone(contextData.context);\r\n                callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n            }\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.unsubscribe = function (subscriptionKey) {\r\n        for (var _i = 0, _a = Object.keys(this._contextNameToData); _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var contextId = this._contextNameToId[name_1];\r\n            var contextData = this._contextNameToData[name_1];\r\n            if (!contextData) {\r\n                return;\r\n            }\r\n            var hadCallbacks = contextData.hasCallbacks();\r\n            delete contextData.updateCallbacks[subscriptionKey];\r\n            if (contextData.isAnnounced &&\r\n                hadCallbacks &&\r\n                !contextData.hasCallbacks() &&\r\n                contextData.sentExplicitSubscription) {\r\n                this.sendUnsubscribe(contextData);\r\n            }\r\n            if (!contextData.isAnnounced &&\r\n                !contextData.hasCallbacks()) {\r\n                delete this._contextNameToData[name_1];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.destroy = function (name) {\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData) {\r\n            return Promise.reject(\"context with \" + name + \" does not exist\");\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_DESTROY_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.handleUpdated = function (contextData, delta, extraData) {\r\n        var oldContext = contextData.context;\r\n        contextData.context = applyContextDelta(contextData.context, delta, this._logger);\r\n        contextData.hasReceivedSnapshot = true;\r\n        if (this._contextNameToData[contextData.name] === contextData &&\r\n            !deepEqual(oldContext, contextData.context)) {\r\n            this.invokeUpdateCallbacks(contextData, delta, extraData);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextCreatedMessages = function () {\r\n        var createdMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n        ];\r\n        for (var _i = 0, createdMessageTypes_1 = createdMessageTypes; _i < createdMessageTypes_1.length; _i++) {\r\n            var createdMessageType = createdMessageTypes_1[_i];\r\n            var sub = this._connection.on(createdMessageType, this.handleContextCreatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextCreatedMessage = function (contextCreatedMsg) {\r\n        var createdMessageType = contextCreatedMsg.type;\r\n        if (createdMessageType === GW_MESSAGE_ACTIVITY_CREATED) {\r\n            this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;\r\n        }\r\n        else if (createdMessageType === GW_MESSAGE_CONTEXT_ADDED) {\r\n            this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;\r\n        }\r\n        else ;\r\n        var name = this._contextIdToName[contextCreatedMsg.context_id];\r\n        if (!name) {\r\n            throw new Error(\"Received created event for context with unknown name: \" + contextCreatedMsg.context_id);\r\n        }\r\n        if (!this._contextNameToId[name]) {\r\n            throw new Error(\"Received created event for context with unknown id: \" + contextCreatedMsg.context_id);\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (contextData) {\r\n            if (contextData.isAnnounced) {\r\n                return;\r\n            }\r\n            else {\r\n                if (!contextData.hasCallbacks()) {\r\n                    throw new Error(\"Assertion failure: contextData.hasCallbacks()\");\r\n                }\r\n                contextData.isAnnounced = true;\r\n                contextData.contextId = contextCreatedMsg.context_id;\r\n                contextData.activityId = contextCreatedMsg.activity_id;\r\n                if (!contextData.sentExplicitSubscription) {\r\n                    this.sendSubscribe(contextData);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._contextNameToData[name] = contextData =\r\n                new GW3ContextData(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextUpdatedMessages = function () {\r\n        var updatedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_JOINED_ACTIVITY,\r\n        ];\r\n        for (var _i = 0, updatedMessageTypes_1 = updatedMessageTypes; _i < updatedMessageTypes_1.length; _i++) {\r\n            var updatedMessageType = updatedMessageTypes_1[_i];\r\n            var sub = this._connection.on(updatedMessageType, this.handleContextUpdatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextUpdatedMessage = function (contextUpdatedMsg) {\r\n        var updatedMessageType = contextUpdatedMsg.type;\r\n        var contextId = contextUpdatedMsg.context_id;\r\n        var contextData = this._contextNameToData[this._contextIdToName[contextId]];\r\n        var justSeen = !contextData || !contextData.isAnnounced;\r\n        if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            if (!contextData) {\r\n                contextData = new GW3ContextData(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);\r\n                this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;\r\n                this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;\r\n                this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;\r\n            }\r\n            else {\r\n                contextData.contextId = contextId;\r\n                contextData.isAnnounced = true;\r\n                contextData.activityId = contextUpdatedMsg.activity_id;\r\n            }\r\n            contextData.joinedActivity = true;\r\n        }\r\n        else {\r\n            if (!contextData || !contextData.isAnnounced) {\r\n                if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n                    contextData = contextData || new GW3ContextData(contextId, contextUpdatedMsg.name, true, undefined);\r\n                    contextData.sentExplicitSubscription = true;\r\n                    this._contextNameToData[contextUpdatedMsg.name] = contextData;\r\n                    this._contextIdToName[contextId] = contextUpdatedMsg.name;\r\n                    this._contextNameToId[contextUpdatedMsg.name] = contextId;\r\n                }\r\n                else {\r\n                    this._logger.error(\"Received 'update' for unknown context: \" + contextId);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        var oldContext = contextData.context;\r\n        contextData.hasReceivedSnapshot = true;\r\n        if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            contextData.context = contextUpdatedMsg.data || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            contextData.context = contextUpdatedMsg.context_snapshot || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_CONTEXT_UPDATED) {\r\n            contextData.context = applyContextDelta(contextData.context, contextUpdatedMsg.delta, this._logger);\r\n        }\r\n        else {\r\n            throw new Error(\"Unrecognized context update message \" + updatedMessageType);\r\n        }\r\n        if (justSeen ||\r\n            !deepEqual(contextData.context, oldContext) ||\r\n            updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            this.invokeUpdateCallbacks(contextData, contextUpdatedMsg.delta, { updaterId: contextUpdatedMsg.updater_id });\r\n        }\r\n    };\r\n    GW3Bridge.prototype.invokeUpdateCallbacks = function (contextData, delta, extraData) {\r\n        delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };\r\n        if (delta.commands) {\r\n            delta.added = delta.updated = delta.reset = {};\r\n            delta.removed = [];\r\n            for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {\r\n                var command = _a[_i];\r\n                if (command.type === \"remove\") {\r\n                    if (command.path.indexOf(\".\") === -1) {\r\n                        delta.removed.push(command.path);\r\n                    }\r\n                    setValueToPath(delta.updated, null, command.path);\r\n                }\r\n                else if (command.type === \"set\") {\r\n                    setValueToPath(delta.updated, command.value, command.path);\r\n                }\r\n            }\r\n        }\r\n        for (var updateCallbackIndex in contextData.updateCallbacks) {\r\n            if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {\r\n                try {\r\n                    var updateCallback = contextData.updateCallbacks[updateCallbackIndex];\r\n                    updateCallback(deepClone(contextData.context), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex, 10), extraData);\r\n                }\r\n                catch (err) {\r\n                    this._logger.debug(\"callback error: \" + JSON.stringify(err));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextDestroyedMessages = function () {\r\n        var destroyedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n        ];\r\n        for (var _i = 0, destroyedMessageTypes_1 = destroyedMessageTypes; _i < destroyedMessageTypes_1.length; _i++) {\r\n            var destroyedMessageType = destroyedMessageTypes_1[_i];\r\n            var sub = this._connection.on(destroyedMessageType, this.handleContextDestroyedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextDestroyedMessage = function (destroyedMsg) {\r\n        var destroyedMessageType = destroyedMsg.type;\r\n        var contextId;\r\n        var name;\r\n        if (destroyedMessageType === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n            name = destroyedMsg.activity_id;\r\n            contextId = this._contextNameToId[name];\r\n            if (!contextId) {\r\n                this._logger.error(\"Received 'destroyed' for unknown activity: \" + destroyedMsg.activity_id);\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            contextId = destroyedMsg.context_id;\r\n            name = this._contextIdToName[contextId];\r\n            if (!name) {\r\n                this._logger.error(\"Received 'destroyed' for unknown context: \" + destroyedMsg.context_id);\r\n                return;\r\n            }\r\n        }\r\n        delete this._contextIdToName[contextId];\r\n        delete this._contextNameToId[name];\r\n        var contextData = this._contextNameToData[name];\r\n        delete this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            this._logger.error(\"Received 'destroyed' for unknown context: \" + contextId);\r\n            return;\r\n        }\r\n    };\r\n    GW3Bridge.prototype.sendSubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = true;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.sendUnsubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = false;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.calculateContextDeltaV1 = function (from, to) {\r\n        var delta = { added: {}, updated: {}, removed: [], reset: undefined };\r\n        if (from) {\r\n            for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n                var x = _a[_i];\r\n                if (Object.keys(to).indexOf(x) !== -1\r\n                    && to[x] !== null\r\n                    && !deepEqual(from[x], to[x])) {\r\n                    delta.updated[x] = to[x];\r\n                }\r\n            }\r\n        }\r\n        for (var _b = 0, _c = Object.keys(to); _b < _c.length; _b++) {\r\n            var x = _c[_b];\r\n            if (!from || (Object.keys(from).indexOf(x) === -1)) {\r\n                if (to[x] !== null) {\r\n                    delta.added[x] = to[x];\r\n                }\r\n            }\r\n            else if (to[x] === null) {\r\n                delta.removed.push(x);\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    GW3Bridge.prototype.calculateContextDeltaV2 = function (from, to) {\r\n        var _a, _b;\r\n        var delta = { added: {}, updated: {}, removed: [], reset: undefined, commands: [] };\r\n        for (var _i = 0, _c = Object.keys(to); _i < _c.length; _i++) {\r\n            var x = _c[_i];\r\n            if (to[x] !== null) {\r\n                var fromX = from ? from[x] : null;\r\n                if (!deepEqual(fromX, to[x])) {\r\n                    (_a = delta.commands) === null || _a === void 0 ? void 0 : _a.push({ type: \"set\", path: x, value: to[x] });\r\n                }\r\n            }\r\n            else {\r\n                (_b = delta.commands) === null || _b === void 0 ? void 0 : _b.push({ type: \"remove\", path: x });\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    return GW3Bridge;\r\n}());\n\nvar ContextsModule = (function () {\r\n    function ContextsModule(config) {\r\n        this._bridge = new GW3Bridge(config);\r\n    }\r\n    ContextsModule.prototype.all = function () {\r\n        return this._bridge.all();\r\n    };\r\n    ContextsModule.prototype.update = function (name, data) {\r\n        this.checkName(name);\r\n        this.checkData(data);\r\n        return this._bridge.update(name, data);\r\n    };\r\n    ContextsModule.prototype.set = function (name, data) {\r\n        this.checkName(name);\r\n        this.checkData(data);\r\n        return this._bridge.set(name, data);\r\n    };\r\n    ContextsModule.prototype.setPath = function (name, path, data) {\r\n        this.checkName(name);\r\n        this.checkPath(path);\r\n        var isTopLevelPath = path === \"\";\r\n        if (isTopLevelPath) {\r\n            this.checkData(data);\r\n            return this.set(name, data);\r\n        }\r\n        return this._bridge.setPath(name, path, data);\r\n    };\r\n    ContextsModule.prototype.setPaths = function (name, paths) {\r\n        this.checkName(name);\r\n        if (!Array.isArray(paths)) {\r\n            throw new Error(\"Please provide the paths as an array of PathValues!\");\r\n        }\r\n        for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {\r\n            var _a = paths_1[_i], path = _a.path, value = _a.value;\r\n            this.checkPath(path);\r\n            var isTopLevelPath = path === \"\";\r\n            if (isTopLevelPath) {\r\n                this.checkData(value);\r\n            }\r\n        }\r\n        return this._bridge.setPaths(name, paths);\r\n    };\r\n    ContextsModule.prototype.subscribe = function (name, callback) {\r\n        var _this = this;\r\n        this.checkName(name);\r\n        if (typeof callback !== \"function\") {\r\n            throw new Error(\"Please provide the callback as a function!\");\r\n        }\r\n        return this._bridge\r\n            .subscribe(name, function (data, delta, removed, key, extraData) { return callback(data, delta, removed, function () { return _this._bridge.unsubscribe(key); }, extraData); })\r\n            .then(function (key) {\r\n            return function () {\r\n                _this._bridge.unsubscribe(key);\r\n            };\r\n        });\r\n    };\r\n    ContextsModule.prototype.get = function (name) {\r\n        this.checkName(name);\r\n        return this._bridge.get(name);\r\n    };\r\n    ContextsModule.prototype.ready = function () {\r\n        return Promise.resolve(this);\r\n    };\r\n    ContextsModule.prototype.destroy = function (name) {\r\n        this.checkName(name);\r\n        return this._bridge.destroy(name);\r\n    };\r\n    Object.defineProperty(ContextsModule.prototype, \"setPathSupported\", {\r\n        get: function () {\r\n            return this._bridge.setPathSupported;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ContextsModule.prototype.checkName = function (name) {\r\n        if (typeof name !== \"string\" || name === \"\") {\r\n            throw new Error(\"Please provide the name as a non-empty string!\");\r\n        }\r\n    };\r\n    ContextsModule.prototype.checkPath = function (path) {\r\n        if (typeof path !== \"string\") {\r\n            throw new Error(\"Please provide the path as a dot delimited string!\");\r\n        }\r\n    };\r\n    ContextsModule.prototype.checkData = function (data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Please provide the data as an object!\");\r\n        }\r\n    };\r\n    return ContextsModule;\r\n}());\n\nfunction promisify (promise, successCallback, errorCallback) {\r\n    if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\r\n        return promise;\r\n    }\r\n    if (typeof successCallback !== \"function\") {\r\n        successCallback = function () { };\r\n    }\r\n    else if (typeof errorCallback !== \"function\") {\r\n        errorCallback = function () { };\r\n    }\r\n    return promise.then(successCallback, errorCallback);\r\n}\n\nfunction rejectAfter(ms, promise, error) {\r\n    if (ms === void 0) { ms = 0; }\r\n    var timeout;\r\n    var clearTimeoutIfThere = function () {\r\n        if (timeout) {\r\n            clearTimeout(timeout);\r\n        }\r\n    };\r\n    promise\r\n        .then(function () {\r\n        clearTimeoutIfThere();\r\n    })\r\n        .catch(function () {\r\n        clearTimeoutIfThere();\r\n    });\r\n    return new Promise(function (resolve, reject) {\r\n        timeout = setTimeout(function () { return reject(error); }, ms);\r\n    });\r\n}\n\nvar InvokeStatus;\r\n(function (InvokeStatus) {\r\n    InvokeStatus[InvokeStatus[\"Success\"] = 0] = \"Success\";\r\n    InvokeStatus[InvokeStatus[\"Error\"] = 1] = \"Error\";\r\n})(InvokeStatus || (InvokeStatus = {}));\r\nvar Client = (function () {\r\n    function Client(protocol, repo, instance, configuration) {\r\n        this.protocol = protocol;\r\n        this.repo = repo;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n    }\r\n    Client.prototype.subscribe = function (method, options, successCallback, errorCallback, existingSub) {\r\n        var _this = this;\r\n        var callProtocolSubscribe = function (targetServers, stream, successProxy, errorProxy) {\r\n            var _a;\r\n            options.methodResponseTimeout = (_a = options.methodResponseTimeout) !== null && _a !== void 0 ? _a : options.waitTimeoutMs;\r\n            _this.protocol.client.subscribe(stream, options, targetServers, successProxy, errorProxy, existingSub);\r\n        };\r\n        var promise = new Promise(function (resolve, reject) {\r\n            var successProxy = function (sub) {\r\n                resolve(sub);\r\n            };\r\n            var errorProxy = function (err) {\r\n                reject(err);\r\n            };\r\n            if (!method) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n                return;\r\n            }\r\n            var methodDef;\r\n            if (typeof method === \"string\") {\r\n                methodDef = { name: method };\r\n            }\r\n            else {\r\n                methodDef = method;\r\n            }\r\n            if (!methodDef.name) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n                return;\r\n            }\r\n            if (options === undefined) {\r\n                options = {};\r\n            }\r\n            var target = options.target;\r\n            if (target === undefined) {\r\n                target = \"best\";\r\n            }\r\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\") {\r\n                reject(new Error(\"\\\"\" + target + \"\\\" is not a valid target. Valid targets are \\\"all\\\", \\\"best\\\", or an instance.\"));\r\n                return;\r\n            }\r\n            if (options.methodResponseTimeout === undefined) {\r\n                options.methodResponseTimeout = options.method_response_timeout;\r\n                if (options.methodResponseTimeout === undefined) {\r\n                    options.methodResponseTimeout = _this.configuration.methodResponseTimeout;\r\n                }\r\n            }\r\n            if (options.waitTimeoutMs === undefined) {\r\n                options.waitTimeoutMs = options.wait_for_method_timeout;\r\n                if (options.waitTimeoutMs === undefined) {\r\n                    options.waitTimeoutMs = _this.configuration.waitTimeoutMs;\r\n                }\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n            if (currentServers.length > 0) {\r\n                callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);\r\n            }\r\n            else {\r\n                var retry_1 = function () {\r\n                    if (!target || !(options.waitTimeoutMs)) {\r\n                        return;\r\n                    }\r\n                    delayTillNow += delayStep;\r\n                    currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n                    if (currentServers.length > 0) {\r\n                        var streamInfo = currentServers[0].methods[0];\r\n                        callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);\r\n                    }\r\n                    else if (delayTillNow >= options.waitTimeoutMs) {\r\n                        var def = typeof method === \"string\" ? { name: method } : method;\r\n                        callProtocolSubscribe(currentServers, def, successProxy, errorProxy);\r\n                    }\r\n                    else {\r\n                        setTimeout(retry_1, delayStep);\r\n                    }\r\n                };\r\n                setTimeout(retry_1, delayStep);\r\n            }\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Client.prototype.servers = function (methodFilter) {\r\n        var filterCopy = methodFilter === undefined\r\n            ? undefined\r\n            : __assign({}, methodFilter);\r\n        return this.getServers(filterCopy).map(function (serverMethodMap) {\r\n            return serverMethodMap.server.instance;\r\n        });\r\n    };\r\n    Client.prototype.methods = function (methodFilter) {\r\n        if (typeof methodFilter === \"string\") {\r\n            methodFilter = { name: methodFilter };\r\n        }\r\n        else {\r\n            methodFilter = __assign({}, methodFilter);\r\n        }\r\n        return this.getMethods(methodFilter);\r\n    };\r\n    Client.prototype.methodsForInstance = function (instance) {\r\n        return this.getMethodsForInstance(instance);\r\n    };\r\n    Client.prototype.methodAdded = function (callback) {\r\n        return this.repo.onMethodAdded(callback);\r\n    };\r\n    Client.prototype.methodRemoved = function (callback) {\r\n        return this.repo.onMethodRemoved(callback);\r\n    };\r\n    Client.prototype.serverAdded = function (callback) {\r\n        return this.repo.onServerAdded(callback);\r\n    };\r\n    Client.prototype.serverRemoved = function (callback) {\r\n        return this.repo.onServerRemoved(function (server, reason) {\r\n            callback(server, reason);\r\n        });\r\n    };\r\n    Client.prototype.serverMethodAdded = function (callback) {\r\n        return this.repo.onServerMethodAdded(function (server, method) {\r\n            callback({ server: server, method: method });\r\n        });\r\n    };\r\n    Client.prototype.serverMethodRemoved = function (callback) {\r\n        return this.repo.onServerMethodRemoved(function (server, method) {\r\n            callback({ server: server, method: method });\r\n        });\r\n    };\r\n    Client.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var getInvokePromise;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                getInvokePromise = function () { return __awaiter(_this, void 0, void 0, function () {\r\n                    var methodDefinition, serversMethodMap, err_1, method, errorObj, timeout, additionalOptionsCopy, invokePromises, invocationMessages, results, allRejected;\r\n                    var _this = this;\r\n                    var _a, _b, _c;\r\n                    return __generator(this, function (_d) {\r\n                        switch (_d.label) {\r\n                            case 0:\r\n                                if (typeof methodFilter === \"string\") {\r\n                                    methodDefinition = { name: methodFilter };\r\n                                }\r\n                                else {\r\n                                    methodDefinition = __assign({}, methodFilter);\r\n                                }\r\n                                if (!methodDefinition.name) {\r\n                                    return [2, Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\")];\r\n                                }\r\n                                if (!argumentObj) {\r\n                                    argumentObj = {};\r\n                                }\r\n                                if (!target) {\r\n                                    target = \"best\";\r\n                                }\r\n                                if (typeof target === \"string\" && target !== \"all\" && target !== \"best\" && target !== \"skipMine\") {\r\n                                    return [2, Promise.reject(new Error(\"\\\"\" + target + \"\\\" is not a valid target. Valid targets are \\\"all\\\" and \\\"best\\\".\"))];\r\n                                }\r\n                                if (!additionalOptions) {\r\n                                    additionalOptions = {};\r\n                                }\r\n                                if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                    additionalOptions.methodResponseTimeoutMs = additionalOptions.method_response_timeout;\r\n                                    if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                        additionalOptions.methodResponseTimeoutMs = this.configuration.methodResponseTimeout;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                    additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;\r\n                                    if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                        additionalOptions.waitTimeoutMs = this.configuration.waitTimeoutMs;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== \"number\") {\r\n                                    return [2, Promise.reject(new Error(\"\\\"\" + additionalOptions.waitTimeoutMs + \"\\\" is not a valid number for \\\"waitTimeoutMs\\\" \"))];\r\n                                }\r\n                                if (typeof argumentObj !== \"object\") {\r\n                                    return [2, Promise.reject(new Error(\"The method arguments must be an object. method: \" + methodDefinition.name))];\r\n                                }\r\n                                serversMethodMap = this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                                if (!(serversMethodMap.length === 0)) return [3, 4];\r\n                                _d.label = 1;\r\n                            case 1:\r\n                                _d.trys.push([1, 3, , 4]);\r\n                                return [4, this.tryToAwaitForMethods(methodDefinition, target, additionalOptions)];\r\n                            case 2:\r\n                                serversMethodMap = _d.sent();\r\n                                return [3, 4];\r\n                            case 3:\r\n                                err_1 = _d.sent();\r\n                                method = __assign(__assign({}, methodDefinition), { getServers: function () { return []; }, supportsStreaming: false, objectTypes: (_a = methodDefinition.objectTypes) !== null && _a !== void 0 ? _a : [], flags: (_c = (_b = methodDefinition.flags) === null || _b === void 0 ? void 0 : _b.metadata) !== null && _c !== void 0 ? _c : {} });\r\n                                errorObj = {\r\n                                    method: method,\r\n                                    called_with: argumentObj,\r\n                                    message: \"Can not find a method matching \" + JSON.stringify(methodFilter) + \" with server filter \" + JSON.stringify(target),\r\n                                    executed_by: undefined,\r\n                                    returned: undefined,\r\n                                    status: undefined,\r\n                                };\r\n                                return [2, Promise.reject(errorObj)];\r\n                            case 4:\r\n                                timeout = additionalOptions.methodResponseTimeoutMs;\r\n                                additionalOptionsCopy = additionalOptions;\r\n                                invokePromises = serversMethodMap.map(function (serversMethodPair) {\r\n                                    var invId = shortid();\r\n                                    var method = serversMethodPair.methods[0];\r\n                                    var server = serversMethodPair.server;\r\n                                    var invokePromise = _this.protocol.client.invoke(invId, method, argumentObj, server, additionalOptionsCopy);\r\n                                    return Promise.race([\r\n                                        invokePromise,\r\n                                        rejectAfter(timeout, invokePromise, {\r\n                                            invocationId: invId,\r\n                                            message: \"Invocation timeout (\" + timeout + \" ms) reached for method name: \" + (method === null || method === void 0 ? void 0 : method.name) + \", target instance: \" + JSON.stringify(server.instance) + \", options: \" + JSON.stringify(additionalOptionsCopy),\r\n                                            status: InvokeStatus.Error,\r\n                                        })\r\n                                    ]);\r\n                                });\r\n                                return [4, Promise.all(invokePromises)];\r\n                            case 5:\r\n                                invocationMessages = _d.sent();\r\n                                results = this.getInvocationResultObj(invocationMessages, methodDefinition, argumentObj);\r\n                                allRejected = invocationMessages.every(function (result) { return result.status === InvokeStatus.Error; });\r\n                                if (allRejected) {\r\n                                    return [2, Promise.reject(results)];\r\n                                }\r\n                                return [2, results];\r\n                        }\r\n                    });\r\n                }); };\r\n                return [2, promisify(getInvokePromise(), success, error)];\r\n            });\r\n        });\r\n    };\r\n    Client.prototype.getInvocationResultObj = function (invocationResults, method, calledWith) {\r\n        var all_return_values = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Success; })\r\n            .reduce(function (allValues, currentValue) {\r\n            allValues = __spreadArrays(allValues, [\r\n                {\r\n                    executed_by: currentValue.instance,\r\n                    returned: currentValue.result,\r\n                    called_with: calledWith,\r\n                    method: method,\r\n                    message: currentValue.message,\r\n                    status: currentValue.status,\r\n                }\r\n            ]);\r\n            return allValues;\r\n        }, []);\r\n        var all_errors = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Error; })\r\n            .reduce(function (allErrors, currError) {\r\n            allErrors = __spreadArrays(allErrors, [\r\n                {\r\n                    executed_by: currError.instance,\r\n                    called_with: calledWith,\r\n                    name: method.name,\r\n                    message: currError.message,\r\n                }\r\n            ]);\r\n            return allErrors;\r\n        }, []);\r\n        var invResult = invocationResults[0];\r\n        var result = {\r\n            method: method,\r\n            called_with: calledWith,\r\n            returned: invResult.result,\r\n            executed_by: invResult.instance,\r\n            all_return_values: all_return_values,\r\n            all_errors: all_errors,\r\n            message: invResult.message,\r\n            status: invResult.status\r\n        };\r\n        return result;\r\n    };\r\n    Client.prototype.tryToAwaitForMethods = function (methodDefinition, target, additionalOptions) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (additionalOptions.waitTimeoutMs === 0) {\r\n                reject();\r\n                return;\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var retry = function () {\r\n                delayTillNow += delayStep;\r\n                var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                if (serversMethodMap.length > 0) {\r\n                    clearInterval(interval);\r\n                    resolve(serversMethodMap);\r\n                }\r\n                else if (delayTillNow >= (additionalOptions.waitTimeoutMs || 10000)) {\r\n                    clearInterval(interval);\r\n                    reject();\r\n                    return;\r\n                }\r\n            };\r\n            var interval = setInterval(retry, delayStep);\r\n        });\r\n    };\r\n    Client.prototype.filterByTarget = function (target, serverMethodMap) {\r\n        var _this = this;\r\n        if (typeof target === \"string\") {\r\n            if (target === \"all\") {\r\n                return __spreadArrays(serverMethodMap);\r\n            }\r\n            else if (target === \"best\") {\r\n                var localMachine = serverMethodMap\r\n                    .find(function (s) { return s.server.instance.isLocal; });\r\n                if (localMachine) {\r\n                    return [localMachine];\r\n                }\r\n                if (serverMethodMap[0] !== undefined) {\r\n                    return [serverMethodMap[0]];\r\n                }\r\n            }\r\n            else if (target === \"skipMine\") {\r\n                return serverMethodMap.filter(function (_a) {\r\n                    var server = _a.server;\r\n                    return server.instance.peerId !== _this.instance.peerId;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            var targetArray = void 0;\r\n            if (!Array.isArray(target)) {\r\n                targetArray = [target];\r\n            }\r\n            else {\r\n                targetArray = target;\r\n            }\r\n            var allServersMatching = targetArray.reduce(function (matches, filter) {\r\n                var myMatches = serverMethodMap.filter(function (serverMethodPair) {\r\n                    return _this.instanceMatch(filter, serverMethodPair.server.instance);\r\n                });\r\n                return matches.concat(myMatches);\r\n            }, []);\r\n            return allServersMatching;\r\n        }\r\n        return [];\r\n    };\r\n    Client.prototype.instanceMatch = function (instanceFilter, instanceDefinition) {\r\n        return this.containsProps(instanceFilter, instanceDefinition);\r\n    };\r\n    Client.prototype.methodMatch = function (methodFilter, methodDefinition) {\r\n        return this.containsProps(methodFilter, methodDefinition);\r\n    };\r\n    Client.prototype.containsProps = function (filter, repoMethod) {\r\n        var filterProps = Object.keys(filter)\r\n            .filter(function (prop) {\r\n            return filter[prop] !== undefined\r\n                && typeof filter[prop] !== \"function\"\r\n                && prop !== \"object_types\"\r\n                && prop !== \"display_name\"\r\n                && prop !== \"id\"\r\n                && prop !== \"gatewayId\"\r\n                && prop !== \"identifier\"\r\n                && prop[0] !== \"_\";\r\n        });\r\n        return filterProps.every(function (prop) {\r\n            var isMatch;\r\n            var filterValue = filter[prop];\r\n            var repoMethodValue = repoMethod[prop];\r\n            switch (prop) {\r\n                case \"objectTypes\":\r\n                    isMatch = (filterValue || []).every(function (filterValueEl) {\r\n                        return (repoMethodValue || []).includes(filterValueEl);\r\n                    });\r\n                    break;\r\n                case \"flags\":\r\n                    isMatch = isSubset(repoMethodValue || {}, filterValue || {});\r\n                    break;\r\n                default:\r\n                    isMatch = String(filterValue).toLowerCase() === String(repoMethodValue).toLowerCase();\r\n            }\r\n            return isMatch;\r\n        });\r\n    };\r\n    Client.prototype.getMethods = function (methodFilter) {\r\n        var _this = this;\r\n        if (methodFilter === undefined) {\r\n            return this.repo.getMethods();\r\n        }\r\n        var methods = this.repo.getMethods().filter(function (method) {\r\n            return _this.methodMatch(methodFilter, method);\r\n        });\r\n        return methods;\r\n    };\r\n    Client.prototype.getMethodsForInstance = function (instanceFilter) {\r\n        var _this = this;\r\n        var allServers = this.repo.getServers();\r\n        var matchingServers = allServers.filter(function (server) {\r\n            return _this.instanceMatch(instanceFilter, server.instance);\r\n        });\r\n        if (matchingServers.length === 0) {\r\n            return [];\r\n        }\r\n        var resultMethodsObject = {};\r\n        if (matchingServers.length === 1) {\r\n            resultMethodsObject = matchingServers[0].methods;\r\n        }\r\n        else {\r\n            matchingServers.forEach(function (server) {\r\n                Object.keys(server.methods).forEach(function (methodKey) {\r\n                    var method = server.methods[methodKey];\r\n                    resultMethodsObject[method.identifier] = method;\r\n                });\r\n            });\r\n        }\r\n        return Object.keys(resultMethodsObject)\r\n            .map(function (key) {\r\n            return resultMethodsObject[key];\r\n        });\r\n    };\r\n    Client.prototype.getServers = function (methodFilter) {\r\n        var _this = this;\r\n        var servers = this.repo.getServers();\r\n        if (methodFilter === undefined) {\r\n            return servers.map(function (server) {\r\n                return { server: server, methods: [] };\r\n            });\r\n        }\r\n        return servers.reduce(function (prev, current) {\r\n            var methodsForServer = Object.values(current.methods);\r\n            var matchingMethods = methodsForServer.filter(function (method) {\r\n                return _this.methodMatch(methodFilter, method);\r\n            });\r\n            if (matchingMethods.length > 0) {\r\n                prev.push({ server: current, methods: matchingMethods });\r\n            }\r\n            return prev;\r\n        }, []);\r\n    };\r\n    Client.prototype.getServerMethodsByFilterAndTarget = function (methodFilter, target) {\r\n        var serversMethodMap = this.getServers(methodFilter);\r\n        return this.filterByTarget(target, serversMethodMap);\r\n    };\r\n    return Client;\r\n}());\n\nvar ServerSubscription = (function () {\r\n    function ServerSubscription(protocol, repoMethod, subscription) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.subscription = subscription;\r\n    }\r\n    Object.defineProperty(ServerSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            if (!this.repoMethod.stream) {\r\n                throw new Error(\"no stream\");\r\n            }\r\n            return this.repoMethod.stream;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"arguments\", {\r\n        get: function () { return this.subscription.arguments || {}; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"branchKey\", {\r\n        get: function () { return this.subscription.branchKey; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"instance\", {\r\n        get: function () {\r\n            if (!this.subscription.instance) {\r\n                throw new Error(\"no instance\");\r\n            }\r\n            return this.subscription.instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerSubscription.prototype.close = function () {\r\n        this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);\r\n    };\r\n    ServerSubscription.prototype.push = function (data) {\r\n        this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);\r\n    };\r\n    return ServerSubscription;\r\n}());\n\nvar Request = (function () {\r\n    function Request(protocol, repoMethod, requestContext) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.requestContext = requestContext;\r\n        this.arguments = requestContext.arguments;\r\n        this.instance = requestContext.instance;\r\n    }\r\n    Request.prototype.accept = function () {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, \"\");\r\n    };\r\n    Request.prototype.acceptOnBranch = function (branch) {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);\r\n    };\r\n    Request.prototype.reject = function (reason) {\r\n        this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);\r\n    };\r\n    return Request;\r\n}());\n\nvar ServerStreaming = (function () {\r\n    function ServerStreaming(protocol, server) {\r\n        var _this = this;\r\n        this.protocol = protocol;\r\n        this.server = server;\r\n        protocol.server.onSubRequest(function (rc, rm) { return _this.handleSubRequest(rc, rm); });\r\n        protocol.server.onSubAdded(function (sub, rm) { return _this.handleSubAdded(sub, rm); });\r\n        protocol.server.onSubRemoved(function (sub, rm) { return _this.handleSubRemoved(sub, rm); });\r\n    }\r\n    ServerStreaming.prototype.handleSubRequest = function (requestContext, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRequestHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var request = new Request(this.protocol, repoMethod, requestContext);\r\n        repoMethod.streamCallbacks.subscriptionRequestHandler(request);\r\n    };\r\n    ServerStreaming.prototype.handleSubAdded = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionAddedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionAddedHandler(sub);\r\n    };\r\n    ServerStreaming.prototype.handleSubRemoved = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerBranch = (function () {\r\n    function ServerBranch(key, protocol, repoMethod) {\r\n        this.key = key;\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n    }\r\n    ServerBranch.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this.protocol, _this.repoMethod, sub);\r\n        });\r\n    };\r\n    ServerBranch.prototype.close = function () {\r\n        this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);\r\n    };\r\n    ServerBranch.prototype.push = function (data) {\r\n        this.protocol.server.pushData(this.repoMethod, data, [this.key]);\r\n    };\r\n    return ServerBranch;\r\n}());\n\nvar ServerStream = (function () {\r\n    function ServerStream(_protocol, _repoMethod, _server) {\r\n        this._protocol = _protocol;\r\n        this._repoMethod = _repoMethod;\r\n        this._server = _server;\r\n        this.name = this._repoMethod.definition.name;\r\n    }\r\n    ServerStream.prototype.branches = function (key) {\r\n        var _this = this;\r\n        var bList = this._protocol.server.getBranchList(this._repoMethod);\r\n        if (key) {\r\n            if (bList.indexOf(key) > -1) {\r\n                return new ServerBranch(key, this._protocol, this._repoMethod);\r\n            }\r\n            return undefined;\r\n        }\r\n        else {\r\n            return bList.map(function (branchKey) {\r\n                return new ServerBranch(branchKey, _this._protocol, _this._repoMethod);\r\n            });\r\n        }\r\n    };\r\n    ServerStream.prototype.branch = function (key) {\r\n        return this.branches(key);\r\n    };\r\n    ServerStream.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this._protocol.server.getSubscriptionList(this._repoMethod);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this._protocol, _this._repoMethod, sub);\r\n        });\r\n    };\r\n    Object.defineProperty(ServerStream.prototype, \"definition\", {\r\n        get: function () {\r\n            var _a;\r\n            var def2 = this._repoMethod.definition;\r\n            return {\r\n                accepts: def2.accepts,\r\n                description: def2.description,\r\n                displayName: def2.displayName,\r\n                name: def2.name,\r\n                objectTypes: def2.objectTypes,\r\n                returns: def2.returns,\r\n                supportsStreaming: def2.supportsStreaming,\r\n                flags: (_a = def2.flags) === null || _a === void 0 ? void 0 : _a.metadata,\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerStream.prototype.close = function () {\r\n        this._protocol.server.closeAllSubscriptions(this._repoMethod);\r\n        this._server.unregister(this._repoMethod.definition, true);\r\n    };\r\n    ServerStream.prototype.push = function (data, branches) {\r\n        if (typeof branches !== \"string\" && !Array.isArray(branches) && branches !== undefined) {\r\n            throw new Error(\"invalid branches should be string or string array\");\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        this._protocol.server.pushData(this._repoMethod, data, branches);\r\n    };\r\n    ServerStream.prototype.updateRepoMethod = function (repoMethod) {\r\n        this._repoMethod = repoMethod;\r\n    };\r\n    return ServerStream;\r\n}());\n\nvar Server = (function () {\r\n    function Server(protocol, serverRepository) {\r\n        this.protocol = protocol;\r\n        this.serverRepository = serverRepository;\r\n        this.invocations = 0;\r\n        this.currentlyUnregistering = {};\r\n        this.streaming = new ServerStreaming(protocol, this);\r\n        this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));\r\n    }\r\n    Server.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback, existingStream) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (!streamDef) {\r\n                reject(\"The stream name must be unique! Please, provide either a unique string for a stream name to \\u201Cglue.interop.createStream()\\u201D or a \\u201CmethodDefinition\\u201D object with a unique \\u201Cname\\u201D property for the stream.\");\r\n                return;\r\n            }\r\n            var streamMethodDefinition;\r\n            if (typeof streamDef === \"string\") {\r\n                streamMethodDefinition = { name: \"\" + streamDef };\r\n            }\r\n            else {\r\n                streamMethodDefinition = __assign({}, streamDef);\r\n            }\r\n            if (!streamMethodDefinition.name) {\r\n                return reject(\"The \\u201Cname\\u201D property is required for the \\u201CstreamDefinition\\u201D object and must be unique. Stream definition: \" + JSON.stringify(streamMethodDefinition));\r\n            }\r\n            var nameAlreadyExists = _this.serverRepository.getList()\r\n                .some(function (serverMethod) { return serverMethod.definition.name === streamMethodDefinition.name; });\r\n            if (nameAlreadyExists) {\r\n                return reject(\"A stream with the name \\\"\" + streamMethodDefinition.name + \"\\\" already exists! Please, provide a unique name for the stream.\");\r\n            }\r\n            streamMethodDefinition.supportsStreaming = true;\r\n            if (!callbacks) {\r\n                callbacks = {};\r\n            }\r\n            if (typeof callbacks.subscriptionRequestHandler !== \"function\") {\r\n                callbacks.subscriptionRequestHandler = function (request) {\r\n                    request.accept();\r\n                };\r\n            }\r\n            var repoMethod = _this.serverRepository.add({\r\n                definition: streamMethodDefinition,\r\n                streamCallbacks: callbacks,\r\n                protocolState: {},\r\n            });\r\n            _this.protocol.server.createStream(repoMethod)\r\n                .then(function () {\r\n                var streamUserObject;\r\n                if (existingStream) {\r\n                    streamUserObject = existingStream;\r\n                    existingStream.updateRepoMethod(repoMethod);\r\n                }\r\n                else {\r\n                    streamUserObject = new ServerStream(_this.protocol, repoMethod, _this);\r\n                }\r\n                repoMethod.stream = streamUserObject;\r\n                resolve(streamUserObject);\r\n            })\r\n                .catch(function (err) {\r\n                if (repoMethod.repoId) {\r\n                    _this.serverRepository.remove(repoMethod.repoId);\r\n                }\r\n                reject(err);\r\n            });\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Server.prototype.register = function (methodDefinition, callback) {\r\n        var _this = this;\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallbackFunction = function (context, resultCallback) { return __awaiter(_this, void 0, void 0, function () {\r\n            var result, resultValue, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 5]);\r\n                        result = callback(context.args, context.instance);\r\n                        if (!(result && typeof result.then === \"function\")) return [3, 2];\r\n                        return [4, result];\r\n                    case 1:\r\n                        resultValue = _a.sent();\r\n                        resultCallback(undefined, resultValue);\r\n                        return [3, 3];\r\n                    case 2:\r\n                        resultCallback(undefined, result);\r\n                        _a.label = 3;\r\n                    case 3: return [3, 5];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        if (!e_1) {\r\n                            e_1 = \"\";\r\n                        }\r\n                        resultCallback(e_1, e_1);\r\n                        return [3, 5];\r\n                    case 5: return [2];\r\n                }\r\n            });\r\n        }); };\r\n        wrappedCallbackFunction.userCallback = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallbackFunction);\r\n    };\r\n    Server.prototype.registerAsync = function (methodDefinition, callback) {\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallback = function (context, resultCallback) {\r\n            try {\r\n                var resultCalled_1 = false;\r\n                var success = function (result) {\r\n                    if (!resultCalled_1) {\r\n                        resultCallback(undefined, result);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var error = function (e) {\r\n                    if (!resultCalled_1) {\r\n                        if (!e) {\r\n                            e = \"\";\r\n                        }\r\n                        resultCallback(e, e);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var methodResult = callback(context.args, context.instance, success, error);\r\n                if (methodResult && typeof methodResult.then === \"function\") {\r\n                    methodResult\r\n                        .then(success)\r\n                        .catch(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                resultCallback(e, undefined);\r\n            }\r\n        };\r\n        wrappedCallback.userCallbackAsync = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallback);\r\n    };\r\n    Server.prototype.unregister = function (methodFilter, forStream) {\r\n        if (forStream === void 0) { forStream = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, methodToBeRemoved;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (methodFilter === undefined) {\r\n                            return [2, Promise.reject(\"Please, provide either a unique string for a name or an object containing a \\u201Cname\\u201D property.\")];\r\n                        }\r\n                        if (!(typeof methodFilter === \"function\")) return [3, 2];\r\n                        return [4, this.unregisterWithPredicate(methodFilter, forStream)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                    case 2:\r\n                        if (typeof methodFilter === \"string\") {\r\n                            methodDefinition = { name: methodFilter };\r\n                        }\r\n                        else {\r\n                            methodDefinition = methodFilter;\r\n                        }\r\n                        if (methodDefinition.name === undefined) {\r\n                            return [2, Promise.reject(\"Method name is required. Cannot find a method if the method name is undefined!\")];\r\n                        }\r\n                        methodToBeRemoved = this.serverRepository.getList().find(function (serverMethod) {\r\n                            return serverMethod.definition.name === methodDefinition.name\r\n                                && (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodToBeRemoved) {\r\n                            return [2, Promise.reject(\"Method with a name \\\"\" + methodDefinition.name + \"\\\" does not exist or is not registered by your application!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams([methodToBeRemoved])];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.unregisterWithPredicate = function (filterPredicate, forStream) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodsOrStreamsToRemove;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        methodsOrStreamsToRemove = this.serverRepository.getList()\r\n                            .filter(function (sm) { return filterPredicate(sm.definition); })\r\n                            .filter(function (serverMethod) {\r\n                            return (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {\r\n                            return [2, Promise.reject(\"Could not find a \" + (forStream ? \"stream\" : \"method\") + \" matching the specified condition!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams(methodsOrStreamsToRemove)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.removeMethodsOrStreams = function (methodsToRemove) {\r\n        var _this = this;\r\n        var methodUnregPromises = [];\r\n        methodsToRemove.forEach(function (method) {\r\n            var promise = _this.protocol.server.unregister(method)\r\n                .then(function () {\r\n                if (method.repoId) {\r\n                    _this.serverRepository.remove(method.repoId);\r\n                }\r\n            });\r\n            methodUnregPromises.push(promise);\r\n            _this.addAsCurrentlyUnregistering(method.definition.name, promise);\r\n        });\r\n        return Promise.all(methodUnregPromises);\r\n    };\r\n    Server.prototype.addAsCurrentlyUnregistering = function (methodName, promise) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var timeout;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                timeout = new Promise(function (resolve) { return setTimeout(resolve, 5000); });\r\n                this.currentlyUnregistering[methodName] = Promise.race([promise, timeout]).then(function () {\r\n                    delete _this.currentlyUnregistering[methodName];\r\n                });\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.registerCore = function (method, theFunction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, unregisterInProgress, nameAlreadyExists, repoMethod;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof method === \"string\") {\r\n                            methodDefinition = { name: \"\" + method };\r\n                        }\r\n                        else {\r\n                            methodDefinition = __assign({}, method);\r\n                        }\r\n                        if (!methodDefinition.name) {\r\n                            return [2, Promise.reject(\"Please, provide a (unique) string value for the \\u201Cname\\u201D property in the \\u201CmethodDefinition\\u201D object: \" + JSON.stringify(method))];\r\n                        }\r\n                        unregisterInProgress = this.currentlyUnregistering[methodDefinition.name];\r\n                        if (!unregisterInProgress) return [3, 2];\r\n                        return [4, unregisterInProgress];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        nameAlreadyExists = this.serverRepository.getList()\r\n                            .some(function (serverMethod) { return serverMethod.definition.name === methodDefinition.name; });\r\n                        if (nameAlreadyExists) {\r\n                            return [2, Promise.reject(\"A method with the name \\\"\" + methodDefinition.name + \"\\\" already exists! Please, provide a unique name for the method.\")];\r\n                        }\r\n                        if (methodDefinition.supportsStreaming) {\r\n                            return [2, Promise.reject(\"When you create methods with \\u201Cglue.interop.register()\\u201D or \\u201Cglue.interop.registerAsync()\\u201D the property \\u201CsupportsStreaming\\u201D cannot be \\u201Ctrue\\u201D. If you want \\u201C\" + methodDefinition.name + \"\\u201D to be a stream, please use the \\u201Cglue.interop.createStream()\\u201D method.\")];\r\n                        }\r\n                        repoMethod = this.serverRepository.add({\r\n                            definition: methodDefinition,\r\n                            theFunction: theFunction,\r\n                            protocolState: {},\r\n                        });\r\n                        return [2, this.protocol.server.register(repoMethod)\r\n                                .catch(function (err) {\r\n                                if (repoMethod === null || repoMethod === void 0 ? void 0 : repoMethod.repoId) {\r\n                                    _this.serverRepository.remove(repoMethod.repoId);\r\n                                }\r\n                                throw err;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.onMethodInvoked = function (methodToExecute, invocationId, invocationArgs) {\r\n        var _this = this;\r\n        if (!methodToExecute || !methodToExecute.theFunction) {\r\n            return;\r\n        }\r\n        methodToExecute.theFunction(invocationArgs, function (err, result) {\r\n            if (err !== undefined && err !== null) {\r\n                if (err.message && typeof err.message === \"string\") {\r\n                    err = err.message;\r\n                }\r\n                else if (typeof err !== \"string\") {\r\n                    try {\r\n                        err = JSON.stringify(err);\r\n                    }\r\n                    catch (unStrException) {\r\n                        err = \"un-stringifyable error in onMethodInvoked! Top level prop names: \" + Object.keys(err);\r\n                    }\r\n                }\r\n            }\r\n            if (!result) {\r\n                result = {};\r\n            }\r\n            else if (typeof result !== \"object\" || Array.isArray(result)) {\r\n                result = { _value: result };\r\n            }\r\n            _this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);\r\n        });\r\n    };\r\n    return Server;\r\n}());\n\nvar InstanceWrapper = (function () {\r\n    function InstanceWrapper(API, instance, connection) {\r\n        var _this = this;\r\n        this.wrapped = {};\r\n        this.wrapped.getMethods = function () {\r\n            return API.methodsForInstance(this);\r\n        };\r\n        this.wrapped.getStreams = function () {\r\n            return API.methodsForInstance(this).filter(function (m) { return m.supportsStreaming; });\r\n        };\r\n        if (instance) {\r\n            this.refreshWrappedObject(instance);\r\n        }\r\n        if (connection) {\r\n            connection.loggedIn(function () {\r\n                _this.refresh(connection);\r\n            });\r\n            this.refresh(connection);\r\n        }\r\n    }\r\n    InstanceWrapper.prototype.unwrap = function () {\r\n        return this.wrapped;\r\n    };\r\n    InstanceWrapper.prototype.refresh = function (connection) {\r\n        if (!connection) {\r\n            return;\r\n        }\r\n        var resolvedIdentity = connection === null || connection === void 0 ? void 0 : connection.resolvedIdentity;\r\n        var instance = Object.assign({}, resolvedIdentity !== null && resolvedIdentity !== void 0 ? resolvedIdentity : {}, { peerId: connection === null || connection === void 0 ? void 0 : connection.peerId });\r\n        this.refreshWrappedObject(instance);\r\n    };\r\n    InstanceWrapper.prototype.refreshWrappedObject = function (resolvedIdentity) {\r\n        var _this = this;\r\n        var _a, _b, _c, _d;\r\n        Object.keys(resolvedIdentity).forEach(function (key) {\r\n            _this.wrapped[key] = resolvedIdentity[key];\r\n        });\r\n        this.wrapped.user = resolvedIdentity.user;\r\n        this.wrapped.instance = resolvedIdentity.instance;\r\n        this.wrapped.application = (_a = resolvedIdentity.application) !== null && _a !== void 0 ? _a : shortid();\r\n        this.wrapped.applicationName = resolvedIdentity.applicationName;\r\n        this.wrapped.pid = (_c = (_b = resolvedIdentity.pid) !== null && _b !== void 0 ? _b : resolvedIdentity.process) !== null && _c !== void 0 ? _c : Math.floor(Math.random() * 10000000000);\r\n        this.wrapped.machine = resolvedIdentity.machine;\r\n        this.wrapped.environment = resolvedIdentity.environment;\r\n        this.wrapped.region = resolvedIdentity.region;\r\n        this.wrapped.windowId = resolvedIdentity.windowId;\r\n        this.wrapped.isLocal = (_d = resolvedIdentity.isLocal) !== null && _d !== void 0 ? _d : true;\r\n        this.wrapped.api = resolvedIdentity.api;\r\n        this.wrapped.service = resolvedIdentity.service;\r\n        this.wrapped.peerId = resolvedIdentity.peerId;\r\n    };\r\n    return InstanceWrapper;\r\n}());\n\nvar hideMethodSystemFlags = function (method) {\r\n    return __assign(__assign({}, method), { flags: method.flags.metadata || {} });\r\n};\r\nvar ClientRepository = (function () {\r\n    function ClientRepository(logger, API) {\r\n        this.logger = logger;\r\n        this.API = API;\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n        this.callbacks = lib();\r\n        var peerId = this.API.instance.peerId;\r\n        this.myServer = {\r\n            id: peerId,\r\n            methods: {},\r\n            instance: this.API.instance,\r\n            wrapper: this.API.unwrappedInstance,\r\n        };\r\n        this.servers[peerId] = this.myServer;\r\n    }\r\n    ClientRepository.prototype.addServer = function (info, serverId) {\r\n        this.logger.debug(\"adding server \" + serverId);\r\n        var current = this.servers[serverId];\r\n        if (current) {\r\n            return current.id;\r\n        }\r\n        var wrapper = new InstanceWrapper(this.API, info);\r\n        var serverEntry = {\r\n            id: serverId,\r\n            methods: {},\r\n            instance: wrapper.unwrap(),\r\n            wrapper: wrapper,\r\n        };\r\n        this.servers[serverId] = serverEntry;\r\n        this.callbacks.execute(\"onServerAdded\", serverEntry.instance);\r\n        return serverId;\r\n    };\r\n    ClientRepository.prototype.removeServerById = function (id, reason) {\r\n        var _this = this;\r\n        var server = this.servers[id];\r\n        if (!server) {\r\n            this.logger.warn(\"not aware of server \" + id + \", my state \" + JSON.stringify(Object.keys(this.servers)));\r\n            return;\r\n        }\r\n        else {\r\n            this.logger.debug(\"removing server \" + id);\r\n        }\r\n        Object.keys(server.methods).forEach(function (methodId) {\r\n            _this.removeServerMethod(id, methodId);\r\n        });\r\n        delete this.servers[id];\r\n        this.callbacks.execute(\"onServerRemoved\", server.instance, reason);\r\n    };\r\n    ClientRepository.prototype.addServerMethod = function (serverId, method) {\r\n        var _a;\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        if (server.methods[method.id]) {\r\n            return;\r\n        }\r\n        var identifier = this.createMethodIdentifier(method);\r\n        var that = this;\r\n        var methodDefinition = {\r\n            identifier: identifier,\r\n            gatewayId: method.id,\r\n            name: method.name,\r\n            displayName: method.display_name,\r\n            description: method.description,\r\n            version: method.version,\r\n            objectTypes: method.object_types || [],\r\n            accepts: method.input_signature,\r\n            returns: method.result_signature,\r\n            supportsStreaming: typeof method.flags !== \"undefined\" ? method.flags.streaming : false,\r\n            flags: (_a = method.flags) !== null && _a !== void 0 ? _a : {},\r\n            getServers: function () {\r\n                return that.getServersByMethod(identifier);\r\n            }\r\n        };\r\n        methodDefinition.object_types = methodDefinition.objectTypes;\r\n        methodDefinition.display_name = methodDefinition.displayName;\r\n        methodDefinition.version = methodDefinition.version;\r\n        server.methods[method.id] = methodDefinition;\r\n        var clientMethodDefinition = hideMethodSystemFlags(methodDefinition);\r\n        if (!this.methodsCount[identifier]) {\r\n            this.methodsCount[identifier] = 0;\r\n            this.callbacks.execute(\"onMethodAdded\", clientMethodDefinition);\r\n        }\r\n        this.methodsCount[identifier] = this.methodsCount[identifier] + 1;\r\n        this.callbacks.execute(\"onServerMethodAdded\", server.instance, clientMethodDefinition);\r\n        return methodDefinition;\r\n    };\r\n    ClientRepository.prototype.removeServerMethod = function (serverId, methodId) {\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        var method = server.methods[methodId];\r\n        delete server.methods[methodId];\r\n        var clientMethodDefinition = hideMethodSystemFlags(method);\r\n        this.methodsCount[method.identifier] = this.methodsCount[method.identifier] - 1;\r\n        if (this.methodsCount[method.identifier] === 0) {\r\n            this.callbacks.execute(\"onMethodRemoved\", clientMethodDefinition);\r\n        }\r\n        this.callbacks.execute(\"onServerMethodRemoved\", server.instance, clientMethodDefinition);\r\n    };\r\n    ClientRepository.prototype.getMethods = function () {\r\n        return this.extractMethodsFromServers(Object.values(this.servers)).map(hideMethodSystemFlags);\r\n    };\r\n    ClientRepository.prototype.getServers = function () {\r\n        return Object.values(this.servers).map(this.hideServerMethodSystemFlags);\r\n    };\r\n    ClientRepository.prototype.onServerAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerAdded\", callback);\r\n        var serversWithMethodsToReplay = this.getServers().map(function (s) { return s.instance; });\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, serversWithMethodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodAdded\", callback);\r\n        var methodsToReplay = this.getMethods();\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, methodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onServerMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodAdded\", callback);\r\n        var unsubCalled = false;\r\n        var servers = this.getServers();\r\n        setTimeout(function () {\r\n            servers.forEach(function (server) {\r\n                var methods = server.methods;\r\n                Object.keys(methods).forEach(function (methodId) {\r\n                    if (!unsubCalled) {\r\n                        callback(server.instance, methods[methodId]);\r\n                    }\r\n                });\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    ClientRepository.prototype.onMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.getServerById = function (id) {\r\n        return this.hideServerMethodSystemFlags(this.servers[id]);\r\n    };\r\n    ClientRepository.prototype.reset = function () {\r\n        var _a;\r\n        var _this = this;\r\n        Object.keys(this.servers).forEach(function (key) {\r\n            _this.removeServerById(key, \"reset\");\r\n        });\r\n        this.servers = (_a = {},\r\n            _a[this.myServer.id] = this.myServer,\r\n            _a);\r\n        this.methodsCount = {};\r\n    };\r\n    ClientRepository.prototype.createMethodIdentifier = function (methodInfo) {\r\n        var accepts = methodInfo.input_signature !== undefined ? methodInfo.input_signature : \"\";\r\n        var returns = methodInfo.result_signature !== undefined ? methodInfo.result_signature : \"\";\r\n        return (methodInfo.name + accepts + returns).toLowerCase();\r\n    };\r\n    ClientRepository.prototype.getServersByMethod = function (identifier) {\r\n        var allServers = [];\r\n        Object.values(this.servers).forEach(function (server) {\r\n            Object.values(server.methods).forEach(function (method) {\r\n                if (method.identifier === identifier) {\r\n                    allServers.push(server.instance);\r\n                }\r\n            });\r\n        });\r\n        return allServers;\r\n    };\r\n    ClientRepository.prototype.returnUnsubWithDelayedReplay = function (unsubscribeFunc, collectionToReplay, callback) {\r\n        var unsubCalled = false;\r\n        setTimeout(function () {\r\n            collectionToReplay.forEach(function (item) {\r\n                if (!unsubCalled) {\r\n                    callback(item);\r\n                }\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    ClientRepository.prototype.hideServerMethodSystemFlags = function (server) {\r\n        var clientMethods = {};\r\n        Object.entries(server.methods).forEach(function (_a) {\r\n            var name = _a[0], method = _a[1];\r\n            clientMethods[name] = hideMethodSystemFlags(method);\r\n        });\r\n        return __assign(__assign({}, server), { methods: clientMethods });\r\n    };\r\n    ClientRepository.prototype.extractMethodsFromServers = function (servers) {\r\n        var methods = Object.values(servers).reduce(function (clientMethods, server) {\r\n            return __spreadArrays(clientMethods, Object.values(server.methods));\r\n        }, []);\r\n        return methods;\r\n    };\r\n    return ClientRepository;\r\n}());\n\nvar ServerRepository = (function () {\r\n    function ServerRepository() {\r\n        this.nextId = 0;\r\n        this.methods = [];\r\n    }\r\n    ServerRepository.prototype.add = function (method) {\r\n        method.repoId = String(this.nextId);\r\n        this.nextId += 1;\r\n        this.methods.push(method);\r\n        return method;\r\n    };\r\n    ServerRepository.prototype.remove = function (repoId) {\r\n        if (typeof repoId !== \"string\") {\r\n            return new TypeError(\"Expecting a string\");\r\n        }\r\n        this.methods = this.methods.filter(function (m) {\r\n            return m.repoId !== repoId;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getById = function (id) {\r\n        if (typeof id !== \"string\") {\r\n            return undefined;\r\n        }\r\n        return this.methods.find(function (m) {\r\n            return m.repoId === id;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getList = function () {\r\n        return this.methods.map(function (m) { return m; });\r\n    };\r\n    ServerRepository.prototype.length = function () {\r\n        return this.methods.length;\r\n    };\r\n    ServerRepository.prototype.reset = function () {\r\n        this.methods = [];\r\n    };\r\n    return ServerRepository;\r\n}());\n\nvar SUBSCRIPTION_REQUEST = \"onSubscriptionRequest\";\r\nvar SUBSCRIPTION_ADDED = \"onSubscriptionAdded\";\r\nvar SUBSCRIPTION_REMOVED = \"onSubscriptionRemoved\";\r\nvar ServerStreaming$1 = (function () {\r\n    function ServerStreaming(session, repository, serverRepository) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.serverRepository = serverRepository;\r\n        this.ERR_URI_SUBSCRIPTION_FAILED = \"com.tick42.agm.errors.subscription.failure\";\r\n        this.callbacks = lib();\r\n        this.nextStreamId = 0;\r\n        session.on(\"add-interest\", function (msg) {\r\n            _this.handleAddInterest(msg);\r\n        });\r\n        session.on(\"remove-interest\", function (msg) {\r\n            _this.handleRemoveInterest(msg);\r\n        });\r\n    }\r\n    ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {\r\n        if (typeof branch !== \"string\") {\r\n            branch = \"\";\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            throw new TypeError(\"The streaming method is missing its subscriptions.\");\r\n        }\r\n        if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            throw new TypeError(\"The streaming method is missing its branches.\");\r\n        }\r\n        var streamId = this.getStreamId(streamingMethod, branch);\r\n        var key = requestContext.msg.subscription_id;\r\n        var subscription = {\r\n            id: key,\r\n            arguments: requestContext.arguments,\r\n            instance: requestContext.instance,\r\n            branchKey: branch,\r\n            streamId: streamId,\r\n            subscribeMsg: requestContext.msg,\r\n        };\r\n        streamingMethod.protocolState.subscriptionsMap[key] = subscription;\r\n        this.session.sendFireAndForget({\r\n            type: \"accepted\",\r\n            subscription_id: key,\r\n            stream_id: streamId,\r\n        });\r\n        this.callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {\r\n        if (typeof reason !== \"string\") {\r\n            reason = \"\";\r\n        }\r\n        this.sendSubscriptionFailed(\"Subscription rejected by user. \" + reason, requestContext.msg.subscription_id);\r\n    };\r\n    ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        if (typeof branches === \"string\") {\r\n            branches = [branches];\r\n        }\r\n        else if (!Array.isArray(branches) || branches.length <= 0) {\r\n            branches = [];\r\n        }\r\n        var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\r\n            .filter(function (br) {\r\n            if (!branches || branches.length === 0) {\r\n                return true;\r\n            }\r\n            return branches.indexOf(br.key) >= 0;\r\n        }).map(function (br) {\r\n            return br.streamId;\r\n        });\r\n        streamIdList.forEach(function (streamId) {\r\n            var publishMessage = {\r\n                type: \"publish\",\r\n                stream_id: streamId,\r\n                data: data,\r\n            };\r\n            _this.session.sendFireAndForget(publishMessage);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        var postMessage = {\r\n            type: \"post\",\r\n            subscription_id: subscription.id,\r\n            data: data,\r\n        };\r\n        this.session.sendFireAndForget(postMessage);\r\n    };\r\n    ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {\r\n        if (streamingMethod.protocolState.subscriptionsMap) {\r\n            delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\r\n        }\r\n        var dropSubscriptionMessage = {\r\n            type: \"drop-subscription\",\r\n            subscription_id: subscription.id,\r\n            reason: \"Server dropping a single subscription\",\r\n        };\r\n        this.session.sendFireAndForget(dropSubscriptionMessage);\r\n        var subscriber = subscription.instance;\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.closeMultipleSubscriptions = function (streamingMethod, branchKey) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var subscriptionsToClose = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey === \"string\") {\r\n            subscriptionsToClose = subscriptionsToClose.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        subscriptionsToClose.forEach(function (subscription) {\r\n            delete subscriptionsMap[subscription.id];\r\n            var drop = {\r\n                type: \"drop-subscription\",\r\n                subscription_id: subscription.id,\r\n                reason: \"Server dropping all subscriptions on stream_id: \" + subscription.streamId,\r\n            };\r\n            _this.session.sendFireAndForget(drop);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var subscriptions = [];\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey !== \"string\") {\r\n            subscriptions = allSubscriptions;\r\n        }\r\n        else {\r\n            subscriptions = allSubscriptions.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        return subscriptions;\r\n    };\r\n    ServerStreaming.prototype.getBranchList = function (streamingMethod) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        var result = [];\r\n        allSubscriptions.forEach(function (sub) {\r\n            var branch = \"\";\r\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\r\n                branch = sub.branchKey;\r\n            }\r\n            if (result.indexOf(branch) === -1) {\r\n                result.push(branch);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    ServerStreaming.prototype.onSubAdded = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRequest = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRemoved = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED, callback);\r\n    };\r\n    ServerStreaming.prototype.handleRemoveInterest = function (msg) {\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (typeof msg.subscription_id !== \"string\" ||\r\n            typeof streamingMethod !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== \"object\") {\r\n            return;\r\n        }\r\n        var subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.onSubscriptionLifetimeEvent = function (eventName, handlerFunc) {\r\n        this.callbacks.add(eventName, handlerFunc);\r\n    };\r\n    ServerStreaming.prototype.getNextStreamId = function () {\r\n        return this.nextStreamId++ + \"\";\r\n    };\r\n    ServerStreaming.prototype.handleAddInterest = function (msg) {\r\n        var caller = this.repository.getServerById(msg.caller_id);\r\n        var instance = caller.instance;\r\n        var requestContext = {\r\n            msg: msg,\r\n            arguments: msg.arguments_kv || {},\r\n            instance: instance,\r\n        };\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (streamingMethod === undefined) {\r\n            var errorMsg = \"No method with id \" + msg.method_id + \" on this server.\";\r\n            this.sendSubscriptionFailed(errorMsg, msg.subscription_id);\r\n            return;\r\n        }\r\n        if (streamingMethod.protocolState.subscriptionsMap &&\r\n            streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {\r\n            this.sendSubscriptionFailed(\"A subscription with id \" + msg.subscription_id + \" already exists.\", msg.subscription_id);\r\n            return;\r\n        }\r\n        this.callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.sendSubscriptionFailed = function (reason, subscriptionId) {\r\n        var errorMessage = {\r\n            type: \"error\",\r\n            reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,\r\n            reason: reason,\r\n            request_id: subscriptionId,\r\n        };\r\n        this.session.sendFireAndForget(errorMessage);\r\n    };\r\n    ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {\r\n        if (typeof branchKey !== \"string\") {\r\n            branchKey = \"\";\r\n        }\r\n        if (!streamingMethod.protocolState.branchKeyToStreamIdMap) {\r\n            throw new Error(\"streaming \" + streamingMethod.definition.name + \" method without protocol state\");\r\n        }\r\n        var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.key === branchKey;\r\n        })[0];\r\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\r\n        if (typeof streamId !== \"string\" || streamId === \"\") {\r\n            streamId = this.getNextStreamId();\r\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\r\n        }\r\n        return streamId;\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerProtocol = (function () {\r\n    function ServerProtocol(session, clientRepository, serverRepository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.clientRepository = clientRepository;\r\n        this.serverRepository = serverRepository;\r\n        this.logger = logger;\r\n        this.callbacks = lib();\r\n        this.streaming = new ServerStreaming$1(session, clientRepository, serverRepository);\r\n        this.session.on(\"invoke\", function (msg) { return _this.handleInvokeMessage(msg); });\r\n    }\r\n    ServerProtocol.prototype.createStream = function (repoMethod) {\r\n        repoMethod.protocolState.subscriptionsMap = {};\r\n        repoMethod.protocolState.branchKeyToStreamIdMap = [];\r\n        return this.register(repoMethod, true);\r\n    };\r\n    ServerProtocol.prototype.register = function (repoMethod, isStreaming) {\r\n        var _this = this;\r\n        var _a;\r\n        var methodDef = repoMethod.definition;\r\n        var flags = Object.assign({}, { metadata: (_a = methodDef.flags) !== null && _a !== void 0 ? _a : {} }, { streaming: isStreaming || false });\r\n        var registerMsg = {\r\n            type: \"register\",\r\n            methods: [{\r\n                    id: repoMethod.repoId,\r\n                    name: methodDef.name,\r\n                    display_name: methodDef.displayName,\r\n                    description: methodDef.description,\r\n                    version: methodDef.version,\r\n                    flags: flags,\r\n                    object_types: methodDef.objectTypes || methodDef.object_types,\r\n                    input_signature: methodDef.accepts,\r\n                    result_signature: methodDef.returns,\r\n                    restrictions: undefined,\r\n                }],\r\n        };\r\n        return this.session.send(registerMsg, { methodId: repoMethod.repoId })\r\n            .then(function () {\r\n            _this.logger.debug(\"registered method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId);\r\n        })\r\n            .catch(function (msg) {\r\n            _this.logger.warn(\"failed to register method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId + \" - \" + JSON.stringify(msg));\r\n            throw msg;\r\n        });\r\n    };\r\n    ServerProtocol.prototype.onInvoked = function (callback) {\r\n        this.callbacks.add(\"onInvoked\", callback);\r\n    };\r\n    ServerProtocol.prototype.methodInvocationResult = function (method, invocationId, err, result) {\r\n        var msg;\r\n        if (err || err === \"\") {\r\n            msg = {\r\n                type: \"error\",\r\n                request_id: invocationId,\r\n                reason_uri: \"agm.errors.client_error\",\r\n                reason: err,\r\n                context: result,\r\n                peer_id: undefined,\r\n            };\r\n        }\r\n        else {\r\n            msg = {\r\n                type: \"yield\",\r\n                invocation_id: invocationId,\r\n                peer_id: this.session.peerId,\r\n                result: result,\r\n                request_id: undefined,\r\n            };\r\n        }\r\n        this.session.sendFireAndForget(msg);\r\n    };\r\n    ServerProtocol.prototype.unregister = function (method) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        msg = {\r\n                            type: \"unregister\",\r\n                            methods: [method.repoId],\r\n                        };\r\n                        return [4, this.session.send(msg)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerProtocol.prototype.getBranchList = function (method) {\r\n        return this.streaming.getBranchList(method);\r\n    };\r\n    ServerProtocol.prototype.getSubscriptionList = function (method, branchKey) {\r\n        return this.streaming.getSubscriptionList(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.closeAllSubscriptions = function (method, branchKey) {\r\n        this.streaming.closeMultipleSubscriptions(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.pushData = function (method, data, branches) {\r\n        this.streaming.pushData(method, data, branches);\r\n    };\r\n    ServerProtocol.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        this.streaming.pushDataToSingle(method, subscription, data);\r\n    };\r\n    ServerProtocol.prototype.closeSingleSubscription = function (method, subscription) {\r\n        this.streaming.closeSingleSubscription(method, subscription);\r\n    };\r\n    ServerProtocol.prototype.acceptRequestOnBranch = function (requestContext, method, branch) {\r\n        this.streaming.acceptRequestOnBranch(requestContext, method, branch);\r\n    };\r\n    ServerProtocol.prototype.rejectRequest = function (requestContext, method, reason) {\r\n        this.streaming.rejectRequest(requestContext, method, reason);\r\n    };\r\n    ServerProtocol.prototype.onSubRequest = function (callback) {\r\n        this.streaming.onSubRequest(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubAdded = function (callback) {\r\n        this.streaming.onSubAdded(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubRemoved = function (callback) {\r\n        this.streaming.onSubRemoved(callback);\r\n    };\r\n    ServerProtocol.prototype.handleInvokeMessage = function (msg) {\r\n        var invocationId = msg.invocation_id;\r\n        var callerId = msg.caller_id;\r\n        var methodId = msg.method_id;\r\n        var args = msg.arguments_kv;\r\n        var methodList = this.serverRepository.getList();\r\n        var method = methodList.filter(function (m) {\r\n            return m.repoId === methodId;\r\n        })[0];\r\n        if (method === undefined) {\r\n            return;\r\n        }\r\n        var client = this.clientRepository.getServerById(callerId).instance;\r\n        var invocationArgs = { args: args, instance: client };\r\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\r\n    };\r\n    return ServerProtocol;\r\n}());\n\nvar UserSubscription = (function () {\r\n    function UserSubscription(repository, subscriptionData) {\r\n        this.repository = repository;\r\n        this.subscriptionData = subscriptionData;\r\n    }\r\n    Object.defineProperty(UserSubscription.prototype, \"requestArguments\", {\r\n        get: function () {\r\n            return this.subscriptionData.params.arguments || {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"servers\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this.subscriptionData.trackedServers\r\n                .filter(function (pair) { return pair.subscriptionId; })\r\n                .map(function (pair) { return _this.repository.getServerById(pair.serverId).instance; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"serverInstance\", {\r\n        get: function () {\r\n            return this.servers[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            return this.subscriptionData.method;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    UserSubscription.prototype.onData = function (dataCallback) {\r\n        if (typeof dataCallback !== \"function\") {\r\n            throw new TypeError(\"The data callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onData.push(dataCallback);\r\n        if (this.subscriptionData.handlers.onData.length === 1 && this.subscriptionData.queued.data.length > 0) {\r\n            this.subscriptionData.queued.data.forEach(function (dataItem) {\r\n                dataCallback(dataItem);\r\n            });\r\n        }\r\n    };\r\n    UserSubscription.prototype.onClosed = function (closedCallback) {\r\n        if (typeof closedCallback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onClosed.push(closedCallback);\r\n    };\r\n    UserSubscription.prototype.onFailed = function (callback) {\r\n    };\r\n    UserSubscription.prototype.onConnected = function (callback) {\r\n        if (typeof callback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onConnected.push(callback);\r\n    };\r\n    UserSubscription.prototype.close = function () {\r\n        this.subscriptionData.close();\r\n    };\r\n    UserSubscription.prototype.setNewSubscription = function (newSub) {\r\n        this.subscriptionData = newSub;\r\n    };\r\n    return UserSubscription;\r\n}());\n\nvar STATUS_AWAITING_ACCEPT = \"awaitingAccept\";\r\nvar STATUS_SUBSCRIBED = \"subscribed\";\r\nvar ERR_MSG_SUB_FAILED = \"Subscription failed.\";\r\nvar ERR_MSG_SUB_REJECTED = \"Subscription rejected.\";\r\nvar ON_CLOSE_MSG_SERVER_INIT = \"ServerInitiated\";\r\nvar ON_CLOSE_MSG_CLIENT_INIT = \"ClientInitiated\";\r\nvar ClientStreaming = (function () {\r\n    function ClientStreaming(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        this.nextSubLocalKey = 0;\r\n        this.handleErrorSubscribing = function (errorResponse) {\r\n            var tag = errorResponse._tag;\r\n            var subLocalKey = tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                return server.serverId !== tag.serverId;\r\n            });\r\n            if (pendingSub.trackedServers.length <= 0) {\r\n                clearTimeout(pendingSub.timeoutId);\r\n                if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                    var reason = (typeof errorResponse.reason === \"string\" && errorResponse.reason !== \"\") ?\r\n                        ' Publisher said \"' + errorResponse.reason + '\".' :\r\n                        \" No reason given.\";\r\n                    var callArgs = typeof pendingSub.params.arguments === \"object\" ?\r\n                        JSON.stringify(pendingSub.params.arguments) :\r\n                        \"{}\";\r\n                    pendingSub.error({\r\n                        message: ERR_MSG_SUB_REJECTED + reason + \" Called with:\" + callArgs,\r\n                        called_with: pendingSub.params.arguments,\r\n                        method: pendingSub.method,\r\n                    });\r\n                }\r\n                else if (pendingSub.status === STATUS_SUBSCRIBED) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                }\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n        };\r\n        this.handleSubscribed = function (msg) {\r\n            var subLocalKey = msg._tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            var serverId = msg._tag.serverId;\r\n            var acceptingServer = pendingSub.trackedServers\r\n                .filter(function (server) {\r\n                return server.serverId === serverId;\r\n            })[0];\r\n            if (typeof acceptingServer !== \"object\") {\r\n                return;\r\n            }\r\n            acceptingServer.subscriptionId = msg.subscription_id;\r\n            _this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;\r\n            var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);\r\n            pendingSub.status = STATUS_SUBSCRIBED;\r\n            if (isFirstResponse) {\r\n                var reconnect = false;\r\n                var sub = pendingSub.subscription;\r\n                if (sub) {\r\n                    sub.setNewSubscription(pendingSub);\r\n                    pendingSub.success(sub);\r\n                    reconnect = true;\r\n                }\r\n                else {\r\n                    sub = new UserSubscription(_this.repository, pendingSub);\r\n                    pendingSub.subscription = sub;\r\n                    pendingSub.success(sub);\r\n                }\r\n                for (var _i = 0, _a = pendingSub.handlers.onConnected; _i < _a.length; _i++) {\r\n                    var handler = _a[_i];\r\n                    try {\r\n                        handler(sub.serverInstance, reconnect);\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.handleEventData = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var trackedServersFound = subscription.trackedServers.filter(function (server) {\r\n                return server.subscriptionId === msg.subscription_id;\r\n            });\r\n            if (trackedServersFound.length !== 1) {\r\n                return;\r\n            }\r\n            var isPrivateData = msg.oob;\r\n            var sendingServerId = trackedServersFound[0].serverId;\r\n            var receivedStreamData = function () {\r\n                return {\r\n                    data: msg.data,\r\n                    server: _this.repository.getServerById(sendingServerId).instance,\r\n                    requestArguments: subscription.params.arguments,\r\n                    message: undefined,\r\n                    private: isPrivateData,\r\n                };\r\n            };\r\n            var onDataHandlers = subscription.handlers.onData;\r\n            var queuedData = subscription.queued.data;\r\n            if (onDataHandlers.length > 0) {\r\n                onDataHandlers.forEach(function (callback) {\r\n                    if (typeof callback === \"function\") {\r\n                        callback(receivedStreamData());\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                queuedData.push(receivedStreamData());\r\n            }\r\n        };\r\n        this.handleSubscriptionCancelled = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var expectedNewLength = subscription.trackedServers.length - 1;\r\n            subscription.trackedServers = subscription.trackedServers.filter(function (server) {\r\n                if (server.subscriptionId === msg.subscription_id) {\r\n                    subscription.queued.closers.push(server.serverId);\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n            if (subscription.trackedServers.length !== expectedNewLength) {\r\n                return;\r\n            }\r\n            if (subscription.trackedServers.length <= 0) {\r\n                clearTimeout(subscription.timeoutId);\r\n                _this.callOnClosedHandlers(subscription);\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            delete _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n        };\r\n        session.on(\"subscribed\", this.handleSubscribed);\r\n        session.on(\"event\", this.handleEventData);\r\n        session.on(\"subscription-cancelled\", this.handleSubscriptionCancelled);\r\n    }\r\n    ClientStreaming.prototype.subscribe = function (streamingMethod, params, targetServers, success, error, existingSub) {\r\n        var _this = this;\r\n        if (targetServers.length === 0) {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" No available servers matched the target params.\",\r\n            });\r\n            return;\r\n        }\r\n        var subLocalKey = this.getNextSubscriptionLocalKey();\r\n        var pendingSub = this.registerSubscription(subLocalKey, streamingMethod, params, success, error, params.methodResponseTimeout || 10000, existingSub);\r\n        if (typeof pendingSub !== \"object\") {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" Unable to register the user callbacks.\",\r\n            });\r\n            return;\r\n        }\r\n        targetServers.forEach(function (target) {\r\n            var serverId = target.server.id;\r\n            var method = target.methods.find(function (m) { return m.name === streamingMethod.name; });\r\n            if (!method) {\r\n                _this.logger.error(\"can not find method \" + streamingMethod.name + \" for target \" + target.server.id);\r\n                return;\r\n            }\r\n            pendingSub.trackedServers.push({\r\n                serverId: serverId,\r\n                subscriptionId: undefined,\r\n            });\r\n            var msg = {\r\n                type: \"subscribe\",\r\n                server_id: serverId,\r\n                method_id: method.gatewayId,\r\n                arguments_kv: params.arguments,\r\n            };\r\n            _this.session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })\r\n                .then(function (m) { return _this.handleSubscribed(m); })\r\n                .catch(function (err) { return _this.handleErrorSubscribing(err); });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.drainSubscriptions = function () {\r\n        var existing = Object.values(this.subscriptionsList);\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        return existing;\r\n    };\r\n    ClientStreaming.prototype.getNextSubscriptionLocalKey = function () {\r\n        var current = this.nextSubLocalKey;\r\n        this.nextSubLocalKey += 1;\r\n        return current;\r\n    };\r\n    ClientStreaming.prototype.registerSubscription = function (subLocalKey, method, params, success, error, timeout, existingSub) {\r\n        var _this = this;\r\n        var subsInfo = {\r\n            localKey: subLocalKey,\r\n            status: STATUS_AWAITING_ACCEPT,\r\n            method: method,\r\n            params: params,\r\n            success: success,\r\n            error: error,\r\n            trackedServers: [],\r\n            handlers: {\r\n                onData: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onData) || [],\r\n                onClosed: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onClosed) || [],\r\n                onConnected: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onConnected) || [],\r\n            },\r\n            queued: {\r\n                data: [],\r\n                closers: [],\r\n            },\r\n            timeoutId: undefined,\r\n            close: function () { return _this.closeSubscription(subLocalKey); },\r\n            subscription: existingSub === null || existingSub === void 0 ? void 0 : existingSub.subscription\r\n        };\r\n        if (!existingSub) {\r\n            if (params.onData) {\r\n                subsInfo.handlers.onData.push(params.onData);\r\n            }\r\n            if (params.onClosed) {\r\n                subsInfo.handlers.onClosed.push(params.onClosed);\r\n            }\r\n            if (params.onConnected) {\r\n                subsInfo.handlers.onConnected.push(params.onConnected);\r\n            }\r\n        }\r\n        this.subscriptionsList[subLocalKey] = subsInfo;\r\n        subsInfo.timeoutId = setTimeout(function () {\r\n            if (_this.subscriptionsList[subLocalKey] === undefined) {\r\n                return;\r\n            }\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                error({\r\n                    method: method,\r\n                    called_with: params.arguments,\r\n                    message: ERR_MSG_SUB_FAILED + \" Subscription attempt timed out after \" + timeout + \" ms.\",\r\n                });\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {\r\n                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                    return (typeof server.subscriptionId !== \"undefined\");\r\n                });\r\n                delete pendingSub.timeoutId;\r\n                if (pendingSub.trackedServers.length <= 0) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                    delete _this.subscriptionsList[subLocalKey];\r\n                }\r\n            }\r\n        }, timeout);\r\n        return subsInfo;\r\n    };\r\n    ClientStreaming.prototype.callOnClosedHandlers = function (subscription, reason) {\r\n        var closersCount = subscription.queued.closers.length;\r\n        var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\r\n        var closingServer;\r\n        if (closingServerId !== undefined && typeof closingServerId === \"string\") {\r\n            closingServer = this.repository.getServerById(closingServerId).instance;\r\n        }\r\n        subscription.handlers.onClosed.forEach(function (callback) {\r\n            if (typeof callback !== \"function\") {\r\n                return;\r\n            }\r\n            callback({\r\n                message: reason || ON_CLOSE_MSG_SERVER_INIT,\r\n                requestArguments: subscription.params.arguments || {},\r\n                server: closingServer,\r\n                stream: subscription.method,\r\n            });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.closeSubscription = function (subLocalKey) {\r\n        var _this = this;\r\n        var subscription = this.subscriptionsList[subLocalKey];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        subscription.trackedServers.forEach(function (server) {\r\n            if (typeof server.subscriptionId === \"undefined\") {\r\n                return;\r\n            }\r\n            subscription.queued.closers.push(server.serverId);\r\n            _this.session.sendFireAndForget({\r\n                type: \"unsubscribe\",\r\n                subscription_id: server.subscriptionId,\r\n                reason_uri: \"\",\r\n                reason: ON_CLOSE_MSG_CLIENT_INIT,\r\n            });\r\n            delete _this.subscriptionIdToLocalKeyMap[server.subscriptionId];\r\n        });\r\n        subscription.trackedServers = [];\r\n        this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);\r\n        delete this.subscriptionsList[subLocalKey];\r\n    };\r\n    return ClientStreaming;\r\n}());\n\nvar ClientProtocol = (function () {\r\n    function ClientProtocol(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        session.on(\"peer-added\", function (msg) { return _this.handlePeerAdded(msg); });\r\n        session.on(\"peer-removed\", function (msg) { return _this.handlePeerRemoved(msg); });\r\n        session.on(\"methods-added\", function (msg) { return _this.handleMethodsAddedMessage(msg); });\r\n        session.on(\"methods-removed\", function (msg) { return _this.handleMethodsRemovedMessage(msg); });\r\n        this.streaming = new ClientStreaming(session, repository, logger);\r\n    }\r\n    ClientProtocol.prototype.subscribe = function (stream, options, targetServers, success, error, existingSub) {\r\n        this.streaming.subscribe(stream, options, targetServers, success, error, existingSub);\r\n    };\r\n    ClientProtocol.prototype.invoke = function (id, method, args, target) {\r\n        var _this = this;\r\n        var serverId = target.id;\r\n        var methodId = method.gatewayId;\r\n        var msg = {\r\n            type: \"call\",\r\n            server_id: serverId,\r\n            method_id: methodId,\r\n            arguments_kv: args,\r\n        };\r\n        return this.session.send(msg, { invocationId: id, serverId: serverId })\r\n            .then(function (m) { return _this.handleResultMessage(m); })\r\n            .catch(function (err) { return _this.handleInvocationError(err); });\r\n    };\r\n    ClientProtocol.prototype.drainSubscriptions = function () {\r\n        return this.streaming.drainSubscriptions();\r\n    };\r\n    ClientProtocol.prototype.handlePeerAdded = function (msg) {\r\n        var newPeerId = msg.new_peer_id;\r\n        var remoteId = msg.identity;\r\n        var isLocal = msg.meta ? msg.meta.local : true;\r\n        var pid = Number(remoteId.process);\r\n        var serverInfo = {\r\n            machine: remoteId.machine,\r\n            pid: isNaN(pid) ? remoteId.process : pid,\r\n            instance: remoteId.instance,\r\n            application: remoteId.application,\r\n            applicationName: remoteId.applicationName,\r\n            environment: remoteId.environment,\r\n            region: remoteId.region,\r\n            user: remoteId.user,\r\n            windowId: remoteId.windowId,\r\n            peerId: newPeerId,\r\n            api: remoteId.api,\r\n            isLocal: isLocal\r\n        };\r\n        this.repository.addServer(serverInfo, newPeerId);\r\n    };\r\n    ClientProtocol.prototype.handlePeerRemoved = function (msg) {\r\n        var removedPeerId = msg.removed_id;\r\n        var reason = msg.reason;\r\n        this.repository.removeServerById(removedPeerId, reason);\r\n    };\r\n    ClientProtocol.prototype.handleMethodsAddedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methods = msg.methods;\r\n        methods.forEach(function (method) {\r\n            _this.repository.addServerMethod(serverId, method);\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleMethodsRemovedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methodIdList = msg.methods;\r\n        var server = this.repository.getServerById(serverId);\r\n        var serverMethodKeys = Object.keys(server.methods);\r\n        serverMethodKeys.forEach(function (methodKey) {\r\n            var method = server.methods[methodKey];\r\n            if (methodIdList.indexOf(method.gatewayId) > -1) {\r\n                _this.repository.removeServerMethod(serverId, methodKey);\r\n            }\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleResultMessage = function (msg) {\r\n        var invocationId = msg._tag.invocationId;\r\n        var result = msg.result;\r\n        var serverId = msg._tag.serverId;\r\n        var server = this.repository.getServerById(serverId);\r\n        return {\r\n            invocationId: invocationId,\r\n            result: result,\r\n            instance: server.instance,\r\n            status: InvokeStatus.Success,\r\n            message: \"\"\r\n        };\r\n    };\r\n    ClientProtocol.prototype.handleInvocationError = function (msg) {\r\n        this.logger.debug(\"handle invocation error \" + JSON.stringify(msg));\r\n        if (\"_tag\" in msg) {\r\n            var invocationId = msg._tag.invocationId;\r\n            var serverId = msg._tag.serverId;\r\n            var server = this.repository.getServerById(serverId);\r\n            var message = msg.reason;\r\n            var context_1 = msg.context;\r\n            return {\r\n                invocationId: invocationId,\r\n                result: context_1,\r\n                instance: server.instance,\r\n                status: InvokeStatus.Error,\r\n                message: message\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                invocationId: \"\",\r\n                message: msg.message,\r\n                status: InvokeStatus.Error,\r\n                error: msg\r\n            };\r\n        }\r\n    };\r\n    return ClientProtocol;\r\n}());\n\nfunction gW3ProtocolFactory (instance, connection, clientRepository, serverRepository, libConfig, interop) {\r\n    var logger = libConfig.logger.subLogger(\"gw3-protocol\");\r\n    var resolveReadyPromise;\r\n    var readyPromise = new Promise(function (resolve) {\r\n        resolveReadyPromise = resolve;\r\n    });\r\n    var session = connection.domain(\"agm\", [\"subscribed\"]);\r\n    var server = new ServerProtocol(session, clientRepository, serverRepository, logger.subLogger(\"server\"));\r\n    var client = new ClientProtocol(session, clientRepository, logger.subLogger(\"client\"));\r\n    function handleReconnect() {\r\n        logger.info(\"reconnected - will replay registered methods and subscriptions\");\r\n        var existingSubscriptions = client.drainSubscriptions();\r\n        for (var _i = 0, existingSubscriptions_1 = existingSubscriptions; _i < existingSubscriptions_1.length; _i++) {\r\n            var sub = existingSubscriptions_1[_i];\r\n            var methodInfo = sub.method;\r\n            var params = Object.assign({}, sub.params);\r\n            logger.info(\"trying to re-subscribe to method \" + methodInfo.name);\r\n            interop.client.subscribe(methodInfo, params, undefined, undefined, sub);\r\n        }\r\n        var registeredMethods = serverRepository.getList();\r\n        serverRepository.reset();\r\n        for (var _a = 0, registeredMethods_1 = registeredMethods; _a < registeredMethods_1.length; _a++) {\r\n            var method = registeredMethods_1[_a];\r\n            var def = method.definition;\r\n            logger.info(\"re-publishing method \" + def.name);\r\n            if (method.stream) {\r\n                interop.server.createStream(def, method.streamCallbacks, undefined, undefined, method.stream);\r\n            }\r\n            else if (method.theFunction && method.theFunction.userCallback) {\r\n                interop.register(def, method.theFunction.userCallback);\r\n            }\r\n            else if (method.theFunction && method.theFunction.userCallbackAsync) {\r\n                interop.registerAsync(def, method.theFunction.userCallbackAsync);\r\n            }\r\n        }\r\n    }\r\n    function handleInitialJoin() {\r\n        if (resolveReadyPromise) {\r\n            resolveReadyPromise({\r\n                client: client,\r\n                server: server,\r\n            });\r\n            resolveReadyPromise = undefined;\r\n        }\r\n    }\r\n    session.onJoined(function (reconnect) {\r\n        clientRepository.addServer(instance, connection.peerId);\r\n        if (reconnect) {\r\n            handleReconnect();\r\n        }\r\n        else {\r\n            handleInitialJoin();\r\n        }\r\n    });\r\n    session.onLeft(function () {\r\n        clientRepository.reset();\r\n    });\r\n    session.join();\r\n    return readyPromise;\r\n}\n\nvar Interop = (function () {\r\n    function Interop(configuration) {\r\n        var _this = this;\r\n        if (typeof configuration === \"undefined\") {\r\n            throw new Error(\"configuration is required\");\r\n        }\r\n        if (typeof configuration.connection === \"undefined\") {\r\n            throw new Error(\"configuration.connections is required\");\r\n        }\r\n        var connection = configuration.connection;\r\n        if (typeof configuration.methodResponseTimeout !== \"number\") {\r\n            configuration.methodResponseTimeout = 30 * 1000;\r\n        }\r\n        if (typeof configuration.waitTimeoutMs !== \"number\") {\r\n            configuration.waitTimeoutMs = 30 * 1000;\r\n        }\r\n        this.unwrappedInstance = new InstanceWrapper(this, undefined, connection);\r\n        this.instance = this.unwrappedInstance.unwrap();\r\n        this.clientRepository = new ClientRepository(configuration.logger.subLogger(\"cRep\"), this);\r\n        this.serverRepository = new ServerRepository();\r\n        var protocolPromise;\r\n        if (connection.protocolVersion === 3) {\r\n            protocolPromise = gW3ProtocolFactory(this.instance, connection, this.clientRepository, this.serverRepository, configuration, this);\r\n        }\r\n        else {\r\n            throw new Error(\"protocol \" + connection.protocolVersion + \" not supported\");\r\n        }\r\n        this.readyPromise = protocolPromise.then(function (protocol) {\r\n            _this.protocol = protocol;\r\n            _this.client = new Client(_this.protocol, _this.clientRepository, _this.instance, configuration);\r\n            _this.server = new Server(_this.protocol, _this.serverRepository);\r\n            return _this;\r\n        });\r\n    }\r\n    Interop.prototype.ready = function () {\r\n        return this.readyPromise;\r\n    };\r\n    Interop.prototype.serverRemoved = function (callback) {\r\n        return this.client.serverRemoved(callback);\r\n    };\r\n    Interop.prototype.serverAdded = function (callback) {\r\n        return this.client.serverAdded(callback);\r\n    };\r\n    Interop.prototype.serverMethodRemoved = function (callback) {\r\n        return this.client.serverMethodRemoved(callback);\r\n    };\r\n    Interop.prototype.serverMethodAdded = function (callback) {\r\n        return this.client.serverMethodAdded(callback);\r\n    };\r\n    Interop.prototype.methodRemoved = function (callback) {\r\n        return this.client.methodRemoved(callback);\r\n    };\r\n    Interop.prototype.methodAdded = function (callback) {\r\n        return this.client.methodAdded(callback);\r\n    };\r\n    Interop.prototype.methodsForInstance = function (instance) {\r\n        return this.client.methodsForInstance(instance);\r\n    };\r\n    Interop.prototype.methods = function (methodFilter) {\r\n        return this.client.methods(methodFilter);\r\n    };\r\n    Interop.prototype.servers = function (methodFilter) {\r\n        return this.client.servers(methodFilter);\r\n    };\r\n    Interop.prototype.subscribe = function (method, options, successCallback, errorCallback) {\r\n        return this.client.subscribe(method, options, successCallback, errorCallback);\r\n    };\r\n    Interop.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {\r\n        return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);\r\n    };\r\n    Interop.prototype.unregister = function (methodFilter) {\r\n        return this.server.unregister(methodFilter);\r\n    };\r\n    Interop.prototype.registerAsync = function (methodDefinition, callback) {\r\n        return this.server.registerAsync(methodDefinition, callback);\r\n    };\r\n    Interop.prototype.register = function (methodDefinition, callback) {\r\n        return this.server.register(methodDefinition, callback);\r\n    };\r\n    Interop.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\r\n    };\r\n    Interop.prototype.waitForMethod = function (name) {\r\n        var pw = new PromiseWrapper();\r\n        var unsubscribe = this.client.methodAdded(function (m) {\r\n            if (m.name === name) {\r\n                unsubscribe();\r\n                pw.resolve(m);\r\n            }\r\n        });\r\n        return pw.promise;\r\n    };\r\n    return Interop;\r\n}());\n\nvar successMessages = [\"subscribed\", \"success\"];\r\nvar MessageBus = (function () {\r\n    function MessageBus(connection, logger) {\r\n        var _this = this;\r\n        this.publish = function (topic, data, options) {\r\n            var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n            var args = _this.removeEmptyValues({\r\n                type: \"publish\",\r\n                topic: topic,\r\n                data: data,\r\n                peer_id: _this.peerId,\r\n                routing_key: routingKey,\r\n                target_identity: target\r\n            });\r\n            _this.session.send(args);\r\n        };\r\n        this.subscribe = function (topic, callback, options) {\r\n            return new Promise(function (resolve, reject) {\r\n                var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n                var args = _this.removeEmptyValues({\r\n                    type: \"subscribe\",\r\n                    topic: topic,\r\n                    peer_id: _this.peerId,\r\n                    routing_key: routingKey,\r\n                    source: target\r\n                });\r\n                _this.session.send(args)\r\n                    .then(function (response) {\r\n                    var subscription_id = response.subscription_id;\r\n                    _this.subscriptions.push({ subscription_id: subscription_id, topic: topic, callback: callback, source: target });\r\n                    resolve({\r\n                        unsubscribe: function () {\r\n                            _this.session.send({ type: \"unsubscribe\", subscription_id: subscription_id, peer_id: _this.peerId });\r\n                            _this.subscriptions = _this.subscriptions.filter(function (s) { return s.subscription_id !== subscription_id; });\r\n                            return Promise.resolve();\r\n                        }\r\n                    });\r\n                })\r\n                    .catch(function (error) { return reject(error); });\r\n            });\r\n        };\r\n        this.watchOnEvent = function () {\r\n            _this.session.on(\"event\", function (args) {\r\n                var data = args.data, subscription_id = args.subscription_id;\r\n                var source = args[\"publisher-identity\"];\r\n                var subscription = _this.subscriptions.find(function (s) { return s.subscription_id === subscription_id; });\r\n                if (subscription) {\r\n                    if (!subscription.source) {\r\n                        subscription.callback(data, subscription.topic, source);\r\n                    }\r\n                    else {\r\n                        if (_this.keysMatch(subscription.source, source)) {\r\n                            subscription.callback(data, subscription.topic, source);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        this.connection = connection;\r\n        this.logger = logger;\r\n        this.peerId = connection.peerId;\r\n        this.subscriptions = [];\r\n        this.session = connection.domain(\"bus\", successMessages);\r\n        this.readyPromise = this.session.join();\r\n        this.readyPromise.then(function () {\r\n            _this.watchOnEvent();\r\n        });\r\n    }\r\n    MessageBus.prototype.ready = function () {\r\n        return this.readyPromise;\r\n    };\r\n    MessageBus.prototype.removeEmptyValues = function (obj) {\r\n        var cleaned = {};\r\n        Object.keys(obj).forEach(function (key) {\r\n            if (obj[key] !== undefined && obj[key] !== null) {\r\n                cleaned[key] = obj[key];\r\n            }\r\n        });\r\n        return cleaned;\r\n    };\r\n    MessageBus.prototype.keysMatch = function (obj1, obj2) {\r\n        var keysObj1 = Object.keys(obj1);\r\n        var allMatch = true;\r\n        keysObj1.forEach(function (key) {\r\n            if (obj1[key] !== obj2[key]) {\r\n                allMatch = false;\r\n            }\r\n        });\r\n        return allMatch;\r\n    };\r\n    return MessageBus;\r\n}());\n\nvar GlueCore = function (userConfig, ext) {\r\n    var gdVersion = Utils.getGDMajorVersion();\r\n    var glue42gd;\r\n    var preloadPromise = Promise.resolve();\r\n    if (gdVersion) {\r\n        if (gdVersion < 3) {\r\n            throw new Error(\"GD v2 is not supported. Use v4 of the API to run in that context.\");\r\n        }\r\n        else if (gdVersion >= 3) {\r\n            glue42gd = window.glue42gd;\r\n            preloadPromise = window.gdPreloadPromise || preloadPromise;\r\n        }\r\n    }\r\n    var glueInitTimer = timer(\"glue\");\r\n    userConfig = userConfig || {};\r\n    ext = ext || {};\r\n    var internalConfig = prepareConfig(userConfig, ext, glue42gd);\r\n    var _connection;\r\n    var _interop;\r\n    var _logger;\r\n    var _metrics;\r\n    var _contexts;\r\n    var _bus;\r\n    var _allowTrace;\r\n    var libs = {};\r\n    function registerLib(name, inner, t) {\r\n        _allowTrace = _logger.canPublish(\"trace\");\r\n        if (_allowTrace) {\r\n            _logger.trace(\"registering \" + name + \" module\");\r\n        }\r\n        var done = function () {\r\n            inner.initTime = t.stop();\r\n            inner.initEndTime = t.endTime;\r\n            inner.marks = t.marks;\r\n            if (_allowTrace) {\r\n                _logger.trace(name + \" is ready - \" + (t.endTime - t.startTime));\r\n            }\r\n        };\r\n        inner.initStartTime = t.startTime;\r\n        if (inner.ready) {\r\n            inner.ready().then(function () {\r\n                done();\r\n            });\r\n        }\r\n        else {\r\n            done();\r\n        }\r\n        if (!Array.isArray(name)) {\r\n            name = [name];\r\n        }\r\n        name.forEach(function (n) {\r\n            libs[n] = inner;\r\n            GlueCore[n] = inner;\r\n        });\r\n    }\r\n    function setupConnection() {\r\n        var initTimer = timer(\"connection\");\r\n        _connection = new Connection(internalConfig.connection, _logger.subLogger(\"connection\"));\r\n        var authPromise = Promise.resolve(internalConfig.auth);\r\n        if (internalConfig.connection && !internalConfig.auth) {\r\n            if (glue42gd) {\r\n                authPromise = glue42gd.getGWToken()\r\n                    .then(function (token) {\r\n                    return {\r\n                        gatewayToken: token\r\n                    };\r\n                });\r\n            }\r\n            else if (typeof window !== \"undefined\" && (window === null || window === void 0 ? void 0 : window.glue42electron)) {\r\n                if (typeof window.glue42electron.gwToken === \"string\") {\r\n                    authPromise = Promise.resolve({\r\n                        gatewayToken: window.glue42electron.gwToken\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                authPromise = Promise.reject(\"You need to provide auth information\");\r\n            }\r\n        }\r\n        return authPromise\r\n            .then(function (authConfig) {\r\n            initTimer.mark(\"auth-promise-resolved\");\r\n            var authRequest;\r\n            if (Object.prototype.toString.call(authConfig) === \"[object Object]\") {\r\n                authRequest = authConfig;\r\n            }\r\n            else {\r\n                throw new Error(\"Invalid auth object - \" + JSON.stringify(authConfig));\r\n            }\r\n            return _connection.login(authRequest);\r\n        })\r\n            .then(function () {\r\n            registerLib(\"connection\", _connection, initTimer);\r\n            return internalConfig;\r\n        })\r\n            .catch(function (e) {\r\n            if (_connection) {\r\n                _connection.logout();\r\n            }\r\n            throw e;\r\n        });\r\n    }\r\n    function setupLogger() {\r\n        var _a;\r\n        var initTimer = timer(\"logger\");\r\n        _logger = new Logger(\"\" + ((_a = internalConfig.connection.identity) === null || _a === void 0 ? void 0 : _a.application), undefined, internalConfig.customLogger);\r\n        _logger.consoleLevel(internalConfig.logger.console);\r\n        _logger.publishLevel(internalConfig.logger.publish);\r\n        if (_logger.canPublish(\"debug\")) {\r\n            _logger.debug(\"initializing glue...\");\r\n        }\r\n        registerLib(\"logger\", _logger, initTimer);\r\n        return Promise.resolve(undefined);\r\n    }\r\n    function setupMetrics() {\r\n        var _a, _b, _c, _d, _e;\r\n        var initTimer = timer(\"metrics\");\r\n        var config = internalConfig.metrics;\r\n        var metricsPublishingEnabledFunc = glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.getMetricsPublishingEnabled;\r\n        var identity = internalConfig.connection.identity;\r\n        var canUpdateMetric = metricsPublishingEnabledFunc ? metricsPublishingEnabledFunc : function () { return true; };\r\n        var disableAutoAppSystem = (_a = (typeof config !== \"boolean\" && config.disableAutoAppSystem)) !== null && _a !== void 0 ? _a : false;\r\n        _metrics = metrics({\r\n            connection: config ? _connection : undefined,\r\n            logger: _logger.subLogger(\"metrics\"),\r\n            canUpdateMetric: canUpdateMetric,\r\n            system: \"Glue42\",\r\n            service: (_c = (_b = identity === null || identity === void 0 ? void 0 : identity.service) !== null && _b !== void 0 ? _b : glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.applicationName) !== null && _c !== void 0 ? _c : internalConfig.application,\r\n            instance: (_e = (_d = identity === null || identity === void 0 ? void 0 : identity.instance) !== null && _d !== void 0 ? _d : identity === null || identity === void 0 ? void 0 : identity.windowId) !== null && _e !== void 0 ? _e : shortid(),\r\n            disableAutoAppSystem: disableAutoAppSystem,\r\n            pagePerformanceMetrics: typeof config !== \"boolean\" ? config === null || config === void 0 ? void 0 : config.pagePerformanceMetrics : undefined\r\n        });\r\n        registerLib(\"metrics\", _metrics, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n    function setupInterop() {\r\n        var initTimer = timer(\"interop\");\r\n        var agmConfig = {\r\n            connection: _connection,\r\n            logger: _logger.subLogger(\"interop\"),\r\n        };\r\n        _interop = new Interop(agmConfig);\r\n        Logger.Interop = _interop;\r\n        registerLib([\"interop\", \"agm\"], _interop, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n    function setupContexts() {\r\n        var hasActivities = (internalConfig.activities && _connection.protocolVersion === 3);\r\n        var needsContexts = internalConfig.contexts || hasActivities;\r\n        if (needsContexts) {\r\n            var initTimer = timer(\"contexts\");\r\n            _contexts = new ContextsModule({\r\n                connection: _connection,\r\n                logger: _logger.subLogger(\"contexts\")\r\n            });\r\n            registerLib(\"contexts\", _contexts, initTimer);\r\n            return _contexts;\r\n        }\r\n        else {\r\n            var replayer = _connection.replayer;\r\n            if (replayer) {\r\n                replayer.drain(ContextMessageReplaySpec.name);\r\n            }\r\n        }\r\n    }\r\n    function setupBus() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var initTimer;\r\n            return __generator(this, function (_a) {\r\n                if (!internalConfig.bus) {\r\n                    return [2, Promise.resolve()];\r\n                }\r\n                initTimer = timer(\"bus\");\r\n                _bus = new MessageBus(_connection, _logger.subLogger(\"bus\"));\r\n                registerLib(\"bus\", _bus, initTimer);\r\n                return [2, Promise.resolve()];\r\n            });\r\n        });\r\n    }\r\n    function setupExternalLibs(externalLibs) {\r\n        try {\r\n            externalLibs.forEach(function (lib) {\r\n                setupExternalLib(lib.name, lib.create);\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    function setupExternalLib(name, createCallback) {\r\n        var initTimer = timer(name);\r\n        var lib = createCallback(libs);\r\n        if (lib) {\r\n            registerLib(name, lib, initTimer);\r\n        }\r\n    }\r\n    function waitForLibs() {\r\n        var libsReadyPromises = Object.keys(libs).map(function (key) {\r\n            var lib = libs[key];\r\n            return lib.ready ?\r\n                lib.ready() : Promise.resolve();\r\n        });\r\n        return Promise.all(libsReadyPromises);\r\n    }\r\n    function constructGlueObject() {\r\n        var feedbackFunc = function (feedbackInfo) {\r\n            if (!_interop) {\r\n                return;\r\n            }\r\n            _interop.invoke(\"T42.ACS.Feedback\", feedbackInfo, \"best\");\r\n        };\r\n        var info = {\r\n            coreVersion: version,\r\n            version: internalConfig.version\r\n        };\r\n        glueInitTimer.stop();\r\n        var glue = {\r\n            feedback: feedbackFunc,\r\n            info: info,\r\n            logger: _logger,\r\n            interop: _interop,\r\n            agm: _interop,\r\n            connection: _connection,\r\n            metrics: _metrics,\r\n            contexts: _contexts,\r\n            bus: _bus,\r\n            version: internalConfig.version,\r\n            userConfig: userConfig,\r\n            done: function () {\r\n                _logger === null || _logger === void 0 ? void 0 : _logger.info(\"done called by user...\");\r\n                return _connection.logout();\r\n            }\r\n        };\r\n        glue.performance = {\r\n            get glueVer() {\r\n                return internalConfig.version;\r\n            },\r\n            get glueConfig() {\r\n                return JSON.stringify(userConfig);\r\n            },\r\n            get browser() {\r\n                return window.performance.timing.toJSON();\r\n            },\r\n            get memory() {\r\n                return window.performance.memory;\r\n            },\r\n            get initTimes() {\r\n                var all = getAllTimers();\r\n                return Object.keys(all).map(function (key) {\r\n                    var t = all[key];\r\n                    return {\r\n                        name: key,\r\n                        duration: t.endTime - t.startTime,\r\n                        marks: t.marks,\r\n                        startTime: t.startTime,\r\n                        endTime: t.endTime\r\n                    };\r\n                });\r\n            }\r\n        };\r\n        Object.keys(libs).forEach(function (key) {\r\n            var lib = libs[key];\r\n            glue[key] = lib;\r\n        });\r\n        glue.config = {};\r\n        Object.keys(internalConfig).forEach(function (k) {\r\n            glue.config[k] = internalConfig[k];\r\n        });\r\n        if (ext && ext.extOptions) {\r\n            Object.keys(ext.extOptions).forEach(function (k) {\r\n                glue.config[k] = ext === null || ext === void 0 ? void 0 : ext.extOptions[k];\r\n            });\r\n        }\r\n        if (ext === null || ext === void 0 ? void 0 : ext.enrichGlue) {\r\n            ext.enrichGlue(glue);\r\n        }\r\n        if (glue42gd && glue42gd.updatePerfData) {\r\n            glue42gd.updatePerfData(glue.performance);\r\n        }\r\n        if (glue.agm) {\r\n            var deprecatedDecorator = function (fn, wrong, proper) {\r\n                return function () {\r\n                    glue.logger.warn(\"glue.js - 'glue.agm.\" + wrong + \"' method is deprecated, use 'glue.interop.\" + proper + \"' instead.\");\r\n                    return fn.apply(glue.agm, arguments);\r\n                };\r\n            };\r\n            var agmAny = glue.agm;\r\n            agmAny.method_added = deprecatedDecorator(glue.agm.methodAdded, \"method_added\", \"methodAdded\");\r\n            agmAny.method_removed = deprecatedDecorator(glue.agm.methodRemoved, \"method_removed\", \"methodRemoved\");\r\n            agmAny.server_added = deprecatedDecorator(glue.agm.serverAdded, \"server_added\", \"serverAdded\");\r\n            agmAny.server_method_aded = deprecatedDecorator(glue.agm.serverMethodAdded, \"server_method_aded\", \"serverMethodAdded\");\r\n            agmAny.server_method_removed = deprecatedDecorator(glue.agm.serverMethodRemoved, \"server_method_removed\", \"serverMethodRemoved\");\r\n        }\r\n        return glue;\r\n    }\r\n    return preloadPromise\r\n        .then(setupLogger)\r\n        .then(setupConnection)\r\n        .then(function () { return Promise.all([setupMetrics(), setupInterop(), setupContexts(), setupBus()]); })\r\n        .then(function () { return _interop.readyPromise; })\r\n        .then(function () {\r\n        return setupExternalLibs(internalConfig.libs || []);\r\n    })\r\n        .then(waitForLibs)\r\n        .then(constructGlueObject)\r\n        .catch(function (err) {\r\n        return Promise.reject({\r\n            err: err,\r\n            libs: libs\r\n        });\r\n    });\r\n};\r\nif (typeof window !== \"undefined\") {\r\n    window.GlueCore = GlueCore;\r\n}\r\nGlueCore.version = version;\r\nGlueCore.default = GlueCore;\n\nexport default GlueCore;\n//# sourceMappingURL=core.es.js.map\n","import ActivityManager from \"../core/activityManager\";\n\n/**\n * Base class for activity entities with reference to the activity manager\n * @private\n */\nexport default class ActivityEntity {\n\n  public _manager: ActivityManager;\n  public _id: string;\n\n  constructor(id: string) {\n    this._id = id;\n  }\n\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Updates the properties of the current object using the properties of another object\n   * These two should have the same id.\n   */\n  public _update(other: ActivityEntity) {\n    if (other._id !== this._id) {\n      throw Error(\"Can not update from entity with different id.\");\n    }\n    this._updateCore(other);\n  }\n\n  public _updateCore(other: ActivityEntity) {\n    return;\n  }\n\n  public _beforeDelete(other: ActivityEntity) {\n    return;\n  }\n}\n","// some small useful functions (so we don't reference underscore or lodash)\n\nexport function isNumber(arg: any) {\n  return typeof arg === \"number\";\n}\n\nexport function isString(arg: any) {\n  return typeof arg === \"string\";\n}\n\nexport function isObject(arg: any) {\n  return typeof arg === \"object\" && arg !== null;\n}\n\nexport function isArray(arg: any) {\n  // TODO optimize\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return toString.call(arg) === \"[object Array]\";\n}\nexport function isUndefined(arg: any) {\n  return typeof arg === \"undefined\";\n}\n\nexport function isUndefinedOrNull(arg: any) {\n  return arg === null || typeof arg === \"undefined\";\n}\n\nexport function isNullOrWhiteSpace(str: string) {\n  return (typeof str !== \"string\" || !str || str.length === 0 || /^\\s*$/.test(str));\n}\n\nexport function isBoolean(obj: any) {\n  return obj === true || obj === false || toString.call(obj) === \"[object Boolean]\";\n}\n\n/**\n *  Checks if an object is empty (has no properties)\n * @private\n */\nexport function isEmpty(arg: any) {\n  for (const prop in arg) {\n    if (arg.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isFunction(arg: any) {\n  return !!(arg && arg.constructor && arg.call && arg.apply);\n}\n\nexport function some<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function first<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return array[index];\n    }\n  }\n  return undefined;\n}\n\nexport function ifNotUndefined<T>(what: T, doWithIt: (what: T) => void) {\n  if (typeof what !== \"undefined\") {\n    doWithIt(what);\n  }\n}\n\nexport function promisify(promise: Promise<any>, successCallback: () => void, errorCallback: () => void) {\n  \"use strict\";\n  if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\n    return promise;\n  }\n\n  if (typeof successCallback !== \"function\") {\n    successCallback = () => { return; };\n  } else if (typeof errorCallback !== \"function\") {\n    errorCallback = () => { return; };\n  }\n\n  promise.then(successCallback, errorCallback);\n}\n","import * as contracts from \"../contracts/contracts\";\nimport Activity from \"./activity\";\nimport ActivityEntity from \"./activityEntity\";\nimport WindowType from \"./windowType\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { WindowDefinition } from \"./windowDefinition\";\n\nimport { Glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\n/**\n * An activity type is a definition template for an activity, consisting of a collection of window types,\n * their layout and an initial activity context.\n *\n * @module activityType\n */\nexport default class ActivityType extends ActivityEntity {\n\n  public _name: string;\n  public _description: string;\n  public _ownerWindow: WindowType;\n  public _helperWindows: WindowType[];\n\n  constructor(name: string, ownerWindow: WindowType, helperWindows?: WindowType[], description?: string) {\n    super(name);\n    this._name = name;\n    this._description = description;\n    this._ownerWindow = ownerWindow;\n    this._helperWindows = helperWindows || [];\n  }\n\n  /**\n   * @var {string} name Name of the activity type\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * @var {string} description description for the activity type\n   */\n  public get description(): string {\n    return this._description;\n  }\n\n  /**\n   * A list of window types that should be created when initiating a new instance of that activity type\n   * @var {windowDefinition[]} helperWindows\n   */\n  public get helperWindows(): WindowType[] {\n    return this._helperWindows.map((hw) => this.covertToWindowDef(hw));\n  }\n\n  /**\n   * @var {windowDefinition} ownerWindow Returns the definition of the owner window for that activity type\n   */\n  public get ownerWindow(): WindowType {\n    return this.covertToWindowDef(this._ownerWindow);\n  }\n\n  /**\n   * Initiates a new activity of this type\n   *\n   * @function initiate\n   * @param {object} context The initial context to be used for the new activity\n   * @param callback\n   * @param configuration\n   * @returns {Promise<activity>}\n   */\n  public initiate(context: object, callback?: contracts.Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    return this._manager.initiate(this._name, context, callback, configuration);\n  }\n\n  public _updateCore(other: ActivityType) {\n    super._updateCore(other);\n    ifNotUndefined(other._description, (x) => this._description = x);\n    ifNotUndefined(other._ownerWindow, (x) => this._ownerWindow = x);\n    ifNotUndefined(other._helperWindows, (x) => this._helperWindows = x);\n  }\n\n  private covertToWindowDef(windowType: any): any {\n    // GD2 + old glue js backward compatible\n    return {\n      type: windowType?.id?.type,\n      name: windowType?.id?.name\n    };\n  }\n}\n","import ActivityEntity from \"./activityEntity\";\nimport ActivityWindow from \"./activityWindow\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport Activity from \"./activity\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window type is a definition of a window, typically configured in ACS.\n *\n * @module windowType\n */\nexport default class WindowType extends ActivityEntity {\n\n  public _name: string;\n  public _appByWindowTypeGetter: (name: string) => void;\n\n  constructor(name: string, appByWindowTypeGetter: (wt: string) => Glue42.AppManager.Application) {\n    super(name);\n    this._name = name;\n    this._appByWindowTypeGetter = appByWindowTypeGetter;\n  }\n\n  /**\n   * Name of the window type\n   * @var {string} name\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Returns the ACS configuration related to this window type (as application object from AppManager API)\n   * @returns {any}\n   */\n  public get config(): any {\n    return this._appByWindowTypeGetter(this._name);\n  }\n\n  /**\n   * @var {activityWindow[]} windows All windows from that type\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ type: this._name });\n  }\n\n  public create(activity: Activity, configuration: any): Promise<ActivityWindow> {\n    const definition: WindowDefinition = (Object as any).assign({ type: this.name, name: this.name, isIndependent: false }, configuration);\n    return this._manager.createWindow(activity, definition);\n  }\n}\n","import { ActivityStatus } from \"./activityStatus\";\n\nexport class EntityEvent<T> {\n    public entity: T;\n    public context: EntityEventContext;\n\n    constructor(entitiy: T, context: EntityEventContext) {\n        this.entity = entitiy;\n        this.context = context;\n    }\n}\n\nexport class EntityEventContext {\n    public type: string;\n\n    constructor(eventType: string) {\n        this.type = eventType;\n    }\n}\n\nexport class ActivityStatusChangeEventContext extends EntityEventContext {\n    public oldStatus: ActivityStatus;\n    public newStatus: ActivityStatus;\n\n    constructor(newStatus: ActivityStatus, oldStatus: ActivityStatus) {\n        super(EntityEventType.StatusChange);\n        this.newStatus = newStatus;\n        this.oldStatus = oldStatus;\n    }\n}\n\nexport class ActivityContextChangedEventContext extends EntityEventContext {\n    public context: object;\n    public updated: object;\n    public removed: string[];\n\n    constructor(context: string | object, updated: object, removed: string[]) {\n        super(EntityEventType.ActivityContextChange);\n        this.context = typeof context === \"string\" ? JSON.parse(context) : context;\n        this.updated = updated;\n        this.removed = removed;\n    }\n}\n\nexport class EntityEventType {\n    public static Added: string = \"added\";\n    public static Removed: string = \"removed\";\n    public static Updated: string = \"updated\";\n    public static Closed: string = \"closed\";\n    public static StatusChange: string = \"statusChange\";\n    public static ActivityContextChange: string = \"activityContextUpdate\";\n    public static ActivityWindowEvent: string = \"activityWindowEvent\";\n    // #deleteme TODO: these are not implemented in HC\n    public static ActivityWindowJoinedActivity: string = \"joined\";\n    public static ActivityWindowLeftActivity: string = \"left\";\n}\n\nexport class ActivityState {\n    public static Created: string = \"created\";\n    public static Started: string = \"started\";\n    public static Destroyed: string = \"destroyed\";\n}\n","import Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport * as util from \"../helpers/util\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { promisify } from \"../helpers/util\";\n\n// A helper class that provides lame activity AGM implementation\n// Can be initialized with or without activity - in case no activity (independent windows outside activity) only\n// subset of the methods work\nexport class ActivityAGM {\n    public static AGM: Glue42Core.AGM.API;\n\n    private _activity: Activity;\n\n    constructor(activity: Activity) {\n        this._activity = activity;\n    }\n\n    public register(definition: string | Glue42Core.AGM.MethodDefinition, handler: (args: object, caller: Glue42Core.AGM.Instance) => object) {\n        this._ensureHasAgm();\n        ActivityAGM.AGM.register(definition, handler);\n    }\n\n    public servers(): Glue42Core.AGM.Instance[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.servers()\n            return [];\n        }\n\n        return this._activity.windows.map(\n            (w: ActivityWindow) => {\n                return w.instance;\n            });\n    }\n\n    public methods(): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.methods()\n            return [];\n        }\n\n        const windows = this._activity.windows;\n        const methodNames: string[] = [];\n        const methods: Glue42Core.AGM.MethodDefinition[] = [];\n\n        // get all windows and their methods, then assemble distinct methods\n        windows.forEach((window) => {\n            const windowMethods = this.methodsForWindow(window);\n            windowMethods.forEach((currentWindowMethod) => {\n                if (methodNames.indexOf(currentWindowMethod.name) === -1) {\n                    methodNames.push(currentWindowMethod.name);\n                    methods.push(currentWindowMethod);\n                }\n            });\n        });\n\n        return methods;\n    }\n\n    public methodsForWindow(window: ActivityWindow): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n        // get instance and use agm to get methods for instance\n        if (!window.instance) {\n            return [];\n        }\n\n        return ActivityAGM.AGM.methodsForInstance(window.instance);\n    }\n\n    /** Possible invoke targets\n     *\n     * \"activity.all\" - [default]\n     * \"activity.best\"\n     * ActivityWindow\n     * [ActivityWindow] -\n     *\n     * classic AGM\n     * \"all\" - agm all\n     * \"best\" - agm best\n     * instance - agm\n     * [ instances ]\n     *\n     */\n    public invoke(\n        methodName: string,\n        arg: object,\n        target: string | Glue42Core.AGM.Instance | ActivityWindow | Glue42Core.AGM.Instance[] | ActivityWindow[],\n        options?: Glue42Core.AGM.InvokeOptions,\n        success?: () => void,\n        error?: () => void): Promise<object> {\n\n        this._ensureHasAgm();\n        const activityServers = this.servers();\n        let serversToInvokeAgainst: Glue42Core.AGM.Instance[] = [];\n\n        if (util.isUndefinedOrNull(target)) {\n            target = \"activity.all\";\n        }\n\n        if (util.isString(target)) {\n            if (target === \"activity.all\") {\n                serversToInvokeAgainst = activityServers;\n            } else if (target === \"activity.best\") {\n                const potentialTargets = activityServers.filter((server) => {\n                    const methods = ActivityAGM.AGM.methodsForInstance(server);\n                    return methods.filter((m) => {\n                        return m.name === methodName;\n                    }).length > 0;\n                });\n                if (potentialTargets.length > 0) {\n                    serversToInvokeAgainst = [potentialTargets[0]];\n                }\n            } else if (target === \"all\" || target === \"best\") {\n                return promisify(ActivityAGM.AGM.invoke(methodName, arg, target, options), success, error);\n            } else {\n                throw new Error(\"Invalid invoke target \" + target);\n            }\n        } else if (util.isArray(target)) {\n            // if the array is not empty\n            if ((target as any).length >= 0) {\n                const firstElem = (target as any)[0];\n                // check argument type\n                if (this._isInstance(firstElem)) {\n                    serversToInvokeAgainst = (target as Glue42Core.AGM.Instance[]).map((instance: Glue42Core.AGM.Instance) => instance);\n                } else if (this._isActivityWindow(firstElem)) {\n                    serversToInvokeAgainst = (target as ActivityWindow[]).map((win: ActivityWindow) => win.instance);\n                } else {\n                    throw new Error(\"Unknown target object\");\n                }\n            }\n        } else {\n            if (this._isInstance(target)) {\n                serversToInvokeAgainst = [target as Glue42Core.AGM.Instance];\n            } else if (this._isActivityWindow(target)) {\n                serversToInvokeAgainst = [(target as ActivityWindow).instance];\n            } else {\n                throw new Error(\"Unknown target object\");\n            }\n        }\n\n        throw new Error(\"Not implemented\");\n        // return promisify(ActivityAGM.AGM.invoke(methodName, arg, serversToInvokeAgainst, options), success, error);\n    }\n\n    public unregister(definition: string | Glue42Core.AGM.MethodDefinition) {\n        this._ensureHasAgm();\n        return ActivityAGM.AGM.unregister(definition);\n    }\n\n    public createStream(methodDefinition: string | Glue42Core.AGM.MethodDefinition,\n                        subscriptionAddedHandler: (request: Glue42Core.AGM.StreamSubscription) => void,\n                        subscriptionRemovedHandler: (request: Glue42Core.AGM.StreamSubscription) => void) {\n        this._ensureHasAgm();\n\n        ActivityAGM.AGM.createStream(methodDefinition, {\n            subscriptionAddedHandler,\n            subscriptionRemovedHandler,\n            subscriptionRequestHandler: undefined\n        });\n    }\n\n    public subscribe(methodDefinition: string | Glue42Core.AGM.MethodDefinition, parameters: object, target: string | Glue42Core.AGM.Instance | Glue42Core.AGM.Instance[]): Promise<Glue42Core.AGM.Subscription> {\n        this._ensureHasAgm();\n        // #deleteme TODO: check servers needed?\n        // const servers = this.servers();\n\n        return ActivityAGM.AGM.subscribe(methodDefinition, parameters);\n    }\n\n    public _ensureHasAgm() {\n        if (util.isUndefinedOrNull(ActivityAGM.AGM)) {\n            throw new Error(\"Agm should be configured to be used in activity\");\n        }\n    }\n\n    public _isInstance(obj: any) {\n        // lame check\n        return obj.application !== undefined;\n    }\n\n    public _isActivityWindow(obj: any) {\n        return obj.instance !== undefined;\n    }\n}\n","import { ActivityDescriptor } from \"./activityDescriptor\";\nimport ActivityManager from \"../core/activityManager\";\nimport Activity from \"./activity\";\n\nexport class AttachedActivityDescriptor implements ActivityDescriptor {\n  private _manager: ActivityManager;\n  private _state: ActivityDescriptor;\n  private _ownerActivityId: string;\n\n  constructor(\n    manager: ActivityManager,\n    ownerActivityId: string,\n    state: ActivityDescriptor) {\n    this._manager = manager;\n    this._ownerActivityId = ownerActivityId;\n    this._state = state;\n  }\n\n  public get ownerId() {\n    return this._state.ownerId;\n  }\n\n  public get windowIds() {\n    return this._state.windowIds;\n  }\n\n  public get frameColor() {\n    return this._state.frameColor;\n  }\n\n  public get context() {\n    return this._state.context;\n  }\n\n  public get tag() {\n    return this._state.tag;\n  }\n\n  public detach(descriptor?: ActivityDescriptor): Promise<Activity> {\n\n    descriptor = descriptor || {};\n\n    const merged: ActivityDescriptor = {};\n\n    Object.keys(this._state).forEach((prop) => {\n      merged[prop] = this._state[prop];\n    });\n\n    merged.context = descriptor.context || merged.context;\n    merged.frameColor = descriptor.frameColor || merged.frameColor;\n\n    return this._manager.detachActivities(this._ownerActivityId, merged);\n  }\n}\n","import * as util from \"../helpers/util\";\n\nconst nextTick = (cb: () => void) => {\n  setTimeout(cb, 0);\n};\n\n/**\n * Convert a Promise to node style callback\n * @private\n */\nexport function nodeify<T>(promise: Promise<T>, callback: any): Promise<T> {\n  if (!util.isFunction(callback)) {\n    return promise;\n  }\n\n  promise.then(\n    (resp) => {\n      nextTick( () => { // not sure if this is needed, promises should be already executed on the event pool\n        callback(null, resp);\n      });\n    },\n    (err) => {\n      nextTick(() => {\n        callback(err, null);\n      });\n    });\n}\n","import * as contracts from \"../contracts/contracts\";\nimport ActivityType from \"./activityType\";\nimport ActivityWindow from \"./activityWindow\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport ActivityEntity from \"./activityEntity\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport { ActivityAGM } from \"../core/activityAGM\";\nimport { CloneOptions } from \"./cloneOptions\";\nimport { AttachedActivityDescriptor } from \"./attachedActivityDescriptor\";\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ifNotUndefined } from \"../helpers/util\";\n\n/**\n * Activity is an instance of an activity type just like an object is an instance of a class\n * in class-based languages (and just like ‘John’ is an instance of a 'Person’).\n *\n * Activity is often used as a synonym for activity instance.\n *\n * Each activity instance has a single owner window and can optionally have one or more helper windows.\n *\n * @module activity\n */\nexport default class Activity extends ActivityEntity {\n\n  public _id: string;\n  public _actType: string;\n  public _status: ActivityStatus;\n  public _context: object;\n  public _ownerId: string;\n  public _agm: ActivityAGM;\n  public _attached: any;\n\n  constructor(\n    id: string,\n    actType: string,\n    status: ActivityStatus,\n    context: object,\n    ownerId: string) {\n    super(id);\n    this._id = id;\n    this._actType = actType;\n    this._status = status;\n    this._context = context;\n    this._ownerId = ownerId;\n    this._agm = new ActivityAGM(this);\n  }\n\n  /**\n   * Activity type\n   * @var {module:activityType} type\n   */\n  public get type(): ActivityType {\n    if (this._manager) {\n      return this._manager.getActivityType(this._actType);\n    }\n    return undefined;\n  }\n\n  /**\n   * Get current activity context. To update use updateContext , to replace setContext\n   * @var {object} context\n   */\n  public get context(): object {\n    return this._context;\n  }\n\n  /**\n   * Get activity status\n   * @var {activityStatus} status\n   */\n  public get status(): ActivityStatus {\n    return this._status;\n  }\n\n  /**\n   * The owner window\n   * @var {module:activityWindow} owner\n   */\n  public get owner(): ActivityWindow {\n    if (!this._ownerId) {\n      return null;\n    }\n    return this._manager.getWindows({ id: this._ownerId })[0];\n  }\n\n  /**\n   * All windows participating in the activity\n   * @var {module:activityWindow[]} windows\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ activityId: this._id });\n  }\n\n  /**\n   * @var {module:activityAGM} agm\n   */\n  public get agm(): ActivityAGM {\n    return this._agm;\n  }\n\n  /**\n   * Joins a specific window to the activity\n   *\n   * @private\n   * @function join\n   * @param window    The window to join\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public addWindow(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.addWindowToActivity(this, window, callback);\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string|windowDefinition} windowType The type of the window to be created\n   * @param callback\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.createWindow(this, windowType, callback);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @param callback\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: contracts.Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    return this._manager.createStackedWindows(this, windowTypes, timeout, callback);\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @private\n   * @param window\n   * @param callback\n   * @returns     Promise for ActivityWindow\n   */\n  public leave(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.leaveWindowFromActivity(this, window, callback);\n  }\n\n  /**\n   * Get all windows participating in the activity from a given type\n   *\n   * @param {string} windowType\n   * @returns {module:activityWindow[]}\n   */\n  public getWindowsByType(windowType: string): ActivityWindow[] {\n    const filter = { activityId: this._id, type: windowType };\n    return this._manager.getWindows(filter);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @param callback\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.setActivityContext(this, context, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @param callback\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.updateActivityContext(this, context, callback);\n  }\n\n  /**\n   * Subscribe for status change events\n   *\n   * @function onStatusChange\n   *\n   * @param {activityStatusChangeHandler} handler Handler function that will receive status notifications\n   */\n  public onStatusChange(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._manager.subscribeActivityEvents((a, ns, os) => {\n      if (a.id === this.id) {\n        handler(a, ns, os);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for window related events, like joined, removed from activity\n   *\n   * @function onWindowEvent\n   * @param {windowEventHandler} handler Handler function that will receive windows events\n   */\n  public onWindowEvent(handler: contracts.ActivityWindowEventHandler): () => void {\n    return this._manager.subscribeWindowEvents((a, w, e) => {\n      if (a.id === this.id) {\n        handler(a, w, e);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} handler Handler function that will receive context related events\n   */\n  public onContextChanged(handler: contracts.ContextUpdateHandler) {\n    this._manager.subscribeActivityContextChanged((act, context, updated, removed) => {\n      if (act.id === this.id) {\n        handler(context, updated, removed, act);\n      }\n    });\n\n    try {\n      // replay the context at the time of subscribing, swallow user exceptions\n      handler(this.context, this.context, [], this);\n    } catch (e) {\n      return;\n    }\n  }\n\n  /**\n   * Stops the activity\n   * @function stop\n   */\n  public stop() {\n    this._manager.stopActivity(this);\n  }\n\n  /**\n   * Clones the activity into a new one\n   * @function clone\n   * @param {CloneOptions} options\n   */\n  public clone(options: CloneOptions) {\n    return this._manager.clone(this, options);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._manager.attachActivities(activityId, this.id, tag);\n  }\n\n  public onActivityAttached(callback: (descriptor: AttachedActivityDescriptor) => void) {\n    this._manager.subscribeActivitiesAttached((newActId: string, oldActId: string, descriptor: AttachedActivityDescriptor) => {\n      if (newActId !== this._id) {\n        return;\n      }\n\n      callback(descriptor);\n    });\n  }\n\n  public onDetached(callback: (newAct: Activity, state: any) => void) {\n    this._manager.subscribeActivitiesDetached((newAct: Activity, originalActivity: Activity, state: any) => {\n      if (originalActivity.id !== this._id) {\n        return;\n      }\n\n      callback(newAct, state);\n    });\n  }\n\n  public _updateCore(other: Activity) {\n    super._updateCore(other);\n    ifNotUndefined(other._actType, (x) => this._actType = x);\n    ifNotUndefined(other._context, (x) => this._context = x);\n    ifNotUndefined(other._ownerId, (x) => this._ownerId = x);\n    if (other._status && (!this._status || (this._status.state !== other._status.state))) {\n      this._status = other._status;\n    }\n  }\n\n  public _updateDescriptors(allStates: any) {\n    this._attached = allStates.map((s: any) => {\n      return new AttachedActivityDescriptor(this._manager, this._id, s);\n    });\n  }\n\n  public get attached(): AttachedActivityDescriptor[] {\n    return this._attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n\n      let callbacksToWait = this.windows.length;\n      if (callbacksToWait === 0) {\n        resolve(this);\n      }\n\n      this.windows.forEach((w) => {\n        w.underlyingWindow.setFrameColor(color, () => {\n          callbacksToWait--;\n          if (callbacksToWait <= 0) {\n            resolve(this);\n          }\n        });\n      });\n\n      setTimeout(() => {\n\n        if (callbacksToWait > 0) {\n          reject(this.id + \" - timed out waiting for setFrameColor with\" + color);\n        }\n\n      }, 5000);\n\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public getFrameColor(): string {\n\n    if (!this.windows || this.windows.length === 0) {\n      return \"\";\n    }\n\n    return this.windows[0].underlyingWindow.frameColor;\n  }\n}\n","/* tslint:disable */\n\nimport * as util from \"./util\";\nimport {Glue42Core} from \"@glue42/core\";\n\nexport class LogLevel {\n  public static Trace: string = \"trace\";\n  public static Debug: string = \"debug\";\n  public static Info: string = \"info\";\n  public static Warn: string = \"warn\";\n  public static Error: string = \"error\";\n}\n\nexport class Logger {\n\n  public static Level: string = LogLevel.Info;\n  public static GlueLogger: Glue42Core.Logger.API;\n\n  private _glueLogger: Glue42Core.Logger.API;\n\n  public static GetNamed(name: string): Logger {\n    return new Logger(name);\n  }\n\n  public static Get(owner: Object): Logger {\n    return new Logger(Logger.GetTypeName(owner));\n  }\n\n  public _name: string;\n\n  constructor(name: string) {\n    this._name = name;\n    // we have a glue logger let's create a new logger for it\n    if (!util.isUndefinedOrNull(Logger.GlueLogger)) {\n      this._glueLogger = Logger.GlueLogger.subLogger(name);\n    }\n  }\n\n  public trace(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.trace(message);\n    } else {\n      if (Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Trace));\n      }\n    }\n  }\n\n  public debug(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.debug(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Debug));\n      }\n    }\n  }\n\n  public info(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.info(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public warn(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.warn(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info ||\n        Logger.Level === LogLevel.Warn) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public error(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.error(message);\n    } else {\n      console.error(this._getMessage(message, LogLevel.Error));\n      console.trace();\n    }\n  }\n\n  public _getMessage(message: string, level: string): string {\n    return \"[\" + level + \"] \" + this._name + \" - \" + message;\n  }\n\n  /**\n   * Returns the function name for a given object (same as constructor.name but cross-browser)\n   */\n  public static GetTypeName(object: object): string {\n    const funcNameRegex = /function (.{1,})\\(/;\n    const results = (funcNameRegex).exec(object.constructor.toString());\n    return (results && results.length > 1) ? results[1] : \"\";\n  }\n}\n","import * as contracts from \"../contracts/contracts\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\n\nimport WindowType from \"./windowType\";\nimport ActivityEntity from \"./activityEntity\";\nimport Activity from \"./activity\";\n\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { EntityEventType } from \"../contracts/entityEvent\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window participating in an activity\n *\n * @module activityWindow\n */\nexport default class ActivityWindow extends ActivityEntity {\n\n    private _logger: Logger = Logger.Get(\"window\");\n\n    private _type: string;\n    private _activityId: string;\n    private _name: string;\n    private _instance: Glue42Core.AGM.Instance;\n    private _isIndependent: boolean;\n    private _windowGetter: () => Glue42.Windows.GDWindow;\n    private _hcWindowId: string;\n\n    constructor(id: string, name: string, type: string, activityId: string, instance: Glue42Core.AGM.Instance, isIndependent: boolean, windowGetter: any,\n                hcWindowId: string) {\n        super(id);\n        this._type = type;\n        this._activityId = activityId;\n        this._name = name;\n        this._instance = instance;\n        this._isIndependent = isIndependent;\n        this._windowGetter = windowGetter;\n        this._hcWindowId = hcWindowId;\n    }\n\n    /**\n     * Return window's title\n     * @function getBounds\n     * @return {Promise<WindowBounds>}\n     */\n    public getBounds(): Promise<WindowBounds> {\n        return this._manager.getWindowBounds(this.id);\n    }\n\n    /**\n     * @var {string} name The window name\n     */\n    public get name(): string {\n        return this._name;\n    }\n\n    /**\n     * @var {bool} isIndependent True if this is an independent window\n     */\n    public get isIndependent(): boolean {\n        return this._isIndependent;\n    }\n\n    /**\n     * @var {module:windowType} type The window type\n     */\n    public get type(): WindowType {\n        if (this._manager) {\n            return this._manager.getWindowType(this._type);\n        }\n        return undefined;\n    }\n\n    /**\n     * @var {module:activity} activity The activity that the window is part of\n     */\n    public get activity(): Activity {\n        if (util.isUndefined(this._activityId)) {\n            return undefined;\n        }\n        return this._manager.getActivityById(this._activityId);\n    }\n\n    /**\n     * @var {bool} isOwner True if the window is the owner of the activity.\n     */\n    public get isOwner(): boolean {\n        const act = this.activity;\n        if (util.isUndefined(act)) {\n            return false;\n        }\n\n        return act.owner.id === this.id;\n    }\n\n    /**\n     * Sets window's visibility\n     *\n     * @function setVisible\n     * @param {boolean} isVisible\n     * @returns {Promise<module:activityWindow>}\n     */\n    public setVisible(isVisible: boolean, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowVisibility(this.id, isVisible);\n    }\n\n    /**\n     * Activate window\n     * @function activate\n     * @param {boolean} focus If true then activate window with focus otherwise activate window without focus\n     */\n    public activate(focus: boolean): Promise<ActivityWindow> {\n        return this._manager.activateWindow(this.id, focus);\n    }\n\n    /**\n     * Sets window's bounds\n     * @function setBounds\n     *\n     * @param {bounds} bounds The new bounds to be applied\n     * @returns  {Promise<module:activityWindow>}\n     */\n    public setBounds(bounds: WindowBounds, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowBounds(this.id, bounds, callback);\n    }\n\n    /**\n     * Closes the window\n     *\n     * @function close\n     * @returns {Promise}\n     */\n    public close(): Promise<any> {\n        return this._manager.closeWindow(this.id);\n    }\n\n    /**\n     * @var {agmInstance} instance The agm instance of that window. You can use this to invoke AGM methods against that window\n     */\n    public get instance(): Glue42Core.AGM.Instance {\n        return this._instance;\n    }\n\n    /**\n     * Returns the window as object from Windows API (glue.windows).\n     *\n     * @var {window} underlyingWindow\n     */\n    public get underlyingWindow(): any {\n        const window = this._windowGetter();\n        if (!window) {\n            // we don't have the window object any more, let's return as much as we can\n            return {\n                id: this._hcWindowId\n            };\n        }\n        return window;\n    }\n\n    public onActivityJoined(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowJoinedActivity, callback);\n    }\n\n    public onActivityRemoved(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowLeftActivity, callback);\n    }\n\n    public _updateCore(other: ActivityWindow) {\n        ifNotUndefined(other._activityId, (x) => this._activityId = x);\n        ifNotUndefined(other._isIndependent, (x) => this._isIndependent = x);\n        ifNotUndefined(other._hcWindowId, (x) => this._hcWindowId = x);\n        ifNotUndefined(other._type, (x) => this._type = x);\n        ifNotUndefined(other._name, (x) => this._name = x);\n\n        if (!util.isUndefinedOrNull(other._instance)) {\n            this._instance = other._instance;\n        }\n    }\n\n    public _subscribeForActivityWindowEvent(eventName: string, callback: (activity: Activity) => void) {\n        this._manager.subscribeWindowEvents((activity, window, event) => {\n            // ignore events not related to this window\n            if (window.id !== this.id) {\n                return;\n            }\n\n            if (event === eventName) {\n                callback(activity);\n            }\n        });\n    }\n\n    public _beforeDelete(other: ActivityWindow) {\n        this._hcWindowId = other._hcWindowId;\n    }\n}\n","/**\n * @typedef {Object} activityStatus Defines activity instance status\n * @property {string} state Current state\n * @property {string} message Message\n * @property {Date} time Time of the last status update\n */\nexport class ActivityStatus {\n  public state: string;\n  public message: string;\n  public time: Date;\n\n  constructor(state: string, message: string, time: Date) {\n    this.state = state;\n    this.message = message;\n    this.time = time;\n  }\n\n  public getState(): string {\n    return this.state;\n  }\n\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public getTime(): Date {\n    return this.time;\n  }\n}\n","import { AnnouncementInfo } from \"../contracts/announcementInfo\";\n\nimport { ActivityBridge } from \"./activityBridge\";\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport { EventHandlerCallback } from \"../contracts/contracts\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport {\n    ActivityContextChangedEventContext,\n    ActivityStatusChangeEventContext,\n    EntityEvent,\n    EntityEventContext,\n    EntityEventType,\n} from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport {\n    ActivityGwMessage,\n    ActivityTypeGwMessage,\n    ActivityTypeGwMessageEntity,\n    GwMessage,\n    PeerCreatedGwMessage,\n    PeerFactoryGwMessage,\n    PeerFactoryGwMessageEntity,\n    PeerRequestedGwMessage,\n} from \"./gw3BridgeMessages\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Glue42 } from \"../../../glue\";\n\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport { ActivityConfig } from \"../activityConfig\";\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { Glue42 as glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = glue42.Activities.OverrideTypeDefinition;\n\nconst gwMessageSuccess = \"success\";\nconst gwMmessageError = \"error\";\n\nconst gwMessageAddActivityTypes = \"add-types\";\nconst gwMmessageActivityTypesAdded = \"types-added\";\nconst gwMessageRemoveActivityTypes = \"remove-types\";\nconst gwMessageActivityTypesRemoved = \"types-removed\";\n\nconst gwMessageActivityCreated = \"created\";\nconst gwMessageActivityDestroyed = \"destroyed\";\nconst gwMessageActivityInitiated = \"initiated\";\nconst gwMmessageJoinActivity = \"join-activity\";\nconst gwMessageJoinedActivity = \"joined\";\nconst gwMessageActivityJoined = \"activity-joined\";\nconst gwMessageLeaveActivity = \"leave-activity\";\nconst gwMessageActivityLeft = \"left\";\nconst gwNmessageMergeActivities = \"merge\";\nconst gwMessageSplitActivities = \"split\";\nconst gwMessageChildrenChanged = \"children-changed\";\nconst gwMessageOwnerChanged = \"owner-changed\";\n\nconst gwMessageAddPeerFactories = \"add-peer-factories\";\nconst gwMessagePeerFactoriesAdded = \"peer-factories-added\";\nconst gwMessageRemovePeerFactories = \"remove-peer-factories\";\nconst gwMessagePeerFactoriesRemoved = \"peer-factories-removed\";\n\nconst gwMessageCreateActivity = \"create\";\nconst gwMessageCreatePeer = \"create-peer\";\nconst gwMessagePeerRequested = \"peer-requested\";\nconst gwMessageReady = \"ready\";\nconst gwMessagePeerCreated = \"peer-created\";\n\nconst gwMessageDestroyActivity = \"destroy\";\nconst gwMessageDisposePeer = \"dispose-peer\";\nconst gwMessageDestroyPeer = \"destroy-peer\";\n\ndeclare let window: any;\ndeclare let process: any;\n\nexport default class GW3Bridge implements ActivityBridge {\n\n    private static activityTypeGwMessageEntityToActivityType(\n        entity: ActivityTypeGwMessageEntity,\n        description: string): ActivityType {\n\n        const nameToWindowType =\n            (windowName: any) =>\n                new WindowType(\n                    windowName,\n                    undefined);\n\n        return new ActivityType(\n            entity.name,\n            entity.owner_type && nameToWindowType(entity.owner_type),\n            entity.helper_types && entity.helper_types.map(nameToWindowType),\n            description);\n    }\n\n    private static peerFactoryGwMessageEntityToWindowType(entity: PeerFactoryGwMessageEntity): WindowType {\n        return new WindowType(\n            entity.peer_type,\n      /* #deleteme TODO: review - appmanager configuration? */(_) => undefined);\n    }\n\n    private static activityGwMessageToActivity(msg: ActivityGwMessage, status: ActivityStatus): Activity {\n        const ownerId = msg.owner !== undefined ? msg.owner.peer_id : msg.owner_id;\n        return new Activity(\n            msg.activity_id,\n            msg.activity_type,\n            status,\n            msg.context_snapshot,\n            ownerId);\n    }\n\n    private static activityToActivityStatusChangeEvent(act: Activity) {\n        return new EntityEvent<Activity>(act, new ActivityStatusChangeEventContext(act.status, undefined));\n    }\n\n    private _connection: Glue42.Connection.API;\n    private _logger: any;\n    private _contexts: Glue42.Contexts.API;\n    private _windows: Glue42.Windows.API;\n\n    private _gw3Session: Glue42Core.Connection.GW3DomainSession;\n\n    // callbacks\n\n    private _activityChangeCallbacks: Array<EventHandlerCallback<EntityEvent<Activity>>> = [];\n    private _activityTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityType>>> = [];\n    private _activityWindowChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityWindow>>> = [];\n    private _windowTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<WindowType>>> = [];\n\n    // state tracking\n    private _peerIdAndFactoryIdToPeerType: any = {};\n    private _peerFactoriesRegisteredByUs: { [index: string]: WindowFactory } = {};\n    private _gw3Subscriptions: any[] = [];\n    private _contextSubscriptions: any = {};\n    private _activityTypesInitiatedFromMe: any = {};\n\n    private _sessionJoinedPromise: Promise<GW3Bridge>;\n    private _sessionJoinedPromiseResolve: (bridge: GW3Bridge) => void;\n    private _activityJoinedPromise: Promise<object>;\n    private _activityJoinedPromiseResolve: (obj: object) => void;\n    private _config: ActivityConfig;\n\n    constructor(config: ActivityConfig) {\n        this._config = config;\n        this._connection = config.connection;\n        this._logger = config.logger;\n        this._contexts = config.contexts;\n        this._windows = config.windows;\n\n        this._sessionJoinedPromise = new Promise<GW3Bridge>((resolve /*, reject */) => {\n            this._sessionJoinedPromiseResolve = resolve;\n        });\n\n        this._activityJoinedPromise = new Promise<object>((resolve /*, reject */) => {\n            this._activityJoinedPromiseResolve = resolve;\n        });\n\n        if (!this._config.activityId) {\n            this._activityJoinedPromiseResolve({});\n        }\n\n        this._gw3Session = this._connection.domain(\n            \"activity\",\n            [\"joined\", \"initiated\", \"peer-created\", \"token\"]);\n\n        if (typeof window !== \"undefined\") {\n            const glue42gd = (window as any).glue42gd;\n            // G4E-1343\n            if (glue42gd && typeof glue42gd.addRefreshHandler === \"function\") {\n                glue42gd.addRefreshHandler((success: any, error: any) => {\n                    this._gw3Session\n                        .send(\n                            {\n                                type: \"reload\"\n                            })\n                        .then(\n                            (msg: any) => {\n                                if (!msg.token) {\n                                    error(\"Expected gateway token for refreshing.\");\n                                    return;\n                                }\n                                try {\n                                    glue42gd.setGWToken(msg.token as string);\n                                } catch (e) {\n                                    error(e.message || e);\n                                    return;\n                                }\n                                success();\n                            },\n                            error);\n                });\n            }\n        }\n    }\n\n    public get bridgeType(): \"GW3\" {\n        return \"GW3\";\n    }\n\n    public init() {\n        // activity types\n        this.forwardActivityTypeMessagesToStatusEventHandlers();\n\n        // activities\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityCreated,\n            this.handleActivityCreatedMessage);\n\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityDestroyed,\n            this.handleActivityDestroyedMessage);\n\n        this.forwardActivityMessagesToStatusEventHandlers();\n\n        this.forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers();\n\n        // window types / peer factories\n\n        // NB: this forward must happen before the handlePeerFactoriesRemoved subscription\n        // since the latter clears state which is used by peerFactoryIdAndOwnerIdToWindowType\n        this.forwardPeerFactoryMessagesToStatusEventHandlers();\n\n        this.forwardPeerFactoryMessagesToPeerFactoryRequests();\n\n        this.subscribe(\n            gwMessagePeerFactoriesAdded,\n            this.handlePeerFactoriesAdded);\n\n        this.subscribe(\n            gwMessagePeerFactoriesRemoved,\n            this.handlePeerFactoriesRemoved);\n\n        // activity windows\n\n        this.forwardActivityWindowMessagesToEventHandlers();\n        //\n\n        this.subscribe(\n            gwMessageDisposePeer,\n      /*(msg)*/() => {\n                if (this._config.disposeRequestHandling === \"dispose\") {\n                    this.dispose();\n                    return;\n                }\n                if (this._config.disposeRequestHandling === \"exit\") {\n                    if (this._windows && typeof this._windows.my() !== \"undefined\") {\n                        this._windows.my().close();\n                        return;\n                    }\n                    if (typeof window !== \"undefined\" && typeof (window as any).close === \"function\") {\n                        window.close();\n                        return;\n                    }\n                    if (typeof process !== \"undefined\" && typeof (process as any).exit === \"function\") {\n                        process.exit();\n                        return;\n                    }\n                }\n            });\n\n        // start domain join handshake\n        this._gw3Session.onJoined(() => {\n\n            if (this._config.mode === \"trackMyOnly\" ||\n                this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                this._sessionJoinedPromiseResolve(this);\n            } else {\n                this._gw3Session\n                    .send(\n                        {\n                            type: \"subscribe\",\n                            activity_types:\n                                (this._config.mode === \"trackAll\" ? [] :\n                                    this._config.mode === \"trackTypes\" ? this._config.typesToTrack : [])\n                        })\n                    .then(() => {\n                        this._sessionJoinedPromiseResolve(this);\n                    });\n            }\n        });\n        this._gw3Session.join();\n    }\n\n    public dispose() {\n        this._gw3Subscriptions.forEach((sub) => sub && this._connection.off(sub));\n        this._gw3Subscriptions.length = 0;\n    }\n\n    // ActivityBridge interface\n\n    public ready(): Promise<object> {\n        return Promise.all([this._sessionJoinedPromise, this._activityJoinedPromise]);\n    }\n\n    public initReady(): Promise<ActivityBridge> {\n        return this._sessionJoinedPromise;\n    }\n\n    public onActivityTypeStatusChange(callback: EventHandlerCallback<EntityEvent<ActivityType>>) {\n        this._activityTypeStatusChangeCallbacks.push(callback);\n    }\n\n    public registerActivityType(\n        activityTypeName: string,\n        ownerWindow: WindowDefinition,\n        helperWindows?: WindowDefinition[],\n        config?: any,\n        description?: string): Promise<ActivityType> {\n\n        const entity: ActivityTypeGwMessageEntity = {};\n        entity.name = activityTypeName;\n        const toActivityPeerConfig = (windowDefinition: WindowDefinition) => ({ type: windowDefinition.type, name: windowDefinition.name, configuration: windowDefinition });\n\n        entity.owner_type = toActivityPeerConfig(ownerWindow);\n        entity.helper_types = helperWindows.map(toActivityPeerConfig);\n\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageAddActivityTypes,\n                    types: [entity]\n                })\n            .then(() => {\n                const activityType = GW3Bridge.activityTypeGwMessageEntityToActivityType(entity, description);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddActivityTypes);\n                return activityType;\n            });\n    }\n\n    public unregisterActivityType(activityTypeName: string): Promise<void> {\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageRemoveActivityTypes,\n                    types: [activityTypeName]\n                })\n            .then(() => {\n                const activityType = new ActivityType(activityTypeName, undefined, undefined, undefined);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Removed)),\n                    gwMessageAddActivityTypes);\n            });\n    }\n\n    public onWindowTypeStatusChange(callback: EventHandlerCallback<EntityEvent<WindowType>>): void {\n        this._windowTypeStatusChangeCallbacks.push(callback);\n    }\n\n    // NB: in GW3, peer factories have ids separate from the ids of the peers they create\n    // in this implementation we keep the two equal for simplicity\n    // NB: we assume only one peer will register a peer factory for a given type; otherwise the\n    // add/remove window types event logic will get messy\n    public registerWindowFactory(\n        windowType: string,\n        factory: WindowFactory,\n        parameters?: any): Promise<void> {\n        if (this._peerFactoriesRegisteredByUs[windowType]) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} already registered.`));\n        }\n\n        this._peerFactoriesRegisteredByUs[windowType] = factory;\n\n        // #deleteme TODO: review success/failure code paths\n        // #deleteme TODO: review - should we create the window type here?\n        const entity = {\n            id: windowType,\n            peer_type: windowType,\n            configuration: parameters\n        };\n        return this._gw3Session.send({\n            type: gwMessageAddPeerFactories,\n            factories: [entity]\n        })\n            .then(() => {\n                this.invokeCallbacks(\n                    this._windowTypeStatusChangeCallbacks,\n                    new EntityEvent(\n                        GW3Bridge.peerFactoryGwMessageEntityToWindowType(entity),\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddPeerFactories);\n            })\n            .catch(() => {\n                delete this._peerFactoriesRegisteredByUs[windowType];\n            });\n    }\n\n    public unregisterWindowFactory(windowType: string): Promise<void> {\n        const factory = this._peerFactoriesRegisteredByUs[windowType];\n        if (!factory) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} not registered.`));\n        }\n\n        delete this._peerFactoriesRegisteredByUs[windowType];\n\n        return this._gw3Session.send({\n            type: gwMessageRemovePeerFactories,\n            factory_ids: [windowType]\n        }).then(() => {\n            this.invokeCallbacks(\n                this._windowTypeStatusChangeCallbacks,\n                new EntityEvent(\n                    new WindowType(windowType, undefined),\n                    new EntityEventContext(EntityEventType.Removed)),\n                gwMessageAddPeerFactories);\n        });\n    }\n\n    public onActivityStatusChange(callback: EventHandlerCallback<EntityEvent<Activity>>) {\n        this._activityChangeCallbacks.push(callback);\n    }\n\n    public initiateActivity(activityType: string, context?: object, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<string> {\n        const initiateMsg: any = {\n            type: gwMessageCreateActivity,\n            activity_type: activityType,\n            initial_context: context,\n        };\n\n        if (this.isOverrideTypeDefinition(configuration)) {\n            initiateMsg.types_override = {\n                owner_type: { type: configuration.owner.type, name: configuration.owner.name, configuration: configuration.owner },\n                helper_types: configuration.helpers && configuration.helpers.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }))\n            };\n        } else {\n            initiateMsg.configuration = configuration && configuration.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }));\n        }\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            initiateMsg,\n            gwMessageActivityInitiated,\n            (msg, requestId) => msg.request_id === requestId,\n            gwMessageActivityCreated,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            gwMessageActivityDestroyed,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            (msg) => msg.activity_id,\n            null).then((id) => {\n                if (this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                    if (!this._activityTypesInitiatedFromMe[activityType]) {\n                        this._activityTypesInitiatedFromMe[activityType] = true;\n\n                        return this._gw3Session\n                            .send(\n                                {\n                                    type: \"subscribe\",\n                                    activity_types: [activityType]\n                                })\n                            .then(() => {\n                                return id;\n                            });\n                    }\n                }\n                return id;\n            });\n    }\n\n    public stopActivity(activity: Activity): Promise<boolean> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyActivity,\n            activity_id: activity.id,\n            reason_uri: \"com.tick42.glue.activity.constants.destroyReason.general\",\n            reason: \"Destroying activity\"\n        }).then((_) => true);\n    }\n\n    public updateActivityContext(activity: Activity, context: any, fullReplace: boolean, removedKeys?: string[]): Promise<void> {\n        if (fullReplace) {\n            // this will currently fail on GW3\n            return this._contexts.set(activity.id, context);\n        } else {\n            removedKeys = removedKeys || [];\n            for (const x of removedKeys) {\n                context[x] = null;\n            }\n            return this._contexts.update(activity.id, context);\n        }\n    }\n\n    public announceWindow(windowType?: string, activityWindowId?: string) {\n        // in the GW3 case we are only joined to an activity after we announce ourselves\n        // so all announcement calls should go in 'registerWindow', not here\n        // (registerWindow registers a window that's not part of an activity, at least yet)\n        throw new Error(\"Invalid operation 'announceWindow' for GW3 protocol\");\n    }\n\n    public registerWindow(type: string, name: string, independent: boolean): Promise<string> {\n\n        let shouldSendReady = typeof this._connection.gatewayToken !== \"undefined\";\n        const peerId = this._connection.peerId;\n\n        // if running in GD3 (glue42gd is there) we should send ready only if we have the activityInfo object in glue\n        if (typeof window !== \"undefined\") {\n            const glue42gd = window.glue42gd;\n            if (glue42gd) {\n                shouldSendReady = typeof glue42gd.activityInfo !== \"undefined\";\n            }\n        }\n\n        if (shouldSendReady) {\n            this._gw3Session.send({\n                type: gwMessageReady,\n            });\n        }\n\n        this.invokeCallbacks(\n            this._activityWindowChangeCallbacks,\n            new EntityEvent<ActivityWindow>(\n                new ActivityWindow(peerId, name, type, undefined, this.getAgmInstance(peerId), independent, this.generateWindowGetter(peerId), undefined),\n                new EntityEventContext(EntityEventType.Added)),\n            \"register window\");\n\n        return Promise.resolve(peerId);\n    }\n\n    public onActivityWindowChange(callback: EventHandlerCallback<EntityEvent<ActivityWindow>>) {\n        this._activityWindowChangeCallbacks.push(callback);\n    }\n\n    public createWindow(activityId: string, windowDefinition: WindowDefinition): Promise<string> {\n\n        // if the user hasn't provided a layout option but has some of left,top,width,height\n        // insert a layout\n        if (!windowDefinition.layout) {\n            if (windowDefinition.left || windowDefinition.width || windowDefinition.height || windowDefinition.top) {\n                windowDefinition.layout = {\n                    mode: \"pixels\",\n                    cellSize: 1,\n                };\n            }\n        }\n\n        const joinPeer = (id: string) => {\n            if (!activityId) {\n                return;\n            }\n            return this.joinActivity(activityId, id, windowDefinition.name)\n                .then(() => {\n                    return id;\n                });\n        };\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            {\n                type: gwMessageCreatePeer,\n                peer_type: windowDefinition.type,\n                peer_name: windowDefinition.name || windowDefinition.type,\n                configuration: windowDefinition,\n                activity_id: activityId,\n            },\n            undefined,\n            undefined,\n            gwMessagePeerCreated,\n            (msg, requestId) => msg.request_id === requestId,\n            undefined,\n            undefined,\n            (msg) => msg.created_id,\n            joinPeer)\n            .then(joinPeer);\n    }\n\n    public closeWindow(id: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyPeer,\n            destroy_peer_id: id\n        }).then((_) => undefined);\n    }\n\n    public getAnnouncementInfo(): AnnouncementInfo {\n        let activityId = this._config.activityId || (this._config.announcementInfo && this._config.announcementInfo.activityId);\n        let activityWindowType = (this._config.announcementInfo && this._config.announcementInfo.activityWindowType);\n        let activityWindowIndependent = (this._config.announcementInfo && this._config.announcementInfo.activityWindowIndependent);\n        let activityWindowName = (this._config.announcementInfo && this._config.announcementInfo.activityWindowName);\n\n        if (typeof window !== \"undefined\" &&\n            typeof window.location !== \"undefined\" &&\n            window.location.search &&\n            typeof URLSearchParams === \"function\") {\n            const searchParams = new URLSearchParams(location.search.slice(1));\n            activityWindowType = activityWindowType || searchParams.get(\"t42PeerType\");\n            activityWindowType = activityWindowType || searchParams.get(\"t42ActivityWindowType\");\n            if (typeof activityWindowIndependent === \"undefined\") {\n                activityWindowIndependent = searchParams.get(\"t42ActivityWindowIndependent\");\n            }\n            activityWindowName = activityWindowName || searchParams.get(\"t42ActivityWindowName\");\n            activityId = activityId || searchParams.get(\"t42ActivityId\");\n        }\n\n        activityWindowType = activityWindowType || \"unknown\";\n        activityWindowIndependent = activityWindowIndependent || false;\n        activityWindowName = activityWindowName || this._connection.peerId;\n\n        return {\n            activityWindowId: undefined, // not member of activity from the get go\n            activityId,\n            activityWindowType,\n            activityWindowIndependent,\n            activityWindowName,\n        };\n    }\n\n    public joinActivity(activityId: string, windowId: string, name?: string): Promise<void> {\n        const maybeName = (name && { name }) || {};\n        return this._gw3Session.send({\n            type: gwMmessageJoinActivity,\n            target_id: windowId,\n            activity_id: activityId,\n            ...maybeName\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, activityId, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                \"activity joined - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity joined - Activity\");\n        });\n    }\n\n    public leaveActivity(activityId: string, windowId: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageLeaveActivity,\n            target_id: windowId,\n            activity_id: activityId\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, null, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                \"activity left - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity left - Activity\");\n        });\n    }\n\n    // purposefully returning empty arrays\n    public getActivityTypes(): Promise<ActivityType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getWindowTypes(): Promise<WindowType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivities(): Promise<Activity[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivityWindows(): Promise<ActivityWindow[]> {\n        return Promise.resolve([]);\n    }\n\n    // N/A\n\n    // ignore for now\n\n    // POSTPONED\n    public createStackedWindows(id: string, windowDefinitions: WindowDefinition[], timeout: number): Promise<string[]> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public getWindowBounds(id: string): Promise<WindowBounds> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowBounds(id: string, bounds: WindowBounds): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public activateWindow(id: string, focus: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowVisibility(id: string, visible: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public cloneActivity(id: string, cloneOptions: CloneOptions): Promise<string> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public attachActivities(from: string, to: string, tag: object): Promise<any> {\n        return this._gw3Session.send({\n            type: gwNmessageMergeActivities,\n            into: to,\n            merge: from\n        });\n    }\n\n    // POSTPONED\n    public detachActivities(activityId: string, newActivityInfo: ActivityDescriptor): Promise<string> {\n        return this._gw3Session.send({\n            type: gwMessageSplitActivities,\n            from: activityId,\n            // split: from\n        }).then(() => \"\");\n    }\n\n    // POSTPONED\n    public onActivitiesAttached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public onActivitiesDetached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    public onActivityAttachedDescriptorsRefreshed(callback: (info: any) => void): void {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public getAttachedDescriptors(): Promise<any[]> {\n        return Promise.resolve([]);\n    }\n\n    // helpers\n\n    // Protocol handling\n\n    private getRandomRequestId() {\n        return this._connection.peerId + \":\" + Math.floor(Math.random() * 1e9) + \"\";\n    }\n\n    private forwardAddedAndRemovedMessagesToEventHandler<TMessage, TEntity>(\n        addedMessageType: string,\n        removedMessageType: string,\n        mapper: (msg: TMessage, isAdded: boolean) => TEntity[],\n        handlers: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n\n        const getGetEntityEvent = (isAdded: boolean) => (entity: any) => new EntityEvent<TEntity>(\n            entity,\n            new EntityEventContext(\n                isAdded ?\n                    EntityEventType.Added :\n                    EntityEventType.Removed));\n\n        let sub1;\n        let sub2;\n\n        sub1 = addedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            addedMessageType,\n            (msg) => mapper(msg, true),\n            getGetEntityEvent(true),\n            handlers);\n\n        sub2 = removedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            removedMessageType,\n            (msg) => mapper(msg, false),\n            getGetEntityEvent(false),\n            handlers);\n\n        return [sub1, sub2].filter((x) => x);\n    }\n\n    private forwardMessageToEventHandler<TMessage, TEntity>(\n        messageType: string,\n        mapper: (msg: TMessage) => TEntity[],\n        getEntityEvent: (entity: TEntity, msg: TMessage) => EntityEvent<TEntity>,\n        handler: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n        return this.subscribe(\n            messageType,\n            (msg: TMessage) => {\n                mapper(msg)\n                    .forEach((ent: any) =>\n                        handler.forEach((h) => h(getEntityEvent(ent, msg))));\n            });\n    }\n\n    private sendCreateAndMapResultingMessagesToPromise<TCreatedMessage extends GwMessage, TPromiseType>(\n        msg: any,\n        initiatedMessageType: string,\n        initiatedMessageFilter: (msg: any, requestId: string) => boolean,\n        createdMessageType: string,\n        createdMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        cancelledMessageType: string,\n        cancelledMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        createdMessageToPromiseResolution: (TCreatedMessage: any) => TPromiseType,\n        listenForRecreates: (result: TPromiseType) => void): Promise<TPromiseType> {\n\n        const reqId = this.getRandomRequestId();\n\n        let resolveCreatedPromise: (arg: any) => void;\n        let rejectCreatedPromise: (arg: any) => void;\n        const createdPromise = new Promise<TPromiseType>((resolve, reject) => {\n            resolveCreatedPromise = resolve;\n            rejectCreatedPromise = reject;\n        });\n\n        let initiatedMessageAck: any = null;\n\n        let initiatedSubscription: any;\n        let createdSubscription: any;\n        let cancelledSubscription: any;\n        let errorSubscription: any;\n\n        const dropSubscriptions = () => {\n            this.dropSubscription(initiatedSubscription);\n            if (!listenForRecreates) {\n                this.dropSubscription(createdSubscription);\n            }\n            this.dropSubscription(cancelledSubscription);\n            this.dropSubscription(errorSubscription);\n        };\n\n        initiatedSubscription = initiatedMessageType &&\n            this.subscribe(\n                initiatedMessageType,\n                (msg4: any) => {\n                    if (!initiatedMessageFilter(msg4, reqId)) {\n                        return;\n                    }\n                    initiatedMessageAck = msg4;\n                    this.dropSubscription(initiatedSubscription);\n                });\n\n        let recreated = false;\n        createdSubscription =\n            this.subscribe(\n                createdMessageType,\n                (msg1: TCreatedMessage) => {\n                    if (!createdMessageFilter(msg1, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    if (recreated) {\n                        if (listenForRecreates) {\n                            listenForRecreates(createdMessageToPromiseResolution(msg1));\n                        }\n                    } else {\n                        recreated = true;\n                        resolveCreatedPromise(createdMessageToPromiseResolution(msg1));\n                    }\n                });\n        cancelledSubscription = cancelledMessageType &&\n            this.subscribe(\n                cancelledMessageType,\n                (msg2: any) => {\n                    if (!cancelledMessageFilter(msg2, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg2);\n                });\n        errorSubscription = cancelledMessageType &&\n            this.subscribe(\n                gwMmessageError,\n                (msg3: any) => {\n                    if (msg3.request_id !== reqId) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg3);\n                });\n\n        msg.request_id = reqId;\n\n        const toReturn = this._gw3Session\n            .send(msg)\n            .then(() => {\n                return createdPromise;\n            });\n        toReturn.then(dropSubscriptions, dropSubscriptions);\n        return toReturn;\n    }\n\n    // Entity Mapping\n\n    private peerFactoryIdAndOwnerIdToWindowType(factoryId: string, ownerId: string) {\n        const peerType = this._peerIdAndFactoryIdToPeerType[ownerId + \":\" + factoryId];\n        if (!peerType) {\n            return null;\n        } else {\n            return new WindowType(peerType, undefined);\n        }\n    }\n\n    private subscribe<TMessage>(messageType: string, handler: (msg: TMessage) => void) {\n        const sub = this._connection.on(\n            messageType,\n            (msg: TMessage) => handler.bind(this)(msg));\n\n        this._gw3Subscriptions.push(sub);\n\n        return sub;\n    }\n\n    private dropSubscription(subscription: any) {\n        if (subscription) {\n            this._connection.off(subscription);\n            delete this._gw3Subscriptions[this._gw3Subscriptions.indexOf(subscription)];\n        }\n    }\n\n    private invokeCallbacks<TEvent>(\n        callbacks: Array<EventHandlerCallback<EntityEvent<TEvent>>>,\n        event: EntityEvent<TEvent>,\n        description?: string) {\n        callbacks.forEach((cb) => {\n            try {\n                cb(event);\n            } catch (err) {\n                this._logger.error(`Error in ${description || event.context.type} callback: ` + JSON.stringify(err));\n            }\n        });\n    }\n\n    private handleActivityCreatedMessage(msg: ActivityGwMessage) {\n        if (!msg.context_id) {\n            this._logger.error(\"Activity created with unknown context_id: \" + msg.activity_id);\n        } else {\n            if (!this._contextSubscriptions[msg.activity_id]) {\n                this.subscribeToContext(msg);\n            }\n        }\n    }\n\n    private async subscribeToContext(msg: ActivityGwMessage): Promise<void> {\n        const activityId = msg.activity_id;\n        this._contextSubscriptions[activityId] =\n            await this._contexts.subscribe(activityId,\n                (data: any, updated: any, removed: string[]) => {\n                    const event = new EntityEvent<Activity>(\n                        new Activity(activityId, undefined, undefined, data, undefined),\n                        new ActivityContextChangedEventContext(data, updated, removed));\n\n                    this.invokeCallbacks(\n                        this._activityChangeCallbacks,\n                        event,\n                        \"context updated\");\n                });\n    }\n\n    private handleActivityDestroyedMessage(msg: ActivityGwMessage) {\n        const unsubscribeContext = this._contextSubscriptions[msg.activity_id];\n        if (typeof unsubscribeContext === \"function\") {\n            unsubscribeContext();\n        }\n        delete this._contextSubscriptions[msg.activity_id];\n    }\n\n    private handlePeerFactoriesAdded(msg: PeerFactoryGwMessage) {\n        msg.factories.forEach((entity: PeerFactoryGwMessageEntity) => {\n            this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + entity.id] = entity.peer_type;\n        });\n    }\n\n    private handlePeerFactoriesRemoved(msg: PeerFactoryGwMessage) {\n        msg.factory_ids.forEach((factoryId: string) => {\n            delete this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + factoryId];\n        });\n    }\n\n    private forwardActivityTypeMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<ActivityTypeGwMessage, ActivityType>(\n            gwMmessageActivityTypesAdded,\n            gwMessageActivityTypesRemoved,\n            (msg: ActivityTypeGwMessage, isAdded) => isAdded\n                ? msg.types.map((t) => GW3Bridge.activityTypeGwMessageEntityToActivityType(t, undefined))\n                : msg.types.map((t) => new ActivityType(t.name, undefined, undefined, undefined)),\n            this._activityTypeStatusChangeCallbacks);\n\n    }\n\n    private forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers() {\n        // if we're created as part of this activity, the JOINED ACTIVITY is\n\n        // the first time we'll hear about it; so let's record the participants\n        for (const activityCreatedMessage of [gwMessageActivityCreated, gwMessageJoinedActivity, gwMessageOwnerChanged]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, ActivityWindow>(\n                activityCreatedMessage,\n                (msg) =>\n                    ([msg.owner || { ...msg, type: msg.peer_type, name: msg.peer_name, peer_id: msg.owner_id }])\n                        .concat(msg.participants || [])\n                        .map((info: any) => new ActivityWindow(info.peer_id, info.name, info.type, msg.activity_id, this.getAgmInstance(info.peer_id), undefined, this.generateWindowGetter(info.peer_id), undefined)),\n                (ent, msg) => new EntityEvent<ActivityWindow>(ent, new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                this._activityWindowChangeCallbacks);\n        }\n    }\n\n    private forwardActivityMessagesToStatusEventHandlers() {\n\n        // see dot-net-activity\\Activity\\ActivityState.cs\n\n        for (const createdMessage of [gwMessageActivityCreated, gwMessageJoinedActivity]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n                createdMessage,\n                (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"started\", \"\", new Date()))],\n                (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n                this._activityChangeCallbacks);\n        }\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityDestroyed,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"destroyed\", msg.reason, new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityInitiated,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageOwnerChanged,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerFactoryGwMessage, WindowType>(\n            gwMessagePeerFactoriesAdded,\n            gwMessagePeerFactoriesRemoved,\n            (msg: PeerFactoryGwMessage, isAdded: boolean) => isAdded\n                ? msg.factories.map(GW3Bridge.peerFactoryGwMessageEntityToWindowType)\n                : msg.factory_ids.map((id) => this.peerFactoryIdAndOwnerIdToWindowType(id, msg.owner_id)).filter((x) => x != null),\n            this._windowTypeStatusChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToPeerFactoryRequests() {\n        this.subscribe(\n            gwMessagePeerRequested,\n            (msg: PeerRequestedGwMessage) => {\n                const factory = this._peerFactoriesRegisteredByUs[msg.peer_factory];\n                if (!factory) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: `Unknown peer factory ${msg.peer_factory}`\n                        });\n                    return;\n                }\n\n                try {\n                    const configuration = msg.configuration || {};\n                    // NB: peer factories (or whoever they're delegating to) need to support whatever activity\n                    // environment (GW3, HC) we're targeting when they're creating peers\n                    // the manager is env agnostic, the bridge will augment the configuration with whatever's required\n\n                    // NB: also, since peers are requested in two ways (single peer with just its configuration,\n                    // or peer created as part of new activity, where the factory receives the aggregate config of\n                    // all peers, combined from ADD ACTIVITY TYPE and CREATE ACTIVITY), the peer factories need to\n                    // be able to handle both configuration structures intelligently.\n                    configuration.gateway_token = configuration.gateway_token || msg.gateway_token;\n                    configuration.peer_factory = configuration.peer_factory || msg.peer_factory;\n                    const promise = factory({\n                        activityId: msg.activity && msg.activity.id,\n                        activityType: msg.activity && msg.activity.type,\n                        type: msg.configuration && msg.configuration.type,\n                        gwToken: configuration.gateway_token,\n                        configuration\n                    });\n                    if (promise && promise.then && promise.catch) {\n                        promise.catch((err) => this._gw3Session.send(\n                            {\n                                type: gwMmessageError,\n                                request_id: msg.request_id,\n                                reason: err && (err.message || JSON.stringify(err))\n                            }));\n                    }\n                } catch (err) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: err && (err.message || JSON.stringify(err))\n                        });\n                }\n            });\n    }\n\n    private forwardActivityWindowMessagesToEventHandlers() {\n        for (const joinedMessage of [gwMessageActivityJoined, gwMessageJoinedActivity]) {\n            this.subscribe(joinedMessage,\n                (msg: any) => {\n                    const joinedId = (joinedMessage === gwMessageActivityJoined) ? msg.joined_id : msg.peer_id;\n                    const joinedType = (joinedMessage === gwMessageActivityJoined) ? msg.joined_type : msg.peer_type;\n                    const joinedName = (joinedMessage === gwMessageActivityJoined) ? msg.joined_name : msg.peer_name;\n\n                    const entity = new ActivityWindow(\n                        joinedId,\n                        joinedName,\n                        joinedType /* for ACTIVITY JOINED */,\n                        msg.activity_id,\n                        this.getAgmInstance(joinedId),\n                        undefined,\n                        this.generateWindowGetter(joinedId),\n                        undefined);\n\n                    // TODO review - what if it's our activity, do we\n                    // even need to subscribe\n                    if (!this._contextSubscriptions[msg.activity_id]) {\n                        this.subscribeToContext(msg).then(() => {\n                            if (joinedMessage === gwMessageJoinedActivity) {\n                                this._activityJoinedPromiseResolve({});\n                            }\n                        });\n                    } else if (joinedMessage === gwMessageJoinedActivity) {\n                        this._activityJoinedPromiseResolve({});\n                    }\n\n                    // TODO review: we might have the context data here already\n                    // why not update it here instead of waiting for subscribeToContext\n                    this.invokeCallbacks(\n                        this._activityWindowChangeCallbacks,\n                        new EntityEvent<ActivityWindow>(\n                            entity,\n                            new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                        joinedMessage);\n\n                });\n        }\n\n        this.subscribe(\n            gwMessageActivityLeft,\n            (msg: any) => {\n                const entity = new ActivityWindow(\n                    msg.left_id,\n                    undefined,\n                    undefined,\n                    null,\n                    this.getAgmInstance(msg.left_id),\n                    undefined,\n                    this.generateWindowGetter(msg.left_id),\n                    undefined);\n\n                this.invokeCallbacks(\n                    this._activityWindowChangeCallbacks,\n                    new EntityEvent<ActivityWindow>(\n                        entity,\n                        new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                    gwMessageActivityLeft);\n            });\n\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerCreatedGwMessage, ActivityWindow>(\n            gwMessagePeerCreated,\n            undefined,\n            (msg) => [\n                new ActivityWindow(\n                    msg.created_id,\n                    undefined /* #deleteme TODO: review - we should know the name if any */,\n                    undefined /* #deleteme TODO: review - we should know the type */,\n                    undefined,\n                    undefined,\n                    undefined,\n                    this.generateWindowGetter(msg.created_id),\n                    undefined)],\n            this._activityWindowChangeCallbacks);\n    }\n\n    private getAgmInstance(id: string): Glue42.AGM.Instance {\n        return this._config.agm.servers().find((s) => s.peerId === id || s.windowId === id);\n    }\n\n    private generateWindowGetter(peerId: string): () => Glue42.Windows.GDWindow {\n        return () => {\n            const server = this.getAgmInstance(peerId);\n            if (!server) {\n                return;\n            }\n            const windowId = server.windowId;\n            return this._config.windows.list().filter((w) => w.id === windowId)[0];\n        };\n    }\n\n    private isOverrideTypeDefinition(value: OverrideTypeDefinition | WindowDefinition[]): value is OverrideTypeDefinition {\n        if (typeof value === \"undefined\") {\n            return false;\n        }\n        if ((value as OverrideTypeDefinition).owner) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { EntityEventType } from \"./../contracts/entityEvent\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\n\nimport ActivityManager from \"./../core/activityManager\";\nimport { Logger } from \"./../helpers/logger\";\nimport * as util from \"./../helpers/util\";\n\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Callback } from \"../contracts/contracts\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface My {\n\n  activity: Activity;\n\n  window: ActivityWindow;\n\n  context: object;\n\n  updateContext(context: object, callback?: any): Promise<object>;\n\n  setContext(context: object, callback?: any): Promise<object>;\n\n  onActivityJoined(callback: (activity: Activity) => void): void;\n\n  onActivityLeft(callback: (activity: Activity) => void): void;\n\n  onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void): void;\n\n  clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity>;\n\n  attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor>;\n\n  setFrameColor(color: string, callback: () => void): Promise<Activity>;\n\n  getFrameColor(): string;\n\n  onFrameColorChanged(callback: () => void): void;\n}\n\n/**\n * A lightweight, single activity oriented subset of the API which should be used by most activity applications.\n * Provides access to the activity of your application (my.activity) and shortcuts to the most commonly used methods\n * (e.g. my.createWindow is a shortcut for my.activity.createWindow)\n *\n * @module my\n */\nexport default class ActivityMy implements My {\n\n  public _myAttached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myDetached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myAttachedTo: Array<(activity: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myDetachedFrom: Array<(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myActivityFrameColorChanged: Array<(frameColor: string) => void> = [];\n  public _myActivityJoinedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myActivityRemovedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myContextUpdateCallbacks: Array<(context: object, delta: object, removed: string[], activity: Activity) => void> = [];\n  public _w: ActivityWindow;\n  public _m: ActivityManager;\n  public _logger: Logger = Logger.Get(this);\n\n  constructor(manager: ActivityManager, windows: any) {\n    this._m = manager;\n    manager.ready()\n      .then((am) => {\n        // Subscribe for events for driving \"my\" logic\n        am.subscribeActivityContextChanged(this._subscribeMyContextChanged.bind(this));\n        am.subscribeWindowEvents(this._subscribeMyWindowEvent.bind(this));\n        am.subscribeActivitiesAttached(this._subscribeActivitiesAttached.bind(this));\n        am.subscribeActivitiesDetached(this._subscribeActivitiesDetached.bind(this));\n        if (windows) {\n          windows.onWindowFrameColorChanged(this._subscribeWindowFrameColorChanged.bind(this));\n        }\n      });\n  }\n\n  /**\n   * The current activity window; can be undefined (if the window is not part of any activity)\n   *\n   * @var {Window} window\n   */\n  public get window(): ActivityWindow {\n    if (util.isUndefinedOrNull(this._w)) {\n      const announcedWindows = this._m.announcedWindows;\n      if (announcedWindows.length > 0) {\n        this._w = announcedWindows[0];\n      }\n    }\n    return this._w;\n  }\n\n  /**\n   * The current activity that the application participates in.\n   * Can be undefined (if currently not part of any activity)\n   *\n   * @var {module:activity} activity\n   */\n  public get activity(): Activity {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return undefined;\n    }\n    return myWin.activity;\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string| windowDefinition} windowType The type of the window to be created\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition): Promise<ActivityWindow> {\n    return this._m.createWindow(this.activity, windowType);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number): Promise<ActivityWindow[]> {\n    return this._m.createStackedWindows(this.activity, windowTypes, timeout);\n  }\n\n  /**\n   * The current activity context. To update use my.updateContext, to replace my.setContext\n   *\n   * @var {object} context\n   */\n  public get context(): object {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return {};\n    }\n\n    return activity.context;\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise<object>((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.updateContext(context, callback);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.setContext(context, callback);\n  }\n\n  public onActivityJoined(callback: (activity: Activity) => void) {\n    this._myActivityJoinedCallbacks.push(callback);\n\n    // replay joined event\n    const myWin = this.window;\n    if (!util.isUndefinedOrNull(myWin) && !util.isUndefinedOrNull(myWin.activity)) {\n      callback(myWin.activity);\n    }\n  }\n\n  public onActivityLeft(callback: (activity: Activity) => void) {\n    this._myActivityRemovedCallbacks.push(callback);\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} callback Handler function that will receive context related events\n   */\n  public onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void) {\n    this._myContextUpdateCallbacks.push(callback);\n\n    // publish initial event\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const activity = myWin.activity;\n    if (util.isUndefinedOrNull(activity)) {\n      return;\n    }\n\n    // NB: either the callback is added before the activity is recorded in the API, or\n    // the activity is recorded before the callback\n    // in the former case, when the activity is seen, the callback will be invoked in _notifyMyContextChanged\n    // in the latter, the callback will be invoked here\n    // in both cases, the callback will be invoked at least once as soon as an activity is recorded\n\n    // see \"long analysis for callback behavior in GW3: several cases\" for full explanation\n\n    callback(activity.context, activity.context, [], activity);\n  }\n\n  public clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity> {\n    const act = this.activity;\n    return this._m.clone(act, options, callback);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId: string;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._m.attachActivities(activityId, this.activity.id, tag);\n  }\n\n  public onActivityAttached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myAttached.push(callback);\n  }\n\n  public onActivityDetached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myDetached.push(callback);\n  }\n\n  public onAttachedToActivity(callback: (activity: Activity, state: AttachedActivityDescriptor) => void) {\n    this._myAttachedTo.push(callback);\n  }\n\n  public onDetachedFromActivity(callback: (detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void)  {\n    this._myDetachedFrom.push(callback);\n  }\n\n  public get attached() {\n    if (!this.activity) {\n      return [];\n    }\n\n    return this.activity.attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n\n    if (this.activity) {\n      return this.activity.setFrameColor(color, callback);\n    } else {\n      return Promise.resolve(null);\n    }\n  }\n\n  public getFrameColor(): string {\n\n    if (this.activity) {\n      return this.activity.getFrameColor();\n    }\n\n    return \"\";\n  }\n\n  public onFrameColorChanged(callback: () => void) {\n    this._myActivityFrameColorChanged.push(callback);\n  }\n\n  private _subscribeMyContextChanged(activity: Activity, context: object, delta: object, removed: string[]) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (activity.id !== myActivity.id) {\n      return;\n    }\n\n    this._notifyMyContextChanged(activity, context, delta, removed);\n  }\n\n  private _subscribeMyWindowEvent(activity: Activity, window: ActivityWindow, event: any) {\n\n    if (util.isUndefinedOrNull(this.window)) {\n      return;\n    }\n\n    // ignore events not related to my window\n    if (this.window.id !== window.id) {\n      return;\n    }\n\n    if (event === EntityEventType.ActivityWindowJoinedActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityJoinedCallbacks);\n\n      // NB: tick42-contexts doesn't raise automatically an update event on join if the snapshot matches\n      // the currently recorded data\n      // revisited: however, it is pushing an update on subscribe() (which is performed by js-activity)\n      // long analysis for callback behavior in GW3: several cases\n      // 1 client calls onContextChanged before joined-activity arrives\n      // then callback is pushed but onContextChanged callback call is skipped\n      //    1-1 js-activity handles joined-activity first; it calls js-context subscribe\n      //    1-1-1 js-context has not seen the activity so far so it doesn't invoke an update\n      //    however, js-context then handles joined-activity and raises an update\n      //    1-1-2 js-context has seen the activity, so it raises an update\n      //    js-context then handles joined-activity and doesn't raise a second update unless the received snapshot is\n      //    different from the last seen context value (can this even happen?)\n      //    1-2 js-context handles joined-activity first\n      //    since js-activity is not subscribed, whether it raises an update or not, it's not propagated\n      //    js-activity then handles joined-activity, performs a subscribe and js-context raises an update\n      // 2 joined-activity arrives, whatever updates are raised by js-activity's subscribe() or js-context's\n      // message handler are not propagated since the callback is not pushed, client then calls onContextChanged,\n      // and the callback is called inside that\n      // also, the callback cannot be invoked first in 1 then 2 or first 2 then 1\n      // => in all cases, a callback is called exactly once as soon as (it's subscribed && the activity is joined)\n      // (in 1-1-2 it *might* be possible to be called twice, first with a slightly out of date context,\n      // then with the joined-activity snapshot, see \"different from the last seen context value\", but it's unlikely,\n      // and not a real issue anyway)\n      // in the HC case, however, case 1 doesn't work since js-context doesn't raise updates on subscribe() nor\n      // joining the activity (#deleteme TODO LATER MINOR: verify), so we need to raise it ourselves\n\n      // 2017-09-08: final revisit (@vnikolov)\n      // since SBGW_D-163 allows automatic subscription to contexts of pre-existing activities, 1-1-2 no longer works\n      // (we might have already seen the latest state before joined-activity so no update will be raised)\n      // for this reason I'm invoking notifyMyContextChanged unconditionally - so we might have multiple\n      // invocations; if this turns into a problem we might add a guard inside notifyMyContextChanged that\n      // checks we're not raising it twice with the same context value\n      //\n      // we might also get a duplicate raise if the sender of an update is also subscribed to the context\n      // if (this._m.usingHc) {\n      this._notifyMyContextChanged(activity, activity.context, null, null);\n      // }\n\n      // #deleteme TODO LATER MAJOR: what about the cases when we're not watching foreign activity contexts?\n    } else if (event === EntityEventType.ActivityWindowLeftActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityRemovedCallbacks);\n      // #deleteme TODO LATER MINOR: should we send null update here?\n    }\n  }\n\n  private _notifyMyWindowEvent(activity: Activity, callbackStore: Array<(activity: Activity, event: any) => void>) {\n    callbackStore.forEach((element) => {\n      try {\n        element(activity, event);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyMyContextChanged(activity: Activity, context: object, delta?: object, removed?: string[]) {\n    delta = delta || {};\n    removed = removed || [];\n\n    this._myContextUpdateCallbacks.forEach( (element) => {\n      try {\n        element(context, delta, removed, activity);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttached(state: AttachedActivityDescriptor) {\n\n    this._myAttached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetached(state: AttachedActivityDescriptor) {\n\n    this._myDetached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttachedTo(state: AttachedActivityDescriptor) {\n\n    this._myAttachedTo.forEach((cb) => {\n      try {\n        cb(this.activity, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetachedFrom(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) {\n\n    this._myDetachedFrom.forEach((cb) => {\n      try {\n        cb(detached, existing, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _subscribeActivitiesAttached(newAct: Activity, state: AttachedActivityDescriptor) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (newAct.id !== myActivity.id) {\n      return;\n    }\n\n    if (state.windowIds.indexOf(myWin.id) >= 0) {\n      this._notifyAttachedTo(state);\n      return;\n    }\n\n    this._notifyAttached(state);\n  }\n\n  private _subscribeActivitiesDetached(newAct: Activity, oldAct: Activity, state: any) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (oldAct.id === myActivity.id) {\n      this._notifyDetached(state);\n    }\n\n    if (newAct.id === myActivity.id) {\n      this._notifyDetachedFrom(newAct, oldAct, state);\n    }\n  }\n\n  private _subscribeWindowFrameColorChanged(window: Glue42.Windows.GDWindow) {\n    const act = this.activity;\n    if (!act) {\n      return;\n    }\n\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id === window.id) {\n      this._myActivityFrameColorChanged.forEach((callback) => {\n        callback(window.frameColor);\n      });\n    }\n  }\n}\n","import {Logger} from \"./logger\";\nimport * as util from \"../helpers/util\";\n/**\n * Class that can be used as a marker for successful completion of a set of events\n * @private\n * @module readyMarker\n */\nexport class ReadyMarker {\n  private _callbacks: Array<(err: any) => void>;\n  private _signals: number;\n  private _error: any;\n  private _logger: Logger;\n  private _name: string;\n\n  /**\n   * Creates new marker\n   * @param name Name of the marker, useful in logging\n   * @param signalsToWait Number of signals(events) that needs to be signaled (completed) before the marker is set as completed\n   */\n  constructor(name: string, signalsToWait: number) {\n    this._logger = Logger.Get(\"ReadyMarker [\" + name + \"]\");\n    this._logger.debug(\"Initializing ready marker for '\" + name + \"' with \" + signalsToWait + \" signals to wait\");\n    if (signalsToWait <= 0) {\n      throw new Error(\"Invalid signal number. Should be > 0\");\n    }\n    this._signals = signalsToWait;\n    this._callbacks = [];\n    this._name = name;\n  }\n\n  /**\n   * Adds a new callback that will be notified when the events are completed (success) or some error happened\n   */\n  public setCallback(callback: (err: any) => void) {\n    if (this.isSet()) {\n      callback(undefined);\n      return;\n    } else if (this.isError()) {\n      callback(this._error);\n      return;\n    }\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Signals for a completion of an event. If this is the last event success callbacks will be called\n   */\n  public signal(message?: string) {\n    this._logger.debug(\"Signaled - \" + message + \" - signals left \" + (this._signals - 1));\n    this._signals--;\n    if (this._signals < 0) {\n      throw new Error(\"Error in ready marker '\" + this._name + \" - signals are \" + this._signals);\n    }\n\n    if (this.isSet()) {\n      this._callbacks.forEach((callback) => {\n        callback(undefined);\n      });\n    }\n  }\n\n  /**\n   * Signals for an error in some of the events. This will notify all callbacks that the marker has failed\n   */\n  public error(error: string) {\n    this._error = error;\n    this._callbacks.forEach((errorCallback) => {\n      errorCallback(error);\n    });\n  }\n\n  /**\n   * Checks if the marker is set (completed)\n   */\n  public isSet() {\n    if (this.isError()) {\n      return false;\n    }\n    return this._signals === 0;\n  }\n\n  /**\n   * Checks if the marker has failed (some of the events has failed)\n   */\n  public isError() {\n    return !util.isUndefined(this._error);\n  }\n\n  /**\n   * Returns the last reported error (undefined if no error)\n   */\n  public getError() {\n    return this._error;\n  }\n}\n","import ActivityEntity from \"../entities/activityEntity\";\nimport {\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { ActivityState } from \"..//contracts/entityEvent\";\n\ndeclare const htmlContainer: any;\n\n/**\n * Collection of ActivityEntities that provides change notifications\n * @module entityCollection\n * @private\n */\nexport class EntityObservableCollection<T extends ActivityEntity> {\n\n  private _items: { [key: string]: T } = {};\n  private _listeners: Array<(item: T, action: EntityEventContext) => void> = [];\n  private _processNew: (entity: T) => void;\n\n  constructor(processNew: (entity: T) => void) {\n    this._processNew = processNew;\n  }\n\n  /**\n   * Adds one item to the collection\n   */\n  public addOne(item: T) {\n    this.add([item]);\n  }\n\n  /**\n   * Adds an array of items to the collection\n   */\n  public add(items: T[]) {\n    items.forEach((element) => {\n      this.process(new EntityEvent<T>(element, new EntityEventContext(EntityEventType.Added)));\n    });\n  }\n\n  /**\n   * Process existing EntityEvent\n   */\n  public process(event: EntityEvent<T>): T {\n\n    const context = event.context;\n    const type = context.type;\n    const entity = event.entity;\n\n    // here we're populating some data which particular implementations (e.g.\n    // GW3) can't provide\n\n    // TODO: extract these cases into external filters\n\n    // activity status change without old status?\n    // grab it from the existing entity\n    if (type === EntityEventType.StatusChange &&\n      !(context as ActivityStatusChangeEventContext).oldStatus) {\n      const act = this._items[entity.id] as any as Activity;\n      if (act) {\n        (context as ActivityStatusChangeEventContext).oldStatus = act.status;\n      }\n    }\n\n    // the GW3 bridge notifies us of possible status changes (it's mostly stateless so\n    // it can't/doesn't distinguish between JOINED ACTIVITY for an activity we already\n    // know about vs a brand new activity. for this reason, we just coalesce status\n    // updates which indicate the same state.\n    if (type === EntityEventType.StatusChange &&\n      (context as ActivityStatusChangeEventContext).oldStatus &&\n      (context as ActivityStatusChangeEventContext).newStatus &&\n      (context as ActivityStatusChangeEventContext).oldStatus.state ===\n      (context as ActivityStatusChangeEventContext).newStatus.state) {\n      context.type = EntityEventType.Updated;\n    }\n\n    // GW3: coalesce multiple joined/left events\n\n    if (typeof htmlContainer === \"undefined\") {\n      if (type === EntityEventType.ActivityWindowJoinedActivity &&\n        this._items[entity.id] &&\n        (this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n      if (type === EntityEventType.ActivityWindowLeftActivity &&\n        this._items[entity.id] &&\n        !(this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n    }\n\n    // update internal collections (adding the entity or updating existing entity). From that\n    // point start using the internalEntity\n    // NB: undefined properties are coalesced, null properties represent removals\n    const internalEntity = this._updateInternalCollections(entity, type, context);\n    this._notifyListeners(internalEntity, context);\n    return internalEntity;\n  }\n\n  /**\n   * Gets all items from the collection.\n   */\n  public get(): T[] {\n    const result = [];\n    for (const key in this._items) {\n      if (this._items.hasOwnProperty(key)) {\n        const element = this._items[key];\n        result.push(element);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets item by name/id\n   * @param name  Name/id of the item to get\n   * @returns     Item if found; undefined if not\n   */\n  public getByName(name: string) {\n    // this does not work for some reason\n    // return this._items[name];\n    for (const key in this._items) {\n      if (key === name) {\n        return this._items[key];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Gets a item if in the collection or waits for it to appear\n   * @param name\n   * @returns {Promise<T>}\n   */\n  public getOrWait(name: string): Promise<T> {\n    return new Promise<T>((resolve) => {\n      const entityAddedHandler = (entity: T) => {\n        if (entity.id !== name) {\n          return;\n        }\n        resolve(entity);\n        this.unsubscribe(entityAddedHandler);\n      };\n      this.subscribe(entityAddedHandler);\n\n      // try to get right away - if not here wait for it to appear\n      const window = this.getByName(name);\n      if (window) {\n        this.unsubscribe(entityAddedHandler);\n        resolve(window);\n        return;\n      }\n    });\n  }\n\n  /**\n   * Subscribes a listener for changes\n   * @param handler Callback for changes\n   */\n  public subscribe(handler: (act: T, action: EntityEventContext) => void): () => void {\n    this._listeners.push(handler);\n    // replay existing items for new subscribers\n    Object.keys(this._items).forEach((key) => {\n      const element = this._items[key];\n      handler(element, new EntityEventContext(EntityEventType.Added.toString()));\n    });\n\n    return () => {\n      this.unsubscribe(handler);\n    };\n  }\n\n  /**\n   *  Unsubscribes a listener\n   */\n  public unsubscribe(handler: (act: T, action: EntityEventContext) => void) {\n    const index = this._listeners.indexOf(handler);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Notify all listeners for some event\n   */\n  private _notifyListeners(entity: T, context: EntityEventContext) {\n    this._listeners.forEach((listener) => {\n      try {\n        listener(entity, context);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n\n  /**\n   * Update internal collections (usually after some kind of modification event has arrived)\n   */\n  private _updateInternalCollections(entity: T, type: EntityEventType, context: any) {\n    const entityAsAny = (entity as any);\n\n    // #deleteme TODO: refactor - currently we apply some rules for each type\n    const isActivityDestroy =\n      (type === EntityEventType.StatusChange &&\n        entityAsAny.status &&\n        entityAsAny.status.state === ActivityState.Destroyed) ||\n      (type === EntityEventType.StatusChange &&\n        context &&\n        context.newStatus &&\n        context.newStatus.state === ActivityState.Destroyed);\n\n    // #deleteme TODO: verify this stuff\n    // windows have two states - removed from activity and closed (TODO: this only works in GD 2.1 and later)\n    const isWindowClose = type === EntityEventType.Closed;\n    const isTypeRemove = type === EntityEventType.Removed && typeof entityAsAny.isIndependent === \"undefined\";\n\n    if (isTypeRemove || isWindowClose || isActivityDestroy) {\n\n      const oldEntity = this._items[entity.id];\n      delete this._items[entity.id];\n      // on remove return the input entity\n      this._processNew(entity);\n      if (oldEntity) {\n        entity._beforeDelete(oldEntity);\n      }\n      return entity;\n    } else {\n      const key = entity.id;\n      // if new object add, otherwise clone object properties\n      if (!this._items.hasOwnProperty(key)) {\n        this._processNew(entity);\n        this._items[entity.id] = entity;\n      } else {\n        this._items[entity.id]._update(entity);\n      }\n    }\n\n    return this._items[entity.id];\n  }\n}\n","﻿/* tslint:disable */\nimport { ActivityContextUpdateHandler, Callback } from \"../contracts/contracts\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport {\n  ActivityContextChangedEventContext,\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\n\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport Activity from \"../entities/activity\";\nimport ActivityEntity from \"../entities/activityEntity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport WindowSource from \"../entities/windowSource\";\n\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ReadyMarker } from \"../helpers/readyMarker\";\nimport { EntityObservableCollection } from \"../helpers/entityObservableCollection\";\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\n\nimport { ActivityBridge } from \"../bridges/activityBridge\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { ActivityState } from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n/* tslint:enable */\n\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\ndeclare const htmlContainer: any;\n\nexport default class ActivityManager {\n  private _bridge: ActivityBridge;\n  private _readyMarker: ReadyMarker;\n  private _dataReadyMarker: ReadyMarker;\n  private _descriptorsMarker: ReadyMarker;\n\n  private _activityTypes: EntityObservableCollection<ActivityType>;\n  private _windowTypes: EntityObservableCollection<WindowType>;\n  private _activities: EntityObservableCollection<Activity>;\n  private _windows: EntityObservableCollection<ActivityWindow>;\n  private _logger: Logger = Logger.Get(\"activityManager\");\n  private _announcedWindows: ActivityWindow[] = [];\n  private _attachedCallbacks: Array<(newAct: any, descriptor: any) => void> = [];\n  private _detachedCallbacks: Array<(newAct: any, oldAct: Activity, descriptor: any) => void> = [];\n  private _frameColorChangesCallbacks: Array<(act: Activity, frameColor: string) => void> = [];\n  private _windowHandlers: any[][] = [];\n\n  public get usingHc(): boolean {\n    return this._bridge.bridgeType === \"HC\";\n  }\n\n  public get announcedWindows(): ActivityWindow[] {\n    return this._announcedWindows;\n  }\n\n  public set announcedWindows(v: ActivityWindow[]) {\n    throw new Error(\"not allowed\");\n  }\n\n  constructor(bridge: ActivityBridge, autoAnnounce: boolean, windows: any) {\n    this._bridge = bridge;\n    this._activityTypes = new EntityObservableCollection<ActivityType>((e) => this._grabEntity(e));\n    this._windowTypes = new EntityObservableCollection<WindowType>((e) => this._grabEntity(e));\n    this._activities = new EntityObservableCollection<Activity>((e) => this._grabEntity(e));\n    this._windows = new EntityObservableCollection<ActivityWindow>((e) => this._grabEntity(e));\n\n    // signals to wait for - get AT, get WT, get Activities and get Windows\n    this._dataReadyMarker = new ReadyMarker(\"Activity Manager Data\", [\"GetActivityTypes\", \"GetWindowTypes\", \"GetActivities\", \"GetWindows\"].length);\n    this._descriptorsMarker = new ReadyMarker(\"Attached Activities Descriptors\", [\"GetDescriptors\"].length);\n\n    // waiting for activity data first\n\n    // NB: in the GW3 case, we don't have the ability to request data at will\n    // but need wait for delta messages\n    // So GW3Bridge returns empty arrays from the get() calls\n    // We're relying on the fact that the GW3 bridge will wait\n    // until resolving its .ready()\n\n    if (autoAnnounce) {\n      // if auto announce replace the ready marker, so:\n      // 1) wait for data\n      // 2) get descriptors\n      // 3) announce the current window\n\n      this._readyMarker = new ReadyMarker(\"Activity Manager Announce\", [\"Announcement\"].length);\n      this._dataReadyMarker.setCallback((dataErr: any) => {\n        if (dataErr) {\n          this._readyMarker.error(dataErr);\n        }\n\n        this._descriptorsMarker.setCallback((err: any) => {\n\n          if (err) {\n            this._readyMarker.error(err);\n          }\n\n          this._logger.debug(\"Auto announcing window\");\n          // signal no matter if it failed or not\n          this.announceWindow()\n            .then((w) => {\n              // NB: this creates glue.activities.my.window\n              this._announcedWindows.push(w);\n              this._readyMarker.signal(\"Successfully announced window with id '\" + w.id + \"'\");\n            })\n            .catch((errCatch) => {\n              this._logger.debug(\"Will not announce window - \" + errCatch);\n              this._readyMarker.signal();\n            });\n        });\n\n        this.refreshDescriptors();\n      });\n    } else {\n      // TODO: not sure if this still works\n      this._readyMarker = this._dataReadyMarker;\n    }\n\n    this._bridge.onActivitiesAttached((e) => {\n      this._handleActivitiesAttached(e);\n    });\n    this._bridge.onActivitiesDetached((e) => {\n      this._handleActivitiesDetached(e);\n    });\n    this._bridge.onActivityAttachedDescriptorsRefreshed((e) => {\n      this._handleActivityDescriptorsRefreshed(e);\n    });\n    if (windows) {\n      windows.onWindowFrameColorChanged(this._handleWindowFrameColorChanged.bind(this));\n    }\n\n    // initialize the bridge\n    this._bridge.init();\n\n    // NB: there is no race condition here.\n    // Since browser/Node JS is a single-threaded environment, assuming no events on _bridge\n    // fire inside .init(), this subscribe will catch anything that comes between it and the init() call\n    this._subscribeForData();\n\n    // NB: in GW3 case, the initial state messages after a JOIN come in before the JOIN's SUCCESS\n    // message (see https://confluence.tick42.com:8443/display/TD/Global+Gateway+Domain#GlobalGatewayDomain-JOIN)\n    // so the .initReady().then() callback will only get invoked after we've received the initial domain\n    // state. We need to be ready to handle events before that, hence the _subscribeForData() above.\n    // what's more, our own JOINED ACTIVITY will come only after we've sent our READY, hence waiting\n    // for bridge.ready() in the manager's ready()\n\n    // wait for it to become ready and then start getting/subscribing for data\n    this._bridge\n      .initReady()\n      .then((aw) => {\n        this._getInitialData();\n      })\n      .catch((error) => {\n        // tslint:disable-next-line\n        console.log(error);\n      });\n  }\n\n  public ready(callback?: (err: string, manager: ActivityManager) => void): Promise<ActivityManager> {\n    const promise = new Promise<ActivityManager>((resolve, reject) => {\n      this._readyMarker.setCallback(\n        (err) => {\n          if (!err) {\n            resolve(this);\n          } else {\n            reject(this._readyMarker.getError());\n          }\n        });\n    });\n\n    return nodeify(Promise.all([this._bridge.ready(), promise]).then(() => this), callback);\n  }\n\n  /**\n   * @returns All known activity types\n   */\n  public getActivityTypes(): ActivityType[] {\n    return this._activityTypes.get();\n  }\n\n  /**\n   * Gets ActivityType by name\n   * @param name  Name to search for\n   * @returns     If found the @type ActivityType; otherwise undefined\n   */\n  public getActivityType(name: string): ActivityType {\n    return this._activityTypes.getByName(name);\n  }\n\n  /**\n   * Registers a new activity type\n   * @param activityTypeName      The name of the activity type to be created\n   * @param ownerWindowType       The type of the owner window or a WindowDefinition for the owner window\n   * @param helperWindowTypes     Types of helper windows (or WindowDefinitions for helper windows) for that activity type\n   * @param config                (HC only, deprecated) Layout config\n   * @param description           (HC only, deprecated) Description for the new activity type\n   * @param callback              (Optional) Callback for results - if not specified the method will return a promise\n   */\n  public registerActivityType(\n    activityTypeName: string,\n    ownerWindowType: string | WindowDefinition,\n    helperWindowTypes?: string[] | WindowDefinition[],\n    config?: any,\n    description?: string,\n    callback?: Callback<ActivityType>): Promise<ActivityType> {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n\n      // activityTypeName checks\n      if (util.isUndefinedOrNull(activityTypeName)) {\n        reject(\"activityTypeName argument can not be undefined\");\n        return;\n      }\n      if (!util.isString(activityTypeName)) {\n        reject(\"activityTypeName should be string\");\n        return;\n      }\n      // check if type is already defined\n      const actType = this.getActivityType(activityTypeName);\n      if (!util.isUndefinedOrNull(actType)) {\n        reject(\"Activity type '\" + activityTypeName + \"' already exists\");\n        return;\n      }\n\n      // ownerWindowType checks\n      let ownerDefinition: WindowDefinition;\n      if (util.isUndefined(ownerWindowType)) {\n        reject(\"Owner window type can not be undefined\");\n        return;\n      }\n      if (util.isString(ownerWindowType)) {\n        ownerDefinition = { type: (ownerWindowType as string), name: \"\", isIndependent: false, arguments: {} };\n      } else {\n        ownerDefinition = (ownerWindowType as WindowDefinition);\n      }\n\n      // helperWindowTypes checks\n      const helperDefinitions: WindowDefinition[] = [];\n      if (!util.isUndefined(helperWindowTypes) && util.isArray(helperWindowTypes)) {\n        // tslint:disable-next-line\n        for (const index in helperWindowTypes) {\n          const item = helperWindowTypes[index];\n          if (util.isString(item)) {\n            const definition = {\n              type: (item as string),\n              name: \"\",\n              isIndependent: false,\n              arguments: {},\n              relativeTo: \"\",\n              relativeDirection: \"\",\n              windowStyleAttributes: {}\n            };\n            helperDefinitions.push(definition);\n          } else {\n            helperDefinitions.push(item as WindowDefinition);\n          }\n        }\n      }\n\n      // redirect to bridge\n      this._bridge\n        .registerActivityType(activityTypeName,\n          ownerDefinition,\n          helperDefinitions,\n          config,\n          description)\n        .then((activityType) => {\n          // add to from collections\n          this._grabEntity(activityType);\n          resolve(activityType);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregister existing activity type\n   * @param type The name of the activity type to be removed\n   */\n  public unregisterActivityType(type: string, callback?: Callback<any>) {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(type);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + type + \"' does not exists\");\n        return;\n      }\n      this._bridge.unregisterActivityType(type).then(() => resolve(actType), reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Initiates a new activity from the given type.\n   * @param activityType  The ActivityType to initiate\n   * @param context       The initial context of the activity\n   * @param callback      Callback for result\n   * @param configuration Optional configuration passed to window/peer factories for the new activity's participants\n   * @returns             Promise for activity\n   */\n  public initiate(activityType: string, context?: object, callback?: Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(activityType);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + activityType + \"' does not exists\");\n        return;\n      }\n\n      this._bridge\n        .initiateActivity(activityType, context, configuration)\n        .then((actId) => {\n\n          this._activities\n            .getOrWait(actId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivityTypeEvents(handler: (act: ActivityType, action: string) => void) {\n    this._activityTypes.subscribe((at, context) => {\n      handler(at, context.type);\n    });\n  }\n\n  /**\n   * @returns All known WindowTypes\n   */\n  public getWindowTypes(): WindowType[] {\n    return this._windowTypes.get();\n  }\n\n  /**\n   * Gets WindowType by name\n   * @param name  The name of the type @type WindowType\n   * @returns     WindowType if found; undefined otherwise\n   */\n  public getWindowType(name: string): WindowType {\n    return this._windowTypes.getByName(name);\n  }\n\n  /**\n   * Registers a factory for a given WindowType. The factory will be called once window of that type is requested\n   * @param windowType   Window type that will be constructed from the factory. Can be a string (name of the window type)\n   * or object that has name, description properties\n   * @param factoryMethod      The factory that will construct Windows of that type\n   * @param description\n   * @param callback\n   * @param configuration\n   * @returns {}\n   */\n  public registerWindowFactory(\n    windowType: any,\n    factoryMethod: WindowFactory,\n    callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (util.isObject(windowType)) {\n        windowType = windowType.getName();\n      } else if (!util.isString(windowType)) {\n        reject(\"windowType should be string or object that has getName method\");\n        return;\n      }\n\n      this._bridge\n        .registerWindowFactory(windowType, factoryMethod)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregisters all factories for a given WindowType.\n   * @param windowType   Window type that is constructed from the factory.\n   * @param callback\n   * @returns {}\n   */\n  public unregisterWindowFactory(windowType: string, callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (!util.isString(windowType)) {\n        reject(\"windowType should be a string\");\n        return;\n      }\n\n      this._bridge\n        .unregisterWindowFactory(windowType)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * @returns All started activities\n   * @param activityType Can be a string or @type ActivityType. If string a new activityType will be created using the string for name.\n   * @returns Array of Activity objects\n   */\n  public getActivities(activityType?: string | ActivityType | string[] | ActivityType[]): Activity[] {\n    let act = this._activities.get();\n    act = act.filter((a) => a._ownerId);\n    if (!activityType) {\n      return act;\n    }\n    let types: any = activityType;\n    if (util.isString(activityType)) {\n      types = [activityType];\n    } else if (activityType instanceof ActivityType) {\n      types = [activityType.name];\n    } else if (activityType instanceof Array) {\n      // TODO check if string array or array of ActivityTypes\n    } else {\n      throw new Error(\"Invalid input argument 'activityType' = \" + activityType);\n    }\n\n    return act.filter((at: Activity) => {\n      const type = at.type;\n      return util.some(types, (t: ActivityType) => {\n        return type.id === t.id;\n      });\n    });\n  }\n\n  /**\n   * Returns Activity by ID\n   */\n  public getActivityById(id: string): Activity {\n    return this._activities.getByName(id);\n  }\n\n  /**\n   * Initialises activity for the current window - by doing this the window is announced as activity aware to the other participants\n   * @param windowType            Type of window\n   * @param activityWindowId      The id of the window that was created\n   * @returns {}                  Promise for an activity window (joined to an activity, if the activity creation fails the promise will be rejected)\n   */\n  public announceWindow(activityWindowId?: string, windowType?: string): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n\n      // get the announcement info from the bridge (e.g. the context in HC) - this will be used if no arguments passed\n      const announcementInfo = this._bridge.getAnnouncementInfo();\n      if (util.isUndefined(activityWindowId)) {\n        activityWindowId = announcementInfo.activityWindowId;\n      }\n      if (util.isUndefined(windowType)) {\n        windowType = announcementInfo.activityWindowType;\n      }\n      if (util.isUndefinedOrNull(windowType)) {\n        throw new Error(\"Can not announce - unknown windowType\");\n      }\n\n      const activityId = announcementInfo && announcementInfo.activityId;\n\n      // We cover two cases here:\n      // * no activityWindowId supplied (neither in arguments or announcement info) - in that case we register new window by type. Most of the time this is the case when an independent window is created outside activity\n      // * activityWindowId supplied - window created as part of activity creation\n\n      // NB: in GW3, windows are created standalone, and receive 'JOINED' after they send a 'READY'\n      // so we always go in 'if' case, not 'else'\n      if (util.isUndefinedOrNull(activityWindowId)) {\n        this._logger.debug(\"Registering window with type:'\" + windowType + \"', name:'\" + announcementInfo.activityWindowName + \"', ind.:'\" + announcementInfo.activityWindowIndependent + \"'\");\n        // register new window created outside activity\n        this._bridge.registerWindow(windowType, announcementInfo.activityWindowName, announcementInfo.activityWindowIndependent)\n          .then(this._windows.getOrWait.bind(this._windows))\n          .then((w: any) => {\n            if (activityId) {\n              return this._activities.getOrWait(activityId).then((_: any) => w);\n            } else {\n              return w;\n            }\n          })\n          .then((w: any) => {\n            resolve(w);\n          })\n          .catch((err) => {\n            this._logger.error(err);\n          });\n\n      } else {\n        // announce new window created in an activity creation process\n        this._logger.debug(\"Announcing window with id '\" + activityWindowId + \"' and type '\" + windowType + \"'\");\n\n        // check if the window is already created -\n        const currentWindow = this._windows.getByName(activityWindowId);\n        if (!util.isUndefinedOrNull(currentWindow)) {\n          this._logger.debug(\"Window with id '\" + activityWindowId + \"' already announced - reusing the window\");\n          resolve(currentWindow);\n          return;\n        }\n\n        // window events handler\n        const windowEventHandler = (a: Activity, w: ActivityWindow, e: any) => {\n          if (activityWindowId === w.id) {\n            if (e === EntityEventType.ActivityWindowJoinedActivity) {\n              const activity = w.activity;\n              if (util.isUndefined(activity)) {\n                reject(\"UNDEFINED ACTIVITY\");\n              }\n              this._logger.trace(\"Got joined event for id '\" + activityWindowId + \"'\");\n              resolve(w);\n              this.unsubscribeWindowEvents(windowEventHandler);\n            }\n          }\n        };\n\n        this.subscribeWindowEvents(windowEventHandler);\n        this._logger.trace(\"Waiting for joined event for id '\" + activityWindowId + \"'\");\n        this._bridge.announceWindow(windowType, activityWindowId);\n      }\n    });\n    return promise;\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window type registered\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowTypeEvents(handler: (act: WindowType, event: string) => void) {\n    this._windowTypes.subscribe((wt, context) => {\n      handler(wt, context.type);\n    });\n  }\n\n  /**\n   * Subscribe for activity status events\n   * @param handler Handler function that will receive status notifications\n   * @returns {}\n   */\n  public subscribeActivityEvents(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.StatusChange) {\n        const p = (context as ActivityStatusChangeEventContext);\n        handler(act, p.newStatus, p.oldStatus);\n      }\n\n      // implicitly leave the activity on destroy\n      if (context.type === EntityEventType.Removed ||\n        (context.type === EntityEventType.StatusChange &&\n          (context as ActivityStatusChangeEventContext).newStatus.getState() === ActivityState.Destroyed)) {\n        for (const window of this._windows.get()) {\n          if (window.activity && window.activity.id === act.id) {\n            this._windows.process(new EntityEvent<ActivityWindow>(window, new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)));\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window joining to activity\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void): () => void {\n    const wrappingHandler = (window: ActivityWindow, context: any) => {\n      let eventType = context.type;\n      if (eventType === EntityEventType.Added) {\n        // rename added to opened (because added is misleading - semantically it's the opposite of remove);\n        eventType = \"opened\";\n      }\n      handler(window.activity, window, eventType);\n    };\n    this._windowHandlers.push([handler, wrappingHandler]);\n    return this._windows.subscribe(wrappingHandler);\n  }\n\n  public unsubscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void) {\n    const found = this._windowHandlers.find((pair) => pair[0] === handler);\n    if (found) {\n      this._windowHandlers.splice(this._windowHandlers.indexOf(found), 1);\n      this._windows.unsubscribe(found[1]);\n    }\n  }\n\n  /**\n   * Creates a new window from a given type and joins it to an activity\n   *\n   * @param activity      Activity to join the window to\n   * @param windowType    The window type to join (string or window definition)\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public createWindow(activity: Activity, windowTypeOrConfiguration: string | WindowDefinition | any, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowTypeOrConfiguration)) {\n        reject(\"windowType is undefined\");\n      }\n\n      let windowDefinition: WindowDefinition;\n      if (util.isString(windowTypeOrConfiguration)) {\n        windowDefinition = { type: (windowTypeOrConfiguration as string), name: \"\", isIndependent: false, arguments: {} };\n      } else if (windowTypeOrConfiguration instanceof WindowType) {\n        windowDefinition = {\n          type: (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          name: windowTypeOrConfiguration.name || (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          isIndependent: false\n        };\n      } else {\n        // G4E-3178 When creating a window in activity, the loading animation doesn't hide - extra property URL\n        const invalidKeys: string[] = [\"url\"];\n\n        const filteredWindowTypeOrConfiguration: any = {};\n\n        Object.keys(windowTypeOrConfiguration).forEach((key) => {\n          if (invalidKeys.indexOf(key) === -1) {\n            filteredWindowTypeOrConfiguration[key] = windowTypeOrConfiguration[key];\n          }\n        });\n        windowDefinition = filteredWindowTypeOrConfiguration as WindowDefinition;\n      }\n\n      let relativeToWindow: string | WindowSource;\n      if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n        relativeToWindow = windowDefinition.relativeTo;\n        if (typeof relativeToWindow === \"string\") {\n          const windows = this.getWindows({ type: relativeToWindow as string });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n          const windows = this.getWindows({ type: relativeToWindow.type });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n          windowDefinition.relativeTo = relativeToWindow.windowId;\n        }\n      }\n\n      this._bridge.createWindow(activity && activity.id, windowDefinition)\n        .then((wid) => {\n\n          this._logger.debug(\"Window created, waiting for window entity with id \" + wid);\n          const handler = (window: ActivityWindow, context: EntityEventContext) => {\n            // wait until the window has activity property (this means it was joined)\n            if (window.id === wid && (!activity || window.activity)) {\n              this._logger.debug(\"Got entity window with id \" + wid);\n              resolve(window);\n              this._windows.unsubscribe(handler);\n            }\n          };\n\n          // if we can not get the window right away, wait for event\n          this._windows.subscribe(handler);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Creates relative windows from a given types and joins them to an activity\n   *\n   * @param activity               Activity to join relative windows to\n   * @param relativeWindowTypes    Relative window types to join (string or window definitions array)\n   * @param callback               (Optional) Result callback\n   * @returns                      Promise for ActivityWindow\n   */\n  public createStackedWindows(activity: Activity, relativeWindowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    const promise = new Promise<ActivityWindow[]>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity is undefined\");\n      }\n      if (util.isUndefinedOrNull(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes is undefined\");\n      }\n\n      if (!Array.isArray(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes has to be an array\");\n      }\n      if (util.isUndefinedOrNull(timeout)) {\n        timeout = 20000; // default timeout: 20 seconds\n      }\n\n      const windowDefinitions: WindowDefinition[] = [];\n      relativeWindowTypes.forEach((element) => {\n        let windowDefinition: WindowDefinition;\n        if (util.isString(element)) {\n          windowDefinition = { type: (element as string), name: \"\", isIndependent: false, arguments: {} };\n        } else {\n          windowDefinition = (element as WindowDefinition);\n        }\n\n        // a hint that this comes from createStackedWindows\n        windowDefinition.stackedWindow = true;\n        windowDefinition.timeout = timeout;\n\n        let relativeToWindow: WindowSource;\n        if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n          // this can not be string, converted in the prev. layer\n          relativeToWindow = windowDefinition.relativeTo as WindowSource;\n          if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n            windowDefinition.relativeTo = relativeToWindow.type;\n          } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n            const windows = this.getWindows({ id: relativeToWindow.windowId });\n            if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n              windowDefinition.relativeTo = windows[0].type.name;\n            }\n          }\n        }\n        windowDefinitions.push(windowDefinition);\n      });\n\n      const tasks: Array<Promise<ActivityWindow>> = [];\n      windowDefinitions.forEach((wd) => tasks.push(this.createWindow(activity, wd)));\n\n      Promise.all(tasks).then(resolve).catch(reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Joins a new window from a given type to the activity\n   *\n   * @param activity      Activity to join the window to\n   * @param window        The window to join\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public addWindowToActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.joinActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @param activity  Activity to remove the window from\n   * @param           The window to remove\n   * @param           (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public leaveWindowFromActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.leaveActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Replaces the activity context\n   * @param activity  Activity\n   * @param context   The new context\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for Activity\n   */\n  public setActivityContext(activity: Activity, context: object, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      // TODO: duplication with updateActivityContext\n\n      // DONE: verify is the change visible here when 'updateActivityContext' resolves?\n      this._bridge\n        .updateActivityContext(activity, context, true)\n        .then((_) => {\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from  context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @param activity\n   * @param context\n   * @param callback\n   */\n  public updateActivityContext(activity: Activity, context: any, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      const removedKeys = [];\n      for (const key in context) {\n        if (context.hasOwnProperty(key) && context[key] === null) {\n          removedKeys.push(key);\n        }\n      }\n      for (const removedKey of removedKeys) {\n        delete context[removedKey];\n      }\n\n      this._bridge\n        .updateActivityContext(activity, context, false, removedKeys)\n        .then((_) => {\n          // DONE: verify is the change already visible here when 'updateActivityContext' resolves?\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Subscribe for activity context update events\n   *\n   * @param activity  Activity\n   * @param handler   Handler function that will receive context related events\n   * @returns {}\n   */\n  public subscribeActivityContextChanged(handler: ActivityContextUpdateHandler) {\n    this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.ActivityContextChange) {\n        const updateContext = context as ActivityContextChangedEventContext;\n        handler(act, updateContext.context, updateContext.updated, updateContext.removed);\n      }\n    });\n  }\n\n  /**\n   * Stops an activity\n   * @returns {}\n   */\n  public stopActivity(activity: Activity, callback?: Callback<boolean>): Promise<boolean> {\n    const promise = this._bridge.stopActivity(activity);\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Returns activity windows based on some filter. If no filter supplied all activity windows are returned.\n   * @param filter  Filter that\n   * @returns Array of ActivityWindows that match the filter object\n   */\n  public getWindows(filter: { id?: string, type?: string, name?: string, activityId?: string }): ActivityWindow[] {\n    if (util.isUndefined(filter)) {\n      return this._windows.get();\n    }\n\n    if (!util.isUndefined(filter.id)) {\n      return [this._windows.getByName(filter.id)];\n    }\n\n    const allWindows = this._windows.get();\n\n    return allWindows.filter((w) => {\n\n      if (!util.isUndefined(filter.type) && w.type.id !== filter.type) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.name) && w.name !== filter.name) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.activityId)) {\n        if (util.isUndefinedOrNull(w.activity)) {\n          return false;\n        }\n\n        if (w.activity.id !== filter.activityId) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n\n  public getWindowBounds(id: string): Promise<WindowBounds> {\n    return this._bridge.getWindowBounds(id);\n  }\n\n  public setWindowBounds(id: string, bounds: WindowBounds, callback?: Callback<ActivityWindow>): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._bridge.setWindowBounds(id, bounds)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public closeWindow(id: string): Promise<any> {\n    return this._bridge.closeWindow(id);\n  }\n\n  public activateWindow(id: string, focus: boolean): Promise<any> {\n    return this._bridge.activateWindow(id, focus);\n  }\n\n  public setWindowVisibility(id: string, visible: boolean): Promise<any> {\n    return this._bridge.setWindowVisibility(id, visible);\n  }\n\n  public clone(activity: Activity, cloneOptions: CloneOptions, callback?: Callback<Activity>) {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (!activity) {\n        reject(\"activity can not be null\");\n      }\n\n      this._bridge.cloneActivity(activity.id, cloneOptions)\n        .then((activityId) => {\n          this._activities\n            .getOrWait(activityId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public attachActivities(from: string, to: string, tag?: object, callback?: Callback<AttachedActivityDescriptor>): Promise<AttachedActivityDescriptor> {\n\n    tag = tag || {};\n\n    const promise = new Promise<AttachedActivityDescriptor>((resolve, reject) => {\n\n      const fromActivity = this._activities.getByName(from);\n      if (!fromActivity) {\n        reject(\"can not find activity with id \" + from);\n        return;\n      }\n\n      const toActivity = this._activities.getByName(to);\n      if (!toActivity) {\n        reject(\"can not find activity with id \" + to);\n        return;\n      }\n\n      return this._bridge.attachActivities(from, to, tag)\n        .then((data: any) => {\n          const newActId = data.to;\n          const state = data.descriptor;\n          const allStates = data.descriptors;\n\n          this._activities.getOrWait(newActId).then((act) => {\n            act._updateDescriptors(allStates);\n            const stateWrapped = act.attached.filter((u) => u.ownerId === state.ownerId)[0];\n\n            resolve(stateWrapped);\n          });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public detachActivities(\n    activityId: string,\n    descriptor: ActivityDescriptor,\n    callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      return this._bridge.detachActivities(activityId, descriptor)\n        .then(/*(params)*/() => {\n          // #deleteme TODO: deal with this\n          const oldActId: string = undefined; // params.oldActivityId;\n          const newActId: string = undefined; // params.newActivityId;\n          const descriptors: any = undefined; // params.descriptors;\n\n          this._activities\n            .getOrWait(oldActId)\n            .then((oldAct: Activity) => {\n              oldAct._updateDescriptors(descriptors);\n\n              this._activities\n                .getOrWait(newActId)\n                .then((newAct: Activity) => {\n                  resolve(newAct);\n                });\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivitiesAttached(callback: any) {\n    this._attachedCallbacks.push(callback);\n  }\n\n  public subscribeActivitiesDetached(callback: any) {\n    this._detachedCallbacks.push(callback);\n  }\n\n  public subscribeActivityFrameColorChanged(callback: () => void) {\n    this._frameColorChangesCallbacks.push(callback);\n  }\n\n  /** Assigns a manager to a given ActivityEntity */\n  private _grabEntity(entity: ActivityEntity) {\n    entity._manager = this;\n  }\n\n  private _getInitialData() {\n    this._logger.debug(\"Request initial data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.getActivityTypes()\n      .then((at) => {\n        this._activityTypes.add(at);\n        this._dataReadyMarker.signal(\"Got act types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity types -\" + error);\n      });\n\n    this._bridge.getWindowTypes()\n      .then((wt) => {\n        this._windowTypes.add(wt);\n        this._dataReadyMarker.signal(\"Got window types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting window types  \" + error);\n      });\n\n    this._bridge.getActivities()\n      .then((ac) => {\n        this._activities.add(ac);\n        this._dataReadyMarker.signal(\"Got activities\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity instances -\" + error);\n      });\n\n    this._bridge.getActivityWindows()\n      .then((aw) => {\n        this._windows.add(aw);\n        this._dataReadyMarker.signal(\"Got windows\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity windows -\" + error);\n      });\n  }\n\n  private _subscribeForData() {\n    this._logger.debug(\"Subscribe for data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.onActivityTypeStatusChange((event) => {\n      this._activityTypes.process(event);\n    });\n\n    this._bridge.onWindowTypeStatusChange((event) => {\n      this._windowTypes.process(event);\n    });\n\n    this._bridge.onActivityWindowChange((event) => {\n      this._windows.process(event);\n    });\n\n    this._bridge.onActivityStatusChange((event: EntityEvent<Activity>) => {\n      this._activities.process(event);\n    });\n  }\n\n  private _handleActivitiesAttached(data: any) {\n\n    const newActId = data.to;\n    const descriptor = data.descriptor;\n    const descriptors = data.descriptors;\n\n    this._activities.getOrWait(newActId).then((act) => {\n      act._updateDescriptors(descriptors);\n      const descriptorAsObjectFromAPI = act.attached.filter((u) => u.ownerId === descriptor.ownerId)[0];\n\n      this._attachedCallbacks.forEach((callback) => {\n        try {\n          callback(act, descriptorAsObjectFromAPI);\n        } catch (err) {\n          return;\n        }\n      });\n\n    });\n  }\n\n  private _handleActivitiesDetached(data: any) {\n    const oldActId = data.oldActivityId;\n    const newActId = data.newActivityId;\n    const descriptors = data.descriptors;\n    const descriptor = data.descriptor;\n\n    this._activities.getOrWait(oldActId).then((oldAct) => {\n\n      oldAct._updateDescriptors(descriptors);\n\n      this._activities.getOrWait(newActId).then((newAct) => {\n\n        this._detachedCallbacks.forEach((callback) => {\n          try {\n            callback(newAct, oldAct, descriptor);\n          } catch (err) {\n            return;\n          }\n        });\n      });\n    });\n  }\n\n  private _handleActivityDescriptorsRefreshed(data: any) {\n    const id = data.id;\n    const descriptors = data.descriptors;\n\n    const act = this._activities.getByName(id);\n    if (act) {\n      act._updateDescriptors(descriptors);\n    }\n  }\n\n  private refreshDescriptors() {\n    this._bridge.getAttachedDescriptors()\n      .then((map: any) => {\n\n        // populate descriptors\n        if (map) {\n          Object.keys(map).forEach((key: string) => {\n            const actId = key;\n            const descriptors = map[key];\n\n            const act = this._activities.getByName(actId);\n            if (act) {\n              act._updateDescriptors(descriptors);\n            }\n          });\n        }\n\n        this._descriptorsMarker.signal(\"Successfully got descriptors\");\n      })\n      .catch((err) => {\n        this._descriptorsMarker.error(\"failed to get descriptors - \" + err);\n      });\n  }\n\n  private _handleWindowFrameColorChanged(win: Glue42.Windows.GDWindow) {\n    if (!win.activityId) {\n      return;\n    }\n\n    const act = this._activities.getByName(win.activityId);\n    if (!act) {\n      return;\n    }\n\n    // notify for the owner only\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id !== win.id) {\n      return;\n    }\n\n    this._frameColorChangesCallbacks.forEach((callback) => {\n      try {\n        callback(act, win.frameColor);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n}\n","import ActivityType from \"./../entities/activityType\";\nimport WindowType from \"./../entities/windowType\";\nimport * as util from \"./../helpers/util\";\nimport ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { Callback } from \"./../contracts/contracts\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\nimport { ActivityStatus } from \"./../contracts/activityStatus\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface ManagementAPI {\n  activityTypes: Glue42.Activities.ActivityTypesAPI;\n  windowTypes: Glue42.Activities.WindowTypesAPI;\n  windows: Glue42.Activities.WindowingAPI;\n  instances: Glue42.Activities.InstancesAPI;\n\n  onAttached(callback: () => void): void;\n  onDetached(callback: () => void): void;\n  onActivityFrameColorChanged(callback: () => void): void;\n}\n\nexport class ActivityManagementAPI implements ManagementAPI {\n\n  public _m: ActivityManager;\n\n  public _my: My;\n\n  public activityTypes: Glue42.Activities.ActivityTypesAPI;\n\n  public windowTypes: Glue42.Activities.WindowTypesAPI;\n\n  public windows: Glue42.Activities.WindowingAPI;\n\n  public instances: Glue42.Activities.InstancesAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._m = manager;\n    this._my = my;\n\n    this.activityTypes = {\n      get: this._getActivityTypesWrapper.bind(this),\n      register: this._m.registerActivityType.bind(this._m),\n      unregister: this._m.unregisterActivityType.bind(this._m),\n      subscribe: this._m.subscribeActivityTypeEvents.bind(this._m),\n      unsubscribe: undefined,\n      initiate: this._m.initiate.bind(this._m)\n    };\n\n    this.windowTypes = {\n      get: this._getWindowTypesWrapper.bind(this),\n      registerFactory: this._m.registerWindowFactory.bind(this._m),\n      unregisterFactory: this._m.unregisterWindowFactory.bind(this._m),\n      subscribe: this._m.subscribeWindowTypeEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n\n    this.windows = {\n      get: this._m.getWindows.bind(this._m),\n      subscribe: this._m.subscribeWindowEvents.bind(this._m),\n      announce: this._m.announceWindow.bind(this._m),\n      unsubscribe: undefined,\n      create: this._m.createWindow.bind(this._m)\n    };\n\n    this.instances = {\n      get: this._m.getActivities.bind(this._m),\n      subscribe: this._m.subscribeActivityEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n  }\n\n  public onAttached(callback: () => void) {\n    this._m.subscribeActivitiesAttached(callback);\n  }\n\n  public onDetached(callback: () => void) {\n    this._m.subscribeActivitiesDetached(callback);\n  }\n\n  public onActivityFrameColorChanged(callback: () => void) {\n    this._m.subscribeActivityFrameColorChanged(callback);\n  }\n\n  private _getActivityTypesWrapper(name?: string): ActivityType[] | ActivityType {\n    if (util.isUndefined(name)) {\n      return this._m.getActivityTypes();\n    }\n    return this._m.getActivityType(name);\n  }\n\n  private _getWindowTypesWrapper(name?: string): WindowType[] | WindowType {\n    if (util.isUndefined(name)) {\n      return this._m.getWindowTypes();\n    }\n    return this._m.getWindowType(name);\n  }\n}\n","import ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { nodeify } from \"./../helpers/promiseExtensions\";\nimport { ActivityManagementAPI, ManagementAPI } from \"./activityManagementAPI\";\nimport { ActivityAGM } from \"../core/activityAGM\";\n\nexport interface API {\n\n  aware: boolean;\n\n  inActivity: boolean;\n\n  my: My;\n\n  agm: ActivityAGM;\n\n  all: ManagementAPI;\n\n  ready(callback?: (api: API) => void): Promise<API>;\n\n  getAvailableFrameColors(): string[];\n}\n\n/**\n * The entry points of activities API - accessible from glue.activities\n *\n * @module activities\n */\nexport class ActivityAPI implements API {\n\n  public _mgr: ActivityManager;\n  public _my: My;\n\n /**\n  * Extended API that provides access to all running activities and windows and available activity and window types\n  *\n  * @var {module:all} all\n  */\n public all: ManagementAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._mgr = manager;\n    this._my = my;\n    this.all = new ActivityManagementAPI(manager, my);\n  }\n\n  /**\n   * The entry point for your activity code.\n   *\n   * @function ready\n   * @returns {Promise<module:activities>} A promise for activity API\n   */\n  public ready(callback?: any): Promise<API> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._mgr.ready()\n        .then(() => {\n          resolve(this);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * A lightweight, single activity oriented subset of the API which should be used by most activity applications\n   *\n   * @var {module:my} my\n   */\n  public get my(): My {\n    return this._my;\n  }\n\n  /**\n   * True if the current window is activity aware - meaning that the window has been created as\n   * an activity participant - either a helper or an independent window.\n   * Check this after the API is ready.\n   *\n   * @var {bool} aware\n   */\n  public get aware(): boolean {\n    return this._my.window !== undefined;\n  }\n\n  /**\n   * Returns true if the current window is activity aware and is currently participating in activity\n   *\n   * @var {bool} inActivity\n   */\n  public get inActivity(): boolean {\n    return this.aware && this._my.activity !== undefined;\n  }\n\n  /**\n   * Defines an Activity-specific version of the AGM API which:\n   * * restricts method registrations to activity-only windows\n   * * restricts method discovery and invocation to activity-only methods, unless you explicitly specify otherwise\n   * Other than that, the API is pretty much the same.\n   *\n   * @var  {module:activityAGM} agm\n   *\n   */\n  public get agm(): ActivityAGM {\n    if (!this.aware) {\n      // no agm if not activity aware\n      return undefined;\n    }\n    if (!this.inActivity) {\n      // if we're not in activity no\n      return new ActivityAGM(null);\n    }\n\n    return this._my.activity.agm;\n  }\n\n  /**\n   * Returns a list of frame colors that can be used as activity frame colors\n   *\n   * @returns {string[]}\n   */\n  public getAvailableFrameColors(): string[] {\n    // TODO - not available in GD3\n    return [];\n  }\n}\n","import GW3Bridge from \"./bridges/gw3Bridge\";\n\nimport My from \"./API/activityMyAPI\";\nimport ActivityManager from \"./core/activityManager\";\n\nimport { ActivityBridge } from \"./bridges/activityBridge\";\n\nimport { ActivityConfig } from \"./activityConfig\";\nimport { ActivityAPI } from \"./API/activityAPI\";\nimport { ActivityAGM } from \"./core/activityAGM\";\nimport { Logger } from \"./helpers/logger\";\nimport * as util from \"./helpers/util\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { nodeify } from \"./helpers/promiseExtensions\";\n\n/**\n * Activity context update handler - used when we want to subscribe for context changes in a specific activity\n *\n * @callback contextChangedHandler\n * @param {Object} context The full context of the activity after the update\n * @param {Object} delta The delta (contains the added/removed keys at top level)\n * @param {string[]} removed  Array of keys that were removed from context\n * @param {module:activity} activity The activity instance that owns the context\n *\n */\n\n/**\n * @callback windowEventHandler Handler for ActivityWindow events - e.g window joined to activity, window removed from\n * activity\n * @param {module:activity} activity\n * @param {module:activityWindow} window\n * @param {string} event 'joined' or 'removed'\n */\n\n/**\n * @callback activityStatusChangeHandler Handler for activity status changed events\n * @param {module:activity} activity\n * @param {activityStatus} newStatus\n * @param {activityStatus} oldStatus\n *\n */\n\n/**\n * @typedef {Object} windowDefinition\n * @property {string} type\n * @property {string} name\n * @property {Object} arguments\n */\n\n/**\n * @typedef {Object} bounds\n * @param {number} top\n * @param {number} left\n * @param {number} width\n * @param {number} height\n *\n */\n\n/**\n * @typedef {Object} agmInstance\n * @param {string} application\n * @param {string} pid\n * @param {string} machine\n * @param {string} user\n * @param {string} environment\n * @param {string} region\n */\n\n// Factory function for activity API\nexport class ActivityModule {\n    public static checkIsUsingGW3Implementation(connection: Glue42Core.Connection.API) {\n        return connection.protocolVersion === 3;\n    }\n\n    private _api: ActivityAPI;\n    private _isUsingGW3Implementation: boolean;\n    private _isUsingHCImplementation: boolean;\n    private _readyPromise: Promise<ActivityModule>;\n\n    get api(): ActivityAPI {\n        return this._api;\n    }\n\n    set api(value: ActivityAPI) {\n        this._api = value;\n    }\n\n    constructor(config: ActivityConfig) {\n        if (!config) {\n            throw new Error(\"config can not be null\");\n        }\n\n        // set log level\n        if (!util.isUndefined(config.logLevel)) {\n            Logger.Level = config.logLevel;\n        }\n\n        if (!util.isUndefinedOrNull(config.logger)) {\n            Logger.GlueLogger = config.logger;\n        }\n\n        // choose the correct bridge\n        let bridge: ActivityBridge;\n        this._isUsingHCImplementation = config.gdMajorVersion === 2;\n        this._isUsingGW3Implementation = ActivityModule.checkIsUsingGW3Implementation(config.connection);\n\n        if (this._isUsingHCImplementation) {\n            throw new Error(\"GD2 not supported\");\n        } else if (this._isUsingGW3Implementation) {\n            bridge = new GW3Bridge(config);\n        } else {\n            throw new Error(\"Unable to instantiate activity bridge implementation\");\n        }\n\n        if (!bridge) {\n            throw new Error(\"A bridge to native activity is needed to create activity lib.\");\n        }\n\n        ActivityAGM.AGM = config.agm;\n        const activityManager = new ActivityManager(bridge, !config.disableAutoAnnounce, config.windows);\n        const my = new My(activityManager, config.windows);\n        this._api = new ActivityAPI(activityManager, my);\n        this._readyPromise = activityManager.ready().then((_) => this);\n    }\n\n    public get isUsingHCImplementation(): boolean {\n        return this._isUsingHCImplementation;\n    }\n\n    public get isUsingGW3Implementation(): boolean {\n        return this._isUsingGW3Implementation;\n    }\n\n    public ready(callback?: (err: string, module: ActivityModule) => void): Promise<void> {\n        return nodeify(this._readyPromise, callback) as any as Promise<void>;\n    }\n}\n","export const ShutdownMethodName = \"T42.ACS.Shutdown\";\nexport const OnGDShutdownMethodName = \"T42.ACS.OnGDShutdown\";\nexport const RestartMethodName = \"T42.ACS.Restart\";\n\nexport const FeedbackMethodName = \"T42.ACS.Feedback\";\n\nexport const GetConfigurationRegionMethodName = \"T42.ACS.GetConfigurationRegion\";\nexport const SetConfigurationRegionMethodName = \"T42.ACS.SetConfigurationRegion\";\n\nexport const GetUserMethodName = \"T42.ACS.GetUser\";\nexport const GetBranchesMethodName = \"T42.ACS.GetBranches\";\nexport const GetCurrentBranchMethodName = \"T42.ACS.GetCurrentBranch\";\nexport const SetCurrentBranchMethodName = \"T42.ACS.SetCurrentBranch\";\n\nexport const GetFunctionalEntitlementMethodName = \"T42.ACS.GetFunctionalEntitlement\";\nexport const CanIMethodName = \"T42.ACS.CanI\";\n\nexport const StartApplicationMethodName = \"T42.ACS.StartApplication\";\nexport const StopApplicationMethodName = \"T42.ACS.StopApplication\";\nexport const ActivateApplicationMethodName = \"T42.ACS.ActivateApplication\";\nexport const RunApplicationMethodName = \"T42.ACS.RunApplication\";\n\nexport const OnEventMethodName = \"T42.ACS.OnEvent\";\n\nexport const GetApplicationsMethodName = \"T42.ACS.GetApplications\";\n","\"use strict\";\nfunction createRegistry(options) {\n    if (options && options.errorHandling\n        && typeof options.errorHandling !== \"function\"\n        && options.errorHandling !== \"log\"\n        && options.errorHandling !== \"silent\"\n        && options.errorHandling !== \"throw\") {\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\n    }\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\n    var callbacks = {};\n    function add(key, callback, replayArgumentsArr) {\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey) {\n            callbacksForKey = [];\n            callbacks[key] = callbacksForKey;\n        }\n        callbacksForKey.push(callback);\n        if (replayArgumentsArr) {\n            setTimeout(function () {\n                replayArgumentsArr.forEach(function (replayArgument) {\n                    var _a;\n                    if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {\n                        try {\n                            if (Array.isArray(replayArgument)) {\n                                callback.apply(undefined, replayArgument);\n                            }\n                            else {\n                                callback.apply(undefined, [replayArgument]);\n                            }\n                        }\n                        catch (err) {\n                            _handleError(err, key);\n                        }\n                    }\n                });\n            }, 0);\n        }\n        return function () {\n            var allForKey = callbacks[key];\n            if (!allForKey) {\n                return;\n            }\n            allForKey = allForKey.reduce(function (acc, element, index) {\n                if (!(element === callback && acc.length === index)) {\n                    acc.push(element);\n                }\n                return acc;\n            }, []);\n            if (allForKey.length === 0) {\n                delete callbacks[key];\n            }\n            else {\n                callbacks[key] = allForKey;\n            }\n        };\n    }\n    function execute(key) {\n        var argumentsArr = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            argumentsArr[_i - 1] = arguments[_i];\n        }\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey || callbacksForKey.length === 0) {\n            return [];\n        }\n        var results = [];\n        callbacksForKey.forEach(function (callback) {\n            try {\n                var result = callback.apply(undefined, argumentsArr);\n                results.push(result);\n            }\n            catch (err) {\n                results.push(undefined);\n                _handleError(err, key);\n            }\n        });\n        return results;\n    }\n    function _handleError(exceptionArtifact, key) {\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\n        if (_userErrorHandler) {\n            _userErrorHandler(errParam);\n            return;\n        }\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\n        if (options) {\n            switch (options.errorHandling) {\n                case \"log\":\n                    return console.error(msg);\n                case \"silent\":\n                    return;\n                case \"throw\":\n                    throw new Error(msg);\n            }\n        }\n        console.error(msg);\n    }\n    function clear() {\n        callbacks = {};\n    }\n    function clearKey(key) {\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey) {\n            return;\n        }\n        delete callbacks[key];\n    }\n    return {\n        add: add,\n        execute: execute,\n        clear: clear,\n        clearKey: clearKey\n    };\n}\n;\ncreateRegistry.default = createRegistry;\nmodule.exports = createRegistry;\n//# sourceMappingURL=index.js.map","export function objectValues(source: {[key: string]: any}): any[] {\n    if (!source) {\n        return [];\n    }\n    return Object.keys(source).map((key) => source[key]);\n}\n\nexport function objectClone(obj: {[key: string]: any}): any {\n    let result;\n    try {\n        result = JSON.parse(JSON.stringify(obj || {}));\n    } catch (error) {\n        result = {};\n    }\n\n    return result;\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, StartAppResult } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { objectClone } from \"./helper\";\n\nexport default class ApplicationImpl implements Glue42.AppManager.Application {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    // Additional properties of the Application\n    private _props: AppProps;\n\n    constructor(private _appManager: AppManagerImpl, private _name: string, private _agm: Glue42Core.AGM.API) {\n\n        // TODO: Replace string events with constants. The string declaration of the registry event name should only ever appear once. Ever. Period.\n\n        // subscribe for events from app-manager\n        _appManager.onInstanceStarted((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStarted\", instance);\n        });\n\n        _appManager.onInstanceStopped((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStopped\", instance);\n        });\n\n        _appManager.onAppRemoved((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appRemoved\", app);\n        });\n\n        _appManager.onAppChanged((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appChanged\", app);\n        });\n\n        _appManager.onAppAvailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appAvailable\", app);\n        });\n\n        _appManager.onAppUnavailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appUnavailable\", app);\n        });\n    }\n\n    get name(): string { return this._name; }\n    get title(): string { return this._props.Title; }\n    get version(): string { return this._props.Version; }\n    get autoStart(): boolean { return this._props.AutoStart; }\n    get isShell(): boolean { return this._props.IsShell; }\n    get caption(): string { return this._props.Caption; }\n    get hidden(): boolean { return this._props.IsHidden; }\n    get container(): string { return this._props.ApplicationName; }\n    get activityType(): string { return this._props.ActivityType; }\n    get activityWindowType(): string { return this._props.ActivityWindowType; }\n    get windowSettings(): { [key: string]: any } {\n        if (!this._props.Arguments) {\n            return {};\n        }\n        return objectClone(this._props.Arguments);\n    }\n    get allowMultiple(): boolean { return this._props.AllowMultiple; }\n    get available(): boolean { return this._props.IsReady || true; }\n    get icon(): string { return this._props.Icon; }\n    get iconURL(): string { return this._props.IconUrl; }\n    get sortOrder(): number { return this._props.SortOrder; }\n    get userProperties(): { [key: string]: any } {\n        if (!this._props.UserProperties) {\n            return {};\n        }\n        return objectClone(this._props.UserProperties);\n    }\n    get isActivity(): boolean {\n        return this._props.ActivityType !== undefined && this._props.ActivityType !== \"\";\n    }\n\n    get configuration(): Glue42.AppManager.LegacyAppConfigProperties {\n        return {\n            autoStart: this._props.AutoStart,\n            caption: this._props.Caption,\n            hidden: this._props.IsHidden,\n            container: this._props.ApplicationName,\n            activityType: this._props.ActivityType,\n            allowMultiple: this._props.AllowMultiple\n        };\n    }\n\n    get instances() {\n        return this._appManager.instances().filter((instance: Glue42.AppManager.Instance) => instance.application.name === this._name);\n    }\n\n    get type() {\n        return this._props.Type;\n    }\n\n    get mode() {\n        if (!this._props) {\n            // no info about the app\n            return \"unknown\";\n        }\n\n        // GD3 - we always have Mode from the stream object\n        if (this._props.Mode && typeof this._props.Mode === \"string\") {\n            return this._props.Mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // GD2\n        // return unknown for activity applications\n        if (this.isActivity) {\n            return \"unknown\";\n        }\n\n        // check definition -> hc.args.mode\n        if (this._props.Arguments && this._props.Arguments.mode && typeof this._props.Arguments.mode === \"string\") {\n            return this._props.Arguments.mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // if no hc.args.mode, check hc.WindowStyleAttributes\n        let styleAttributes = this._props.WindowStyleAttributes;\n        if (styleAttributes) {\n            // WindowStyleAttributes is not a valid JSON, we will need to find mode in the string\n            styleAttributes = styleAttributes.split(\" \").join(\"\");\n            const searchFor = \"mode:\\\"\";\n            const modeIndex = styleAttributes.indexOf(searchFor);\n            if (modeIndex !== -1) {\n                const startModeIndex = modeIndex + searchFor.length;\n                const stopModeIndex = styleAttributes.indexOf(\"\\\"\", startModeIndex);\n                const style = styleAttributes.substr(startModeIndex, stopModeIndex - startModeIndex);\n                if (style && typeof style === \"string\") {\n                    return style.toLowerCase() as Glue42.Windows.WindowMode;\n                }\n            }\n        }\n\n        // default mode for GD2\n        return \"flat\";\n    }\n\n    public updateFromProps(props: AppProps) {\n        if (!this._props) {\n            this._props = { Name: props.Name };\n        }\n\n        Object.keys(props).forEach((key) => {\n            (this._props as any)[key] = (props as any)[key];\n        });\n    }\n\n    public start(context?: unknown, options?: Glue42.AppManager.ApplicationStartOptions): Promise<Glue42.AppManager.Instance> {\n        return new Promise<Glue42.AppManager.Instance>(async (resolve, reject) => {\n            const name = this._name;\n            let startTimeout: number = 60000;\n\n            options = options || {};\n            context = context || {};\n            let waitForAGMInstance = options.waitForAGMReady ?? true;\n\n            const waitForApplicationInstance = (id: string) => {\n                let unsub: () => void;\n                // reject after some timeout\n                const timeout = setTimeout(() => {\n                    if (unsub) {\n                        unsub();\n                    }\n                    reject(`timed out while waiting for instance id ${id} for app ${this.name}`);\n                }, startTimeout);\n\n                const waitFunc = (i: Glue42.AppManager.Instance) => {\n                    if (i.id !== id) {\n                        return;\n                    }\n                    if (unsub) {\n                        unsub();\n                        unsub = undefined;\n                    }\n                    clearTimeout(timeout);\n                    resolve(i);\n                };\n\n                if (waitForAGMInstance) {\n                    unsub = this._appManager.onInstanceAgmServerReady(waitFunc);\n                } else {\n                    // if not there subscribe for instance events\n                    unsub = this._appManager.onInstanceStarted(waitFunc);\n                }\n            };\n\n            const result = await this._agm.invoke<StartAppResult>(AgmNames.StartApplicationMethodName,\n                {\n                    Name: name,\n                    Context: context,\n                    Options: options\n                },\n                \"best\",\n                {\n                    methodResponseTimeoutMs: startTimeout\n                });\n\n            const acsResult: StartAppResult = result.returned;\n            if (typeof acsResult.timeout !== \"undefined\") {\n                startTimeout = acsResult.timeout * 1000;\n            }\n            if (typeof acsResult.waitForInterop !== \"undefined\" && typeof options.waitForAGMReady === \"undefined\") {\n                waitForAGMInstance = acsResult.waitForInterop;\n            }\n\n            if (acsResult && acsResult.Id) {\n                if (this._appManager.mode === \"startOnly\") {\n                    // we're in startOnly mode, no stream, so we will simulate the instance\n                    // based on the data received from GD\n                    const instance = this._appManager.handleInstanceStarted({\n                        ActivityId: undefined,\n                        IsActivityOwner: undefined,\n                        Context: undefined,\n                        Title: undefined,\n                        AgmServers: undefined,\n                        Id: acsResult.Id,\n                        Name: acsResult.Name,\n                    });\n                    resolve(instance);\n                } else {\n                    // we received instance from ACS, let's wait until it appears on the stream\n                    waitForApplicationInstance(acsResult.Id);\n                }\n            } else {\n                // we haven't received instance from ACS - this might happen if the app does not\n                // support tracking instances (e.g. we start internet explorer with some url)\n                resolve(undefined);\n            }\n        });\n    }\n\n    public onInstanceStarted(callback: (instance: Glue42.AppManager.Instance) => any): void {\n        this._registry.add(\"instanceStarted\", callback);\n    }\n\n    public onInstanceStopped(callback: (instance: Glue42.AppManager.Instance) => any): void {\n        this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onAvailable(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onUnavailable(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onChanged(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appChanged\", callback);\n    }\n\n    public onRemoved(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appRemoved\", callback);\n    }\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { InstanceProps, WindowContext } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class InstanceImpl implements Glue42.AppManager.Instance {\n\n    public onAgmReady = this._addToRegistry(\"agmReady\");\n\n    public onStopped = this._addToRegistry(\"stopped\");\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    private _startUpContext: WindowContext;\n    private _title: string;\n    private _isActivityInstance: boolean;\n    private _activityId: string;\n    private _inActivity: boolean;\n    private _isActivityOwner: boolean;\n    private _agmInstance: Partial<Glue42Core.AGM.Instance>;\n    private _unsubscribeInstanceAgmServerReady: UnsubscribeFunction;\n    private _unsubscribeInstanceStopped: UnsubscribeFunction;\n\n    constructor(\n        private _id: string,\n        private _appName: string,\n        private _appManager: AppManagerImpl,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        startFailed?: boolean\n    ) {\n        if (startFailed) {\n            return;\n        }\n\n        this._unsubscribeInstanceStopped = this._appManager.onInstanceStopped((instance: Glue42.AppManager.Instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"stopped\", instance);\n        });\n\n        this._unsubscribeInstanceAgmServerReady = this._appManager.onInstanceAgmServerReady((instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"agmReady\", instance);\n        });\n    }\n\n    get id(): string { return this._id; }\n\n    get application(): Glue42.AppManager.Application { return this._appManager.application(this._appName); }\n\n    get activity(): Glue42.Activities.Activity {\n        if (!this._activities) {\n            throw new Error(\"This method requires glue.activities library to be enabled.\");\n        }\n        return this._activities.all.instances.get()\n            .filter((activityInstance: Glue42.Activities.Activity) => activityInstance.id === this._activityId)[0];\n    }\n\n    get isActivityOwner(): boolean { return this._isActivityOwner; }\n\n    // this property returns a list of activity window instances (not activity instances)\n    get activityInstances(): Glue42.AppManager.Instance[] {\n        return this._appManager.instances().filter((i) =>\n            i.application.type !== \"activity\" && // GD2 backward compatibility -  do not show activity instances into the activity window instances list\n            i.activityId && // glue js 2 and 3 bug and breaking change - they will show non activity window instances as activity in case of activityId === undefined\n            i.activityId === this._activityId);\n    }\n\n    get activityOwnerInstance(): Glue42.AppManager.Instance {\n        if (!this._activityId) {\n            return undefined;\n        }\n        return this.activityInstances.filter((inst) => (inst as InstanceImpl)?.isActivityOwner)[0];\n    }\n\n    get window(): Glue42.Windows.GDWindow {\n        if (!this._windows) {\n            throw new Error(\"This method requires glue.windows library to be enabled.\");\n        }\n\n        let win = this._windows.list().filter((w) => w.id === this._id)[0];\n        if (!win && this._activities && this.activity && this.activityOwnerInstance) {\n            // This is covering GD3 activity instance\n            win = this.activityOwnerInstance.window;\n        }\n\n        return win;\n    }\n\n    get context(): WindowContext {\n        return this._startUpContext ?? this.window?.context ?? {};\n    }\n\n    get title(): string { return this._title; }\n\n    get isActivityInstance(): boolean { return this._isActivityInstance; }\n\n    get activityId(): string { return this._activityId; }\n\n    get inActivity(): boolean { return this._inActivity; }\n\n    get isSingleWindowApp(): boolean { return !this._inActivity; }\n\n    get agm(): Partial<Glue42Core.AGM.Instance> {\n        return this._agmInstance;\n    }\n\n    // uses this.window and waits for the window to appear if needed\n    // we can not remove this.window for legacy reasons\n    public getWindow(): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            // try to get it the normal way\n            const result = this.window;\n            if (result) {\n                resolve(result);\n                return;\n            }\n\n            // if we can not find it directly wait for it to appear\n            const done = (error?: Error, window?: Glue42.Windows.GDWindow) => {\n                if (error) {\n                    reject(error);\n                }\n\n                if (window) {\n                    resolve(window);\n                }\n\n                setTimeout(() => {\n                    clearTimeout(timeout);\n                    unsub();\n                }, 0);\n            };\n\n            // if not found for 30 sec reject\n            const timeout = setTimeout(() => {\n                done(new Error(`can not find a window with id ${this._id}`));\n            }, 30000);\n\n            const unsub = this._windows.onWindowAdded((w) => {\n                if (w.id === this._id) {\n                    done(undefined, w);\n                }\n            });\n        });\n    }\n\n    public updateFromProps(props: InstanceProps): void {\n        this._startUpContext = props.Context;\n        this._title = props.Title;\n        this._isActivityInstance = false;\n        if (props.ActivityId && props.ActivityId !== \"\") {\n            this._activityId = props.ActivityId;\n            this._isActivityInstance = true;\n        }\n        this._isActivityOwner = props.IsActivityOwner;\n        if (!this._activityId && this._startUpContext && this._startUpContext.activityId) {\n            this._activityId = this._startUpContext.activityId;\n        }\n        this._inActivity = Boolean(this._activityId);\n\n        this.updateAgmInstanceFromProps(props);\n    }\n\n    public updateAgmInstanceFromProps(props: InstanceProps) {\n        if (!props.AgmServers) {\n            return;\n        }\n\n        const agmInstances: Glue42Core.AGM.Instance[] = props.AgmServers as Glue42Core.AGM.Instance[];\n        if (agmInstances) {\n            this._agmInstance = agmInstances[0];\n        }\n    }\n\n    public stop(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsubscribe = this._appManager.onInstanceStopped((instance) => {\n                if (instance.id === this._id) {\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            this._agm.invoke(\n                AgmNames.StopApplicationMethodName,\n                {\n                    Name: this._appName,\n                    Id: this._id\n                })\n                .then(() => {\n                    if (this._appManager.mode === \"startOnly\") {\n                        this._appManager.handleInstanceStopped({\n                            Name: this._appName,\n                            Id: this.id,\n                            Context: undefined,\n                            Title: undefined,\n                            ActivityId: undefined,\n                            IsActivityOwner: undefined,\n                            AgmServers: undefined\n                        });\n                        // in startOnly mode, resolve stop as soon as we receive\n                        resolve();\n                    }\n                })\n                .catch((err: any) => reject(err));\n        });\n    }\n\n    public activate(): Promise<Glue42Core.AGM.InvocationResult<any>> {\n        return this._agm.invoke(AgmNames.ActivateApplicationMethodName, { Name: this._appName, Id: this._id });\n    }\n\n    public done() {\n\n        // remove all handlers\n        this._registry.clear();\n        // remove subscriptions\n        this._unsubscribeInstanceAgmServerReady();\n        this._unsubscribeInstanceStopped();\n    }\n\n    public getContext(): Promise<object> {\n        return Promise.resolve(this.context);\n    }\n\n    private _addToRegistry(key: string) {\n        return (callback: (instance: Glue42.AppManager.Instance) => any) => {\n            this._registry.add(key, callback);\n        };\n    }\n}\n","import ApplicationImpl from \"./application\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport InstanceImpl from \"./instance\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class AppManagerImpl implements Glue42.AppManager.AppManager {\n\n    private _apps: { [key: string]: ApplicationImpl } = {};\n    private _instances: InstanceImpl[] = [];\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    constructor(\n        public mode: Glue42.AppManager.Mode,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        private _logger: Glue42Core.Logger.API,\n        private _gdMajorVersion: number\n    ) {\n        //\n    }\n\n    public application = (name: string) => {\n        return this._apps[name];\n    }\n\n    public applications = () => {\n        return Object.keys(this._apps).map((k: string) => this._apps[k]);\n    }\n\n    public instances = () => {\n        return this._instances;\n    }\n\n    public getMyInstance = () => {\n        if (this._gdMajorVersion >= 3) {\n            // GD3 check\n            const instanceId = window.glue42gd.appInstanceId;\n            return this._instances.filter((i) => i.id === instanceId)[0];\n        }\n\n        return undefined;\n    }\n\n    public handleAppAdded = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`adding app ${id}`);\n        this._apps[id] = new ApplicationImpl(this, id, this._agm);\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appAdded\", app);\n    }\n\n    public handleAppUpdated = (props: AppProps) => {\n        // TODO: check side effects, is this._apps updated?\n\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appChanged\", app);\n    }\n\n    public handleAppRemoved = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`removing app ${id}`);\n        const app = this.application(id);\n\n        // remove all instances related to the app\n        this._instances = this._instances.filter((i) => i.application.name !== app.name);\n\n        delete this._apps[id];\n\n        this._registry.execute(\"appRemoved\", app);\n    }\n\n    public handleAppReady = (props: AppProps) => {\n        const id = this._getAppId(props);\n        const app = this._getAppOrThrow(id);\n        app.updateFromProps(props);\n\n        if (app.available) {\n            this._registry.execute(\"appAvailable\", app);\n        } else {\n            this._registry.execute(\"appUnavailable\", app);\n        }\n    }\n\n    public handleInstanceStarted = (props: InstanceProps): InstanceImpl => {\n        this._logger.trace(`started app ${props.Name} ${props.Id}`);\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n\n        const instance = new InstanceImpl(id, appName, this, this._agm, this._activities, this._windows);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._instances.push(instance);\n\n        this._registry.execute(\"instanceStarted\", instance);\n        return instance;\n    }\n\n    public handleInstanceStopped = (props: InstanceProps) => {\n        this._logger.trace(`failed to start app ${props.Name} ${props.Id}`);\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        this._instances = this._instances.filter((i) => !this._matchInstance(i, id, appName));\n\n        this._registry.execute(\"instanceStopped\", instance);\n        instance.done();\n    }\n\n    public handleInstanceAgmServerReady = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        instance.updateAgmInstanceFromProps(props);\n\n        this._registry.execute(\"instanceAgmServerReady\", instance);\n    }\n\n    public handleInstanceStartFailed = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const startFailed = true;\n        const instance = new InstanceImpl(id, appName, undefined, undefined, undefined, undefined, startFailed);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._registry.execute(\"instanceStartFailed\", instance);\n    }\n\n    public handleInstanceUpdated = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const app = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, app);\n\n        this._updateInstanceFromProps(instance, props);\n    }\n\n    /** Event subscription methods */\n    public onInstanceStarted = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStarted\", callback, this._instances);\n    }\n\n    public onInstanceStartFailed = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStartFailed\", callback);\n    }\n\n    public onInstanceStopped = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onInstanceUpdated = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceChanged\", callback);\n    }\n\n    public onInstanceAgmServerReady = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceAgmServerReady\", callback);\n    }\n\n    public onAppAdded = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appAdded\", callback, Object.values(this._apps));\n    }\n\n    public onAppRemoved = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appRemoved\", callback);\n    }\n\n    public onAppAvailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onAppUnavailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onAppChanged = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appChanged\", callback);\n    }\n\n    private _getAppOrThrow(id: string) {\n        const result = this.application(id);\n        if (!result) {\n            throw Error(`app with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getAppId(props: AppProps) {\n        return props.Name;\n    }\n\n    private _matchInstance(instance: Glue42.AppManager.Instance, id: string, appName: string) {\n        return instance.id === id && instance.application.name === appName;\n    }\n\n    private _getInstanceByIdAndName(id: string, appName: string) {\n        return this._instances.filter((i) => this._matchInstance(i, id, appName))[0];\n    }\n\n    private _getInstanceOrThrow(id: string, appName: string) {\n        const result = this._getInstanceByIdAndName(id, appName);\n        if (!result) {\n            throw Error(`instance with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getInstanceId(props: InstanceProps) {\n        return props.Id;\n    }\n\n    private _getInstanceAppName(props: InstanceProps) {\n        return props.Name;\n    }\n\n    private _updateAppFromProps(props: AppProps) {\n        const id = this._getAppId(props);\n        this._logger.trace(`updating app with  + ${id}, ${props}`);\n        const app = this._getAppOrThrow(id);\n\n        app.updateFromProps(props);\n\n        return app;\n    }\n\n    private _updateInstanceFromProps(instance: InstanceImpl, props: InstanceProps) {\n        this._logger.trace(\"updating instance with \" + this._getInstanceId(props) + \" for app \" + this._getInstanceAppName(props));\n        instance.updateFromProps(props);\n    }\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { OnGDShutdownMethodName } from \"./const/agm-names\";\n\nfunction promisify(promise: Promise<any>, successCallback: (arg?: any) => void, errorCallback: (err?: any) => void) {\n    const isFunction = (arg: any) => {\n        return !!(arg && arg.constructor && arg.call && arg.apply);\n    };\n\n    if (!isFunction(successCallback) && !isFunction(errorCallback)) {\n        return promise;\n    }\n\n    if (!isFunction(successCallback)) {\n        successCallback = () => {\n            // EMPTY\n        };\n    } else if (!isFunction(errorCallback)) {\n        errorCallback = () => {\n            // EMPTY\n        };\n    }\n\n    promise.then(successCallback, errorCallback);\n}\n\nexport default class EntitlementsImpl implements Glue42.AppManager.Entitlements {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n    private _isMethodRegistered = false;\n\n    constructor(\n        private _agm: Glue42Core.AGM.API\n    ) {\n        //\n    }\n\n    public handleBranchModified = (branch: Glue42.AppManager.Branch) => {\n        this._registry.execute(\"branchChanged\", branch);\n    }\n\n    public handleBranchesModified = (branches: Glue42.AppManager.Branch[]) => {\n        this._registry.execute(\"branchesChanged\", branches);\n    }\n\n    public getRegion = (success?: (region: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        return promisify(\n            this._agmInvoke(\n                AgmNames.GetConfigurationRegionMethodName,\n                (e: Glue42Core.AGM.InvocationResult<{ Region: string }>) => e.returned.Region\n            ),\n            success,\n            error\n        );\n    }\n\n    public getBranches = (success?: (branches: Glue42.AppManager.Branch[]) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch[]> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetBranchesMethodName,\n            (e) => {\n                const obj = e.returned.Branches as { [key: string]: Glue42.AppManager.Branch };\n                return Object.keys(obj).map((key) => obj[key]);\n            }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getCurrentBranch = (success?: (branch: Glue42.AppManager.Branch) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetCurrentBranchMethodName,\n            (e) => e.returned.Branch,\n            undefined\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setRegion = (region: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetConfigurationRegionMethodName,\n            (e) => e.returned.ResultMessage,\n            { Region: region }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setCurrentBranch = (branch: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetCurrentBranchMethodName,\n            (e) => e.returned.ResultMessage,\n            { Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public currentUser = (success?: (user: Glue42.AppManager.UserInfo) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.UserInfo> => {\n        const promise = this._agmInvoke(AgmNames.GetUserMethodName);\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlement = (funct: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlementBranch = (funct: string, branch: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct, Branch: branch }\n        );\n        return promisify(promise, success, error);\n    }\n\n    public canI = (func: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public canIBranch = (func: string, branch: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func, Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public onBranchesChanged = (callback: (branches: Glue42.AppManager.Branch[]) => any): UnsubscribeFunction => {\n        return this._registry.add(\"branchesChanged\", callback);\n    }\n\n    public onBranchChanged = (callback: (branch: Glue42.AppManager.Branch) => any): UnsubscribeFunction => {\n        return this._registry.add(\"branchChanged\", callback);\n    }\n\n    public exit = (options?: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.ShutdownMethodName,\n            null,\n            options\n        );\n    }\n\n    public onShuttingDown = (callback: (args: Glue42.AppManager.ShuttingDownEventArgs) => Promise<{ prevent: boolean }>) => {\n        this.registerMethod();\n        return this._registry.add(\"onShuttingDown\", callback);\n    }\n\n    public restart = (options?: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.RestartMethodName,\n            null,\n            options\n        );\n    }\n\n    private registerMethod() {\n        if (!this._isMethodRegistered) {\n            this._agm.register(OnGDShutdownMethodName, async (args) => {\n                try {\n                    const results = await Promise.all(this._registry.execute(\"onShuttingDown\", args)) as Array<{ prevent: boolean }>;\n                    const prevent = results.some((r) => r.prevent);\n                    return { prevent };\n                } catch (error) {\n                    //\n                }\n            });\n            this._isMethodRegistered = true;\n        }\n    }\n\n    private _agmInvoke = (\n        method: string,\n        transformFunction?: (res: Glue42Core.AGM.InvocationResult<any>) => any,\n        args?: object\n    ): Promise<any> => {\n        args = args || {};\n        return new Promise((resolve, reject) => {\n            const errHandler: Glue42Core.AGM.InvokeErrorHandler = (error) => reject(error);\n            this._agm.invoke(method, args)\n                .then((result) => {\n                    if (!transformFunction) {\n                        transformFunction = (d: Glue42Core.AGM.InvocationResult<any>) => d.returned;\n                    }\n                    resolve(transformFunction(result));\n                })\n                .catch(errHandler);\n        });\n    }\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\n\nexport const InMemoryStoreCommandMethodName = \"T42.ACS.InMemoryStoreCommand\";\n\nexport type InMemoryStoreCommandArgs = InMemoryImportCommand | InMemoryExportCommand | InMemoryRemoveCommand | InMemoryClearCommand;\n\nexport interface GenericInMemoryCommand<C, A> {\n    command: C;\n    args?: A;\n}\n\ntype InMemoryImportCommand = GenericInMemoryCommand<\"import\", InMemoryImportArgs>;\ninterface InMemoryImportArgs {\n    apps: Glue42.AppManager.Definition[];\n    mode?: \"merge\" | \"replace\";\n}\n\ntype InMemoryRemoveCommand = GenericInMemoryCommand<\"remove\", { apps: string[] }>;\nexport interface InMemoryRemoveArgs {\n    apps: string[];\n}\n\ntype InMemoryExportCommand = GenericInMemoryCommand<\"export\", undefined>;\ntype InMemoryClearCommand = GenericInMemoryCommand<\"clear\", undefined>;\n\nexport interface InMemoryExportResult {\n    apps: Glue42.AppManager.Definition[];\n}\n\nexport class InMemoryStore implements Glue42.AppManager.InMemoryStore {\n\n    constructor(private interop: Glue42Core.Interop.API) {\n    }\n\n    public import(apps: Glue42.AppManager.Definition[], mode?: \"replace\" | \"merge\"): Promise<Glue42.AppManager.ImportResult> {\n        if (!apps || !Array.isArray(apps)) {\n            return Promise.reject(\"invalid apps argument - should be an array of application definitions\");\n        }\n        if (mode && mode !== \"replace\" && mode !== \"merge\") {\n            return Promise.reject(\"invalid mode argument - should be 'replace' or 'merge'\");\n        }\n\n        mode = mode ?? \"replace\";\n        const command: InMemoryImportCommand = {\n            command: \"import\",\n            args: {\n                apps,\n                mode\n            }\n        };\n        return this.interop.invoke<Glue42.AppManager.ImportResult>(InMemoryStoreCommandMethodName, command)\n            .then((r) => r.returned);\n    }\n\n    public export(): Promise<Glue42.AppManager.Definition[]> {\n        return this.interop.invoke<InMemoryExportResult>(InMemoryStoreCommandMethodName, { command: \"export\" })\n            .then((r) => r.returned.apps);\n    }\n\n    public remove(app: string): Promise<void> {\n        if (!app || typeof app !== \"string\") {\n            return Promise.reject(\"invalid app name, should be a string value\");\n        }\n        const command: InMemoryRemoveCommand = {\n            command: \"remove\",\n            args: {\n                apps: [app]\n            }\n        };\n        return this.interop.invoke<void>(InMemoryStoreCommandMethodName, command).then((r) => r.returned);\n    }\n\n    public clear(): Promise<void> {\n        const command: InMemoryClearCommand = {\n            command: \"clear\"\n        };\n        return this.interop.invoke<void>(InMemoryStoreCommandMethodName, command).then((r) => r.returned);\n    }\n\n    public createAppDef(name: string, url: string): Glue42.AppManager.Definition {\n        if (!url) {\n            url = \"https://google.com\";\n        }\n        return {\n            name,\n            type: \"window\",\n            title: name,\n            details: {\n                url\n            }\n        };\n    }\n}\n","import AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\nimport snapshot from \"./snapshot\";\nimport subscriptionFactory from \"./data-subscription\";\nimport { Glue42 } from \"../../glue\";\nimport { InMemoryStore } from \"./in-memory\";\n\nexport default (config: Glue42.AppManager.Config): Glue42.AppManager.API => {\n\n    if (!config) {\n        throw Error(\"config not set\");\n    }\n\n    if (!config.agm) {\n        throw Error(\"config.agm is missing\");\n    }\n\n    const START_ONLY: Glue42.AppManager.Mode = \"startOnly\";\n    const SKIP_ICONS: Glue42.AppManager.Mode = \"skipIcons\";\n    const FULL: Glue42.AppManager.Mode = \"full\";\n\n    const mode: Glue42.AppManager.Mode = config.mode || START_ONLY;\n    if (mode !== START_ONLY && mode !== SKIP_ICONS && mode !== FULL) {\n        throw new Error(`Invalid mode for appManager lib - ${mode} is not supported`);\n    }\n\n    const activities = config.activities;\n    const agm = config.agm;\n    const logger = config.logger;\n    const windows = config.windows;\n    const appManager = new AppManagerImpl(mode, agm, activities, windows, logger.subLogger(\"applications\"), config.gdMajorVersion);\n    const entitlements = new EntitlementsImpl(agm);\n\n    let readyPromise: Promise<void>;\n    if (mode === START_ONLY) {\n        readyPromise = snapshot(agm, appManager);\n    } else {\n        const subscription = subscriptionFactory(agm, appManager, entitlements, mode === SKIP_ICONS);\n        readyPromise = subscription.start();\n    }\n\n    const api: Glue42.AppManager.API = {\n        ready: () => readyPromise,\n\n        applications: appManager.applications,\n        application: appManager.application,\n\n        onAppAdded: appManager.onAppAdded,\n        onAppRemoved: appManager.onAppRemoved,\n        onAppChanged: appManager.onAppChanged,\n        onAppAvailable: appManager.onAppAvailable,\n        onAppUnavailable: appManager.onAppUnavailable,\n\n        instances: appManager.instances,\n        get myInstance() {\n            return appManager.getMyInstance();\n        },\n\n        onInstanceStarted: appManager.onInstanceStarted,\n        onInstanceStopped: appManager.onInstanceStopped,\n        onInstanceUpdated: appManager.onInstanceUpdated,\n        onInstanceStartFailed: appManager.onInstanceStartFailed,\n\n        getRegion: entitlements.getRegion,\n        getBranches: entitlements.getBranches,\n        getCurrentBranch: entitlements.getCurrentBranch,\n        getFunctionalEntitlement: entitlements.getFunctionalEntitlement,\n        getFunctionalEntitlementBranch: entitlements.getFunctionalEntitlementBranch,\n\n        setCurrentBranch: entitlements.setCurrentBranch,\n        setRegion: entitlements.setRegion,\n\n        currentUser: entitlements.currentUser,\n\n        canI: entitlements.canI,\n        canIBranch: entitlements.canIBranch,\n\n        onBranchesChanged: entitlements.onBranchesChanged,\n\n        exit: entitlements.exit,\n        restart: entitlements.restart,\n\n        onShuttingDown: entitlements.onShuttingDown,\n\n        inMemory: new InMemoryStore(agm)\n    };\n\n    return api;\n};\n","import * as AgmNames from \"./const/agm-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport AppManagerImpl from \"./app-manager\";\n\n/** Retrieves application snapshot from ACS */\nexport default function snapshot(agm: Glue42Core.AGM.API, appManager: AppManagerImpl): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n        agm.invoke(AgmNames.GetApplicationsMethodName, { skipIcon: true })\n            .then((response) => {\n                const data = response.returned;\n                if (!data) {\n                    resolve();\n                }\n\n                const applications = data.applications;\n                if (!applications) {\n                    resolve();\n                }\n\n                objectValues(applications).map((item) => appManager.handleAppAdded(item));\n\n                resolve();\n            })\n            .catch((err) => reject(`Error getting application snapshot: ${err.message}`));\n    });\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport * as EventNames from \"./const/event-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\n\n/** Subscribe for the AGM stream published by ACS and distributes events to applications and instances components */\nexport default function createDataSubscription(agm: Glue42Core.AGM.API, applications: AppManagerImpl, entitlements: EntitlementsImpl, skipIcons: boolean) {\n\n    let subscription: Glue42Core.AGM.Subscription;\n    const start = () => {\n        let resolveFunc: () => void;\n        let rejectFunc: (error?: any) => void;\n\n        const resultPromise = new Promise<void>((resolve, reject) => {\n            resolveFunc = resolve;\n            rejectFunc = reject;\n        });\n\n        agm.subscribe(AgmNames.OnEventMethodName, { arguments: { skipIcon: skipIcons }, waitTimeoutMs: 10000 })\n            .then((s) => {\n                subscription = s;\n                subscription.onData((streamData: Glue42Core.AGM.StreamData) => {\n                    const events: any = streamData.data;\n\n                    objectValues(events[EventNames.OnApplicationAddedEvent])\n                        .map((item: AppProps) => applications.handleAppAdded(item));\n\n                    objectValues(events[EventNames.OnApplicationChangedEvent])\n                        .map((item: AppProps) => applications.handleAppUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationRemovedEvent])\n                        .map((item: AppProps) => applications.handleAppRemoved(item));\n\n                    objectValues(events[EventNames.OnApplicationReadyEvent])\n                        .map((item: AppProps) => applications.handleAppReady(item));\n\n                    objectValues(events[EventNames.OnApplicationStartedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStarted(item));\n\n                    objectValues(events[EventNames.OnApplicationStartFailedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStartFailed(item));\n\n                    objectValues(events[EventNames.OnApplicationStoppedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStopped(item));\n\n                    objectValues(events[EventNames.OnApplicationUpdatedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationAgmServerReadyEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceAgmServerReady(item));\n\n                    objectValues(events[EventNames.OnBranchChangedEvent])\n                        .map((item: Glue42.AppManager.Branch) => entitlements.handleBranchModified(item));\n\n                    objectValues(events[EventNames.OnBranchesModifiedEvent])\n                        .map((item: Glue42.AppManager.Branch[]) => entitlements.handleBranchesModified(item));\n\n                    resolveFunc();\n                });\n\n                subscription.onFailed((err: any) => rejectFunc(err));\n\n            })\n            .catch((err: any) => rejectFunc(`Error subscribing for ${AgmNames.OnEventMethodName} stream. Err: ${err}`));\n\n        return resultPromise;\n    };\n\n    const stop = () => {\n        if (subscription) {\n            subscription.close();\n        }\n    };\n\n    return {\n        start,\n        stop\n    };\n}\n","import { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { PendingWindowState, WindowEvents, WindowWrapper } from \"./types\";\n\nexport class WindowStore {\n    private readonly waitForTimeoutInMilliseconds: number = 60000;\n    private _windows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindowsStates: { [key: string]: PendingWindowState } = {};\n    private _registry: CallbackRegistry;\n    private _logger: Glue42Core.Logger.API;\n\n    constructor() {\n        this._registry = CallbackFactory();\n    }\n\n    public init(logger: Glue42Core.Logger.API) {\n        this._logger = logger;\n    }\n\n    // Returns a window which either in Ready OR NOT 'ready' state (when the window is NOT marked with readyToShow)\n    public get(id: string): WindowWrapper {\n        return this._windows[id] || this._pendingWindows[id];\n    }\n\n    // Returns a window which is in 'ready' state (when the window is marked with readyToShow)\n    public getIfReady(id: string): WindowWrapper {\n        return this._windows[id];\n    }\n\n    public get list(): { [key: string]: WindowWrapper } {\n        return this._windows;\n    }\n\n    public add(window: WindowWrapper) {\n        const isExist = this._pendingWindows[window.API.id] ? true : false;\n        if (isExist) {\n            this._logger.error(`trying to add window with id ${window.API.id} from windowStore, which already exists`);\n            return;\n        }\n        const remote = window.API.windowType === \"remote\";\n        this._pendingWindows[window.API.id] = window;\n        this._pendingWindowsStates[window.API.id] = {\n            ready: false,\n            urlChanged: remote, // remote windows don't have url events\n        };\n\n        this._registry.execute(\"on-added\", window);\n    }\n\n    public remove(window: WindowWrapper) {\n        delete this._windows[window.API.id];\n        delete this._pendingWindows[window.API.id];\n        delete this._pendingWindowsStates[window.API.id];\n        this._registry.execute(\"on-removed\", window);\n    }\n\n    public setReadyState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.ready = true;\n\n        if (targetWindowState.urlChanged) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public setUrlChangedState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.urlChanged = true;\n\n        if (targetWindowState.ready) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public waitFor(id: string): Promise<WindowWrapper> {\n        return new Promise((resolve, reject) => {\n\n            let un: UnsubscribeFunction;\n\n            const timeout = setTimeout(() => {\n                un();\n                reject(\"waitFor timed out.\");\n            }, this.waitForTimeoutInMilliseconds);\n\n            const win = this._windows[id];\n            if (win) {\n                clearTimeout(timeout);\n                resolve(win);\n            } else {\n                un = this.onReadyWindow((w: WindowWrapper) => {\n                    if (w.API.id !== id) {\n                        return;\n                    }\n                    clearTimeout(timeout);\n                    un();\n                    resolve(w);\n                });\n            }\n        });\n    }\n\n    public onReadyWindow(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-ready\", callback);\n    }\n\n    public onAdded(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-added\", callback);\n    }\n\n    public onRemoved(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-removed\", callback);\n    }\n\n    // newly created windows now need to hear both \"ready\" and \"urlChanged\" events in otder to be markedReadyToShow\n    public markReadyToShow(windowId: string) {\n        if (this._pendingWindows[windowId]) {\n            this._windows[windowId] = this._pendingWindows[windowId];\n            delete this._pendingWindows[windowId];\n            delete this._pendingWindowsStates[windowId];\n        }\n\n        this._registry.execute(\"on-ready\", this._windows[windowId]);\n    }\n}\n\nexport default new WindowStore();\n","import { Glue42 } from \"../glue\";\n\nexport default class Utils {\n    public static getGDMajorVersion() {\n        if (typeof window === \"undefined\") {\n            return -1;\n        }\n        if (!window.glueDesktop) {\n            return -1;\n        }\n        if (!window.glueDesktop.version) {\n            return -1;\n        }\n        const ver = Number(window.glueDesktop.version.substr(0, 1));\n        return isNaN(ver) ? -1 : ver;\n    }\n\n    public static callbackifyPromise<T>(\n        action: () => Promise<T>,\n        successCallback?: (args?: T) => void,\n        errorCallback?: (errorMessage: string) => void): Promise<T> {\n\n        const fail = (error: any) => {\n            let msg = error;\n            if (error instanceof Error) {\n                msg = error.message;\n            }\n            if (typeof errorCallback === \"function\") {\n                errorCallback(msg);\n                return;\n            }\n\n            return Promise.reject(msg);\n        };\n\n        try {\n            return action()\n                .then((result) => {\n                    if (typeof successCallback === \"function\") {\n                        successCallback(result);\n                    }\n                    return result;\n                })\n                .catch((error) => {\n                    return fail(error);\n                });\n        } catch (err) {\n            return fail(err);\n        }\n    }\n\n    public static getMonitor(bounds: Glue42.Windows.Bounds, displays?: Glue42.Screen[]): Glue42.Screen {\n        const monitorsSortedByOverlap = displays.map((m) => {\n            const { left, top, workingAreaWidth: width, workingAreaHeight: height } = m;\n            const overlap = this.calculateTotalOverlap({ left, top, width, height }, bounds);\n            return {\n                monitor: m,\n                totalOverlap: overlap\n            };\n        }).sort((a, b) => b.totalOverlap - a.totalOverlap);\n\n        return monitorsSortedByOverlap[0].monitor;\n    }\n\n    public static getDisplayCenterOfScreen(a: Partial<Glue42.Windows.Bounds>, display?: Glue42.Screen) {\n        const left = Math.floor(Math.max(display.left, (display.left + (display.workingAreaWidth - a.width) / 2)));\n        const top = Math.floor(Math.max(display.top, (display.top + (display.workingAreaHeight - a.height) / 2)));\n        return {\n            top,\n            left\n        };\n    }\n\n    private static calculateTotalOverlap(r1: Glue42.Windows.Bounds, r2: Glue42.Windows.Bounds) {\n        const r1x = r1.left;\n        const r1y = r1.top;\n        const r1xMax = r1x + r1.width;\n        const r1yMax = r1y + r1.height;\n\n        const r2x = r2.left;\n        const r2y = r2.top;\n        const r2xMax = r2x + r2.width;\n        const r2yMax = r2y + r2.height;\n\n        const xOverlap = Math.max(0, Math.min(r1xMax, r2xMax) - Math.max(r1x, r2x));\n        const yOverlap = Math.max(0, Math.min(r1yMax, r2yMax) - Math.max(r1y, r2y));\n\n        return xOverlap * yOverlap;\n    }\n}\n","import CallbackFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport {\n    Executor,\n    FrameButton,\n    Neighbours,\n    WindowConstructorOptions,\n    WindowEvents,\n    WindowWrapper,\n    FlashOptions,\n    DetachTabOptions,\n} from \"./types\";\nimport * as util from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nimport { default as windowStore } from \"./store\";\nimport GDWindow = Glue42.Windows.GDWindow;\nimport { CompositionChangedData } from \"./environment/gd/types\";\n\nexport default (id: string, options: WindowConstructorOptions, executor: Executor, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, agm: Glue42.AGM.API): WindowWrapper => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger.subLogger(`window ${id}`);\n\n    let resultWindow: Glue42.Windows.GDWindow;\n\n    const _id = id;\n    const _name: string = options.name;\n    const _mode: Glue42.Windows.WindowMode = options.mode;\n    let _bounds: Glue42.Windows.Bounds = options.bounds;\n    let _url: string = options.url;\n    let _title: string = options.title;\n    let _context: any = options.context ?? {};\n    let _frameColor: string = options.frameColor;\n    let _focus: boolean = options.focus;\n    let _neighbours: Neighbours = options.neighbours ?? {};\n    let _groupId: string = options.groupId;\n    let _isGroupHeaderVisible: boolean = options.isGroupHeaderVisible;\n    let _isTabHeaderVisible: boolean = options.isTabHeaderVisible;\n    let _isTabSelected: boolean = options.isTabSelected ?? false;\n    let _settings: Glue42.Windows.WindowSettings = options.settings;\n\n    // is Window visible\n    let _isVisible: boolean = options.isVisible;\n\n    // is Window sticky enable\n    let _isSticky: boolean = options.isSticky;\n\n    // Window state Collapsed | Expanded\n    let _isCollapsed: boolean = options.isCollapsed;\n\n    // Window state normal | maximized | minimized\n    let _windowState: Glue42.Windows.WindowState = options.state;\n\n    // tabGroupId only for window with 'Tab' mode\n    let _tabGroupId: string = options.tabGroupId;\n    let _tabIndex: number = options.tabIndex;\n\n    // window is locked or unlocked;\n    let _isLocked: boolean = options.isLocked;\n\n    let _group: Glue42.Windows.Group;\n\n    // Holding all frame buttons\n    let _frameButtons: Glue42.Windows.ButtonInfo[] = [];\n\n    // Holding the current zoom factor\n    let _zoomFactor = options.zoomFactor;\n\n    let _placementSettings: Glue42.Windows.PlacementSettings = options.placementSettings;\n\n    //#region \"AGM methods\"\n\n    function close(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!id) {\n                throw new Error(\"The window is already closed.\");\n            }\n            return executor.close(resultWindow);\n        }, success, error);\n    }\n\n    function navigate(newUrl: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(newUrl)) {\n                throw new Error(\"The new URL must be a non-empty string.\");\n            }\n            return executor.navigate(resultWindow, newUrl);\n        }, success, error);\n    }\n\n    function setStyle(style: Glue42.Windows.WindowStyle, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!style || Object.keys(style).length === 0 || Object.keys(style).every((key) => !key)) {\n                throw new Error(\"Invalid style arguments: \" + JSON.stringify(style));\n            }\n            if (style && style.focus !== undefined) {\n                if (typeof style.focus !== \"boolean\") {\n                    throw new Error(\"Focus must be a boolean value. Currently, only `focus: true` is supported.\");\n                } else if (style.focus === false) {\n                    _logger.warn(\"`focus: false` is not supported!\");\n                }\n            }\n            if (style && style.hidden !== undefined && typeof style.hidden !== \"boolean\") {\n                throw new Error(\"The `hidden` property must hold a boolean value.\");\n            }\n            for (const prop of [\"minHeight\", \"maxHeight\", \"minWidth\", \"maxWidth\"]) {\n                const styleAsAny = style as any;\n                const value = styleAsAny[prop];\n                if (prop in style) {\n                    if (util.isUndefinedOrNull(value)) {\n                        delete styleAsAny[prop];\n                        continue;\n                    }\n                    if (!util.isNumber(styleAsAny[prop])) {\n                        throw new Error(`\"${prop}\" must be a number`);\n                    }\n                }\n            }\n            return executor.setStyle(resultWindow, style);\n        }, success, error);\n    }\n    // REVIEW\n    function resetButtons(buttons: Glue42.Windows.WindowButtons, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(\n            () => executor.resetButtons(resultWindow, buttons),\n            success,\n            error\n        );\n    }\n\n    function setOnTop(onTop: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof onTop !== \"boolean\") {\n                throw new Error(\"`onTop` must hold a boolean value.\");\n            }\n            return executor.setOnTop(resultWindow, onTop);\n        }, success, error);\n    }\n\n    function setSizeConstraints(constraints: Glue42.Windows.SizeConstraints, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!constraints || Object.keys(constraints).every((value) => value === undefined)) {\n                throw new Error(\"The properties of `constraints` cannot be null or undefined.\");\n            }\n            return executor.setSizeConstraints(resultWindow, constraints);\n        }, success, error);\n    }\n\n    function setTitle(newTitle: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(newTitle)) {\n                throw new Error(\"`newTitle` must not be null or undefined.\");\n            }\n            if (newTitle === _title) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.setTitle(resultWindow, newTitle);\n        }, success, error);\n    }\n\n    function setSticky(isSticky: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof isSticky !== \"boolean\") {\n                throw new Error(\"`isSticky` must hold a boolean value.\");\n            }\n            return executor.setSticky(resultWindow, isSticky);\n        }, success, error);\n    }\n\n    function moveResize(bounds: Partial<Glue42.Windows.Bounds>, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(bounds)) {\n                throw new Error(\"The properties of `bounds` cannot be null or undefined.\");\n            }\n            return executor.moveResize(resultWindow, bounds);\n        }, success, error);\n    }\n\n    function addFrameButton(buttonInfo: Glue42.Windows.ButtonInfo, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof buttonInfo === \"undefined\" || Object.keys(buttonInfo).length === 0) {\n                throw new Error(\"Button info is not available.\");\n            }\n            if (util.isNullOrWhiteSpace(buttonInfo.buttonId)) {\n                throw new Error(\"`buttonId` must not be null or undefined.\");\n            }\n            if (util.isNullOrWhiteSpace(buttonInfo.imageBase64)) {\n                throw new Error(\"`imageBase64` must not be null or undefined.\");\n            }\n            return executor.addFrameButton(resultWindow, buttonInfo);\n        }, success, error);\n    }\n\n    function removeFrameButton(buttonId: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(buttonId)) {\n                throw new Error(\"`buttonId` must not be null or undefined.\");\n            }\n            return executor.removeFrameButton(resultWindow, buttonId);\n        }, success, error);\n    }\n\n    function activate(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_focus) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.activate(resultWindow);\n        }, success, error);\n    }\n\n    function focus(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_focus) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.focus(resultWindow);\n        }, success, error);\n    }\n\n    function maximizeRestore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.maximizeRestore(resultWindow);\n        }, success, error);\n    }\n\n    function maximize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"maximized\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.maximize(resultWindow);\n        }, success, error);\n    }\n\n    function restore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"normal\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.restore(resultWindow);\n        }, success, error);\n    }\n\n    function minimize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"minimized\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.minimize(resultWindow);\n        }, success, error);\n    }\n\n    function collapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_isCollapsed) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.collapse(resultWindow);\n        }, success, error);\n    }\n\n    function expand(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!_isCollapsed) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.expand(resultWindow);\n        }, success, error);\n    }\n\n    function toggleCollapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.toggleCollapse(resultWindow);\n        }, success, error);\n    }\n\n    function snap(target: string | Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(target)) {\n                throw new Error(`A target window is not specified - ${target}`);\n            }\n\n            if (typeof target === \"string\") {\n                const win = windowStore.get(target);\n                if (!win) {\n                    throw new Error(`Invalid \"target\" parameter or no such window. Invoked with: ${target}`);\n                }\n                target = win.API;\n            }\n            return executor.snap(resultWindow, target, direction);\n        }, success, error);\n    }\n\n    function attachTab(tab: Glue42.Windows.GDWindow | string, opt: number | Glue42.Windows.AttachOptions, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            const errorMessage = `Invalid \"tab\" parameter - must be an object with an \"id\" property or a string. Invoked for source window with ID:`;\n            if (util.isUndefinedOrNull(tab)) {\n                throw new Error(errorMessage + tab);\n            }\n            // tab === sourceWindow\n            let sourceWindow;\n            if (typeof tab === \"string\") {\n                sourceWindow = windowStore.get(tab)?.API;\n                if (util.isUndefinedOrNull(sourceWindow)) {\n                    throw new Error(errorMessage + sourceWindow);\n                }\n            } else if (!util.isUndefinedOrNull(tab.id)) {\n                sourceWindow = tab;\n            } else {\n                throw new Error(errorMessage);\n            }\n            const attachOptions: Glue42.Windows.AttachOptions = {};\n            if (!util.isUndefinedOrNull(opt)) {\n                if (typeof opt === \"number\") {\n                    attachOptions.index = opt;\n                } else {\n                    attachOptions.selected = opt.selected;\n                    attachOptions.index = opt.index;\n                }\n            }\n\n            return executor.attachTab(resultWindow, sourceWindow, attachOptions);\n        }, success, error);\n    }\n\n    function detachTab(opt: Glue42.Windows.DetachOptions = {}, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            const argsForSend: DetachTabOptions = {};\n            function isDetachRelative(o: Glue42.Windows.DetachOptions) {\n                return o.relativeTo !== undefined;\n            }\n            if (isDetachRelative(opt)) {\n                if (typeof opt.relativeTo === \"string\") {\n                    argsForSend.relativeTo = opt.relativeTo;\n                } else if (!util.isUndefinedOrNull(opt.relativeTo.id)) {\n                    argsForSend.relativeTo = opt.relativeTo.id;\n                }\n                if (!util.isUndefinedOrNull(opt.relativeDirection)) {\n                    argsForSend.relativeDirection = opt.relativeDirection;\n                }\n                if (!util.isUndefinedOrNull(opt.width)) {\n                    argsForSend.width = opt.width;\n                }\n                if (!util.isUndefinedOrNull(opt.height)) {\n                    argsForSend.height = opt.height;\n                }\n            } else {\n                if (!util.isUndefinedOrNull(opt.bounds)) {\n                    argsForSend.bounds = opt.bounds;\n                }\n            }\n            if (!util.isUndefinedOrNull(opt.hideTabHeader)) {\n                argsForSend.hideTabHeader = opt.hideTabHeader;\n            }\n            return executor.detachTab(resultWindow, argsForSend);\n        }, success, error);\n    }\n\n    function setVisible(toBeVisible?: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.setVisible(resultWindow, toBeVisible);\n        }, success, error);\n    }\n\n    function showLoader(loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        return executor.showLoader(resultWindow, loader);\n    }\n\n    function hideLoader(): Promise<Glue42.Windows.GDWindow> {\n        return executor.hideLoader(resultWindow);\n    }\n\n    function updateContext(context: any, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(context)) {\n                throw new Error(`\"context\" must not be null or undefined.`);\n            }\n\n            return executor.updateContext(resultWindow, context, false);\n        }, success, error);\n    }\n\n    function lock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.lock(resultWindow);\n        }, success, error);\n    }\n\n    function unlock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.unlock(resultWindow);\n        }, success, error);\n    }\n\n    function getIcon(success?: (icon: string) => void, error?: (error: string) => void): Promise<string> {\n        return utils.callbackifyPromise(() => {\n            return executor.getIcon(resultWindow);\n        }, success, error);\n    }\n\n    function setIcon(base64Image: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(base64Image)) {\n                throw new Error(`\"base64Imag\" must be a non-empty string.`);\n            }\n            return executor.setIcon(resultWindow, base64Image);\n        }, success, error);\n    }\n\n    function setFrameColor(frameColor: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(frameColor)) {\n                throw new Error(`\"frameColor\" must be a non-empty string`);\n            }\n            return executor.setFrameColor(resultWindow, frameColor);\n        }, success, error);\n    }\n\n    function setTabHeaderVisible(toBeTabHeaderVisible: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof toBeTabHeaderVisible !== \"boolean\") {\n                throw new Error(`\"toBeTabHeaderVisible\" must hold a boolean value.`);\n            }\n            return executor.setTabHeaderVisible(resultWindow, toBeTabHeaderVisible);\n        }, success, error);\n    }\n\n    async function setTabTooltip(tooltip: string): Promise<Glue42.Windows.GDWindow> {\n        if (util.isNullOrWhiteSpace(tooltip)) {\n            throw new Error(`\"${tooltip}\" must not be null or undefined`);\n        }\n        return executor.setTabTooltip(resultWindow, tooltip);\n    }\n\n    function showPopup(config: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.showPopup(resultWindow, config);\n    }\n\n    function createFlydown(config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return executor.createFlydown(resultWindow.id, config);\n    }\n\n    function setModalState(isModal: boolean): Promise<void> {\n        return executor.setModalState(resultWindow.id, isModal || false);\n    }\n\n    function zoomIn(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomIn(resultWindow);\n        }, success, error);\n    }\n\n    function zoomOut(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomOut(resultWindow);\n        }, success, error);\n    }\n\n    function setZoomFactor(zoomFactor: number, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            if (isNaN(zoomFactor)) {\n                throw new Error(`zoomFactor is not a number`);\n            }\n            return executor.setZoomFactor(resultWindow, zoomFactor);\n        }, success, error);\n    }\n\n    function showDevTools() {\n        return executor.showDevTools(resultWindow);\n    }\n\n    function capture(captureOptions: Glue42.Windows.CaptureOptions): Promise<string> {\n        return executor.capture(resultWindow, captureOptions);\n    }\n\n    function flash(suppliedOptions?: boolean, mode?: Glue42.Windows.FlashMode): Promise<Glue42.Windows.GDWindow> {\n        const flashOptions: FlashOptions = {\n            shouldFlash: true,\n            mode: \"auto\"\n        };\n\n        if (typeof suppliedOptions === \"boolean\") {\n            flashOptions.shouldFlash = suppliedOptions;\n        }\n\n        if (typeof mode !== \"undefined\") {\n            flashOptions.mode = mode;\n        }\n\n        return executor.flash(resultWindow, flashOptions);\n    }\n\n    function print(printOptions: Glue42.Windows.PrintOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.print(resultWindow, printOptions);\n    }\n\n    function printToPDF(printToPDFOptions: Glue42.Windows.PrintToPDFOptions): Promise<string> {\n        return executor.printToPDF(resultWindow, printToPDFOptions);\n    }\n\n    function ungroup(ungroupOptions?: Glue42.Windows.UngroupOptions): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const unGroupChanged = onGroupChanged(\n                (win: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => {\n                    if (id === win.id) {\n                        unGroupChanged();\n                        resolve(resultWindow);\n                    }\n                });\n\n            executor.ungroup(resultWindow, ungroupOptions)\n                .catch((e: string) => {\n                    unGroupChanged();\n                    reject(e);\n                });\n        });\n    }\n\n    function place(placementSettings: Glue42.Windows.PlacementSettings): Promise<void> {\n        return executor.place(resultWindow, placementSettings);\n    }\n\n    function refresh(ignoreCache: boolean) {\n        return executor.refresh(resultWindow, ignoreCache);\n    }\n\n    function download(url: string, opts: Glue42.Windows.DownloadOptions) {\n        return executor.download(resultWindow, url, opts);\n    }\n\n    function configure(settings: Glue42.Windows.WindowConfiguration) {\n        return executor.configureWindow(resultWindow, settings);\n    }\n\n    //#endregion \"AGM methods\"\n\n    //#region \"Events\"\n\n    function onTitleChanged(callback: (title: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onTitleChanged\", callback, [resultWindow.title, resultWindow]);\n    }\n\n    function onClose(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (id === undefined) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"onClose\", callback);\n    }\n\n    function onUrlChanged(callback: (url: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onUrlChanged\", callback);\n    }\n\n    function onFrameButtonAdded(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonAdded\", callback);\n    }\n\n    function onFrameButtonRemoved(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonRemoved\", callback);\n    }\n\n    function onFrameButtonClicked(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonClicked\", callback);\n    }\n\n    function onCollapsed(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (_isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"collapsed\", callback);\n    }\n\n    function onExpanded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (!_isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"expanded\", callback);\n    }\n\n    function onMaximized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"maximized\") {\n            return onEventCore(\"maximized\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"maximized\", callback);\n        }\n    }\n\n    function onMinimized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"minimized\") {\n            return onEventCore(\"minimized\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"minimized\", callback);\n        }\n    }\n\n    function onNormal(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"normal\") {\n            return onEventCore(\"normal\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"normal\", callback);\n        }\n    }\n\n    function onAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"attached\", callback);\n    }\n\n    function onDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"detached\", callback);\n    }\n\n    function onVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"visibility-changed\", callback);\n    }\n\n    function onContextUpdated(callback: (context: any, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"context-updated\", callback);\n    }\n\n    function onLockingChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"lock-changed\", callback);\n    }\n\n    function onBoundsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"bounds-changed\", callback);\n    }\n\n    function onFocusChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"focus-changed\", callback);\n    }\n\n    function onStickyChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"sticky-changed\", callback);\n    }\n\n    function onFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"frame-color-changed\", callback);\n    }\n\n    function onTabHeaderVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"tab-header-visibility-changed\", callback);\n    }\n\n    function onWindowAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"window-attached\", callback);\n    }\n\n    function onWindowDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"window-detached\", callback);\n    }\n\n    function onGroupChanged(callback: (window: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => void): UnsubscribeFunction {\n        return onEventCore(\"group-changed\", callback);\n    }\n\n    function onTabSelectionChanged(callback: (selectedWindow: Glue42.Windows.GDWindow, previousWindow: Glue42.Windows.GDWindow, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"tab-selection-changed\", callback);\n    }\n\n    function onClosing(callback: () => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        type GDHandler = (success: () => void, error: () => void) => void;\n        const callbackWrap: GDHandler = (success: () => void, error: () => void) => {\n            const promise = callback();\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onClosing(callbackWrap, id);\n    }\n\n    function onRefreshing(callback: (prevent: () => void) => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        type GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => void;\n        const callbackWrap: GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => {\n            const promise = callback(prevent);\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onRefreshing(callbackWrap, id);\n    }\n\n    function onZoomFactorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"zoom-factor-changed\", callback);\n    }\n\n    function onPlacementSettingsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"placementSettingsChanged\", callback);\n    }\n\n    function onNeighboursChanged(callback: (neighbours: Glue42.Windows.Neighbours, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"neighbours-changed\", callback);\n    }\n\n    function onEventCore(key: string, callback: any, replayArguments?: any[]) {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        return _registry.add(key, callback, replayArguments);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"Stream function\"\n\n    function handleUpdate(updated: WindowConstructorOptions) {\n        _url = updated.url;\n        _title = updated.title;\n        _context = updated.context || {};\n        _bounds = updated.bounds;\n        _frameColor = updated.frameColor;\n        _focus = updated.focus;\n        _neighbours = updated.neighbours || {};\n        _groupId = updated.groupId;\n        _isGroupHeaderVisible = updated.isGroupHeaderVisible;\n        _isTabHeaderVisible = updated.isTabHeaderVisible;\n        _isTabSelected = updated.isTabSelected;\n        _settings = updated.settings;\n        _isVisible = updated.isVisible;\n        _isSticky = updated.isSticky;\n        _isCollapsed = updated.isCollapsed;\n        _windowState = updated.state;\n        _tabGroupId = updated.tabGroupId;\n        _isLocked = updated.isLocked;\n        // _frameButtons = updated.fra;\n        // _group: Glue42.Windows.Group;\n        _zoomFactor = updated.zoomFactor;\n        _placementSettings = updated.placementSettings;\n    }\n\n    function handleTitleChanged(newTitle: string): void {\n        _title = newTitle;\n        executor.finished\n            .finally(() => {\n                _registry.execute(\"onTitleChanged\", newTitle, resultWindow);\n            });\n    }\n\n    function handleUrlChanged(newUrl: string): void {\n        _url = newUrl;\n        _registry.execute(\"onUrlChanged\", newUrl, resultWindow);\n    }\n\n    function handleVisibilityChanged(isVisible: boolean) {\n        if (isVisible === _isVisible) {\n            return;\n        }\n        _isVisible = isVisible;\n        _registry.execute(\"visibility-changed\", resultWindow);\n    }\n\n    function handleWindowSettingsChanged(settings: Glue42.Windows.WindowSettings): void {\n        _settings = settings;\n        _registry.execute(\"settings-changed\", resultWindow);\n    }\n\n    function handleContextUpdated(context: any): void {\n        _context = context;\n        _registry.execute(\"context-updated\", _context, resultWindow);\n    }\n\n    function handleWindowClose(): void {\n        if (id === undefined) {\n            return;\n        }\n        _registry.execute(\"onClose\", resultWindow);\n        id = undefined;\n    }\n\n    function handleFrameButtonAdded(frameButton: FrameButton): void {\n        const buttonObj: Glue42.Windows.ButtonInfo = [\"buttonId\", \"imageBase64\", \"order\", \"tooltip\"].reduce((memo: any, k) => {\n            memo[k] = frameButton[k];\n            return memo;\n        }, {}) as Glue42.Windows.ButtonInfo;\n\n        const frameButtonsIds = _frameButtons.map((btn) => {\n            return btn.buttonId;\n        });\n\n        if (frameButtonsIds.indexOf(frameButton.buttonId) === -1) {\n            _frameButtons.push(buttonObj);\n        }\n\n        _registry.execute(\"onFrameButtonAdded\", buttonObj, resultWindow);\n    }\n\n    function handleFrameButtonRemoved(frameButtonId: string): void {\n        let button: Glue42.Windows.ButtonInfo;\n        _frameButtons = _frameButtons.reduce((memo, btn) => {\n            if (btn.buttonId === frameButtonId) {\n                button = btn;\n            } else {\n                memo.push(btn);\n            }\n            return memo;\n        }, []);\n\n        if (button !== undefined) {\n            _registry.execute(\"onFrameButtonRemoved\", button, resultWindow);\n        }\n    }\n\n    function handleFrameButtonClicked(frameButton: FrameButton): void {\n        const button = _frameButtons.filter((btn) => {\n            return btn.buttonId === frameButton.buttonId;\n        });\n\n        if (button.length > 0) {\n            _registry.execute(\"onFrameButtonClicked\", button[0], resultWindow);\n        }\n    }\n\n    async function handleWindowChangeState(state: string): Promise<void> {\n        if (state === \"collapsed\") {\n            _isCollapsed = true;\n        } else if (state === \"expanded\") {\n            _isCollapsed = false;\n        } else {\n            _windowState = state as Glue42.Windows.WindowState;\n        }\n        await executor.finished;\n        _registry.execute(state, resultWindow);\n    }\n\n    function handleFrameIsLockedChanged(isLocked: boolean): void {\n        _isLocked = isLocked;\n        _registry.execute(\"lock-changed\", resultWindow);\n    }\n\n    function handleBoundsChanged(bounds: Glue42.Windows.Bounds): void {\n        if (_bounds.top === bounds.top && _bounds.left === bounds.left && _bounds.width === bounds.width && _bounds.height === bounds.height) {\n            return;\n        }\n        _bounds = bounds;\n        _registry.execute(\"bounds-changed\", resultWindow);\n    }\n\n    function handleFocusChanged(isFocused: boolean): void {\n        _focus = isFocused;\n        _registry.execute(\"focus-changed\", resultWindow);\n    }\n\n    function handleIsStickyChanged(isSticky: boolean): void {\n        _isSticky = isSticky;\n        _registry.execute(\"sticky-changed\", isSticky, resultWindow);\n    }\n\n    function handleFrameColorChanged(frameColor: string): void {\n        _frameColor = frameColor;\n        _registry.execute(\"frame-color-changed\", resultWindow);\n    }\n\n    function handleFrameAttached(tabGroupId: string, isTabHeaderVisible: boolean): void {\n        _tabGroupId = tabGroupId;\n        _isTabHeaderVisible = isTabHeaderVisible;\n        _registry.execute(\"frame-attached\", resultWindow);\n    }\n\n    function handleCompositionChanged(state: CompositionChangedData): void {\n        _neighbours = state.neighbors || {};\n        _tabIndex = state.index;\n        _registry.execute(\"neighbours-changed\", _neighbours, resultWindow);\n    }\n\n    function handleGroupHeaderVisibilityChanged(isGroupHeaderVisible: boolean): void {\n        _isGroupHeaderVisible = isGroupHeaderVisible;\n    }\n\n    function handleTabHeaderVisibilityChanged(isTabHeaderVisible: boolean): void {\n        if (_isTabHeaderVisible !== isTabHeaderVisible) {\n            _isTabHeaderVisible = isTabHeaderVisible;\n            _registry.execute(\"tab-header-visibility-changed\", resultWindow);\n        }\n    }\n\n    async function handleFrameSelectionChanged(newWindow: string, prevWindow: string) {\n        let selectedWindow: Glue42.Windows.GDWindow;\n        if (newWindow === id) {\n            _isTabSelected = true;\n            selectedWindow = resultWindow;\n        } else {\n            _isTabSelected = false;\n            selectedWindow = windowStore.get(newWindow) ? windowStore.get(newWindow).API : undefined;\n        }\n        const previousWindow = windowStore.get(prevWindow) ? windowStore.get(prevWindow).API : undefined;\n        await executor.finished;\n        _registry.execute(\"tab-selection-changed\", selectedWindow, previousWindow, resultWindow);\n    }\n\n    async function handleAttached(newTabGroupId: string, tabHeaderVisible: boolean, winsToBeNotified: WindowWrapper[]): Promise<void> {\n        _tabGroupId = newTabGroupId;\n        _isTabHeaderVisible = tabHeaderVisible;\n        await executor.finished;\n        winsToBeNotified.forEach((w) => {\n            w.Events.handleWindowAttached(resultWindow);\n        });\n        _registry.execute(\"attached\", resultWindow);\n    }\n\n    function handleWindowAttached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-attached\", win);\n    }\n\n    async function handleDetached(winsToBeNotified: WindowWrapper[]): Promise<void> {\n        _tabGroupId = undefined;\n        _isTabSelected = false;\n        await executor.finished;\n        winsToBeNotified.forEach((w) => {\n            w.Events.handleWindowDetached(resultWindow);\n        });\n        _registry.execute(\"detached\", resultWindow);\n    }\n\n    function handleWindowDetached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-detached\", win);\n    }\n\n    function handleZoomFactorChanged(zoomFactor: number): void {\n        _zoomFactor = zoomFactor;\n        _registry.execute(\"zoom-factor-changed\", resultWindow);\n    }\n\n    function handlePlacementSettingsChanged(placementSettings: Glue42.Windows.PlacementSettings): void {\n        let promise: Promise<Glue42.Displays.Display>;\n        const copy = placementSettings as any;\n        if (!copy.display) {\n            promise = Promise.resolve(undefined);\n        } else {\n            const displayAPI = displayAPIGetter();\n            if (!displayAPI) {\n                // display API is disabled\n                promise = Promise.resolve(undefined);\n            } else {\n                const index = copy.display - 1;\n                promise = new Promise((resolve, reject) => {\n                    displayAPI.all().then((displays) => {\n                        const display = displays.find((d) => d.index === index);\n                        resolve(display);\n                    }).catch(reject);\n                });\n            }\n        }\n\n        promise.then((d) => {\n            copy.display = d;\n            _placementSettings = copy;\n            _registry.execute(\"placementSettingsChanged\", resultWindow);\n        });\n    }\n    //#endregion \"Stream function\"\n\n    //#region \"Group Events\"\n    function handleGroupChanged(newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) {\n        _group = newGroup;\n        _groupId = newGroup?.id;\n\n        if (!util.isUndefinedOrNull(newGroup) && !util.isUndefinedOrNull(oldGroup)) {\n            _registry.execute(\"group-changed\", resultWindow, newGroup, oldGroup);\n        }\n    }\n\n    //#region \"Internal function\"\n\n    function getAllTabs(): Glue42.Windows.GDWindow[] {\n        const allWindows = windowStore.list;\n        if (_mode.toLowerCase() !== \"tab\") {\n            return [];\n        }\n        const tabs = Object.keys(allWindows).reduce<GDWindow[]>((memo, win) => {\n            const window: WindowWrapper = allWindows[win];\n            if (window\n                && window.API.tabGroupId\n                && typeof window.API.tabGroupId !== \"undefined\"\n                && typeof resultWindow.tabGroupId !== \"undefined\"\n                && window.API.tabGroupId === resultWindow.tabGroupId) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n        return tabs.sort((w1, w2) => {\n            if (w1.tabIndex !== w2.tabIndex) {\n                if (w1.tabIndex === -1) {\n                    return Number.MAX_SAFE_INTEGER;\n                }\n                if (w2.tabIndex === -1) {\n                    return Number.MIN_SAFE_INTEGER;\n                }\n            }\n            return w1.tabIndex - w2.tabIndex;\n        });\n    }\n\n    function mapWindowIdsToWindowObjects(windowIdArr: string[]): Glue42.Windows.GDWindow[] {\n        return windowIdArr.reduce((memo, winId) => {\n            const window = windowStore.get(winId);\n            if (window) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n    }\n\n    function getNeighboursByDirection(direction: string): Glue42.Windows.GDWindow[] {\n        const windowIds = _neighbours[direction];\n        if (typeof windowIds !== \"undefined\") {\n            return mapWindowIdsToWindowObjects(windowIds);\n        }\n    }\n\n    function getApplicationName(): string {\n        if (_context._APPLICATION_NAME) {\n            return _context._APPLICATION_NAME;\n        }\n        if (_context && _context._t42 && _context._t42.application) {\n            return _context._t42.application;\n        }\n        const info = getWindowInfo();\n        if (!info) {\n            return undefined;\n        }\n\n        return info.applicationName;\n    }\n\n    function getWindowInfo() {\n        if (typeof window !== \"undefined\" && window.glue42gd && window.glue42gd.getWindowInfo) {\n            const info = window.glue42gd.getWindowInfo(id);\n            if (!info) {\n                return undefined;\n            } else {\n                return info;\n            }\n        }\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"API\"\n\n    resultWindow = {\n        get id() {\n            return _id;\n        },\n        get name() {\n            return _name;\n        },\n        get application() {\n            const appManager = appManagerGetter();\n            return appManager ? appManager.application(getApplicationName()) : undefined;\n        },\n        get hostInstance() {\n            return executor.hostInstance;\n        },\n        get agmInstance() {\n            if (typeof window !== \"undefined\" && window.glue42gd) {\n                return agm.servers().find((s) => s.windowId === this.id);\n            }\n            const appName = getApplicationName();\n            return appName ? { application: appName } : undefined;\n        },\n        get url() {\n            return _url;\n        },\n        get title() {\n            return _title;\n        },\n        get windowStyleAttributes() {\n            return _settings;\n        },\n        get settings() {\n            return _settings;\n        },\n        get tabGroupId() {\n            return _mode.toLowerCase() === \"tab\" ? _tabGroupId : undefined;\n        },\n        get tabIndex() {\n            return _mode.toLowerCase() === \"tab\" ? _tabIndex : undefined;\n        },\n        get frameButtons() {\n            return _frameButtons;\n        },\n        get mode() {\n            return _mode;\n        },\n        get state() {\n            return _windowState;\n        },\n        get isCollapsed() {\n            return _isCollapsed;\n        },\n        get isVisible() {\n            return _isVisible;\n        },\n        get isLocked() {\n            return _isLocked;\n        },\n        get context() {\n            return _context;\n        },\n        get bounds() {\n            return _bounds;\n        },\n        get minHeight() {\n            return _settings.minHeight;\n        },\n        get maxHeight() {\n            return _settings.maxHeight;\n        },\n        get minWidth() {\n            return _settings.minWidth;\n        },\n        get maxWidth() {\n            return _settings.maxWidth;\n        },\n        get isFocused() {\n            return _focus;\n        },\n        get frameColor() {\n            return _frameColor;\n        },\n        get opened() {\n            return resultWindow.id !== undefined;\n        },\n        get group() {\n            return _group;\n        },\n        get groupId() {\n            return _groupId;\n        },\n        get isSticky() {\n            return _isSticky;\n        },\n        get topNeighbours() {\n            return getNeighboursByDirection(\"top\");\n        },\n        get leftNeighbours() {\n            return getNeighboursByDirection(\"left\");\n        },\n        get rightNeighbours() {\n            return getNeighboursByDirection(\"right\");\n        },\n        get bottomNeighbours() {\n            return getNeighboursByDirection(\"bottom\");\n        },\n        get isGroupHeaderVisible() {\n            return _isGroupHeaderVisible;\n        },\n        get activityId() {\n            if (_context._t42) {\n                return _context._t42.activityId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityId;\n        },\n        get activityWindowId() {\n            if (_context._t42) {\n                return _context._t42.activityWindowId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityWindowId;\n        },\n        get windowType() {\n            return options.windowType || \"electron\";\n        },\n        get zoomFactor() {\n            return _zoomFactor;\n        },\n        get screen() {\n            if (typeof window !== \"undefined\" && window.glue42gd) {\n                return utils.getMonitor(resultWindow.bounds, (window.glue42gd as any).monitors);\n            }\n            return undefined;\n        },\n        get placementSettings(): Glue42.Windows.PlacementSettings {\n            return Object.assign({}, _placementSettings);\n        },\n        maximize,\n        restore,\n        minimize,\n        maximizeRestore,\n        collapse,\n        expand,\n        toggleCollapse,\n        focus,\n        activate,\n        moveResize,\n        setTitle,\n        setStyle,\n        setOnTop,\n        resetButtons,\n        setSizeConstraints,\n        navigate,\n        addFrameButton,\n        removeFrameButton,\n        setVisible,\n        show: () => setVisible(true),\n        hide: () => setVisible(false),\n        center: (screen) => moveResize(utils.getDisplayCenterOfScreen(resultWindow.bounds, screen || resultWindow.screen)),\n        close,\n        snap,\n        showLoader,\n        hideLoader,\n        updateContext,\n        lock,\n        unlock,\n        getIcon,\n        setIcon,\n        setFrameColor,\n        setTabTooltip,\n        attachTab,\n        detachTab,\n        setTabHeaderVisible,\n        showPopup,\n        createFlydown,\n        setModalState,\n        setZoomFactor,\n        zoomIn,\n        zoomOut,\n        showDevTools,\n        capture,\n        flash,\n        setSticky,\n        print,\n        printToPDF,\n        place,\n        ungroup,\n        refresh,\n        download,\n        configure,\n\n        onClose,\n        onUrlChanged,\n        onTitleChanged,\n        onFrameButtonAdded,\n        onFrameButtonRemoved,\n        onFrameButtonClicked,\n        onCollapsed,\n        onExpanded,\n        onMinimized,\n        onMaximized,\n        onNormal,\n        onAttached,\n        onDetached,\n        onVisibilityChanged,\n        onContextUpdated,\n        onLockingChanged,\n        onBoundsChanged,\n        onFrameColorChanged,\n        onFocusChanged,\n        onStickyChanged,\n        onGroupChanged,\n        onWindowAttached,\n        onWindowDetached,\n        onTabSelectionChanged,\n        onTabHeaderVisibilityChanged,\n        onClosing,\n        onRefreshing,\n        onZoomFactorChanged,\n        onPlacementSettingsChanged,\n        onNeighboursChanged,\n\n        get tabs() {\n            return getAllTabs();\n        },\n\n        get isTabHeaderVisible() {\n            return _isTabHeaderVisible;\n        },\n\n        get isTabSelected() {\n            return _isTabSelected;\n        },\n\n        // @glue42/web compatibility layer\n        getURL() {\n            return Promise.resolve(_url);\n        },\n\n        getTitle() {\n            return Promise.resolve(_title);\n        },\n\n        getBounds(): Promise<Glue42.Windows.Bounds> {\n            return Promise.resolve(_bounds);\n        },\n\n        getContext(): Promise<any> {\n            return Promise.resolve(_context);\n        },\n\n        setContext(context: any): Promise<GDWindow> {\n            if (util.isUndefinedOrNull(context)) {\n                throw new Error(`\"context\" must not be null or undefined, set to empty object if you want to clear it out.`);\n            }\n\n            return executor.updateContext(resultWindow, context, true);\n        },\n\n        getDisplay(): Promise<Glue42.Displays.Display> {\n            const displayAPI = displayAPIGetter();\n            return displayAPI.getByWindowId(id);\n        },\n\n        resizeTo(width?: number, height?: number): Promise<GDWindow> {\n            return moveResize({ width, height });\n        },\n\n        moveTo(top?: number, left?: number): Promise<GDWindow> {\n            return moveResize({ top, left });\n        },\n\n        async getParentWindow() {\n            const myParentId = (_settings as any).parentInstanceId;\n            if (!myParentId) {\n                return undefined;\n            }\n            return windowStore.list[myParentId]?.API;\n        },\n\n        async getChildWindows() {\n            return Object.keys(windowStore.list)\n                .map((key) => windowStore.list[key].API)\n                .filter((w) => {\n                    const parentId = (w.settings as any).parentInstanceId;\n                    return parentId === id;\n                });\n        }\n    };\n\n    //#endregion \"API\"\n\n    //#endregion \"Group Events\"\n\n    const events: WindowEvents = {\n        handleUpdate,\n\n        handleWindowClose,\n        handleWindowChangeState,\n        handleTitleChanged,\n        handleVisibilityChanged,\n        handleUrlChanged,\n        handleWindowSettingsChanged,\n        handleContextUpdated,\n        handleFrameIsLockedChanged,\n        handleBoundsChanged,\n        handleFocusChanged,\n        handleFrameButtonAdded,\n        handleFrameButtonRemoved,\n        handleFrameButtonClicked,\n        handleFrameColorChanged,\n        handleFrameAttached,\n        handleFrameSelectionChanged,\n        handleCompositionChanged,\n        handleGroupHeaderVisibilityChanged,\n        handleTabHeaderVisibilityChanged,\n        handleGroupChanged,\n        handleAttached,\n        handleDetached,\n        handleWindowAttached,\n        handleWindowDetached,\n        handleZoomFactorChanged,\n        handleIsStickyChanged,\n        handlePlacementSettingsChanged,\n    };\n\n    return {\n        API: resultWindow,\n        Events: events\n    };\n};\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n","'use strict';\n\nvar encode = require('./encode');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { DetachTabOptions, Executor, FlashOptions } from \"../../types\";\nimport { ShowFlydownData, ReformatedFlydownOptions, ReformatedFlydownZone, ReformatedPopupOptions, EventTypes } from \"./types\";\nimport { CallbackRegistry, default as CallbackFactory, UnsubscribeFunction } from \"callback-registry\";\nimport shortid from \"shortid\";\nimport windowStore from \"../../store\";\nimport { isNullOrWhiteSpace, isUndefinedOrNull } from \"../../../activity/helpers/util\";\n\nexport class GDExecutor implements Executor {\n    private agm: Glue42Core.AGM.API;\n    private agmTarget: {};\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _finished: Promise<void> = Promise.resolve();\n\n    public get hostInstance() {\n        return this.agmTarget;\n    }\n\n    public get finished() {\n        return this._finished;\n    }\n\n    public init(agm: Glue42Core.AGM.API, instance: Glue42Core.AGM.Instance | string) {\n        this.agm = agm;\n        this.agmTarget = instance;\n    }\n    // refactor\n    public handleEvent(data: any) {\n        this._registry.execute(\"event\", data);\n    }\n\n    public async open(options: Glue42.Windows.WindowCreateOptions) {\n        let finishedResolve: () => void;\n        this._finished = new Promise((resolve) => {\n            finishedResolve = resolve;\n        });\n        try {\n            const result = await this.agm.invoke<{ id: string }>(\"T42.Wnd.Create\", options, this.agmTarget);\n            if (result.returned === undefined) {\n                throw new Error(\"failed to execute T42.Wnd.Create - unknown reason\");\n            }\n\n            const id = result.returned.id;\n            const win = await windowStore.waitFor(id);\n            setTimeout(() => {\n                if (win.API.windowType === \"electron\") {\n                    // on normal windows urlCHanged has to be detected first in order for the window to be ready\n                    // that causes the user callbacks to miss urlChanged since they are not registered yet\n                    // here we 'replay' the urlChanged event\n                    win.Events.handleUrlChanged(win.API.url);\n                }\n            }, 0);\n            return win.API;\n        } catch (error) {\n            throw error;\n        } finally {\n            finishedResolve();\n        }\n    }\n\n    public async close(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"close\", { windowId: w.id }, `Closed`);\n        return w;\n    }\n\n    public async navigate(w: Glue42.Windows.GDWindow, newUrl: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"navigate\", { windowId: w.id, options: { url: newUrl } }, \"UrlChanged\");\n        return w;\n    }\n    // Calls the public methods of the window. No Call to GD is made\n    public async setStyle(w: Glue42.Windows.GDWindow, style: Glue42.Windows.WindowSettings): Promise<Glue42.Windows.GDWindow> {\n        const stylePromises: Array<Promise<any>> = [];\n        const wait = (promise: Promise<any>) => stylePromises.push(promise);\n\n        if (!isUndefinedOrNull(style.focus) && !w.isFocused) {\n            wait(w.focus());\n        }\n\n        // Todo: only if !isRestoring (hopefully setVisible does this check)\n        if (!isUndefinedOrNull(style.hidden)) {\n            const toBeVisible = !style.hidden;\n            wait(w.setVisible(toBeVisible));\n        }\n\n        if (!isUndefinedOrNull(style.onTop)) {\n            wait(w.setOnTop(style.onTop));\n        }\n\n        if (!isNullOrWhiteSpace(style.tabTooltip) || !isNullOrWhiteSpace((style as any).tabToolTip)) {\n            const toolTip = style.tabTooltip ?? (style as any).tabToolTip;\n            wait(w.setTabTooltip(toolTip));\n        }\n\n        if (!isNullOrWhiteSpace(style.tabTitle)) {\n            wait(this.execute(\"setTabTitle\", { windowId: w.id, options: { tabTitle: style.tabTitle } }));\n        }\n\n        const {\n            maxWidth, maxHeight, minWidth, minHeight,\n            allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize\n        } = style;\n\n        wait(w.setSizeConstraints({ maxWidth, maxHeight, minWidth, minHeight }));\n        wait(w.resetButtons({ allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize }));\n\n        await Promise.all(stylePromises);\n\n        return w;\n    }\n\n    public async setSizeConstraints(w: Glue42.Windows.GDWindow, constraints: Glue42.Windows.SizeConstraints): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setSizeConstraints\", { windowId: w.id, options: constraints });\n        return w;\n    }\n\n    public async setTabTooltip(w: Glue42.Windows.GDWindow, tabTooltip: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setTabTooltip\", { windowId: w.id, options: { tabTooltip } });\n        return w;\n    }\n\n    public async resetButtons(w: Glue42.Windows.GDWindow, buttonsConfig: Glue42.Windows.WindowButtons): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"resetButtons\", { windowId: w.id, options: buttonsConfig });\n        return w;\n    }\n\n    public async setOnTop(w: Glue42.Windows.GDWindow, onTop: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setOnTop\", { windowId: w.id, options: { onTop } });\n        return w;\n    }\n\n    public async setTitle(w: Glue42.Windows.GDWindow, newTitle: string): Promise<Glue42.Windows.GDWindow> {\n        const options = {\n            windowId: w.id,\n            options: {\n                title: newTitle\n            }\n        };\n        await this.execute(\"setTitle\", options, \"TitleChanged\");\n        return w;\n    }\n\n    public async setSticky(w: Glue42.Windows.GDWindow, isSticky: boolean): Promise<Glue42.Windows.GDWindow> {\n        const options = {\n            windowId: w.id,\n            options: {\n                isSticky\n            }\n        };\n        await this.execute(\"setSticky\", options);\n        return w;\n    }\n\n    public async moveResize(w: Glue42.Windows.GDWindow, bounds: Partial<Glue42.Windows.Bounds>): Promise<Glue42.Windows.GDWindow> {\n        if ((window.glueDesktop as any).versionNum < 31200) {\n            return new Promise(async (res, rej) => {\n                const resolveImmediately = this.areBoundsEqual(bounds, w);\n                let isDone = false;\n                const done = () => {\n                    if (isDone) {\n                        return;\n                    }\n                    isDone = true;\n\n                    if (unsubscribeBoundsChanged) {\n                        unsubscribeBoundsChanged();\n                        unsubscribeBoundsChanged = undefined;\n                    }\n                    res(w);\n                    if (resolveTimeout) {\n                        clearTimeout(resolveTimeout);\n                        resolveTimeout = undefined;\n                    }\n                };\n                let resolveTimeout: any;\n                let unsubscribeBoundsChanged: () => void;\n                if (!resolveImmediately) {\n                    unsubscribeBoundsChanged = w.onBoundsChanged((win: Glue42.Windows.GDWindow) => {\n                        if (!this.areBoundsEqual(bounds, win)) {\n                            return;\n                        }\n                        done();\n                    });\n                }\n\n                try {\n                    // always execute moveResize (we might have old bounds and prevent calls that are actually valid)\n                    await this.execute(\"moveResize\", { windowId: w.id, options: { bounds } });\n                } catch (error) {\n                    rej(error);\n                    return;\n                }\n\n                // if we're trying to resize with the bounds we already have\n                if (resolveImmediately) {\n                    done();\n                    return;\n                }\n\n                // if no bounds change in the next 1s resolve\n                resolveTimeout = setTimeout(() => {\n                    done();\n                }, 1000);\n            });\n        } else {\n            await this.execute(\"moveResize\", { windowId: w.id, options: { bounds } });\n        }\n        return w;\n    }\n\n    public async addFrameButton(w: Glue42.Windows.GDWindow, buttonInfo: Glue42.Windows.ButtonInfo): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"addButton\", { windowId: w.id, options: buttonInfo }, \"ButtonAdded\");\n        return w;\n    }\n\n    public async removeFrameButton(w: Glue42.Windows.GDWindow, buttonId: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"removeButton\", { windowId: w.id, options: buttonId }, \"ButtonRemoved\");\n        return w;\n    }\n\n    public async activate(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onFocusChanged(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"activate\", { windowId: w.id }, \"FocusChanged\"), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async focus(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onFocusChanged(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"focus\", { windowId: w.id }, \"FocusChanged\"), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async maximizeRestore(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"maximizeRestore\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async maximize(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"maximize\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async restore(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"restore\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async minimize(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"minimize\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async collapse(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"collapse\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async expand(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"expand\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async toggleCollapse(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"toggleCollapse\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async snap(w: Glue42.Windows.GDWindow, targetWindow: Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection): Promise<Glue42.Windows.GDWindow> {\n        const args: any = {\n            targetWindowId: targetWindow.id\n        };\n\n        if (direction) {\n            args.snappingEdge = direction;\n        }\n        await this.execute(\"snap\", { windowId: w.id, options: args }, \"CompositionChanged\", `CompositionChanged-${targetWindow.id}`);\n        return w;\n    }\n\n    public async attachTab(w: Glue42.Windows.GDWindow, sourceWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.AttachOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"attachTab\", {\n            windowId: w.id,\n            options: {\n                index: options,\n                sourceWindowId: sourceWindow.id,\n                targetWindowId: w.id,\n            }\n        }, `WindowFrameAdded-${sourceWindow.id}`, `WindowFrameRemoved-${sourceWindow.id}`);\n        return w;\n    }\n\n    public async detachTab(w: Glue42.Windows.GDWindow, options: DetachTabOptions): Promise<Glue42.Windows.GDWindow> {\n        const eventKeys: string[] = [\"WindowFrameRemoved\", `WindowFrameAdded`];\n        if (!isUndefinedOrNull(options?.relativeTo)) {\n            eventKeys.push(`CompositionChanged`);\n            eventKeys.push(`CompositionChanged-${options.relativeTo}`);\n        } else {\n            eventKeys.push(\"BoundsChanged\");\n        }\n        await this.execute(\"detachTab\", { windowId: w.id, options }, ...eventKeys);\n        return w;\n    }\n\n    public async setVisible(w: Glue42.Windows.GDWindow, toBeVisible: boolean = true): Promise<Glue42.Windows.GDWindow> {\n        let command: string;\n        if (toBeVisible) {\n            command = \"show\";\n        } else {\n            command = \"hide\";\n        }\n\n        await this.execute(command, { windowId: w.id }, \"VisibilityChanged\");\n        return w;\n    }\n\n    public async showLoader(w: Glue42.Windows.GDWindow, loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"showLoadingAnimation\", { windowId: w.id, options: loader });\n        return w;\n    }\n\n    public async hideLoader(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"hideLoadingAnimation\", { windowId: w.id });\n        return w;\n    }\n\n    public async updateContext(w: Glue42.Windows.GDWindow, context: any, replace: boolean): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            // as undefined values do not go through interop, setting a prop to undefined will lead to no change\n            // set this to null so it actually removes the prop\n            const contextWithoutUndefinedValues = this.swapUndefinedToNull(context);\n\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onContextUpdated(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"updateContext\", {\n                windowId: w.id, context: contextWithoutUndefinedValues, replace\n            }), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async lock(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"lockUnlock\", { windowId: w.id, options: { lock: true } }, \"FrameIsLockedChanged\");\n        return w;\n    }\n\n    public async unlock(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"lockUnlock\", { windowId: w.id, options: { lock: false } }, \"FrameIsLockedChanged\");\n        return w;\n    }\n\n    public async getIcon(w: Glue42.Windows.GDWindow): Promise<string> {\n        const result = await this.execute(\"getIcon\", {\n            windowId: w.id,\n            options: {}\n        });\n        return result.icon;\n    }\n\n    public async setIcon(w: Glue42.Windows.GDWindow, base64Image: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setIcon\", {\n            windowId: w.id,\n            options: {\n                dataURL: base64Image\n            }\n        });\n        return w;\n    }\n\n    public async setFrameColor(w: Glue42.Windows.GDWindow, frameColor: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setFrameColor\", { windowId: w.id, options: { frameColor } }, \"FrameColorChanged\");\n        return w;\n    }\n\n    public async setTabHeaderVisible(w: Glue42.Windows.GDWindow, toBeTabHeaderVisible: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setTabHeaderVisible\", {\n            windowId: w.id,\n            options: {\n                toShow: toBeTabHeaderVisible\n            }\n        }, \"TabHeaderVisibilityChanged\");\n        return w;\n    }\n\n    public async showPopup(targetWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        if (!options) {\n            throw new Error(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.targetLocation) {\n            optionsCopy.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation;\n        }\n\n        const reformatedOptions: ReformatedPopupOptions & { targetId: string } = {\n            ...optionsCopy,\n            popupBounds: optionsCopy.size,\n            targetId: targetWindow.id,\n            popupId: optionsCopy.windowId\n        };\n\n        await this.execute(\"showPopupWindow\", {\n            windowId: targetWindow.id,\n            options: reformatedOptions\n        });\n\n        return targetWindow;\n    }\n\n    public async createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        if (!options) {\n            throw new Error(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.horizontalOffset) {\n            optionsCopy.horizontalOffset = 0;\n        }\n\n        if (!optionsCopy.verticalOffset) {\n            optionsCopy.verticalOffset = 0;\n        }\n\n        const fullOptions: Glue42.Windows.FlydownOptions & { targetId: string, flydownBounds: Glue42.Windows.FlydownOptions[\"size\"] } = this.reformatFlydownOptions(windowId, optionsCopy);\n\n        return this.execute(\"setFlydownArea\", { windowId, options: fullOptions }).then(() => {\n            const zoneIds = fullOptions.zones.map((z) => z.id);\n\n            fullOptions.zones.forEach((z) => {\n                let callback: (...args: any[]) => any = typeof (z.flydownSize) === \"function\" ?\n                    z.flydownSize : () => z.flydownSize;\n\n                if (options.size instanceof Function && z.flydownSize) {\n                    callback = async (data: Glue42.Windows.ShowFlydownData, cancel: () => void) => {\n                        let result;\n                        // The options callback must be always invoked\n                        // If the property in the zone is null it will be automatically\n                        // assigned to the same callback from the code above reformatFlydownOptions\n                        if (options.size instanceof Function) {\n                            result = await options.size(data, cancel);\n                        }\n\n                        // If both are callbacks the zone has higher priority\n                        // If they are the same only one should be invoked\n                        if (z.flydownSize instanceof Function && z.flydownSize !== options.size) {\n                            return await z.flydownSize(data, cancel) || result;\n                        }\n\n                        // The options callback overwrites the bounds object specified in the zone\n                        return result || z.flydownSize;\n                    };\n                }\n                this._registry.clearKey(`${fullOptions.targetId}_${z.id}`);\n                this._registry.add(`${fullOptions.targetId}_${z.id}`, callback);\n            });\n\n            return {\n                destroy: () => this.clearFlydownArea(fullOptions.targetId, zoneIds),\n                options: optionsCopy\n            };\n        });\n    }\n\n    public async setModalState(windowId: string, isModal: boolean): Promise<void> {\n        return this.execute(\"setModalState\", { windowId, options: { isModal } });\n    }\n\n    public async handleFlydownBoundsRequested(targetId: string, data: ShowFlydownData) {\n        const cancelCallback = () => data.cancel = true;\n\n        const callbackData: Glue42.Windows.ShowFlydownData = {\n            zoneId: data.flydownId,\n            flydownWindowBounds: data.flydownWindowBounds,\n            flydownWindowId: data.flydownWindowId,\n        };\n\n        const responses = await Promise.all(this._registry.execute(`${targetId}_${data.flydownId}`, callbackData, cancelCallback));\n\n        if (responses.length === 1) {\n            const defaultResponse = { height: 0, width: 0, top: 0, left: 0 };\n            const response = typeof (responses[0]) === \"object\" && !Array.isArray(responses[0]) ? responses[0] : defaultResponse;\n            const responseOptions: ShowFlydownData = { ...data, flydownWindowBounds: response };\n\n            return responseOptions;\n        }\n    }\n\n    public async zoomIn(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomIn\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async zoomOut(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomOut\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async setZoomFactor(window: Glue42.Windows.GDWindow, zoomFactor: number): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setZoomFactor\", {\n            windowId: window.id,\n            options: {\n                zoomFactor\n            }\n        });\n        return window;\n    }\n\n    public async showDevTools(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"showDevTools\", {\n            windowId: window.id,\n        });\n\n        return window;\n    }\n\n    public async capture(window: Glue42.Windows.GDWindow, options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot = (await this.execute(\n            \"captureScreenshot\",\n            { windowId: window.id, options: { ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async captureGroup(windowIds: string[], options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot: string = (await this.execute(\n            \"captureGroupScreenshot\",\n            { windowId: windowIds[0], options: { groupWindowIds: windowIds, ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async flash(resultWindow: Glue42.Windows.GDWindow, options: FlashOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"flash\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n\n        return resultWindow;\n    }\n\n    public async configure(windowId: string, options: Glue42.Windows.WindowsConfiguration): Promise<void> {\n        return this.execute(\n            \"configure\",\n            { windowId, options: { ...options } }\n        );\n    }\n\n    public async print(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PrintOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"print\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n        return resultWindow;\n    }\n\n    public async printToPDF(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PrintToPDFOptions): Promise<string> {\n        const filePath: string = (await this.execute(\n            \"printToPDF\",\n            { windowId: resultWindow.id, options: { ...options } }\n        )).filePath;\n\n        return filePath;\n    }\n\n    public async place(window: Glue42.Windows.GDWindow, options: Glue42.Windows.PlacementSettings): Promise<void> {\n        const copy = { ...options } as any;\n        if (!options.display || options.display === \"current\") {\n            copy.display = await window.getDisplay();\n        }\n        // Glue42.Displays.API works with zero based array of displays, which means that the first monitor has index 0\n        // whereas GD works with non zero based array of displays, which means that the first monitor has index 1\n        copy.display = copy.display.index + 1;\n        return this.execute(\n            \"place\",\n            { windowId: window.id, options: { ...copy } }\n        );\n    }\n\n    public async refresh(resultWindow: Glue42.Windows.GDWindow, ignoreCache: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"refresh\", { windowId: resultWindow.id, options: { ignoreCache } });\n        return resultWindow;\n    }\n\n    public async download(resultWindow: Glue42.Windows.GDWindow, url: string, options: Glue42.Windows.DownloadOptions & { enableDownloadBar?: boolean } = {}): Promise<Glue42.Windows.DownloadResult> {\n        options.enableDownloadBar = !options.silent;\n        const result: { fileSize: number, fullPath: string, success: boolean } = await this.execute(\"downloadURL\", { windowId: resultWindow.id, options: { url, options } });\n        return {\n            url,\n            path: result.fullPath,\n            size: result.fileSize,\n        };\n    }\n\n    public async configureWindow(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.WindowConfiguration): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"configureWindow\", { windowId: resultWindow.id, options });\n        return resultWindow;\n    }\n\n    /**\n     * Invokes the container\n     * @param command\n     * @param options\n     * @param {...string} eventKeys which events types to be awaited before resolving - used only < GD 3.12\n     * @returns Invocation result\n     */\n    public async execute(command: string, options: any & { windowId: string }, ...eventKeys: string[]): Promise<any> {\n        const params = {\n            ...options,\n            command,\n        };\n        let finishedResolve: () => void;\n        this._finished = new Promise((resolve) => {\n            finishedResolve = resolve;\n        });\n        try {\n            if ((window.glueDesktop as any).versionNum < 31200) {\n                return await this.executeWithoutToken(params, ...eventKeys);\n            } else {\n                return await this.executeWithToken(params);\n            }\n        } catch (error) {\n            throw error;\n        } finally {\n            finishedResolve();\n        }\n    }\n\n    public async ungroup(w: Glue42.Windows.GDWindow, options: Glue42.Windows.UngroupOptions): Promise<Glue42.Windows.GDWindow> {\n        const args = {\n            windowId: w.id,\n            options\n        };\n        await this.execute(\"ungroup\", args);\n        return w;\n    }\n\n    public onClosing(callback: (success: () => void, error: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addCloseHandler(callback, id);\n        }\n    }\n\n    public onRefreshing(callback: (success: () => void, error: () => void, prevent: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addRefreshHandler(callback, id);\n        }\n    }\n\n    private reformatFlydownOptions(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        const assignGeneralIfUnassigned = (zone: Glue42.Windows.FlydownZone, prop: keyof Glue42.Windows.FlydownZone & keyof Glue42.Windows.FlydownOptions) => {\n            if (options[prop] && (zone[prop] === undefined || zone[prop] === null)) {\n                const valueFromOptions = options[prop];\n                (zone[prop] as any) = valueFromOptions;\n            }\n        };\n\n        const zones: ReformatedFlydownOptions[\"zones\"] = options.zones.map((z) => {\n            assignGeneralIfUnassigned(z, \"windowId\");\n            assignGeneralIfUnassigned(z, \"targetLocation\");\n\n            if (options.size && (z.flydownSize === undefined || z.flydownSize === null)) {\n                z.flydownSize = options.size;\n            }\n\n            (z as ReformatedFlydownZone).flydownBounds = z.flydownSize as any;\n            (z as ReformatedFlydownZone).flydownId = z.windowId;\n\n            if (!z.targetLocation) {\n                z.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation.Bottom;\n            }\n\n            return z;\n        });\n\n        return {\n            ...options,\n            zones,\n            targetId: windowId,\n            flydownBounds: options.size,\n            flydownActiveArea: options.activeArea\n        };\n    }\n\n    private clearFlydownArea(windowId: string, areaIds: string[]) {\n        return this.execute(\"clearFlydownWindowArea\", {\n            windowId,\n            options: {}\n        }).then(() => {\n            areaIds.forEach((id) => {\n                this._registry.clearKey(`${windowId}_${id}`);\n            });\n        });\n    }\n\n    private executeWithoutToken(params: { windowId: string }, ...eventKeys: string[]) {\n        const uns: UnsubscribeFunction[] = [];\n        const executed = eventKeys?.filter((k) => !isUndefinedOrNull(k)).map((key) => {\n            return new Promise<void>((r) => {\n                const [type, windowId = params.windowId] = key.split(\"-\");\n                uns.push(this._registry.add(\"event\", (data: { windowId: string, type: string }) => {\n                    if (data.type === type && data.windowId === windowId) {\n                        r();\n                    }\n                }));\n            });\n        });\n        const action = new Promise<any>((resolve, reject) => {\n            this.agm.invoke<any>(\"T42.Wnd.Execute\", params, this.agmTarget)\n                .then((i) => {\n                    if (i.returned && i.returned.errorMsg) {\n                        reject(i);\n                    } else {\n                        resolve(i.returned);\n                    }\n                })\n                .catch((e) => reject(e));\n        });\n        return Promise.all([action, ...executed])\n            .then((r) => {\n                return r[0];\n            })\n            .finally(() => {\n                uns.forEach((un) => un());\n            });\n    }\n\n    private async executeWithToken(options: any) {\n        let un: UnsubscribeFunction;\n        try {\n            const token = shortid.generate();\n            const event = new Promise<void>((r) => {\n                un = this._registry.add(\"event\", (data: any) => {\n                    if (data.token === token) {\n                        r();\n                    }\n                });\n            });\n            const execute = new Promise<any>((resolve, reject) => {\n                options.token = token;\n                this.agm.invoke<any>(\"T42.Wnd.Execute\", options, this.agmTarget)\n                    .then((i) => {\n                        if (i.returned && i.returned.errorMsg) {\n                            reject(i);\n                        } else {\n                            resolve(i.returned);\n                        }\n                    })\n                    .catch((i) => {\n                        reject(i);\n                    });\n            });\n\n            const result = await Promise.all([execute, event]);\n            return result[0];\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    private areBoundsEqual(requested: Partial<Glue42.Windows.Bounds>, w: Glue42.Windows.GDWindow) {\n        const current = w.bounds;\n        const settings = w.settings;\n        let height = requested.height;\n        let width = requested.width;\n        if (requested.height < settings.minHeight) {\n            height = settings.minHeight;\n        }\n        if (requested.height > settings.maxHeight) {\n            height = settings.maxHeight;\n        }\n        if (requested.width < settings.minWidth) {\n            width = settings.minWidth;\n        }\n        if (requested.width > settings.maxWidth) {\n            width = settings.maxWidth;\n        }\n\n        const areHeightsEqual = height ? current.height === height : true;\n        const areWidthsEqual = width ? current.width === width : true;\n        const areLeftsEqual = requested.left ? current.left === requested.left : true;\n        const areTopsEqual = requested.top ? current.top === requested.top : true;\n\n        return areHeightsEqual && areWidthsEqual && areLeftsEqual && areTopsEqual;\n    }\n\n    private swapUndefinedToNull(context: any) {\n        try {\n            // swap top level undefined values to null-s\n            const copy: any = {};\n            for (const key of Object.keys(context)) {\n                let value = context[key];\n                if (typeof value === \"undefined\") {\n                    value = null;\n                }\n                copy[key] = value;\n            }\n            return copy;\n        } catch {\n            return context;\n        }\n    }\n}\n\nexport default new GDExecutor();\n","import { default as windowStore } from \"../store\";\nimport { WindowWrapper } from \"../types\";\n\nexport function getWindowsByTabGroupId(windowId: string, tabGroupId: string): WindowWrapper[] {\n    const windows = windowStore.list;\n    return Object.keys(windows).reduce((memo, id) => {\n        const win = windows[id];\n        if (win.API.tabGroupId === tabGroupId && win.API.id !== windowId) {\n            memo.push(win);\n        }\n        return memo;\n    }, []);\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { default as windowStore } from \"../../store\";\nimport { Environment, Executor, WindowConstructorOptions, WindowEvents, WindowWrapper } from \"../../types\";\nimport windowFactory from \"../../window\";\nimport { default as executor } from \"./executor\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport {\n    FullInfoEvent,\n    StreamEvent,\n    WindowInfo,\n    GroupHeaderVisibilityChanged,\n    UrlChanged,\n    TitleChanged,\n    BoundsChanged,\n    FocusChanged,\n    CompositionChanged,\n    ExtendedStreamEvent,\n    EventWithResponseData,\n    ResponseTypes,\n    IsStickyChanged\n} from \"./types\";\nimport { getWindowsByTabGroupId } from \"../helpers\";\n\nexport default class GDEnvironment implements Environment {\n\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _agm: Glue42Core.AGM.API;\n    private _logger: Glue42Core.Logger.API;\n    private _waitTimeout: number = 10000;\n    private _agmInstance: Glue42Core.AGM.Instance | \"best\" | \"all\";\n    private _windowId: string;\n    private _appManagerGetter: () => Glue42.AppManager.API;\n    private _displayAPIGetter: () => Glue42.Displays.API;\n\n    constructor(agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, instance?: Glue42Core.AGM.Instance, wndId?: string) {\n        this._agm = agm;\n        this._logger = logger.subLogger(\"gd-env\");\n        this._agmInstance = this.normalizeInstance(instance);\n        this._windowId = wndId;\n        this._appManagerGetter = appManagerGetter;\n        this._displayAPIGetter = displayAPIGetter;\n    }\n\n    public init(): Promise<GDEnvironment> {\n        return new Promise((resolve, reject) => {\n            // if we don't have an Instance, thats means that we are running outside from any Tick42 Containers\n            // so our target is best\n            if (typeof this._agmInstance === \"undefined\") {\n                this._agmInstance = \"best\";\n            }\n\n            this._agm.registerAsync(\"T42.Wnd.OnEventWithResponse\", (args, caller, success, err) => {\n                this.respondToEvent(args as any).then(success).catch(err);\n            });\n\n            const streamPromise = new Promise<void>((streamResolve, streamReject) => {\n                this._agm.subscribe(\"T42.Wnd.OnEvent\", {\n                    waitTimeoutMs: this._waitTimeout,\n                    target: this._agmInstance,\n                    onData: (streamData: any) => {\n                        this.updateWindow(streamData.data, resolve);\n                        executor.handleEvent(streamData.data);\n                    },\n                    onConnected: (instance) => {\n                        this._agmInstance = this.normalizeInstance(instance);\n                        // Init the executor\n                        executor.init(this._agm, this._agmInstance);\n                    }\n                }).catch((err: any) => {\n                    reject(\"Can not subscribe for stream T42.Wnd.OnEvent. Err: \" + err);\n                });\n            });\n        });\n    }\n\n    public get executor(): Executor {\n        return executor;\n    }\n\n    public open(name: string, url: string, options: any): Promise<Glue42.Windows.GDWindow> {\n        options = options || {};\n        const copyOptions = { ...options };\n\n        if (copyOptions.relativeTo !== undefined && typeof copyOptions.relativeTo !== \"string\") {\n            copyOptions.relativeTo = copyOptions.relativeTo.id || \"\";\n        }\n\n        copyOptions.name = name;\n        copyOptions.url = url;\n\n        // This is for compatibility between gd2 and gd3\n        copyOptions.windowState = options.windowState || options.state;\n        // Otherwise glue desktop throws an error for extra properties\n        delete copyOptions.state;\n\n        return this.executor.open(copyOptions);\n    }\n\n    public createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return this.executor.createFlydown(windowId, options);\n    }\n\n    public async showPopup(windowId: string, options: Glue42.Windows.PopupOptions): Promise<void> {\n        const window = windowStore.get(windowId);\n        await this.executor.showPopup(window.API, options);\n    }\n\n    public tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-attached\", callback);\n    }\n\n    public tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-detached\", callback);\n    }\n\n    public onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void) {\n        return this._registry.add(\"frame-color-changed\", callback);\n    }\n\n    public onEvent(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"window-event\", callback);\n    }\n\n    public my(): string {\n        return this._windowId;\n    }\n\n    public execute<T>(command: string, windowId: string, options: {}): Promise<Glue42Core.AGM.InvocationResult<T>> {\n        return this._agm.invoke<T>(\"T42.Wnd.Execute\", {\n            command,\n            options,\n            windowId,\n        });\n    }\n\n    /** Groups */\n    public onCompositionChanged(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"composition-changed\", callback);\n    }\n\n    public onGroupHeaderVisibilityChanged(callback: (stream: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"group-header-changed\", callback);\n    }\n\n    public onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"got-focus\", callback);\n    }\n\n    public onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"lost-focus\", callback);\n    }\n\n    // TODO revise it\n    private normalizeInstance(instance: Glue42Core.AGM.Instance) {\n        if (!instance) {\n            return undefined;\n        }\n        return {\n            application: instance.application,\n            machine: instance.machine,\n            user: instance.user,\n        };\n    }\n    private respondToEvent(args: EventWithResponseData): Promise<ResponseTypes> {\n        if (args.type === \"ShowFlydownBoundsRequested\") {\n            return this.executor.handleFlydownBoundsRequested(args.data.windowId, args.data);\n        }\n\n        return Promise.reject(`There isn't a handler for ${args.type}`);\n    }\n\n    private updateWindow(windowInfo: StreamEvent, readyResolve: (env: GDEnvironment) => void) {\n        const extendedStreamEvent = this.getExtendedStreamEvent(windowInfo);\n\n        // this is the snapshot of all windows\n        if (windowInfo.type === \"Snapshot\") {\n            const windowInfoFullInfoEvent = (windowInfo as FullInfoEvent);\n            windowInfoFullInfoEvent.windows.forEach((w) => {\n                const existingWindow = windowStore.get(w.id);\n                if (existingWindow) {\n                    existingWindow.Events.handleUpdate(this.mapToWindowConstructorOptions(w));\n                } else {\n                    const win = this.createWindow(w.id, w);\n                    windowStore.markReadyToShow(win.API.id);\n                }\n                this._registry.execute(\"window-event\", extendedStreamEvent);\n            });\n            readyResolve(this);\n            return;\n        }\n\n        // global event\n        if (windowInfo.type === \"CommandExecuted\") {\n            this._registry.execute(\"window-event\", extendedStreamEvent);\n            return;\n        }\n\n        // if new window handle it separately\n        if (windowInfo.type === \"Created\") {\n            const windowInfoCreatedEvent = (windowInfo as StreamEvent);\n            const win = this.createWindow(windowInfoCreatedEvent.windowId, windowInfoCreatedEvent.data || {});\n            windowStore.setReadyState(win.API.id);\n            this._registry.execute(\"window-event\", extendedStreamEvent);\n            return;\n        }\n\n        // otherwise check if the window is in our internal collections and update its state\n        const windowObjectAndEvents: WindowWrapper = windowStore.get((windowInfo as StreamEvent).windowId);\n        if (!windowObjectAndEvents) {\n            this._logger.error(`received update for unknown window. Stream:', ${JSON.stringify(windowInfo, null, 4)}`);\n            return;\n        }\n\n        const theWindow: Glue42.Windows.GDWindow = windowObjectAndEvents.API;\n        const theWindowEvents: WindowEvents = windowObjectAndEvents.Events;\n\n        // handle bounds changed\n        if (windowInfo.type === \"BoundsChanged\") {\n            const windowInfoBoundsChangedEvent = (windowInfo as BoundsChanged);\n            theWindowEvents.handleBoundsChanged(windowInfoBoundsChangedEvent.data);\n        }\n\n        // handle url changed\n        if (windowInfo.type === \"UrlChanged\") {\n            const windowInfoUrlChangedEvent = (windowInfo as UrlChanged);\n            windowStore.setUrlChangedState(windowInfoUrlChangedEvent.windowId);\n            theWindowEvents.handleUrlChanged(windowInfoUrlChangedEvent.data);\n        }\n\n        // handle title changed\n        if (windowInfo.type === \"TitleChanged\") {\n            const windowInfoTitleChanged = (windowInfo as TitleChanged);\n            theWindowEvents.handleTitleChanged(windowInfoTitleChanged.data);\n        }\n\n        // handle isSticky changed\n        if (windowInfo.type === \"IsStickyChanged\") {\n            const windowInfoIsStickyChangedChanged = (windowInfo as IsStickyChanged);\n            theWindowEvents.handleIsStickyChanged(windowInfoIsStickyChangedChanged.data);\n        }\n\n        // handle visibility changed\n        if (windowInfo.type === \"VisibilityChanged\") {\n            theWindowEvents.handleVisibilityChanged(windowInfo.data);\n        }\n\n        // handle context changed\n        if (windowInfo.type === \"ContextChanged\") {\n            theWindowEvents.handleContextUpdated(windowInfo.data);\n        }\n\n        // handle window state changed\n        if (windowInfo.type === \"StateChanged\") {\n            theWindowEvents.handleWindowChangeState(windowInfo.data);\n        }\n\n        // handle frame color changed\n        if (windowInfo.type === \"FrameColorChanged\") {\n            theWindowEvents.handleFrameColorChanged(windowInfo.data);\n            this._registry.execute(\"frame-color-changed\", theWindow);\n        }\n\n        // handle composition changed - groups API\n        if (windowInfo.type === \"CompositionChanged\") {\n            const windowInfoCompositionChanged = windowInfo as CompositionChanged;\n            theWindowEvents.handleCompositionChanged(windowInfoCompositionChanged.data);\n            this._registry.execute(\"composition-changed\", windowInfoCompositionChanged.data);\n        }\n\n        if (windowInfo.type === \"GroupHeaderVisibilityChanged\") {\n            const info = windowInfo as GroupHeaderVisibilityChanged;\n            theWindowEvents.handleGroupHeaderVisibilityChanged(info.data.groupHeaderVisible);\n            this._registry.execute(\"group-header-changed\", info.data);\n        }\n\n        // handle focus changed\n        if (windowInfo.type === \"FocusChanged\") {\n            const windowInfoFocusChanged = (windowInfo as FocusChanged);\n            this.focusChanged(theWindowEvents, theWindow, windowInfoFocusChanged.data);\n        }\n\n        if (windowInfo.type === \"WindowFrameChanged\") {\n            theWindowEvents.handleFrameAttached(windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n            this._registry.execute(\"frame-changed\");\n        }\n\n        if (windowInfo.type === \"WindowFrameAdded\") {\n            const winsToBeNotified = getWindowsByTabGroupId(theWindow.id, windowInfo.data.frameId);\n            theWindowEvents.handleAttached(windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible, winsToBeNotified)\n                .then(async () => {\n                    // don't fire the event if it is the first window\n                    if (winsToBeNotified.length > 0) {\n                        await executor.finished;\n                        this._registry.execute(\"tab-attached\", theWindow, windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n                    }\n                });\n        }\n\n        if (windowInfo.type === \"WindowFrameRemoved\") {\n            // In the event, tabGroupId is empty, will be update on the next event FrameAttached\n            const oldTabGroupId = theWindow.tabGroupId;\n            const winsToBeNotified = getWindowsByTabGroupId(theWindow.id, oldTabGroupId);\n            theWindowEvents.handleDetached(winsToBeNotified)\n                .then(async () => {\n                    // don't fire the event if it is the first window\n                    if (winsToBeNotified.length > 0) {\n                        await executor.finished;\n                        this._registry.execute(\"tab-detached\", theWindow, windowInfo.data.frameId, theWindow.tabGroupId);\n                    }\n                });\n        }\n\n        if (windowInfo.type === \"TabHeaderVisibilityChanged\") {\n            theWindowEvents.handleTabHeaderVisibilityChanged(windowInfo.data.isTabHeaderVisible);\n        }\n\n        if (windowInfo.type === \"FrameSelectionChanged\") {\n            theWindowEvents.handleFrameSelectionChanged(windowInfo.data.newWindowId, windowInfo.data.prevWindowId);\n        }\n\n        if (windowInfo.type === \"ButtonClicked\") {\n            theWindowEvents.handleFrameButtonClicked(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonAdded\") {\n            theWindowEvents.handleFrameButtonAdded(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonRemoved\") {\n            theWindowEvents.handleFrameButtonRemoved(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"WindowZoomFactorChanged\") {\n            theWindowEvents.handleZoomFactorChanged(windowInfo.data);\n        }\n\n        // Clear the window on close event\n        if (windowInfo.type === \"Closed\") {\n            windowStore.remove(windowObjectAndEvents);\n            theWindowEvents.handleWindowClose();\n        }\n\n        if (windowInfo.type === \"FrameIsLockedChanged\") {\n            theWindowEvents.handleFrameIsLockedChanged(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"PlacementSettingsChanged\") {\n            theWindowEvents.handlePlacementSettingsChanged(windowInfo.data);\n        }\n\n        // expose to external listeners\n        this._registry.execute(\"window-event\", extendedStreamEvent);\n    }\n\n    private createWindow(windowId: string, options: WindowInfo): WindowWrapper {\n        const wrapper = windowStore.get(windowId);\n        const windowObjAndEvents: WindowWrapper = windowFactory(windowId, this.mapToWindowConstructorOptions(options), executor, this._logger, this._appManagerGetter, this._displayAPIGetter, this._agm);\n        windowStore.add(windowObjAndEvents);\n        return windowObjAndEvents;\n    }\n\n    private focusChanged(theWindowEvents: WindowEvents, theWindow: Glue42.Windows.GDWindow, focus: boolean) {\n        theWindowEvents.handleFocusChanged(focus);\n        if (focus) {\n            this._registry.execute(\"got-focus\", theWindow);\n        } else {\n            this._registry.execute(\"lost-focus\", theWindow);\n        }\n    }\n\n    private mapToWindowConstructorOptions(args: WindowInfo): WindowConstructorOptions {\n        // TODO\n        return {\n            name: args.name,\n            context: args.context,\n            bounds: args.bounds,\n            url: args.url,\n            title: args.title,\n            isVisible: args.isVisible,\n            focus: args.isFocused,\n            state: args.state,\n            frameColor: args.frameColor,\n            groupId: args.groupId,\n            neighbours: args.neighbors,\n            isFocused: args.isFocused,\n            isGroupHeaderVisible: args.groupHeaderVisible,\n            isCollapsed: args.isCollapsed,\n            tabGroupId: args.frameId,\n            mode: args.mode,\n            isTabHeaderVisible: args.isTabHeaderVisible,\n            isTabSelected: args.isActiveTab,\n            settings: args.settings,\n            windowType: args.windowType,\n            zoomFactor: args.zoomFactor,\n            // focus: args.focus,\n            isLocked: args.isLocked,\n            placementSettings: args.placementSettings,\n            isSticky: args.isSticky,\n            tabIndex: args.tabIndex\n            // settings: windowStyleAttributes,\n        };\n    }\n\n    private getExtendedStreamEvent(streamEvent: StreamEvent): StreamEvent | ExtendedStreamEvent {\n        try {\n            // some events (e.g. Snapshot) do not have windowIds\n            if (!streamEvent.windowId) {\n                return streamEvent;\n            }\n\n            // try to get the window, if not there return the original event\n            const window = windowStore.get(streamEvent.windowId);\n            if (!window) {\n                return streamEvent;\n            }\n\n            const result: ExtendedStreamEvent = {\n                state: streamEvent.type,\n                windowName: window.API.name,\n                ...streamEvent\n            };\n\n            if (result.state === \"WindowFrameAdded\") {\n                result.state = \"TabAttached\";\n            }\n\n            if (result.state === \"StateChanged\") {\n                result.state = result.data.charAt(0).toUpperCase() + result.data.slice(1);\n            }\n\n            if (result.state === \"ButtonAdded\") {\n                result.state = \"FrameButtonAdded\";\n            }\n\n            if (result.state === \"ButtonRemoved\") {\n                result.state = \"FrameButtonRemoved\";\n            }\n\n            return result;\n        } catch (error) {\n            return streamEvent;\n        }\n    }\n}\n","import callbackRegistry, { CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { default as windowStore } from \"./store\";\nimport { Executor, GroupInternal, GroupWrapper, WindowWrapper } from \"./types\";\nimport { isNullOrWhiteSpace, isUndefinedOrNull } from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nexport default (id: string, executor: Executor): GroupWrapper => {\n\n    const _registry: CallbackRegistry = callbackRegistry();\n\n    const _windowsId: string[] = [];\n\n    //#region \"API functions\"\n\n    async function addWindow(winId: string): Promise<void> {\n        if (_windowsId.indexOf(winId) === -1) {\n            _windowsId.push(winId);\n            const win: WindowWrapper = windowStore.get(winId);\n            win.Events.handleGroupChanged(groupObject, undefined);\n            await executor.finished;\n            _registry.execute(\"window-added\", groupObject, win.API);\n        }\n    }\n\n    async function removeWindow(win: WindowWrapper): Promise<void> {\n        const index: number = _windowsId.indexOf(win.API.id);\n        if (index !== -1) {\n            _windowsId.splice(index, 1);\n            win.Events.handleGroupChanged(undefined, groupObject);\n            await executor.finished;\n            _registry.execute(\"window-removed\", groupObject, win.API);\n        }\n    }\n\n    function find(window: string | Glue42.Windows.GDWindow, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        let winId: string;\n        if (typeof window === \"string\") {\n            winId = window;\n        } else if (!isUndefinedOrNull(window)) {\n            winId = window.id;\n        }\n\n        const win = _mapToWindowObject(winId);\n        if (win) {\n            if (typeof success === \"function\") {\n                success(win);\n            }\n            return win;\n        } else {\n            if (typeof error === \"function\") {\n                error(`No window with ID: ${winId}`);\n            }\n        }\n    }\n\n    function windows(success?: (windows: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const mappedWindows: Glue42.Windows.GDWindow[] = _mapToWindowObjects();\n        if (typeof success === \"function\") {\n            success(mappedWindows);\n        }\n        return mappedWindows;\n    }\n\n    async function execute(command: string, options: any & { windowId: string }, ...keys: string[]): Promise<Glue42.Windows.Group> {\n        await executor.execute<Glue42.Windows.Group>(command, options, ...keys);\n        return groupObject;\n    }\n\n    //#endregion \"API functions\"\n\n    //#region \"Stream function\"\n\n    function handleGroupHeaderVisibilityChanged(windowInfo: any): void {\n        _registry.execute(\"header-visibility-changed\", groupObject);\n    }\n\n    //#endregion \"Stream function\"\n\n    //#region \"Internal function\"\n\n    function _mapToWindowObjects(): Glue42.Windows.GDWindow[] {\n        const winObjects: Glue42.Windows.GDWindow[] = [];\n\n        _windowsId.forEach((winId) => {\n            const windowObject = _mapToWindowObject(winId);\n            if (typeof windowObject !== \"undefined\") {\n                winObjects.push(windowObject);\n            }\n        });\n\n        return winObjects;\n    }\n\n    function _mapToWindowObject(windowId: string): Glue42.Windows.GDWindow {\n        return windowStore.get(windowId) ? windowStore.get(windowId).API : undefined;\n    }\n\n    function _getGroupHeaderVisibility(): boolean {\n        // if one of the windows has a flag hideGroupHeader the group header should be off.\n        const windowWithHiddenHeader = _mapToWindowObjects().find((w) => !w.isGroupHeaderVisible);\n        const _isGroupHeaderVisible = windowWithHiddenHeader === undefined;\n\n        return _isGroupHeaderVisible;\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"Events\"\n\n    function onHeaderVisibilityChanged(callback?: (group: Glue42.Windows.Group) => void): () => void {\n        return _registry.add(\"header-visibility-changed\", callback);\n    }\n\n    function onWindowAdded(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function onWindowRemoved(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"API\"\n\n    const groupObject: Glue42.Windows.Group = {\n        id,\n        get windows() {\n            return windows();\n        },\n        find,\n        get isHeaderVisible() {\n            return _getGroupHeaderVisibility();\n        },\n        showHeader: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"setGroupHeaderVisibility\", { windowId: _windowsId[0], options: { toShow: true } }, ..._windowsId.map((w) => `GroupHeaderVisibilityChanged-${w}`));\n            }, success, error);\n        },\n        hideHeader: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"setGroupHeaderVisibility\", { windowId: _windowsId[0], options: { toShow: false } }, ..._windowsId.map((w) => `GroupHeaderVisibilityChanged-${w}`));\n            }, success, error);\n        },\n        getTitle: async () => {\n            const r = await executor.execute<{ title: string }>(\"getGroupTitle\", { windowId: _windowsId[0] });\n            return r.title;\n        },\n        setTitle: async (title: string) => {\n            if (isNullOrWhiteSpace(title)) {\n                throw new Error(\"`title` must not be null or undefined.\");\n            }\n            return execute(\"setGroupTitle\", { windowId: _windowsId[0], options: { title } });\n        },\n        capture: (captureOptions: Glue42.Windows.CaptureOptions) => {\n            return executor.captureGroup(_windowsId, captureOptions);\n        },\n        maximize: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"maximizeGroup\", { windowId: _windowsId[0] }, ..._windowsId.map((w) => `StateChanged-${w}`));\n            }, success, error);\n        },\n        restore: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"restoreGroup\", { windowId: _windowsId[0] }, ..._windowsId.map((w) => `StateChanged-${w}`));\n            }, success, error);\n        },\n        onHeaderVisibilityChanged,\n        onWindowAdded,\n        onWindowRemoved,\n    };\n\n    const internal: GroupInternal = {\n        get windows() {\n            return _windowsId;\n        },\n        addWindow,\n        removeWindow,\n        handleGroupHeaderVisibilityChanged,\n    };\n\n    return {\n        groupAPI: groupObject,\n        groupInternal: internal,\n    };\n\n    //#endregion \"API\"\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { isNullOrWhiteSpace, isUndefinedOrNull } from \"../activity/helpers/util\";\nimport { CompositionChangedData } from \"./environment/gd/types\";\nimport groupFactory from \"./group\";\nimport { default as windowStore } from \"./store\";\nimport {\n    Environment,\n    GroupsInternal,\n    GroupsWrapper,\n    GroupWrapper,\n    WindowWrapper\n} from \"./types\";\n\nexport default (environment: Environment, logger: Glue42Core.Logger.API): GroupsWrapper => {\n    const _registry: CallbackRegistry = callbackRegistry();\n    const _groups: { [key: string]: GroupWrapper } = {};\n    let heardForWindowsCounter: number = -1;\n\n    // Getting already existing windows and create Group API for each window\n    const windows = windowStore.list;\n    Object.keys(windows).forEach((k) => {\n        const win = windows[k];\n        const groupId = win.API.groupId;\n        const winId = win.API.id;\n        // hidden windows doesn't have groupId\n        if (!isNullOrWhiteSpace(groupId)) {\n            addWindow(groupId, winId);\n        }\n    });\n\n    windowStore.onRemoved((w) => {\n        const group = findGroupWrapperByWindow(w.API);\n        removeWindow(group, w);\n    });\n\n    environment.onCompositionChanged((windowInfo: CompositionChangedData) => {\n        handleCompositionChanged(windowInfo);\n    });\n\n    environment.onGroupHeaderVisibilityChanged((windowInfo) => {\n        const windowId = windowInfo.windowId;\n        const group: Glue42.Windows.Group = findGroupByWindow(windowId);\n        if (typeof group !== \"undefined\") {\n            const groupEvents: GroupWrapper = _groups[group.id];\n\n            if (heardForWindowsCounter === -1) {\n                heardForWindowsCounter = group.windows.length;\n            }\n\n            heardForWindowsCounter--;\n            if (heardForWindowsCounter === 0) {\n                heardForWindowsCounter = -1;\n                groupEvents.groupInternal.handleGroupHeaderVisibilityChanged(windowInfo);\n            }\n        }\n    });\n\n    // Methods\n\n    function my(): Glue42.Windows.Group {\n        return findGroupByWindow(environment.my());\n    }\n\n    function list(success?: (groups: Glue42.Windows.Group[]) => void): Glue42.Windows.Group[] {\n        const result: Glue42.Windows.Group[] = Object.keys(_groups).map((groupId) => {\n            if (_groups[groupId]) {\n                return _groups[groupId].groupAPI;\n            }\n\n        });\n\n        if (typeof success === \"function\") {\n            success(result);\n        }\n        return result;\n    }\n\n    function findGroupByWindow(winId: string | Glue42.Windows.GDWindow, success?: (group: Glue42.Windows.Group) => void, error?: (error: string) => void): Glue42.Windows.Group {\n        let windowId: string;\n        if (typeof winId === \"string\") {\n            windowId = winId;\n        } else if (!isUndefinedOrNull(winId)) {\n            windowId = winId.id;\n        }\n        const result = Object.values(_groups).find((groupObj) => {\n            const group: Glue42.Windows.Group = groupObj.groupAPI;\n            const wins = group.windows.filter((w) => w.id === windowId);\n            return wins.length;\n        });\n        if (result) {\n            if (typeof success === \"function\") {\n                success(result.groupAPI);\n            }\n            return result.groupAPI;\n        } else {\n            if (typeof error === \"function\") {\n                error(`Cannot find the group of the window.`);\n            }\n        }\n    }\n\n    // Events\n    function onWindowMoved(callback?: (windowId: string, oldTabGroupId: string, newGroupId: string) => void): UnsubscribeFunction {\n        return _registry.add(\"window-moved\", callback);\n    }\n\n    // Private\n\n    function createOrGet(groupId: string): GroupWrapper {\n        if (!_groups.hasOwnProperty(groupId)) {\n            const createdGroup: GroupWrapper = groupFactory(groupId, environment.executor);\n            _groups[groupId] = createdGroup;\n            return createdGroup;\n        } else {\n            return _groups[groupId];\n        }\n    }\n\n    function deleteIfEmpty(group: GroupWrapper): void {\n        if (group.groupAPI.windows.length === 0) {\n            delete _groups[group.groupAPI.id];\n        }\n    }\n\n    // hidden window doesn't have a groupId\n    function addWindow(groupId: string, winId: string) {\n        const group = createOrGet(groupId);\n        group.groupInternal.addWindow(winId);\n        return group;\n    }\n\n    function removeWindow(group: GroupWrapper, win: WindowWrapper) {\n        if (!group) {\n            return;\n        }\n        group.groupInternal.removeWindow(win);\n        deleteIfEmpty(group);\n    }\n\n    function handleCompositionChanged(state: CompositionChangedData): void {\n        const groupId = state.groupId;\n        const windowId = state.windowId;\n        const win = windowStore.get(windowId);\n        if (!win) {\n            return;\n        }\n        const currentGroup = findGroupWrapperByWindow(win.API);\n        // if the window's visibility is changed to hidden, remove from the group\n        // or the window is closed.\n        if (isUndefinedOrNull(groupId)) {\n            removeWindow(currentGroup, win);\n            return;\n        }\n        // if the window's visibility is changed to visible, addOrCreate the group\n        if (isUndefinedOrNull(currentGroup) && !isUndefinedOrNull(groupId)) {\n            addWindow(groupId, win.API.id);\n            return;\n        }\n\n        if (currentGroup.groupAPI.id !== groupId) {\n            moveWindow(win, currentGroup.groupAPI.id, groupId);\n        }\n    }\n\n    function moveWindow(win: WindowWrapper, from: string, to: string) {\n        const winId = win.API.id;\n        const fromGroup = _groups[from];\n        removeWindow(fromGroup, win);\n        const toGroup = addWindow(to, winId);\n        win.Events.handleGroupChanged(toGroup.groupAPI, fromGroup.groupAPI);\n        _registry.execute(\"window-moved\", winId, from, to);\n    }\n\n    function findGroupWrapperByWindow(winId: string | Glue42.Windows.GDWindow): GroupWrapper {\n        let windowId: string;\n        if (typeof winId === \"string\") {\n            windowId = winId;\n        } else if (!isUndefinedOrNull(winId)) {\n            windowId = winId.id;\n        }\n        return Object.values(_groups).find((groupObj) => {\n            const groupInternal = groupObj.groupInternal;\n            const wins = groupInternal.windows.filter((id) => id === windowId);\n            return wins.length;\n        });\n    }\n\n    //#region \"API\"\n\n    const groups = {\n        get my() {\n            return my();\n        },\n        list,\n        findGroupByWindow,\n    };\n\n    //#endregion \"API\n\n    const events: GroupsInternal = { onWindowMoved };\n\n    return {\n        groupsAPI: groups,\n        groupsEvents: events,\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Environment, GroupsWrapper, WindowWrapper } from \"./types\";\n\nimport { default as envDetector } from \"./environment/detector\";\nimport groupsFactory from \"./groups\";\nimport { default as windowStore } from \"./store\";\nimport executor from \"./environment/gd/executor\";\nimport * as util from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, gdMajorVersion: number): Glue42.Windows.API => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger;\n    let groups: GroupsWrapper;\n    let environment: Environment;\n\n    windowStore.init(_logger);\n\n    const isReady = new Promise<void>((resolve, reject) => {\n        envDetector(agm, _logger, appManagerGetter, displayAPIGetter, gdMajorVersion)\n            .then((env) => {\n                environment = env;\n                groups = groupsFactory(env, _logger);\n                resolve();\n            })\n            .catch((e) => {\n                const err = `Environment detector fails with: ${e}`;\n                _logger.error(err);\n                reject(err);\n            });\n    });\n\n    function ready() {\n        return isReady;\n    }\n\n    function my(): Glue42.Windows.GDWindow {\n        const myWindow = windowStore.getIfReady(environment.my());\n        return myWindow ? myWindow.API : undefined;\n    }\n\n    function open(name: string, url: string, options?: Glue42.Windows.WindowSettings, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(name)) {\n                throw new Error(\"The window name is missing.\");\n            }\n            if (util.isNullOrWhiteSpace(url)) {\n                throw new Error(\"The window URL is missing.\");\n            }\n\n            if (!util.isUndefinedOrNull(options)) {\n                const optionsAsAny = options as any;\n                for (const prop of [\"minHeight\", \"maxHeight\", \"minWidth\", \"maxWidth\", \"width\", \"height\", \"top\", \"left\"]) {\n                    if (prop in optionsAsAny) {\n                        const value = optionsAsAny[prop];\n                        if (util.isUndefinedOrNull(value)) {\n                            delete optionsAsAny[prop];\n                            continue;\n                        }\n                        if (!util.isNumber(value)) {\n                            const errMessage = `${prop} must be a number`;\n                            throw new Error(errMessage);\n                        }\n                        if (optionsAsAny[prop] === \"width\" || optionsAsAny[prop] === \"height\") {\n                            if (value <= 0) {\n                                const errMessage = `${prop} must be a positive number`;\n                                throw new Error(errMessage);\n                            }\n                        }\n                    }\n                }\n            }\n            return environment.open(name, url, options);\n        }, success, error);\n    }\n\n    function find(name: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (window?.API?.name === name) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n\n        const win = windowsForListing[0];\n        if (win) {\n            if (typeof success === \"function\") {\n                success(windowsForListing[0]);\n            }\n            return windowsForListing[0];\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with name:\" + name);\n            }\n        }\n    }\n\n    function findById(id: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (typeof window !== \"undefined\" && window.API.id === id) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n        const win = windowsForListing[0];\n        if (win) {\n            if (typeof success === \"function\") {\n                success(windowsForListing[0]);\n            }\n            return windowsForListing[0];\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with such id:\" + id);\n            }\n        }\n    }\n\n    function list(success?: (window: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows)\n            .map((k) => {\n                return windows[k].API;\n            });\n\n        if (typeof success !== \"function\") {\n            return windowsForListing;\n        }\n\n        success(windowsForListing);\n    }\n\n    function configure(options: Glue42.Windows.WindowsConfiguration): Promise<void> {\n        const win = my();\n        const winId = win ? win.id : \"\";\n        return executor.configure(winId, options);\n    }\n\n    function windowAdded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function windowRemoved(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    function tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.tabAttached(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.tabDetached(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowFrameColorChanged(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowGotFocus(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowLostFocus(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onEvent(callback: (stream: any) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onEvent(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function createFlydown(targetId: string, config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return environment.createFlydown(targetId, config);\n    }\n\n    function showPopup(targetId: string, config: Glue42.Windows.PopupOptions): Promise<void> {\n        return environment.showPopup(targetId, config);\n    }\n\n    function handleWindowAdded(w: WindowWrapper) {\n        _registry.execute(\"window-added\", w.API);\n    }\n\n    function handleWindowRemoved(w: WindowWrapper) {\n        _registry.execute(\"window-removed\", w.API);\n    }\n\n    windowStore.onReadyWindow(handleWindowAdded);\n    windowStore.onRemoved(handleWindowRemoved);\n\n    // The API itself\n    return {\n        my,\n        open,\n        find,\n        findById,\n        list,\n        ready,\n        onWindowAdded: windowAdded,\n        windowAdded,\n        onWindowRemoved: windowRemoved,\n        windowRemoved,\n        onTabAttached: tabAttached,\n        onTabDetached: tabDetached,\n        onWindowFrameColorChanged,\n\n        get groups() {\n            return groups.groupsAPI;\n        },\n        onWindowGotFocus,\n        onWindowLostFocus,\n        onEvent,\n        createFlydown,\n        showPopup,\n        configure\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { Environment } from \"./../types\";\nimport { default as GD } from \"./gd/gd\";\nimport { Glue42 } from \"../../../glue\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, gdMajorVersion: number): Promise<Environment> => {\n    const _logger = logger;\n    return new Promise((resolve, reject) => {\n        if (gdMajorVersion === 2) {\n            // We are running in HC\n            _logger.trace(\"running in HC\");\n            throw new Error(\"GD2 not supported\");\n        } else if (gdMajorVersion >= 3) {\n            // We are running in GD 3\n            // TODO expose instance in glu42gd\n            _logger.trace(\"running in GD 3\");\n            const gd = new GD(agm, _logger, appManagerGetter, displayAPIGetter, undefined, window.glue42gd.windowId);\n            gd.init()\n                .then(resolve)\n                .catch(reject);\n        } else {\n            // We are running in Browser or Node, we should check which stream is available\n            // But we need to pass the container as dependency\n            const gdPromise = new GD(agm, _logger, appManagerGetter, displayAPIGetter).init();\n            const wait = (ms: number) => new Promise((res, rej) => setTimeout(() => { rej(\"timeout waiting for streams\"); }, ms));\n            Promise.race([gdPromise, wait(10000)])\n                .then(resolve)\n                .catch(reject);\n        }\n    });\n};\n","import { Glue42 } from \"../../glue\";\n\n// provides a unified way to access layouts array\nexport class LayoutStore {\n    private layouts: Glue42.Layouts.Layout[] = [];\n\n    public removeWhere(condition: (l: Glue42.Layouts.Layout) => boolean) {\n        this.layouts = this.layouts.filter(condition);\n    }\n\n    public add(item: Glue42.Layouts.Layout) {\n        this.layouts.push(item);\n    }\n\n    public get all(): Glue42.Layouts.Layout[] {\n        return this.layouts;\n    }\n\n    public where(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout[] {\n        return this.layouts.filter(condition);\n    }\n\n    public first(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout {\n        return this.where(condition)[0];\n    }\n}\n\nexport default new LayoutStore();\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry } from \"callback-registry\";\nimport { LayoutsLibConfiguration } from \"./types\";\nimport { isBoolean } from \"../activity/helpers/util\";\n\nconst SaveContextMethodName = \"T42.HC.GetSaveContext\";\ndeclare var htmlContainer: any;\n\n/**\n * Logic for apps that want to provide custom context on save\n */\nexport default class ContextProvider {\n\n    private interop: Glue42.Interop.API;\n\n    constructor(private config: LayoutsLibConfiguration, private activitiesGetter: () => Glue42.Activities.API, private callbacks: CallbackRegistry, private logger: Glue42.Logger.API) {\n        this.interop = config.agm;\n        this.registerRequestMethods();\n    }\n\n    public onSaveRequested(callback: (info?: Glue42.Layouts.SaveRequestContext) => Glue42.Layouts.SaveRequestResponse) {\n        return this.callbacks.add(\"saveRequested\", callback);\n    }\n\n    private isActivityOwner() {\n        // fallback for GD2 - remove once the bellow code is tested\n        if (typeof htmlContainer !== \"undefined\") {\n            const context = htmlContainer.getContext();\n            return context && context._t42 && context._t42.activityIsOwner;\n        }\n\n        // check if we're the activity owners\n        const activities = this.activitiesGetter();\n        if (!activities) {\n            return false;\n        }\n\n        if (!activities.inActivity) {\n            return false;\n        }\n\n        const myWindow = activities.my.window;\n        const myActivity = activities.my.activity;\n\n        if (!myActivity && !myWindow) {\n            return false;\n        }\n\n        return myActivity.owner.id === myWindow.id;\n    }\n\n    private registerRequestMethods() {\n        this.interop.register<Glue42.Layouts.SaveRequestContext>(SaveContextMethodName, (args) => {\n            const usersCbs = this.callbacks.execute(\"saveRequested\", args);\n            if (usersCbs?.length > 1) {\n                this.logger.warn(`Multiple subscriptions for \"glue.layouts.onSaveRequested\" - only the first one will be used`);\n            }\n            const requestResult = usersCbs[0] as Glue42.Layouts.SaveRequestResponse;\n            const autoSaveWindowContext = this.config.autoSaveWindowContext;\n\n            if (isBoolean(autoSaveWindowContext) && autoSaveWindowContext) {\n                return { autoSaveWindowContext };\n            }\n            // always include the window context\n            const result: Glue42.Layouts.SaveRequestResponse = { windowContext: requestResult?.windowContext, activityContext: undefined };\n\n            // if we're the activity owner put the context too\n            if (this.isActivityOwner()) {\n                result.activityContext = requestResult?.activityContext;\n            }\n\n            return result;\n        });\n    }\n}\n","// A simple transformation that makes object to start with lowercase\n// Note that this is not full implementation as it supports only:\n// undefined, null, arrays, number, string, bool. Anything out of this\n// list is considered Object\nexport default function transformACSLayout(something: { [key: string]: any }): { [key: string]: any } {\n    if (!something) {\n        return something;\n    }\n\n    if (Array.isArray(something)) {\n        return something.map((item) => {\n            return transformACSLayout(item);\n        });\n    }\n\n    if (typeof something === \"string\" || typeof something === \"number\" || typeof something === \"boolean\") {\n        return something;\n    }\n\n    const initial: { [key: string]: any } = {};\n    return Object.keys(something).reduce((accumulator, current) => {\n        const value = something[current];\n        const convertedValue = transformACSLayout(value);\n\n        let key = current;\n        if (current[0].toLowerCase() !== current[0]) {\n            key = current[0].toLowerCase() + current.substr(1);\n        }\n\n        accumulator[key] = convertedValue;\n        return accumulator;\n    }, initial);\n}\n","import { Glue42 } from \"../../glue\";\n\nexport default class LayoutImpl implements Glue42.Layouts.Layout {\n    /** Name of the layout */\n    public name: string;\n\n    /** Type of the layout */\n    public type: Glue42.Layouts.LayoutType;\n\n    /** Array of components describing the applications that are saved in the layout */\n    public components: Glue42.Layouts.LayoutComponent[];\n\n    /** Context passed when the layout was saved */\n    public context: any;\n\n    /** Metadata passed when the layout was saved */\n    public metadata: any;\n\n    /** Version of the layout */\n    public version: string;\n\n    /** Displays of the layout */\n    public displays: any;\n\n    constructor(data: any) {\n        this.name = data.name;\n        this.type = data.type;\n        this.components = data.components;\n        this.context = data.context;\n        this.metadata = data.metadata;\n        this.version = data.version;\n        this.displays = data.displays;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { LayoutsStream, HibernationResumeMessage, UpdateLayoutComponentContextMessage, LayoutsLibConfiguration } from \"./types\";\nimport store from \"./store\";\nimport generate from \"shortid\";\nimport { ACSSaveLayoutMessage, ACSRestoreMessage, ACSRestoreOptionsMessage, ACSMessage, ACSRenameMessage, ACSRemoveLayoutMessage, ACSImportMessage, ExportResultMessage } from \"./types\";\nimport { Glue42Core } from \"@glue42/core\";\nimport ContextProvider from \"./contextProvider\";\nimport transformACSLayout from \"./transform\";\nimport LayoutImpl from \"./layout\";\nimport { isBoolean, isNullOrWhiteSpace, isNumber, isObject, isString, isUndefinedOrNull } from \"../activity/helpers/util\";\n\nexport default class LayoutsAPIImpl implements Glue42.Layouts.API {\n    private appManager: Glue42.AppManager.API;\n    private provider: ContextProvider;\n\n    constructor(private config: LayoutsLibConfiguration, private stream: LayoutsStream, private callbacks: CallbackRegistry, logger: Glue42.Logger.API) {\n        this.appManager = config.appManager;\n        this.onEvent = stream.onEvent;\n        this.provider = new ContextProvider(config, config.activityGetter, callbacks, logger);\n        stream.subscribe();\n    }\n\n    public async setDefaultGlobal(name: string): Promise<void> {\n        await this.config.agm.invoke(\"T42.ACS.SelectDefaultLayout\", { name });\n        return;\n    }\n\n    public async clearDefaultGlobal(): Promise<void> {\n        await this.config.agm.invoke(\"T42.ACS.DeselectDefaultLayout\");\n        return;\n    }\n\n    public async getDefaultGlobal(): Promise<Glue42.Layouts.Layout | undefined> {\n        const result = await this.config.agm.invoke(\"T42.ACS.GetDefaultLayout\");\n        const layout = result.returned;\n        if (!layout) {\n            return undefined;\n        }\n        if (this.isSlimMode()) {\n            return layout;\n        }\n        return this.list().find((l) => l.name === layout.name && l.type === \"Global\");\n    }\n\n    public ready(): Promise<void> {\n        if (this.config.mode === \"fullWaitSnapshot\") {\n            return this.stream.gotSnapshot;\n        }\n        return this.stream.ready;\n    }\n\n    public save(layout: Glue42.Layouts.NewLayoutOptions): Promise<Glue42.Layouts.Layout> {\n        return new Promise<Glue42.Layouts.Layout>((resolve, reject) => {\n\n            this.verifyNotSlimMode();\n\n            if (isUndefinedOrNull(layout)) {\n                return reject(new Error(\"layout is required\"));\n            }\n\n            if (isNullOrWhiteSpace(layout.name)) {\n                return reject(new Error(\"layout.name argument is required\"));\n            }\n\n            if (isNullOrWhiteSpace(layout.type)) {\n                layout.type = \"Global\";\n            }\n\n            if (!isNullOrWhiteSpace(layout.activityId)) {\n                layout.type = \"Activity\";\n            }\n\n            const layoutObject: ACSSaveLayoutMessage = {\n                name: layout.name,\n                type: layout.type,\n                context: layout.context ?? {},\n                metadata: layout.metadata ?? {},\n                options: {},\n            };\n\n            if (layout.type === \"Activity\") {\n                let actId = layout.activityId;\n                if (!actId) {\n                    if (!this.appManager.myInstance.inActivity) {\n                        return reject(new Error(\"Current application is not in activity. Cannot save activity layout for it.\"));\n                    }\n                    actId = this.appManager.myInstance.activityId;\n                }\n                layoutObject.activityId = actId;\n            } else if (layout.type === \"Global\") {\n                if (Array.isArray(layout.ignoreInstances)) {\n                    layoutObject.options.ignoreInstances = layout.ignoreInstances;\n                }\n                if (Array.isArray(layout.instances)) {\n                    layoutObject.options.instances = layout.instances;\n                }\n            } else {\n                return reject(new Error(`layout type ${layout.type} is not supported`));\n            }\n\n            this.invokeMethodAndTrack(\"T42.ACS.SaveLayout\", layoutObject, resolve, reject);\n        });\n    }\n\n    public restore(options: Glue42.Layouts.RestoreOptions): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n            // TODO add validations...\n            if (isUndefinedOrNull(options)) {\n                return reject(new Error(\"options argument is required\"));\n            }\n\n            if (isNullOrWhiteSpace(options.name)) {\n                return reject(new Error(\"options.name argument is required\"));\n            }\n\n            if (isNullOrWhiteSpace(options.type)) {\n                options.type = \"Global\";\n            }\n\n            if (!isNullOrWhiteSpace(options.activityIdToJoin)) {\n                options.type = \"Activity\";\n            }\n\n            if (options.type === \"Activity\") {\n                if (isUndefinedOrNull(options.setActivityContext)) {\n                    options.setActivityContext = true;\n                }\n                if (typeof options.setActivityContext !== \"boolean\") {\n                    return reject(new Error(\"`setActivityContext` must hold a boolean value.\"));\n                }\n                options.activityIdToJoin = options.activityIdToJoin ?? this.appManager.myInstance.activityId;\n            }\n\n            // backwards compatibility\n            if (!isUndefinedOrNull(options.closeRunningInstance)) {\n                options.closeRunningInstances = options.closeRunningInstance;\n            }\n\n            if (isUndefinedOrNull(options.closeRunningInstances)) {\n                options.closeRunningInstances = true;\n            }\n\n            if (!isBoolean(options.closeRunningInstances)) {\n                return reject(new Error(\"`closeRunningInstances` must hold a boolean value.\"));\n            }\n\n            if (isUndefinedOrNull(options.closeMe)) {\n                options.closeMe = options.closeRunningInstances;\n            }\n\n            if (!isBoolean(options.closeMe)) {\n                return reject(new Error(\"`closeMe` must hold a boolean value.\"));\n            }\n\n            if (!isUndefinedOrNull(options.context) && !isObject(options.context)) {\n                return reject(new Error(\"`context` must hold an object value.\"));\n            }\n\n            if (!isUndefinedOrNull(options.timeout) && typeof options.timeout !== \"number\") {\n                return reject(new Error(\"`timeout` must hold an number value.\"));\n            }\n\n            options.context = options.context ?? {};\n\n            const restoreOptions: ACSRestoreOptionsMessage = {\n                activityToJoin: options.activityIdToJoin,\n                setActivityContext: options.setActivityContext,\n                ignoreActivityWindowTypes: options.ignoreActivityWindowTypes,\n                // not used in GD3\n                // restoreActivityOwner: options.restoreActivityOwner,\n                // closeOldWindows: options.closeRunningInstance,\n                reuseExistingWindows: options.reuseWindows,\n\n                closeRunningInstances: options.closeRunningInstances, // new\n                excludeFromClosing: options.closeMe ? [] : [this.appManager.myInstance.id]\n            };\n\n            const arg: ACSRestoreMessage = {\n                type: options.type,\n                name: options.name,\n                context: options.context,\n                options: restoreOptions\n            };\n            if (options.timeout) {\n                arg.timeout = options.timeout;\n            }\n\n            this.invokeMethodAndTrack(\"T42.ACS.RestoreLayout\", arg, resolve, reject, true);\n        });\n    }\n\n    public remove(type: string, name: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!name) {\n                return reject(new Error(\"name argument is required\"));\n            }\n\n            if (!type) {\n                return reject(new Error(\"type argument is required\"));\n            }\n\n            const msg: ACSRemoveLayoutMessage = {\n                type,\n                name,\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RemoveLayout\", msg, resolve, reject);\n        });\n    }\n\n    public list(): Glue42.Layouts.Layout[] {\n        this.verifyNotSlimMode();\n        return store.all;\n    }\n\n    public import(layouts: Glue42.Layouts.Layout[], mode?: Glue42.Layouts.ImportMode): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n            if (!isUndefinedOrNull(mode)) {\n                if (mode !== \"merge\" && mode !== \"replace\") {\n                    return reject(new Error(`${mode} is not supported - only \"merge\" and \"replace\"`));\n                }\n            }\n            const msg: ACSImportMessage = {\n                mode: mode || \"replace\",\n                layouts\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ImportLayouts\", msg, resolve, reject, true);\n        });\n    }\n\n    public export(layoutType?: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.Layout[]> {\n        return new Promise<Glue42.Layouts.Layout[]>((resolve, reject) => {\n            const handleResult = (result: ExportResultMessage) => {\n                let layouts: Glue42.Layouts.Layout[] = this.getObjectValues(result.Layouts).map((t) => new LayoutImpl(transformACSLayout(t)));\n                if (layoutType) {\n                    layouts = layouts.filter((l) => l.type === layoutType);\n                }\n                resolve(layouts);\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ExportLayouts\", {}, handleResult, reject, true);\n        });\n    }\n\n    public rename(layout: Glue42.Layouts.Layout, newName: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!layout) {\n                return reject(new Error(\"layout argument is required\"));\n            }\n\n            if (!layout.name) {\n                return reject(new Error(\"name argument is required\"));\n            }\n\n            if (!layout.type) {\n                return reject(new Error(\"type argument is required\"));\n            }\n\n            const msg: ACSRenameMessage = { type: layout.type, oldName: layout.name, newName };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RenameLayout\", msg, resolve, reject);\n        });\n    }\n\n    public updateMetadata(layout: Glue42.Layouts.Layout): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!layout) {\n                return reject(new Error(\"layout argument is required\"));\n            }\n\n            if (!layout.name) {\n                return reject(new Error(\"name argument is required\"));\n            }\n\n            if (!layout.type) {\n                return reject(new Error(\"type argument is required\"));\n            }\n\n            if (!layout.metadata) {\n                return reject(new Error(\"metadata argument is required\"));\n            }\n\n            const layoutObject: any = {\n                name: layout.name,\n                type: layout.type,\n                metadata: layout.metadata\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateMetadata\", layoutObject, resolve, reject, true);\n        });\n    }\n\n    public hibernate(name: string, options?: Glue42.Layouts.HibernationOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(new Error(\"name cannot be empty\"));\n            }\n            options = options || {};\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context: options.context || {},\n                metadata: options.metadata || {},\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.HibernateLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public resume(name: string, context?: any, options?: Glue42.Layouts.ResumeOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(new Error(\"name cannot be empty\"));\n            }\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context,\n                ...options\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.ResumeLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public async getCurrentLayout(): Promise<Glue42.Layouts.Layout | undefined> {\n        const result = await this.config.agm.invoke(\"T42.ACS.GetCurrentLayout\", {}, \"best\", { methodResponseTimeoutMs: 120 * 1000 });\n        let layout = result.returned.layout;\n        if (!layout) {\n            return undefined;\n        }\n        if (!this.isSlimMode()) {\n            // we have internal if we track layouts (so not slim mode), if not return the object we received from GD\n            layout = this.list().find((l) => l.name === layout.name && l.type === layout.type);\n        }\n        return layout;\n    }\n\n    public onAdded(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        const result = this.callbacks.add(\"added\", callback);\n\n        if (store.all.length > 0) {\n            store.all.forEach((layout) => {\n                try {\n                    callback(layout);\n                } catch (err) { /** */ }\n            });\n        }\n\n        return result;\n    }\n\n    public onRemoved(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"removed\", callback);\n    }\n\n    public onChanged(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"changed\", callback);\n    }\n\n    public onRestored(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"restored\", callback);\n    }\n\n    public onRenamed(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"renamed\", callback);\n    }\n\n    public onEvent(callback: (event: any) => void): () => void {\n        return this.stream.onEvent(callback);\n    }\n\n    public onSaveRequested(callback: (info?: Glue42.Layouts.SaveRequestContext) => Glue42.Layouts.SaveRequestResponse): UnsubscribeFunction {\n        return this.provider.onSaveRequested(callback);\n    }\n\n    public updateAppContextInCurrent(context: object): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (context && typeof context !== \"object\") {\n                return reject(new Error(\"context must be an object\"));\n            }\n            context = context ?? {};\n            const request: UpdateLayoutComponentContextMessage = {\n                context\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateLayoutComponentContext\", request, resolve, reject, true);\n        });\n    }\n\n    public updateDefaultContext(context: object): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (context && typeof context !== \"object\") {\n                return reject(new Error(\"context must be an object\"));\n            }\n            context = context ?? {};\n            const request: UpdateLayoutComponentContextMessage = {\n                context\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateDefaultContext\", request, resolve, reject, true);\n        });\n    }\n\n    public async get(name: string, type: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.Layout> {\n        const matching = this.list().find((l) => l.name === name && l.type === type);\n        if (!matching) {\n            throw new Error(`cannot find layout with name=${name} and type=${type}`);\n        }\n        return matching;\n    }\n\n    public async getAll(type: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.LayoutSummary[]> {\n        const matching = this.list().filter((l) => type === l.type);\n        return matching;\n    }\n\n    private isSlimMode() {\n        return this.config.mode === \"slim\";\n    }\n\n    private verifyNotSlimMode() {\n        if (this.isSlimMode()) {\n            throw Error(\"Operation not allowed in slim mode. Run in full mode.\");\n        }\n    }\n\n    private invokeMethodAndTrack(methodName: string, args: ACSMessage, resolve: (result: any) => void, reject: (err: any) => void, skipStreamEvent?: boolean) {\n        let streamEventReceived = skipStreamEvent;\n        let agmResult: any;\n\n        const token = generate();\n        args.token = token;\n\n        const handleResult = () => {\n            if (streamEventReceived && agmResult) {\n                resolve(agmResult);\n            }\n        };\n\n        if (!skipStreamEvent) {\n            this.stream.waitFor(token)\n                .then(() => {\n                    streamEventReceived = true;\n                    handleResult();\n                })\n                .catch((err: any) => {\n                    reject(err);\n                });\n        }\n\n        const responseHandler = (result: Glue42Core.AGM.InvocationResult<any>) => {\n            if (!result.returned) {\n                return reject(new Error(\"No result from method \" + methodName));\n            }\n\n            if (result.returned.status && (result.returned.status !== \"Success\" && result.returned.status !== \"PartialSuccess\")) {\n                return reject(new Error(result.returned));\n            }\n\n            agmResult = result.returned;\n            handleResult();\n        };\n\n        this.config.agm.invoke(methodName, args, \"best\", { methodResponseTimeoutMs: 120 * 1000 })\n            .then(responseHandler)\n            .catch((err: any) => reject(err));\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n}\n","import { LayoutsStream } from \"../types\";\nimport store, { LayoutStore } from \"../store\";\nimport { ACSStreamData, ACSLayout } from \"./messages\";\nimport LayoutImpl from \"../layout\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport transformACSLayout from \"../transform\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\n/**\n * ACS event stream related to layouts\n */\nexport default class ACSStream implements LayoutsStream {\n\n    public ready: Promise<void>;\n    public gotSnapshot: Promise<void>;\n\n    private resolveReady: () => void;\n    private rejectReady: (err: any) => void;\n\n    private resolveGotSnapshot: () => void;\n    private rejectGotSnapshot: (err: any) => void;\n\n    constructor(private agm: Glue42Core.AGM.API, private callbacks: CallbackRegistry) {\n\n        this.ready = new Promise<void>((resolve, reject) => {\n            this.resolveReady = resolve;\n            this.rejectReady = reject;\n        });\n\n        this.gotSnapshot = new Promise<void>((resolve, reject) => {\n            this.resolveGotSnapshot = resolve;\n            this.rejectGotSnapshot = reject;\n        });\n    }\n\n    public subscribe(noRetry?: boolean) {\n        const transform = (obj: object) => {\n            return this.getObjectValues(obj).map((t) => transformACSLayout(t));\n        };\n\n        // if we don't have OnLayoutEvent stream  we're running pre 2.1 GD version or outside GD,\n        if (!this.checkForLayoutEventMethod()) {\n            // if no retry resolve right away\n            if (noRetry) {\n                this.resolveReady();\n            }\n\n            // if we should retry, schedule  one more time\n            setTimeout(() => {\n                this.subscribe(true);\n            }, 500);\n        } else {\n            this.agm.subscribe(\"T42.ACS.OnLayoutEvent\", { waitTimeoutMs: 10000 })\n                .then((subs) => {\n                    subs.onData((args) => {\n                        const data = args.data as ACSStreamData;\n                        if (data.IsSnapshot) {\n                            this.resolveGotSnapshot();\n                        }\n\n                        this.addLayouts(transform(data.OnLayoutAdded));\n                        this.removeLayouts(transform(data.OnLayoutRemoved));\n                        this.changeLayouts(transform(data.OnLayoutChanged));\n                        this.renameLayouts(transform(data.OnLayoutRenamed));\n                        this.restoredLayout(transform(data.OnLayoutRestored));\n                        this.callbacks.execute(\"streamEvent\", data);\n                    });\n\n                    subs.onFailed((err) => {\n                        const msg = \"can not subscribe to T42.ACS.OnLayoutEvent \" + err;\n                        this.rejectReady(msg);\n                        this.rejectGotSnapshot(msg);\n                    });\n\n                    this.resolveReady();\n                })\n                .catch((err) => {\n                    const msg = \"Error subscribing for T42.ACS.OnLayoutEvent stream. Err: \" + err;\n                    this.rejectReady(msg);\n                    this.rejectGotSnapshot(msg);\n                });\n        }\n    }\n\n    public onEvent(callback: (streamEvent: ACSStreamData) => void): UnsubscribeFunction {\n        return this.callbacks.add(\"streamEvent\", callback);\n    }\n\n    public waitFor(token: string, timeout?: number): Promise<void> {\n        if (!timeout) {\n            timeout = 10000; // default timeout is 10 seconds\n        }\n        return new Promise<void>((resolve, reject) => {\n            let done = false;\n            const unsubscribe = this.onEvent((streamEvent) => {\n                if (streamEvent.Token === token) {\n                    done = true;\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            setTimeout(() => {\n                if (!done) {\n                    reject(\"timed out\");\n                }\n            }, timeout);\n        });\n    }\n\n    private checkForLayoutEventMethod() {\n        try {\n            return this.agm\n                .methods()\n                .map((m) => m.name)\n                .indexOf(\"T42.ACS.OnLayoutEvent\") !== -1;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    private addLayouts(layoutsData: any[]) {\n        if (!layoutsData) {\n            return;\n        }\n\n        layoutsData.forEach((layoutData) => {\n            const layout = new LayoutImpl(layoutData);\n            store.add(layout);\n            this.callbacks.execute(\"added\", layout);\n        });\n    }\n\n    private removeLayouts(removedLayouts: any[]) {\n        if (!removedLayouts) {\n            return;\n        }\n        removedLayouts.forEach((removedLayout) => {\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, removedLayout));\n\n            this.callbacks.execute(\"removed\", removedLayout);\n        });\n    }\n\n    private changeLayouts(changedLayouts: any[]) {\n        if (!changedLayouts) {\n            return;\n        }\n\n        changedLayouts.forEach((changedLayout) => {\n            // removed the changed layout and push it again\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, changedLayout));\n            store.add(new LayoutImpl(changedLayout));\n            // execute callback\n            this.callbacks.execute(\"changed\", changedLayout);\n        });\n\n    }\n\n    private renameLayouts(renamedLayouts: any[]) {\n        if (!renamedLayouts) {\n            return;\n        }\n\n        renamedLayouts.forEach((renamedLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: renamedLayout.type, name: renamedLayout.oldName }));\n\n            if (!existingLayout) {\n                throw Error(\"received rename event for unknown layout with type \" + renamedLayout.type + \" and name \" + renamedLayout.oldName);\n            }\n\n            existingLayout.name = renamedLayout.newName;\n\n            this.callbacks.execute(\"renamed\", existingLayout);\n        });\n    }\n\n    private compareLayouts(layout1: { name: string, type: string }, layout2: { name: string, type: string }) {\n        return layout1.name === layout2.name && layout1.type === layout2.type;\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n\n    private restoredLayout(restoredLayouts: any[]) {\n\n        if (!restoredLayouts) {\n            return;\n        }\n\n        restoredLayouts.forEach((restoredLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: restoredLayout.type, name: restoredLayout.name }));\n            this.callbacks.execute(\"restored\", existingLayout);\n        });\n    }\n}\n","import Layouts from \"./layouts\";\nimport ACSStream from \"./stream/acsStream\";\nimport streamNull from \"./stream/nullStream\";\nimport {LayoutsLibConfiguration, LayoutsStream } from \"./types\";\nimport callbackRegistry, { CallbackRegistry } from \"callback-registry\";\n\nexport default function(config: LayoutsLibConfiguration): Layouts {\n\n    if (!config.agm) {\n        throw Error(\"config.agm is required\");\n    }\n\n    if (!config.logger) {\n        throw Error(\"config.logger is required\");\n    }\n\n    // default mode to slim\n    config.mode = config.mode || \"slim\";\n\n    const logger = config.logger;\n    const callbacks: CallbackRegistry = callbackRegistry();\n\n    let acsStream: LayoutsStream;\n\n    if (config.mode === \"full\" || \"fullWaitSnapshot\") {\n        acsStream = new ACSStream(config.agm, callbacks);\n    } else {\n        acsStream = streamNull();\n    }\n\n    return new Layouts(config, acsStream, callbacks, logger);\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport CallbackFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport CaptureOptions = Glue42.Displays.CaptureOptions;\n\nconst T42DisplayCommand = \"T42.Displays.Command\";\nconst T42DisplayOnEvent = \"T42.Displays.OnEvent\";\n\nexport default class DisplayManager implements Glue42.Displays.API {\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _registered = false;\n\n    constructor(\n        private _agm: Glue42Core.AGM.API,\n        private _logger: Glue42Core.Logger.API,\n    ) {\n        //\n    }\n\n    public all = async (): Promise<Glue42.Displays.Display[]> => {\n        const displays = await this.callGD<Glue42.Displays.Display[]>(DisplayCommand.GetAll, {});\n        return displays.map(this.decorateDisplay);\n    }\n\n    public get = async (id: number): Promise<Glue42.Displays.Display> => {\n        const display = await this.callGD<Glue42.Displays.Display>(DisplayCommand.Get, { id });\n        return this.decorateDisplay(display);\n    }\n\n    public getPrimary = async (): Promise<Glue42.Displays.Display> => {\n        const primary = (await this.all()).find((d) => d.isPrimary);\n        return primary;\n    }\n\n    public getByWindowId(id: string): Promise<Glue42.Displays.Display> {\n        const current = this.callGD<Glue42.Displays.Display>(DisplayCommand.GetByWindowId, { id });\n        return current;\n    }\n\n    public capture = async (options: CaptureOptions): Promise<string> => {\n        const screenshot = await this.callGD<string>(DisplayCommand.Capture, { ...options });\n        return screenshot;\n    }\n\n    public captureAll = async (options: Glue42.Displays.CaptureAllOptions): Promise<string | string[]> => {\n        const screenshots = await this.callGD<string | string[]>(DisplayCommand.CaptureAll, { ...options });\n        return screenshots;\n    }\n\n    public getMousePosition = async (): Promise<Glue42.Displays.Point> => {\n        const point = await this.callGD<Glue42.Displays.Point>(DisplayCommand.GetMousePosition);\n        return point;\n    }\n\n    public onDisplayChanged(cb: (displays: Glue42.Displays.Display[]) => void) {\n        this.register();\n        return this._registry.add(\"on-display-changed\", cb);\n    }\n\n    private callGD = async <T>(command: string, options?: object): Promise<T> => {\n        // Consider targeting only GD\n        const invocationResult = await this._agm.invoke(T42DisplayCommand, { options: { ...options }, command });\n        return invocationResult.returned.data;\n    }\n\n    private decorateDisplay = (original: Glue42.Displays.Display): Glue42.Displays.Display => {\n        const decoratedDisplay = {\n            ...original,\n            capture: (size: SizeOptions) => this.capture({ id: original.id, size })\n        };\n        const workAreaAsAny = decoratedDisplay.workArea as any;\n        workAreaAsAny.x = workAreaAsAny.left;\n        workAreaAsAny.y = decoratedDisplay.workArea.top;\n        return decoratedDisplay;\n    }\n\n    private register() {\n        if (this._registered) {\n            return;\n        }\n        this._registered = true;\n        this._agm.register(T42DisplayOnEvent, (args, caller) => {\n            const event = args.event;\n            const data = args.data;\n            switch (event) {\n                case \"display-changed\":\n                    this._registry.execute(\"on-display-changed\", data.displays.map(this.decorateDisplay));\n                    break;\n                default:\n                    this._logger.warn(`unknown event - ${event}`);\n                    break;\n            }\n        });\n    }\n}\n\ntype SizeOptions = Glue42.Displays.ScaleOptions | Glue42.Displays.AbsoluteSizeOptions;\n\nenum DisplayCommand {\n    Capture = \"capture\",\n    CaptureAll = \"captureAll\",\n    GetAll = \"getAll\",\n    Get = \"get\",\n    GetByWindowId = \"getByWindowId\",\n    GetMousePosition = \"getMousePosition\",\n}\n","import { Glue42 } from \"../../glue\";\nimport { ChannelsImpl } from \"./channels\";\n\nlet interop: Glue42.Interop.API;\nlet windowId: string;\n\nexport async function setupAGM(interopLib: Glue42.Interop.API, channels: ChannelsImpl) {\n    interop = interopLib;\n\n    if (typeof window !== \"undefined\") {\n        if (window.glue42gd) {\n            windowId = window.glue42gd.windowId;\n        }\n    }\n\n    if (!windowId) {\n        // not supported\n        return;\n    }\n\n    await interop.register(\"T42.Channels.Command\", (args: any) => {\n        const command = args.command;\n        if (!command) {\n            throw new Error(\"missing command argument\");\n        }\n        if (command === \"join\") {\n            const id = args.channel;\n            if (!id) {\n                throw new Error(\"missing argument id\");\n            }\n            // this is coming from GD (which means from selector switch, join without triggering selection change again)\n            channels.joinNoSelectorSwitch(id);\n            return;\n        }\n        if (command === \"leave\") {\n            channels.leaveNoSelectorSwitch();\n            return;\n        }\n        if (command === \"get\") {\n            const id = channels.current();\n            return { id };\n        }\n        throw new Error(`unknown command ${command}`);\n    });\n\n    // agm interface is available for SW windows only\n    interop.invoke(\"T42.Channels.Announce\", { swId: windowId, instance: interop.instance.instance });\n}\n\nexport async function switchChannel(channel?: string, id?: string) {\n    interop.invoke(\"T42.Channels.Announce\", {\n        swId: id ?? windowId,\n        command: \"switchChannel\",\n        data: { newChannel: channel }\n    });\n}\n","import { Glue42 } from \"../../glue\";\n\nconst CONTEXT_PREFIX = \"___channel___\";\n\nexport class SharedContextSubscriber {\n    private unsubscribeFunc: () => void;\n    private callback: any;\n\n    constructor(private contexts: Glue42.Contexts.API) {\n    }\n\n    public subscribe(callback: any): void {\n        this.callback = callback;\n    }\n\n    public subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (!this.isChannel(name)) {\n            return Promise.reject(new Error(`Channel with name: ${name} doesn't exist!`));\n        }\n\n        const contextName = this.createContextName(name);\n\n        return this.contexts.subscribe(contextName, (data, _, __, ___, extraData) => {\n            callback(data.data, data, extraData?.updaterId);\n        });\n    }\n\n    /** Unsubscribes from the current shared context, and subscribe to the passed one */\n    public async switchChannel(name: string): Promise<void> {\n        this.unsubscribe();\n        const contextName = this.createContextName(name);\n        this.unsubscribeFunc = await this.contexts.subscribe(contextName, (data, _, __, ___, extraData) => {\n            if (this.callback) {\n                this.callback(data.data, data, extraData?.updaterId);\n            }\n        });\n    }\n\n    public unsubscribe(): void {\n        if (this.unsubscribeFunc) {\n            this.unsubscribeFunc();\n        }\n    }\n\n    public all(): string[] {\n        const contextNames = this.contexts.all();\n        const channelContextNames = contextNames.filter((contextName) => contextName.startsWith(CONTEXT_PREFIX));\n        const channelNames = channelContextNames.map((channelContextName) => channelContextName.substr(CONTEXT_PREFIX.length));\n        return channelNames;\n    }\n\n    public getContextData(name: string): Promise<Glue42.Channels.ChannelContext> {\n        return new Promise((resolve, reject) => {\n            if (!this.isChannel(name)) {\n                return reject(new Error(`A channel with name: ${name} doesn't exist!`));\n            }\n\n            const contextName = this.createContextName(name);\n\n            this.contexts.subscribe(contextName, (data) => {\n                resolve(data);\n            }).then((unsubscribeFunc) => unsubscribeFunc());\n        });\n    }\n\n    public updateChannel(name: string, data: { name: string, meta: any, data: any }): Promise<void> {\n        const contextName = this.createContextName(name);\n        return this.contexts.update(contextName, data);\n    }\n\n    public updateData(name: string, data: any) {\n        const contextName = this.createContextName(name);\n        if (this.contexts.setPathSupported) {\n            const pathValues: Glue42.Contexts.PathValue[] = Object.keys(data).map((key) => {\n                return {\n                    path: `data.` + key,\n                    value: data[key]\n                };\n            });\n            return this.contexts.setPaths(contextName, pathValues);\n        } else {\n            // pre 3.10, note that we update the data property only\n            return this.contexts.update(contextName, { data });\n        }\n    }\n\n    public isChannel(name: string): boolean {\n        return this.all().some((channelName) => channelName === name);\n    }\n\n    private createContextName(name: string): string {\n        return CONTEXT_PREFIX + name;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { switchChannel } from \"./agm\";\n\nexport class ChannelsImpl implements Glue42.Channels.API {\n    private subsKey = \"subs\";\n    private changedKey = \"changed\";\n    private isInitialJoin = true;\n\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n    private currentContext: string;\n\n    constructor(private shared: SharedContextSubscriber, private interop: Glue42.Interop.API, private getWindows: () => Glue42.Windows.API, private logger: Glue42.Logger.API) {\n        this.shared.subscribe(this.handler.bind(this));\n\n        if (typeof window !== \"undefined\" && typeof window.glue42gd !== \"undefined\") {\n            this.currentContext = (window.glue42gd as any).initialChannel;\n            if (this.currentContext) {\n                this.joinNoSelectorSwitch(this.currentContext);\n            }\n        }\n    }\n\n    public subscribe(callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): () => void {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        return this.registry.add(this.subsKey, callback);\n    }\n\n    public async subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Please provide the name as a string!\");\n        }\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        const unsubscribeFunc = await this.shared.subscribeFor(name, callback);\n        return unsubscribeFunc;\n    }\n\n    public async publish(data: object, name?: string): Promise<void> {\n        if (typeof data !== \"object\") {\n            throw new Error(\"Please provide the data as an object!\");\n        }\n\n        if (name) {\n            if (typeof name !== \"string\") {\n                throw new Error(\"Please provide the name as a string!\");\n            }\n\n            if (!this.shared.isChannel(name)) {\n                return Promise.reject(new Error(`A channel with name: ${name} doesn't exist!`));\n            }\n\n            return this.shared.updateData(name, data);\n        }\n\n        if (!this.currentContext) {\n            throw new Error(\"Not joined to any channel!\");\n        }\n        return this.shared.updateData(this.currentContext, data);\n    }\n\n    public all(): Promise<string[]> {\n        const channelNames = this.shared.all();\n        return Promise.resolve(channelNames);\n    }\n\n    public async list(): Promise<Glue42.Channels.ChannelContext[]> {\n        const channelNames = await this.all();\n        const channelContexts = await Promise.all(channelNames.map((channelName) => this.get(channelName)));\n        return channelContexts;\n    }\n\n    public get(name: string): Promise<Glue42.Channels.ChannelContext> {\n        if (typeof name !== \"string\") {\n            return Promise.reject(new Error(\"Please provide the channel name as a string!\"));\n        }\n\n        return this.shared.getContextData(name);\n    }\n\n    /* Returns info about my channel */\n    public getMy(): Promise<Glue42.Channels.ChannelContext> {\n        if (!this.currentContext) {\n            return Promise.resolve(undefined);\n        }\n        return this.get(this.currentContext);\n    }\n\n    public async join(name: string): Promise<void> {\n        return this.joinCore(name);\n    }\n\n    public async joinNoSelectorSwitch(name: string): Promise<void> {\n        return this.joinCore(name, false);\n    }\n\n    public leave() {\n        return this.leaveCore();\n    }\n\n    public leaveNoSelectorSwitch() {\n        return this.leaveCore(false);\n    }\n\n    public current(): string {\n        return this.currentContext;\n    }\n\n    public my(): string {\n        return this.current();\n    }\n\n    public changed(callback: (channel: string) => void): () => void {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n\n        return this.registry.add(this.changedKey, callback);\n    }\n\n    public onChanged(callback: (channel: string) => void): () => void {\n        return this.changed(callback);\n    }\n\n    public async add(info: Glue42.Channels.ChannelContext): Promise<Glue42.Channels.ChannelContext> {\n        if (typeof info !== \"object\") {\n            throw new Error(\"Please provide the info as an object!\");\n        }\n        if (typeof info.name === \"undefined\") {\n            throw new Error(\"info.name is missing!\");\n        }\n        if (typeof info.name !== \"string\") {\n            throw new Error(\"Please provide the info.name as a string!\");\n        }\n        if (typeof info.meta === \"undefined\") {\n            throw new Error(\"info.meta is missing!\");\n        }\n        if (typeof info.meta !== \"object\") {\n            throw new Error(\"Please provide the info.meta as an object!\");\n        }\n        if (typeof info.meta.color === \"undefined\") {\n            throw new Error(\"info.meta.color is missing!\");\n        }\n        if (typeof info.meta.color !== \"string\") {\n            throw new Error(\"Please provide the info.meta.color as a string!\");\n        }\n\n        const context: Glue42.Channels.ChannelContext = {\n            name: info.name,\n            meta: info.meta || {},\n            data: info.data || {}\n        };\n\n        // Note that we use `update` instead of `add` so that if the channel already exists we don't overwrite it.\n        await this.shared.updateChannel(info.name, context);\n\n        return context;\n    }\n\n    public async getWindowsOnChannel(channel: string): Promise<Glue42.Windows.GDWindow[]> {\n        const windowInfos = await this.getWindowsWithChannels({ channels: [channel] });\n        return windowInfos.map((w) => w.window);\n    }\n\n    public async getWindowsWithChannels(filter: Glue42.Channels.WindowWithChannelFilter): Promise<Glue42.Channels.WindowOnChannelInfo[]> {\n        try {\n            const info = await this.interop.invoke<{ windows: Array<{ windowId: string, channel: string, application: string }> }>(\"T42.Channels.Announce\", { command: \"getChannelsInfo\", data: { filter } });\n            const windows = this.getWindows();\n            if (info?.returned?.windows) {\n                return info.returned.windows.map((windowInfo) => {\n                    const window = windows.findById(windowInfo.windowId);\n                    return {\n                        window,\n                        channel: windowInfo.channel,\n                        application: windowInfo.application\n                    };\n                });\n            }\n        } catch (er) {\n            this.logger.error(`Error getting all channel enabled windows. This method is available since Glue42 3.12`, er);\n        }\n        return [];\n    }\n\n    private handler(data: object, context: Glue42.Channels.ChannelContext, updaterId: string): any {\n        this.registry.execute(this.subsKey, data, context, updaterId);\n    }\n\n    private async joinCore(name: string, changeSelector: boolean = true) {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Please provide the channel name as a string!\");\n        }\n\n        if (!this.isInitialJoin && name === this.currentContext) {\n            // ignore joining the channel that we're already on, except when this is the very first call\n            return;\n        }\n        this.isInitialJoin = false;\n\n        // Checks if a channel exists with the provided name.\n        const doesChannelExist = (channelName: string): boolean => {\n            const channelNames = this.shared.all();\n            return channelNames.includes(channelName);\n        };\n\n        // Wait for 3k ms for the channel to appear if it doesn't already exist.\n        if (!doesChannelExist(name)) {\n            const channelExistsPromise = new Promise<void>((resolve, reject) => {\n                let timeoutId: NodeJS.Timeout;\n\n                // Check every 100 ms for a channel with the provided name.\n                const intervalId = setInterval(() => {\n                    if (doesChannelExist(name)) {\n                        clearTimeout(timeoutId);\n                        clearInterval(intervalId);\n                        resolve();\n                    }\n                }, 100);\n\n                timeoutId = setTimeout(() => {\n                    clearInterval(intervalId);\n\n                    return reject(new Error(`A channel with name: ${name} doesn't exist!`));\n                }, 3000);\n            });\n\n            await channelExistsPromise;\n        }\n\n        this.currentContext = name;\n        await this.shared.switchChannel(name);\n        if (changeSelector) {\n            switchChannel(name);\n        }\n        this.registry.execute(this.changedKey, name);\n    }\n\n    private leaveCore(changeSelector = true): Promise<void> {\n        this.currentContext = undefined;\n        this.registry.execute(this.changedKey, undefined);\n        this.shared.unsubscribe();\n        if (changeSelector) {\n            switchChannel();\n        }\n        return Promise.resolve();\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { setupAGM } from \"./agm\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { ChannelsImpl } from \"./channels\";\n\nexport function factory(contexts: Glue42.Contexts.API, agm: Glue42.AGM.API, getWindows: () => Glue42.Windows.API, logger: Glue42.Logger.API): Glue42.Channels.API & { ready: () => Promise<void>; } {\n    const sharedContexts = new SharedContextSubscriber(contexts);\n    const channels = new ChannelsImpl(sharedContexts, agm, getWindows, logger);\n\n    setupAGM(agm, channels);\n\n    return {\n        subscribe: channels.subscribe.bind(channels),\n        subscribeFor: channels.subscribeFor.bind(channels),\n        publish: channels.publish.bind(channels),\n        all: channels.all.bind(channels),\n        list: channels.list.bind(channels),\n        get: channels.get.bind(channels),\n        join: channels.join.bind(channels),\n        leave: channels.leave.bind(channels),\n        // @ignore-ed, but kept for backwards compatibility.\n        current: channels.current.bind(channels),\n        my: channels.my.bind(channels),\n        // @ignore-ed, but kept for backwards compatibility.\n        changed: channels.changed.bind(channels),\n        onChanged: channels.onChanged.bind(channels),\n        // @ignore-ed as currently not entirely supported by the framework.\n        add: channels.add.bind(channels),\n        getWindowsOnChannel: channels.getWindowsOnChannel.bind(channels),\n        getWindowsWithChannels: channels.getWindowsWithChannels.bind(channels),\n        getMy: channels.getMy.bind(channels),\n        ready: () => (contexts as any).ready()\n    };\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\n\r\nconst CommandMethod = \"T42.Hotkeys.Command\";\r\nconst InvokeMethod = \"T42.Hotkeys.Invoke\";\r\n\r\nconst RegisterCommand = \"register\";\r\nconst UnregisterCommand = \"unregister\";\r\nconst UnregisterAllCommand = \"unregisterAll\";\r\n\r\nexport class HotkeysImpl implements Glue42.Hotkeys.API {\r\n\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private firstHotkey = true;\r\n    private hotkeys = new Map<string, Glue42.Hotkeys.HotkeyInfo>();\r\n\r\n    constructor(private agm: Glue42.AGM.API) {\r\n    }\r\n\r\n    public async register(info: string | Glue42.Hotkeys.HotkeyInfo, callback: Glue42.Hotkeys.HotkeyCallback): Promise<void> {\r\n        if (typeof info === \"undefined\") {\r\n            throw new Error(\"Hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof info === \"string\") {\r\n            info = {\r\n                hotkey: info\r\n            };\r\n        } else {\r\n            if (!info.hotkey) {\r\n                throw new Error(\"Info's hotkey parameter missing\");\r\n            }\r\n\r\n            info = {\r\n                hotkey: info.hotkey,\r\n                description: info.description\r\n            };\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(info.hotkey);\r\n        if (this.hotkeys.has(hkToLower)) {\r\n            throw new Error(`Shortcut for ${hkToLower} already registered`);\r\n        }\r\n\r\n        // if very first a hotkey is registered by this application register invoke AGM method\r\n        if (this.firstHotkey) {\r\n            this.firstHotkey = false;\r\n            await this.registerInvokeAGMMethod();\r\n        }\r\n        // store the callback\r\n        this.registry.add(hkToLower, callback);\r\n\r\n        // invoke GD method\r\n        await this.agm.invoke(CommandMethod, { command: RegisterCommand, hotkey: hkToLower, description: info.description });\r\n\r\n        this.hotkeys.set(hkToLower, info);\r\n    }\r\n\r\n    public async unregister(hotkey: string): Promise<void> {\r\n        if (typeof hotkey === \"undefined\") {\r\n            throw new Error(\"hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof hotkey !== \"string\") {\r\n            throw new Error(\"hotkey parameter must be string\");\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterCommand, hotkey: hkToLower });\r\n        this.hotkeys.delete(hkToLower);\r\n        this.registry.clearKey(hkToLower);\r\n    }\r\n\r\n    public async unregisterAll(): Promise<void> {\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterAllCommand });\r\n        this.hotkeys.clear();\r\n        this.registry.clear();\r\n    }\r\n\r\n    /**\r\n     * Whether this application has registered accelerator.\r\n     * @param hotkey\r\n     */\r\n    public isRegistered(hotkey: string): boolean {\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        return this.hotkeys.has(hkToLower);\r\n    }\r\n\r\n    private registerInvokeAGMMethod(): void {\r\n        this.agm.register(InvokeMethod, (args: {\r\n            key: string;\r\n        }) => {\r\n            const hkToLower = args.key.toLowerCase();\r\n            const info = this.hotkeys.get(hkToLower);\r\n            this.registry.execute(hkToLower, info);\r\n        });\r\n    }\r\n\r\n    private formatHotkey(hotkey: string): string {\r\n        if (hotkey) {\r\n            return hotkey.replace(/\\s/g, \"\").toLowerCase();\r\n        }\r\n    }\r\n}\r\n","import { Glue42 } from \"../glue\";\nimport { ActivitiesLibConfigObject, LibConfigObject, InternalConfig, LayoutsLibConfigObject, AppManagerLibConfigObject } from \"./types\";\n\ninterface InputModeObject {\n    mode?: boolean | string;\n    logger?: Glue42.LoggerConfig;\n}\n\nexport default (options: Glue42.Config): InternalConfig => {\n\n    // Possible options per lib (this is InputLibConfig type)\n    // * false - library is disabled (e.g. config.appManager = false)\n    // * true - library is enabled in running in default mode (e.g config.appManager = true).\n    //          Exception is if default mode is false - in that case it runs default true mode.\n    // * string - start in some mode (e.g. config.appManager = \"full\")\n    // * object - allows further customization (e.g config.appManager = {mode: \"full\", someSetting: 42})\n    //\n    // Some libs support different running modes, some do not.\n    //\n    // Currently defaults are:\n    // appManager: disabled\n    // layouts: enabled in 'slim' mode\n    // activities: enabled in 'trackMyTypeAndInitiatedFromMe' mode\n    // windows: enabled (does not support modes)\n    //\n    // InputLibConfig is transformed to LibConfigObject\n\n    type InputLibConfig = boolean | string | InputModeObject;\n\n    /**\n     * Transforms InputLibConfig (the config as specified from the user)\n     * to LibConfigObject(internal library configuration)\n     */\n    function getLibConfig<T extends LibConfigObject<string>>(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): T {\n\n        // if value is false return undefined\n        if (typeof value === \"boolean\" && !value) {\n            return undefined;\n        }\n\n        // find the mode of the library\n        const mode = getModeAsString(value, defaultMode, trueMode);\n\n        // if object we will replace the mode because appManager = {mode: true, setting: 42}\n        // should be turned into appManager = {mode: 'slim', setting: 42}\n        if (typeof value === \"object\") {\n            value.mode = mode;\n            return value as T;\n        }\n\n        return {\n            mode,\n        } as T;\n    }\n\n    /**\n     * Finds the mode based for a given library\n     * 1. If object we call recursively using object.mode for value\n     * 1. If the user hasn't specified anything we use the hard coded defaults\n     * 3. If the value is false or it got defaulted to false, we return undefined\n     * 4. If the value is true we return trueMode or defaultMode (if trueMode is undefined)\n     */\n    function getModeAsString(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): string {\n\n        if (typeof value === \"object\") {\n            // 1. if object\n            return getModeAsString(value.mode, defaultMode, trueMode) + \"\";\n        } else if (typeof value === \"undefined\") {\n            // 2. if the user does not pass anything\n            if (typeof defaultMode === \"boolean\" && !defaultMode) {\n                // 3. if gets defaulted to false, the library should be off\n                return undefined;\n            } else {\n                return defaultMode + \"\";\n            }\n        } else if (typeof value === \"boolean\") {\n            // 4. if the user passes true, use trueMode or defaultMode\n            if (value) {\n                // if the user passes true, use trueMode or defaultMode\n                return ((trueMode === undefined) ? defaultMode : trueMode) + \"\";\n            } else {\n                // 3. if the user passes false, the library should be off\n                return undefined;\n            }\n        }\n\n        return value + \"\";\n    }\n\n    const appDefaultMode = false;\n    const appDefaultTrueMode = \"startOnly\";\n\n    const activitiesDefaultMode = \"trackMyTypeAndInitiatedFromMe\";\n\n    const layoutsDefaultMode = \"slim\";\n\n    return {\n        layouts: getLibConfig<LayoutsLibConfigObject>(options.layouts, layoutsDefaultMode),\n        activities: getLibConfig<ActivitiesLibConfigObject>(options.activities, activitiesDefaultMode),\n        appManager: getLibConfig<AppManagerLibConfigObject>(options.appManager, appDefaultMode, appDefaultTrueMode),\n        windows: getLibConfig<LibConfigObject<string>>(options.windows, true),\n        channels: getLibConfig<LibConfigObject<string>>(options.channels || false, false),\n        displays: getLibConfig<LibConfigObject<string>>(options.displays, true)\n    };\n};\n","import { Glue42 } from \"../../glue\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\n\nexport class Glue42Notification implements Glue42.Notifications.Glue42Notification {\n    public readonly actions: Glue42.Notifications.Glue42NotificationAction[];\n    public badge: string;\n    public body: string;\n    public data: any;\n    public dir: NotificationDirection;\n    public icon: string;\n    public image: string;\n    public lang: string;\n    public renotify: boolean;\n    public requireInteraction: boolean;\n    public silent: boolean;\n    public tag: string;\n    public timestamp: number;\n    public title: string;\n    public readonly vibrate: number[];\n\n    public onclick: ((this: Notification, ev: Event) => any) | null;\n    public onclose: ((this: Notification, ev: Event) => any) | null;\n    public onerror: ((this: Notification, ev: Event) => any) | null;\n    public onshow: ((this: Notification, ev: Event) => any) | null;\n    public onaction: ((this: Notification, ev: Glue42.Notifications.ActionEvent) => any) | null;\n\n    private callbacks: CallbackRegistry = callbackRegistry();\n\n    public constructor(public options: Glue42.Notifications.Glue42NotificationOptions) {\n        this.actions = options.actions;\n        this.body = options.body;\n        this.badge = options.badge;\n        this.data = options.data;\n        this.dir = options.dir;\n        this.icon = options.icon;\n        this.image = options.image;\n        this.lang = options.lang;\n        this.renotify = options.renotify;\n        this.requireInteraction = options.requireInteraction;\n        this.silent = options.silent;\n        this.tag = options.tag;\n        this.timestamp = options.timestamp;\n        this.title = options.title;\n    }\n\n    public close(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    public addEventListener<K extends \"click\" | \"close\" | \"error\" | \"show\">(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(type: any, listener: any, options?: any) {\n        this.callbacks.add(type, listener);\n    }\n    public removeEventListener<K extends \"click\" | \"close\" | \"error\" | \"show\">(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    public removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    public removeEventListener(type: any, listener: any, options?: any) {\n        // DO NOTHING FOR NOW\n    }\n    public dispatchEvent(event: Event): boolean {\n        this.callbacks.execute(event.type, event);\n        return true;\n    }\n}\n","import { Glue42 } from \"../../glue\";\n\nexport class PanelAPI implements Glue42.Notifications.NotificationPanelAPI {\n    constructor(private interop: Glue42.Interop.API) {\n    }\n\n    public toggle(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Show\");\n    }\n    public show(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Show\", { show: true });\n    }\n    public hide(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Hide\");\n    }\n    public isVisible(): Promise<boolean> {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Notification } from \"./notification\";\nimport { GnsNotificationSettings, GnsNotificationActionSettings, GnsNotificationActionPayload } from \"./types\";\nimport generate from \"shortid\";\nimport { PanelAPI } from \"./panel\";\nconst STARTING_INDEX = 0;\n\nexport class Notifications implements Glue42.Notifications.API {\n    public panel: PanelAPI;\n\n    private methodsRegistered: boolean = false;\n    private readonly methodNameRoot = \"T42.Notifications.Handler-\" + generate();\n    private nextId = 0;\n    private notifications: { [id: string]: Glue42Notification } = {};\n\n    constructor(private interop: Glue42.Interop.API) {\n        this.panel = new PanelAPI(interop);\n    }\n\n    public get maxActions(): number {\n        return 2;\n    }\n\n    public async raise(options: Glue42.Notifications.Glue42NotificationOptions): Promise<Glue42.Notifications.Glue42Notification> {\n        if (!options) {\n            throw new Error(\"invalid options - should be an object\");\n        }\n        if (!options.title) {\n            throw new Error(\"invalid options - should have title\");\n        }\n        if (!this.methodsRegistered) {\n            const bunchOfPromises = [];\n            for (let index = STARTING_INDEX; index < this.maxActions; index++) {\n                bunchOfPromises.push(\n                    this.interop.register(this.methodNameRoot + \"_\" + index, this.handleNotificationAction.bind(this))\n                );\n            }\n\n            await Promise.all(bunchOfPromises);\n            this.methodsRegistered = true;\n        }\n\n        // transform actions\n        const id = String(this.nextId++);\n        const type = options.type ?? \"Notification\";\n        const notification: GnsNotificationSettings = {\n            title: options.title,\n            type,\n            severity: options.severity ?? \"None\",\n            description: options.body,\n            glueRoutingDetailMethodName: this.methodNameRoot + \"_\" + STARTING_INDEX,\n            actions: [],\n            sourceId: id,\n            source: options.source\n        };\n\n        if (options.actions) {\n            const validActions = options.actions.slice(0, this.maxActions);\n\n            let index = STARTING_INDEX;\n            for (const action of validActions) {\n                const args: GnsNotificationActionPayload = { // this should include user arguments (action.interop?.arguments)\n                    g42notificationId: id,\n                    g42action: action.action,\n                    g42interopMethod: action.interop?.method,\n                    g42interopTarget: action.interop?.target,\n                };\n                // TODO, properly convert between args and GNS value\n                const parameters = Object.keys(args).map((key) => {\n                    const value = (args as any)[key];\n                    return {\n                        name: key,\n                        value: {\n                            stringValue: value\n                        }\n                    };\n                });\n\n                const glueAction: GnsNotificationActionSettings = {\n                    name: this.methodNameRoot + \"_\" + index,\n                    description: action.title,\n                    displayName: action.title,\n                    parameters\n                };\n\n                notification.actions.push(glueAction);\n                index++;\n            }\n        }\n\n        if (options.icon) {\n            notification.attributes = notification.attributes || [];\n            notification.attributes.push(\n                { key: \"icon\", value: { stringValue: options.icon } }\n            );\n        }\n\n        if (options.data) {\n            notification.attributes = notification.attributes || [];\n            const dataAsString = JSON.stringify(options.data);\n            notification.attributes.push(\n                { key: \"data\", value: { stringValue: dataAsString } }\n            );\n        }\n\n        await this.interop.invoke(\"T42.GNS.Publish.RaiseNotification\", { notification });\n\n        const g42notification = new Glue42Notification(options);\n        this.notifications[id] = g42notification;\n        return g42notification;\n    }\n\n    public async setFilter(filter: Glue42.Notifications.NotificationFilter): Promise<Glue42.Notifications.NotificationFilter> {\n        const result = await this.interop.invoke(\"T42.Notifications.Filter\", filter);\n        return result.returned;\n    }\n\n    public async getFilter(): Promise<Glue42.Notifications.NotificationFilter> {\n        const result = await this.interop.invoke(\"T42.Notifications.Filter\");\n        return result.returned;\n    }\n\n    private handleNotificationAction(args: any) {\n        if (args.g42notificationId) {\n            // action click\n            const payload: GnsNotificationActionPayload = args as GnsNotificationActionPayload;\n            const id = payload.g42notificationId;\n            const notification = this.notifications[id];\n            if (!notification) {\n                return;\n            }\n\n            // user event\n            const event = new Event(\"onaction\");\n            (event as Glue42.Notifications.ActionEvent).action = payload.g42action;\n            if (notification.onaction) {\n                notification.onaction(event as Glue42.Notifications.ActionEvent);\n            }\n\n            // interop\n            const actionDefinition = (notification.actions || []).find((item) => item.action === payload.g42action);\n            const actionInterop = actionDefinition.interop;\n            if (actionInterop) {\n                this.interop.invoke(actionInterop.method, actionInterop.arguments || {}, actionInterop.target || \"best\");\n            }\n\n            // dispatch\n            notification.dispatchEvent(event);\n        } else if (args.notification && args.notification.sourceNotificationId) {\n            // notification click\n            const id = args.notification.sourceNotificationId;\n            const notification = this.notifications[id];\n            if (!notification) {\n                return;\n            }\n\n            // user event\n            const event = new Event(\"onclick\");\n            if (notification.onclick) {\n                notification.onclick(event);\n            }\n\n            // interop call\n            const clickInterop = notification.options.clickInterop;\n            if (clickInterop) {\n                this.interop.invoke(clickInterop.method, clickInterop.arguments || {}, clickInterop.target || \"best\");\n            }\n\n            // dispatch\n            notification.dispatchEvent(event);\n        }\n    }\n}\n","import CallbackRegistryFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\nimport { Glue42 } from \"../../glue\";\r\nimport { Glue42Core } from \"@glue42/core\";\r\n\r\nconst ThemesConfigurationMethodName = \"T42.Themes.Configuration\";\r\ninterface ThemesConfiguration {\r\n    setThemesMethodName: string;\r\n    getThemesMethodName: string;\r\n    sharedContextName: string;\r\n    getThemesConfigurationMethodName: string;\r\n}\r\ninterface GetResult {\r\n    all: Glue42.Themes.Theme[];\r\n    selected: string;\r\n}\r\nexport class ThemesImpl implements Glue42.Themes.API {\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private sharedContextName: string;\r\n    private getMethodName: string;\r\n    private setMethodName: string;\r\n    private isSubscribed = false;\r\n\r\n    constructor(private core: Glue42Core.GlueCore) {\r\n        this.getConfiguration();\r\n    }\r\n\r\n    public async list(): Promise<Glue42.Themes.Theme[]> {\r\n        await this.getConfiguration();\r\n        if (!this.getMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n        return (await this.getAll()).returned.all;\r\n    }\r\n\r\n    public async getCurrent(): Promise<Glue42.Themes.Theme> {\r\n        await this.getConfiguration();\r\n        if (!this.getMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n        const all = await this.getAll();\r\n        return all.returned.all.find((t) => t.name === all.returned.selected);\r\n    }\r\n\r\n    public async select(theme: string): Promise<void> {\r\n        await this.getConfiguration();\r\n        if (!this.setMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n\r\n        await this.core.interop.invoke(this.setMethodName, { theme });\r\n    }\r\n\r\n    public onChanged(callback: (theme: Glue42.Themes.Theme) => any): UnsubscribeFunction {\r\n        this.subscribe();\r\n        return this.registry.add(\"changed\", callback);\r\n    }\r\n\r\n    private async getConfiguration() {\r\n        try {\r\n            if (this.sharedContextName) {\r\n                return;\r\n            }\r\n            const config = await this.core.interop.invoke<ThemesConfiguration>(ThemesConfigurationMethodName);\r\n            this.sharedContextName = config.returned.sharedContextName;\r\n            this.getMethodName = config.returned.getThemesMethodName;\r\n            this.setMethodName = config.returned.setThemesMethodName;\r\n        } catch (error) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async getAll() {\r\n        await this.getConfiguration();\r\n        return await this.core.interop.invoke<GetResult>(this.getMethodName);\r\n    }\r\n\r\n    private async subscribe() {\r\n        await this.getConfiguration();\r\n        if (this.isSubscribed) {\r\n            return;\r\n        }\r\n        this.isSubscribed = true;\r\n        this.core.contexts.subscribe(this.sharedContextName, (data: { all: Glue42.Themes.Theme[], selected: string }) => {\r\n            if (data && data.all && data.selected) {\r\n                this.registry.execute(\"changed\", data.all.find((t) => t.name === data.selected));\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Glue42 } from \"../../glue\";\nimport { AppDefinition, GetWindowsInfoResult, GetWindowsInfoResultItem, IntentInfo } from \"./types\";\n\nconst GLUE42_FDC3_INTENTS_METHOD_PREFIX = \"Tick42.FDC3.Intents.\";\n\nexport class Intents implements Glue42.Intents.API {\n    constructor(private interop: Glue42.Interop.API, private windows: Glue42.Windows.API, private logger: Glue42.Logger.API) {\n    }\n\n    public async find(intentFilter?: string | Glue42.Intents.IntentFilter): Promise<Glue42.Intents.Intent[]> {\n        let intents = await this.all();\n        if (typeof intentFilter === \"undefined\") {\n            return intents;\n        }\n\n        if (typeof intentFilter === \"string\") {\n            return intents.filter((intent) => intent.name === intentFilter);\n        }\n\n        if (typeof intentFilter !== \"object\") {\n            throw new Error(\"Please provide the intentFilter as a string or an object!\");\n        }\n\n        if (intentFilter.contextType) {\n            const ctToLower = intentFilter.contextType.toLowerCase();\n            intents = intents.filter((intent) => intent.handlers.some((handler) => handler.contextTypes?.some((ct) => ct.toLowerCase() === ctToLower)));\n        }\n\n        if (intentFilter.name) {\n            intents = intents.filter((intent) => intent.name === intentFilter.name);\n        }\n\n        return intents;\n    }\n\n    public async raise(intent: string | Glue42.Intents.IntentRequest): Promise<Glue42.Intents.IntentResult> {\n        if ((typeof intent !== \"string\" && typeof intent !== \"object\") || (typeof intent === \"object\" && typeof intent.intent !== \"string\")) {\n            throw new Error(\"Please provide the intent as a string or an object with an intent property!\");\n        }\n\n        if (typeof intent === \"string\") {\n            intent = {\n                intent\n            };\n        }\n\n        const intentName = intent.intent;\n        const intentDef = await this.get(intentName);\n\n        if (typeof intentDef === \"undefined\") {\n            throw new Error(`Intent ${intentName} not found.`);\n        }\n\n        const isDynamicIntent = !intentDef.handlers.some((intentDefHandler) => intentDefHandler.type === \"app\");\n\n        // Default to \"reuse\" in the case of a dynamic intent and to \"startNew\" if target isn't provided.\n        const target = intent.target || (isDynamicIntent ? \"reuse\" : \"startNew\");\n        // The handler that will execute the intent.\n        let handler: Glue42.Intents.IntentHandler;\n        const anAppHandler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"app\");\n        if (target === \"startNew\") {\n            handler = anAppHandler;\n        } else if (target === \"reuse\") {\n            const anInstanceHandler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"instance\");\n            handler = anInstanceHandler || anAppHandler;\n        } else if (target.instance) {\n            handler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"instance\" && intentHandler.instanceId === target.instance);\n        } else if (target.app) {\n            handler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"app\" && intentHandler.applicationName === target.app);\n        } else {\n            throw new Error(`Invalid intent target: ${JSON.stringify(target)}`);\n        }\n\n        if (!handler) {\n            throw new Error(`Can not raise intent for request ${JSON.stringify(intent)} - can not find intent handler.`);\n        }\n\n        let instanceId = handler.instanceId;\n        if (handler.type === \"app\") {\n            instanceId = await this.startApp(handler.applicationName, intent.options);\n        }\n\n        const result: Partial<Glue42.Intents.IntentResult> = await this.raiseIntentToInstance(instanceId, intentName, intent.context);\n        result.request = intent;\n        result.handler = handler;\n\n        return result as Glue42.Intents.IntentResult;\n    }\n\n    public async all(): Promise<Glue42.Intents.Intent[]> {\n        // Gathers all intents from:\n        // 1. Application definitions\n        // 2. Running instances (application can register dynamic intents by calling `addIntentListener()` that aren't predefined inside of their application definitions)\n        // It also populates intent handlers (actual entities that can handle the intent).\n        let apps: AppDefinition[];\n        try {\n            const result = await this.interop.invoke<{ applications: AppDefinition[] }>(\"T42.ACS.GetApplications\", { withIntentsInfo: true });\n            apps = result.returned.applications;\n        } catch (e) {\n            this.logger.error(`Failed to get the applications!`, e);\n            return [];\n        }\n        const intents: { [key: string]: Glue42.Intents.Intent } = {};\n        const appsWithIntents = apps.filter((app) => app.intents && app.intents.length > 0);\n        //  Gather app handlers from application definitions.\n        for (const app of appsWithIntents) {\n            for (const intentDef of app.intents) {\n                let intent = intents[intentDef.name];\n                if (!intent) {\n                    intent = {\n                        name: intentDef.name,\n                        handlers: [],\n                    };\n                    intents[intentDef.name] = intent;\n                }\n\n                const handler: Glue42.Intents.IntentHandler = {\n                    applicationName: app.name,\n                    applicationTitle: app.title || \"\",\n                    applicationDescription: app.caption,\n                    displayName: intentDef.displayName,\n                    contextTypes: intentDef.contexts,\n                    applicationIcon: app.icon,\n                    type: \"app\"\n                };\n\n                intent.handlers.push(handler);\n            }\n        }\n\n        const servers = this.interop.servers();\n        const serverWindowIds = servers.map((server) => server.windowId).filter((serverWindowId) => typeof serverWindowId !== \"undefined\");\n\n        const T42WndGetInfo = \"T42.Wnd.GetInfo\";\n        const isT42WndGetInfoMethodRegistered = this.interop.methods().some((method) => method.name === T42WndGetInfo);\n\n        let windowsInfos: GetWindowsInfoResultItem[];\n        // For backwards compatibility with previous versions of Glue Desktop, the windows' titles will be attempted to be obtained using the Windows API.\n        if (isT42WndGetInfoMethodRegistered) {\n            try {\n                const result = await this.interop.invoke<GetWindowsInfoResult>(T42WndGetInfo, { ids: serverWindowIds });\n                windowsInfos = result.returned.windows;\n            } catch (e) {\n                // Swallow the error. The windows' titles will be attempted to be obtained using the Windows API.\n            }\n        }\n\n        // Discover all running instances that provide intents, and add them to the corresponding intent.\n        for (const server of servers) {\n            await Promise.all(server.getMethods()\n                .filter((method) => method.name.startsWith(GLUE42_FDC3_INTENTS_METHOD_PREFIX))\n                .map(async (method) => {\n                    const intentName = method.name.replace(GLUE42_FDC3_INTENTS_METHOD_PREFIX, \"\");\n                    let intent = intents[intentName];\n                    if (!intent) {\n                        intent = {\n                            name: intentName,\n                            handlers: [],\n                        };\n                        intents[intentName] = intent;\n                    }\n                    const info = method.flags.intent as Omit<Glue42.Intents.AddIntentListenerRequest, \"intent\">;\n\n                    const app = apps.find((appWithIntents) => appWithIntents.name === server.application);\n                    let appIntent: IntentInfo | undefined;\n                    if (app && app.intents) {\n                        appIntent = app.intents.find((appDefIntent) => appDefIntent.name === intentName);\n                    }\n\n                    const title = await this.windowsIdToTitle(server.windowId, windowsInfos);\n                    const handler: Glue42.Intents.IntentHandler = {\n                        instanceId: server.instance,\n                        applicationName: server.application,\n                        applicationIcon: info.icon || app?.icon,\n                        applicationTitle: app?.title || \"\",\n                        applicationDescription: info.description || app?.caption,\n                        displayName: info.displayName || appIntent?.displayName,\n                        contextTypes: info.contextTypes || appIntent?.contexts,\n                        instanceTitle: title,\n                        type: \"instance\"\n                    };\n                    intent.handlers.push(handler);\n                }));\n        }\n\n        return Object.values(intents);\n    }\n\n    public addIntentListener(intent: string | Glue42.Intents.AddIntentListenerRequest, handler: (context: Glue42.Intents.IntentContext) => any): { unsubscribe: () => void } {\n        if ((typeof intent !== \"string\" && typeof intent !== \"object\") || (typeof intent === \"object\" && typeof intent.intent !== \"string\")) {\n            throw new Error(\"Please provide the intent as a string or an object with an intent property!\");\n        }\n        if (typeof handler !== \"function\") {\n            throw new Error(\"Please provide the handler as a function!\");\n        }\n\n        // `addIntentListener()` is sync.\n        // tslint:disable-next-line:no-console\n        const result: { unsubscribe: () => void } = { unsubscribe: () => console.log(\"Could not unsubscribe!\") };\n        const intentName = typeof intent === \"string\" ? intent : intent.intent;\n        const methodName = `${GLUE42_FDC3_INTENTS_METHOD_PREFIX}${intentName}`;\n        let intentFlag: Omit<Glue42.Intents.AddIntentListenerRequest, \"intent\"> = {};\n\n        if (typeof intent === \"object\") {\n            const { intent: removed, ...rest } = intent;\n            intentFlag = rest;\n        }\n\n        this.interop.register({ name: methodName, flags: { intent: intentFlag } }, (args: Glue42.Intents.IntentContext) => {\n            return handler(args);\n        }).then(() => {\n            result.unsubscribe = () => {\n                this.interop.unregister(methodName);\n            };\n        });\n\n        return result;\n    }\n\n    private async get(intent: string): Promise<Glue42.Intents.Intent> {\n        return (await this.all()).find((registeredIntent) => registeredIntent.name === intent);\n    }\n\n    private async startApp(application: string, options?: Glue42.AppManager.ApplicationStartOptions) {\n        const result = await this.interop.invoke<{ Name: string, Id: string }>(\"T42.ACS.StartApplication\", { Name: application, options });\n        return result.returned.Id;\n    }\n\n    private async raiseIntentToInstance(instanceId: string, intent: string, context?: Glue42.Intents.IntentContext): Promise<{ result: any }> {\n        const methodName = `${GLUE42_FDC3_INTENTS_METHOD_PREFIX}${intent}`;\n        let interopServer = this.interop.servers().find((server) => server.instance === instanceId);\n        if (!interopServer) {\n            // Wait 30 sec for the server to appear.\n            await (new Promise((resolve, reject) => {\n                let timeoutId: any;\n\n                const unsub = this.interop.serverAdded((server) => {\n                    if (server.instance === instanceId) {\n                        interopServer = server;\n                        resolve();\n                        clearTimeout(timeoutId);\n                        unsub();\n                    }\n                });\n\n                timeoutId = setTimeout(() => {\n                    unsub();\n                    reject(new Error(`Can not find interop server for instance ${instanceId}`));\n                }, 30 * 1000);\n            }));\n        }\n\n        const method = interopServer.getMethods().find((registeredMethod) => registeredMethod.name === methodName);\n        if (!method) {\n            // Wait 10 sec for the method to appear.\n            await (new Promise((resolve, reject) => {\n                let timeoutId: any;\n\n                const unsub = this.interop.methodAdded((addedMethod) => {\n                    if (addedMethod.name === methodName) {\n                        resolve();\n                        clearTimeout(timeoutId);\n                        unsub();\n                    }\n                });\n\n                timeoutId = setTimeout(() => {\n                    unsub();\n                    reject(new Error(`Can not find interop method ${methodName} for instance ${instanceId}`));\n                }, 10 * 1000);\n            }));\n        }\n\n        const result = await this.interop.invoke(methodName, context, { instance: instanceId });\n\n        return {\n            result: result.returned\n        };\n    }\n\n    private async windowsIdToTitle(id: string, windowsInfos?: GetWindowsInfoResultItem[]): Promise<string> {\n        if (typeof windowsInfos !== \"undefined\") {\n            return windowsInfos.find((windowsInfo) => windowsInfo.id === id)?.title;\n        }\n\n        // The Windows API could be undefined e.g. when running inside of a node environment.\n        const window = this.windows?.findById(id);\n        const title = await window?.getTitle();\n        return title;\n    }\n}\n","import { Glue42 } from \"../glue\";\n\nexport class InitInfo {\n\n    public reject: (reason?: any) => void;\n    public resolve: (value: Glue42.Glue | PromiseLike<Glue42.Glue>) => void;\n    public numberOfCalls: number = 0;\n\n    private promise: Promise<Glue42.Glue>;\n\n    constructor() {\n        this.numberOfCalls = 1;\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n\n    public getPromise() {\n        this.numberOfCalls++;\n        return this.promise;\n    }\n\n    public done(g: Glue42.Glue) {\n        this.resolve(g);\n    }\n\n    public error(e: Error) {\n        this.reject(e);\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { isFunction, isObject, isString } from \"../activity/helpers/util\";\n\nexport interface AppPreferences {\n    app: string;\n    data: any;\n    lastUpdate: Date;\n}\n\nexport class Prefs {\n\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n    private interopMethodRegistered = false;\n\n    constructor(private appName: string, private interop: Glue42.Interop.API) {\n    }\n\n    public async get(app?: string): Promise<AppPreferences | undefined> {\n        const data = (await this.interop.invoke(\"T42.Prefs.Get\", { app: app ?? this.appName }));\n        return data.returned;\n    }\n\n    public async set(data: any, options?: { app: string }): Promise<void> {\n        this.verifyDataObject(data);\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: options?.app ?? this.appName, data, merge: false });\n    }\n\n    public async setFor(app: string, data: any): Promise<void> {\n        this.verifyApp(app);\n        this.verifyDataObject(data);\n        return this.set(data, { app });\n    }\n\n    public async update(data: any, options?: { app: string }) {\n        this.verifyDataObject(data);\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: options?.app ?? this.appName, data, merge: true });\n    }\n\n    public async updateFor(app: string, data: any) {\n        this.verifyApp(app);\n        this.verifyDataObject(data);\n        return this.update(data, { app });\n    }\n\n    public async clear(app?: string) {\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: app ?? this.appName, clear: true });\n    }\n\n    public async clearFor(app: string) {\n        this.verifyApp(app);\n        await this.interop.invoke(\"T42.Prefs.Set\", { app, clear: true });\n    }\n\n    public async getAll(): Promise<AppPreferences[]> {\n        const data = (await this.interop.invoke(\"T42.Prefs.Get\"));\n        return data.returned;\n    }\n\n    public async clearAll() {\n        await this.interop.invoke(\"T42.Prefs.Set\", { clear: true });\n    }\n\n    public subscribe(callback: (prefs: AppPreferences) => void): () => void {\n        this.verifyCallback(callback);\n        return this.subscribeFor(this.appName, callback);\n    }\n\n    public subscribeFor(app: string, callback: (prefs: AppPreferences) => void): () => void {\n        this.verifyApp(app);\n        this.verifyCallback(callback);\n        const unsubscribeFn = this.registry.add(app, callback);\n\n        // register the method if needed and then send the subscription request\n        this.registerInteropIfNeeded()\n            .then(() => {\n                this.interop.invoke(\"T42.Prefs.Get\", { app, subscribe: true });\n            });\n\n        return () => {\n            unsubscribeFn();\n        };\n    }\n\n    private async registerInteropIfNeeded() {\n        if (this.interopMethodRegistered) {\n            return;\n        }\n        this.interopMethodRegistered = true;\n\n        await this.interop.register(\"T42.Prefs.Update\", (args) => {\n            this.registry.execute(args.app, args);\n        });\n    }\n\n    private verifyApp(app: string) {\n        if (!app) {\n            throw new Error(`app should be defined`);\n        }\n        if (!isString(app)) {\n            throw new Error(`app should be a string`);\n        }\n    }\n    private verifyDataObject(data: any) {\n        if (!data) {\n            throw new Error(`data should be defined`);\n        }\n        if (!isObject(data)) {\n            throw new Error(`data should be an object`);\n        }\n    }\n\n    private verifyCallback(callback: any) {\n        if (!isFunction(callback)) {\n            throw new Error(`callback should be defined`);\n        }\n    }\n}\n","import CoreFactory, { Glue42Core } from \"@glue42/core\";\nimport { ActivityModule } from \"./activity/main\";\nimport AppManagerFactory from \"./app-manager/main\";\nimport WindowsFactory from \"./windows/main\";\nimport LayoutsFactory from \"./layouts/main\";\nimport DisplayManager from \"./displays/displayManager\";\nimport { factory as channels } from \"./channels/main\";\nimport { factory as hotkeys } from \"./hotkeys/main\";\n\nimport { Glue42 } from \"../glue\";\nimport { version } from \"../package.json\";\nimport prepareConfig from \"./config\";\nimport { LibConfigObject } from \"./types\";\nimport { ActivityMode } from \"./activity/activityConfig\";\nimport Utils from \"./utils\";\nimport { Notifications } from \"./notifications/main\";\nimport { factory as themes } from \"./themes/main\";\nimport { Intents } from \"./intents/intents\";\nimport { InitInfo } from \"./initInfo\";\nimport { Prefs } from \"./prefs/index\";\n\nlet initInfo: InitInfo;\nconst factory = async (options: Glue42.Config): Promise<Glue42.Glue> => {\n    // if running in GD, do not allow creating multiple instance of this API in the same page\n    const glue42gd: Glue42.GDObject = typeof window !== \"undefined\" && window.glue42gd;\n    if (glue42gd) {\n        if (initInfo) {\n            return initInfo.getPromise();\n        } else {\n            initInfo = new InitInfo();\n        }\n    }\n    const g = await factoryCore(options, glue42gd);\n    initInfo?.resolve(g);\n    return g;\n};\n\nconst factoryCore = async (options: Glue42.Config, glue42gd: Glue42.GDObject): Promise<Glue42.Glue> => {\n\n    const gdMajorVersion = Utils.getGDMajorVersion();\n    // get config object\n    // basically selecting some properties (and defaulting them)\n    // it's used to extract things like layouts, appManager, activities etc things\n    // that glueCore itself doesn't know about\n    options = options || {};\n    const glueConfig = prepareConfig(options);\n    options.gateway = options.gateway || {};\n\n    let _appManager: any;\n    let _activity: any;\n    let _windows: any;\n    let _displays: any;\n\n    // dependency graph:\n    //   windows: agm, appManager (via getter)\n    //   activities: contexts, agm, logger, windows, appManager (via getter)\n    //   appManager: agm, windows, logger, activities\n    //   layouts: agm, appManager, logger\n    function createWindows(core: Glue42Core.GlueCore) {\n        if (glueConfig.windows) {\n\n            const windowsLogger = getLibLogger(\"windows\", core.logger, glueConfig.windows);\n\n            _windows = WindowsFactory(\n                core.agm,\n                windowsLogger,\n                () => {\n                    return _appManager;\n                },\n                () => {\n                    return _displays;\n                },\n                gdMajorVersion);\n            debugLog(_windows);\n            return _windows;\n        }\n    }\n\n    function createActivities(core: Glue42Core.GlueCore) {\n        if (glueConfig.activities) {\n            if (ActivityModule.checkIsUsingGW3Implementation && ActivityModule.checkIsUsingGW3Implementation(core.connection)) {\n\n                const activityLogger = getLibLogger(\"activity\", core.logger, glueConfig.activities);\n\n                _activity = new ActivityModule({\n                    connection: core.connection,\n                    contexts: core.contexts,\n                    agm: core.agm,\n                    logger: activityLogger,\n                    logLevel: \"info\",\n                    disableAutoAnnounce: false,\n                    disposeRequestHandling: \"exit\",\n                    announcementInfo: null,\n                    windows: _windows,\n                    appManagerGetter: () => {\n                        return _appManager;\n                    },\n                    mode: glueConfig.activities.mode as ActivityMode,\n                    typesToTrack: glueConfig.activities.typesToTrack,\n                    activityId: glue42gd?.activityInfo?.activityId,\n                    gdMajorVersion\n                }).api;\n                debugLog(_activity);\n                return _activity;\n            }\n        }\n    }\n\n    function createAppManager(core: Glue42Core.GlueCore) {\n        if (!glueConfig.appManager) {\n            return;\n        }\n\n        const logger = getLibLogger(\"appManager\", core.logger, glueConfig.appManager);\n\n        // AppManager v3\n        _appManager = AppManagerFactory({\n            agm: core.agm,\n            windows: _windows,\n            logger,\n            activities: _activity,\n            mode: glueConfig.appManager.mode,\n            gdMajorVersion\n        });\n        debugLog(_appManager);\n        return _appManager;\n    }\n\n    function createLayouts(core: Glue42Core.GlueCore) {\n        if (!glueConfig.layouts) {\n            return;\n        }\n\n        const logger = getLibLogger(\"layouts\", core.logger, glueConfig.layouts);\n        const layoutsConfig = glueConfig.layouts;\n        const lay = LayoutsFactory({\n            agm: core.agm,\n            appManager: _appManager,\n            activityGetter: () => _activity,\n            logger,\n            mode: layoutsConfig.mode,\n            autoSaveWindowContext: layoutsConfig.autoSaveWindowContext ?? false,\n            gdMajorVersion\n        });\n        debugLog(lay);\n        return lay;\n    }\n\n    function createChannels(core: Glue42Core.GlueCore) {\n        if (!glueConfig.channels) {\n            return;\n        }\n\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use channels without context\n            return;\n        }\n\n        // Logger\n        const logger = getLibLogger(\"channels\", core.logger, glueConfig.channels);\n\n        const channelsAPI = channels(core.contexts, core.agm, () => _windows, logger);\n\n        debugLog(channelsAPI);\n        return channelsAPI;\n    }\n\n    function createHotkeys(core: Glue42Core.GlueCore) {\n        const hotkeysAPI = hotkeys(core.agm);\n\n        debugLog(hotkeysAPI);\n        return hotkeysAPI;\n    }\n\n    function createIntents(core: Glue42Core.GlueCore) {\n        const intentsAPI = new Intents(core.agm, _windows, core.logger.subLogger(\"intents\"));\n\n        debugLog(intentsAPI);\n        return intentsAPI;\n    }\n\n    function createNotifications(core: Glue42Core.GlueCore) {\n        const notificationsAPI = new Notifications(core.interop);\n\n        debugLog(notificationsAPI);\n        return notificationsAPI;\n    }\n\n    function createDisplaysApi(core: Glue42Core.GlueCore) {\n        if (glueConfig.displays) {\n            const displaysLogger = getLibLogger(\"displays\", core.logger, glueConfig.displays);\n\n            _displays = new DisplayManager(core.agm, displaysLogger);\n            debugLog(_displays);\n            return _displays;\n        }\n    }\n\n    function createThemes(core: Glue42Core.GlueCore) {\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use themes without context\n            return;\n        }\n        const themesAPI = themes(core);\n\n        debugLog(themesAPI);\n        return themesAPI;\n    }\n\n    function createPrefs(core: Glue42Core.GlueCore) {\n        const appName = options.application ?? glue42gd?.application ?? core.interop.instance.application;\n        const prefs = new Prefs(appName, core.interop);\n\n        debugLog(prefs);\n        return prefs;\n    }\n\n    function getLibLogger(loggerName: string, logger: Glue42Core.Logger.API, config: LibConfigObject<string>) {\n        const newLogger = logger.subLogger(loggerName);\n\n        if (config && config.logger) {\n            const loggerConfig = config.logger;\n            if (loggerConfig.console) {\n                newLogger.consoleLevel(loggerConfig.console);\n            }\n            if (loggerConfig.publish) {\n                newLogger.publishLevel(loggerConfig.publish);\n            }\n            // not supported in GD3\n            // if (loggerConfig.metrics) {\n            //  newLogger.metricsLevel(loggerConfig.metrics);\n            // }\n        }\n\n        return newLogger;\n    }\n\n    const ext: Glue42Core.Extension = {\n        // define extra libraries for glue-core to raise\n        libs: [\n            { name: \"windows\", create: createWindows },\n            { name: \"activities\", create: createActivities },\n            { name: \"appManager\", create: createAppManager },\n            { name: \"layouts\", create: createLayouts },\n            { name: \"channels\", create: createChannels },\n            { name: \"hotkeys\", create: createHotkeys },\n            { name: \"displays\", create: createDisplaysApi },\n            { name: \"intents\", create: createIntents },\n            { name: \"notifications\", create: createNotifications },\n            { name: \"themes\", create: createThemes },\n            { name: \"prefs\", create: createPrefs }\n        ],\n\n        version,\n\n        enrichGlue: (glue: Glue42Core.GlueCore) => {\n            // put some data to config\n            glue.config.activities = glueConfig.activities;\n            glue.config.windows = glueConfig.windows;\n            glue.config.appManager = glueConfig.appManager;\n            glue.config.layouts = glueConfig.layouts;\n            glue.config.channels = glueConfig.channels;\n            glue.config.displays = glueConfig.displays;\n        },\n    };\n\n    const currentLog: any[] = [];\n    if (typeof window !== \"undefined\") {\n        if (!(window as any).glueFactoryLog) {\n            (window as any).glueFactoryLog = [];\n        }\n        (window as any).glueFactoryLog.push(currentLog);\n    }\n\n    function debugLog(entry: any) {\n        currentLog.push(entry);\n    }\n\n    const glueApi = (await CoreFactory(options, ext)) as Glue42.Glue;\n\n    // Decorate the ready glue object with extra functionalities coming from the user-defined libraries.\n    if (Array.isArray(options?.libraries) && options.libraries.length) {\n        await Promise.all(options.libraries.map((lib) => lib(glueApi, options)));\n    }\n\n    return glueApi;\n};\n\nfactory.coreVersion = (CoreFactory as any).version;\nfactory.version = version;\nfactory.initInfo = initInfo;\n\nexport default factory;\n","import { Glue42 } from \"../../glue\";\nimport { HotkeysImpl } from \"./hotkeys\";\n\nexport function factory(agm: Glue42.AGM.API): Glue42.Hotkeys.API & { ready: () => Promise<void>; } {\n    const hotkeys = new HotkeysImpl(agm);\n\n    return {\n        register: hotkeys.register.bind(hotkeys),\n        unregister: hotkeys.unregister.bind(hotkeys),\n        unregisterAll: hotkeys.unregisterAll.bind(hotkeys),\n        isRegistered: hotkeys.isRegistered.bind(hotkeys),\n\n        ready: () => Promise.resolve()\n    };\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { ThemesImpl } from \"./themes\";\r\nimport { Glue42Core } from \"@glue42/core\";\r\n\r\nexport function factory(core: Glue42Core.GlueCore): Glue42.Themes.API & { ready: () => Promise<void>; } {\r\n    const themes = new ThemesImpl(core);\r\n\r\n    return {\r\n        list: themes.list.bind(themes),\r\n        getCurrent: themes.getCurrent.bind(themes),\r\n        select: themes.select.bind(themes),\r\n        onChanged: themes.onChanged.bind(themes),\r\n        ready: () => Promise.resolve(),\r\n    };\r\n}\r\n","import CreateGlue from \"./glue\";\n\nlet whatToExpose = CreateGlue;\nlet shouldSetToWindow = true;\n\nif (typeof window !== \"undefined\") {\n    // if glue42gd (running in GD3) and autoInjected\n    const glue42gd = (window as any).glue42gd;\n    if (glue42gd && glue42gd.autoInjected) {\n        whatToExpose = (window as any).Glue;\n        // no need to set to window, it's already there\n        shouldSetToWindow = false;\n    }\n\n    if (shouldSetToWindow) {\n        (window as any).Glue = whatToExpose;\n    }\n\n    // remove GlueCore from the window object (injected by Glue-core)\n    delete (window as any).GlueCore;\n}\n// add default library for ES6 modules\n(whatToExpose as any).default = whatToExpose;\n\nexport default whatToExpose;\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__spreadArrays","il","r","k","a","j","jl","MetricTypes","getMetricTypeByValue","metric","type","getTypeByValue","Date","serializeMetric","serializedMetrics","values","keys","reduce","memo","key","innerType","composite","defineNestedComposite","description","context","name","normalizeMetricName","path","join","getMetricValueByType","now","publishNestedComposite","getTime","Boolean","toString","flatten","arr","flat","toFlatten","concat","isArray","composeMsgForRootStateMetric","system","merged","root","getAggregateState","highestState","sort","state","aggregateDesc","msg","forEach","m","idx","slice","aggregateDescription","Helpers","definition","parent","transport","Error","BaseMetric","createMetric","defineProperty","get","_a","repo","enumerable","configurable","update","newValue","updateMetric","NumberMetric","_super","incrementBy","num","increment","decrement","decrementBy","ObjectMetric","mergeValues","_this","StringMetric","TimestampMetric","protocol","separator","_transport","_name","_description","_repo","_parent","_path","_buildPath","shadowedSystem","_state","id","_subSystems","_metrics","_getOrCreateMetric","metricObject","expectedType","metricDef","matching","filter","shadowedMetric","existing","catch","me","subSystems","metrics","subSystem","nameSystem","descriptionSystem","match","_system","getState","setState","stateDescription","updateSystem","stringMetric","timestampMetric","objectMetric","numberMetric","aggState","shadowedSubSystem","createSystem","Repository","options","init","addSystemMetrics","clickStream","undefined","rootSystem","useClickStream","navigator","userAgent","document","clickStream_1","documentClickHandler","target","className","getAttribute","timestamp","tagName","toLowerCase","href","title","page","window","location","addEventListener","attachEvent","urlMetric","appNameMetric","startUrl","glue42gd","appName","NullProtocol","PerfTracker","api","initialPublishTimeout","publishInterval","lastCount","scheduleCollection","setTimeout","collect","setInterval","collectMemory","collectEntries","memory","performance","JSON","stringify","totalJSHeapSize","usedJSHeapSize","allEntries","getEntries","jsonfiedEntries","map","toJSON","connection","config","joinPromise","session","replayRepo","replaySystem","ss","createMetricsMsg","Description","Value","send","metricClone","cloneMetric","updateMetricCore","canUpdate","publishMetricsMsg","sendFireAndForget","canUpdateMetric","_b","resolveReadyPromise","domain","onJoined","reconnect","defineRootMetricsMsg","service","instance","shadowedUpdateMetric","stateObj","rootMetric","peer_id","peerId","gw3","disableAutoAppSystem","featureMetric","reportingSystem","def","featureMetricFunc","action","payload","addFAVSupport","perfConfig","pagePerformanceMetrics","enabled","initPerf","createRegistry","errorHandling","_userErrorHandler","callbacks","_handleError","exceptionArtifact","errParam","stack","console","error","add","callback","replayArgumentsArr","callbacksForKey","replayArgument","includes","err","allForKey","acc","element","index","execute","argumentsArr","_i","results","clear","clearKey","default","lib","InProcTransport","settings","logger","registry","gw","facade","connect","_client","message","messageHandler","client","sendObject","_msg","onMessage","onConnectedChanged","close","open","SharedWorkerTransport","workerFile","worker","SharedWorker","port","onmessage","data","postMessage","Utils","getGDMajorVersion","glueDesktop","version","ver","Number","substr","isNaN","isNode","_isNode","global","process","PromiseWrapper","resolved","promise","delay","time","timers","timer","timerName","marks","endTime","period","startTime","mark","currentTime","diff","timerObj","stop","WebSocketConstructor","WebSocket","WS","startupTimer","_running","_registry","wsRequests","ws","waitForSocketConnection","info","pw","failed","readyState","openSocket","retryInterval","retriesLeft","reconnectInterval","notifyForSocketState","debug","initiateSocket","retries","onerror","reason","seen_1","WeakSet","has","notifyStatusChanged","onclose","onopen","identity","application","wsRequest","status","seed","alphabet","previousSeed","shuffled","randomFromSeed","nextValue","_seed_","ORIGINAL","reset","setCharacters","_alphabet_","unique","split","item","ind","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","Math","floor","splice","shuffle","alphabet_1","characters","lookup","crypto","msCrypto","randomByteBrowser","getRandomValues","random","dest","Uint8Array","encode_1","number","loopCounter","str","pow","decode_1","indexOf","isValid","len","lib$1","fn","module","exports","createCommonjsModule","counter","previousSeconds","clusterWorkerId","generate","seconds","seedValue","workerId","newCharacters","decode","shortid","domainSession","successMessages","errorMessages","_latestOptions","isJoined","tryReconnecting","_connectionOn","disconnected","loggedIn","on","handleSuccessMessage","handleErrorMessage","sm","requestsMap","destination","wasReconnect","handleJoined","requestId","request_id","entry","success","getNextRequestId","tag","skipPeerId","successMsg","_tag","errorMsg","warn","leave","onLeft","connected","GW3ProtocolImpl","protocolVersion","datePrefix","datePrefixLen","dateMinLen","datePrefixFirstChar","_isLoggedIn","shouldTryLogin","initialLogin","initialLoginAttempts","sessions","handleDisconnected","ping","processStringMessage","parse","substring","milliseconds","parseInt","ex","msgType","createStringMessage","oldToJson","datePrefix_1","processObjectMessage","createObjectMessage","login","authentication","e_1","helloMsg","sendOptions","welcomeMsg","token","err_1","_c","loginConfig","username","password","gatewayToken","getNewGWToken","method","flowName","provider","flowCallback","sessionId","secret","globalDomain","subLogger","maxRetries","reconnectAttempts","Buffer","from","resolvedIdentity","resolved_identity","availableDomains","available_domains","access_token","setLoggedIn","logout","promises","pingTimer","clearTimeout","all","domainName","domainLogger","bind","authToken","res","getGWToken","MessageReplayerImpl","specs","specsNames","messages","subs","subsRefCount","specs_1","spec","name_1","_loop_1","refCount","this_1","sub","processMessage","types","isDone","name_2","drain","off","PromisePlus","executor","timeoutMilliseconds","timeoutMessage","timeout","WebPlatformTransport","parentReady","iAmConnected","children","extContentAvailable","extContentConnecting","extContentConnected","parentInExtMode","parentPingTimeout","connectionRequestTimeout","defaultTargetString","connectionAccepted","handle","handleConnectionAccepted","connectionRejected","handleConnectionRejected","connectionRequest","handleConnectionRequest","handleParentReady","parentPing","handleParentPing","platformPing","handlePlatformPing","platformUnload","handlePlatformUnload","platformReady","handlePlatformReady","clientUnload","handleClientUnload","manualUnload","handleManualUnload","extConnectionResponse","handleExtConnectionResponse","extSetupRequest","handleExtSetupRequest","glue42ext","setUpMessageListener","setUpUnload","opener","top","parentType","publicWindowId","glue42ExtOut","windowId","event","waitParent","requestConnectionPermissionFromExt","initiateRemoteConnection","connectionResolve","connectionReject","myClientId","bridgeInstanceId","request","glue42core","clientId","clientType","parentWindowId","connectionNotPossibleMsg","parentCheck","isIframe","self","parentPingResolve","checkMessageTypeValid","messageType","ownWindowId","extMode","handleAcceptanceOfMyRequest","handleAcceptanceOfGrandChildRequest","processExtContentConnection","applicationName","extData","glue42ExtInc","child","find","c","grandChildId","source","origin","rejectConnectionRequest","typeToValidate","rejection","waitForContentScript","extConnectionResolve","extConnectionReject","approved","content","Connection","messageHandlers","ids","_connected","isTrace","inproc","sharedWorker","webPlatform","canPublish","handleConnectionChanged","handleTransportMessage","replaySpecs","replayer","isObjectBasedTransport","trace","strMessage","isLoggedIn","authRequest","distributeMessage","handlers","handlerId","handler","loggerError","log","msgObj","order","Logger","logFn","subLoggers","customLogFn","loggerFullName","includeTimeAndLevel","existingSub","publishLevel","level","_publishLevel","consoleLevel","_consoleLevel","publishMessage","compareWith","loggerName","interop","Interop","methods","InteropMethodName","invoke","prefix","date","getHours","getMinutes","getSeconds","getMilliseconds","toPrint","GW_MESSAGE_CREATE_CONTEXT","GW_MESSAGE_ACTIVITY_CREATED","GW_MESSAGE_ACTIVITY_DESTROYED","GW_MESSAGE_CONTEXT_CREATED","GW_MESSAGE_CONTEXT_ADDED","GW_MESSAGE_SUBSCRIBE_CONTEXT","GW_MESSAGE_SUBSCRIBED_CONTEXT","GW_MESSAGE_UNSUBSCRIBE_CONTEXT","GW_MESSAGE_DESTROY_CONTEXT","GW_MESSAGE_CONTEXT_DESTROYED","GW_MESSAGE_UPDATE_CONTEXT","GW_MESSAGE_CONTEXT_UPDATED","GW_MESSAGE_JOINED_ACTIVITY","ContextMessageReplaySpec","GW3ContextData","contextId","isAnnounced","activityId","updateCallbacks","hasCallbacks","applyContextDelta","delta","deepClone","commands","command","deletePath","setValueToPath","added_1","added","updated_1","updated","removed","mergeObjectsProperties","obj","hash","WeakMap","Set","RegExp","flags","set","Map","val","what","withWhat","right","left","deepEqual","x","pathArr","isSubset","superObj","subObj","every","ele","InvokeStatus","GW3Bridge","_contextNameToData","_gw3Subscriptions","_nextCallbackSubscriptionNumber","_contextNameToId","_contextIdToName","_protocolVersion","_connection","_logger","_gw3Session","subscribeToContextCreatedMessages","subscribeToContextUpdatedMessages","subscribeToContextDestroyedMessages","handleContextCreatedMessage","handleContextUpdatedMessage","handleContextDestroyedMessage","contextsDomainInfo","uri","dispose","contextName","createContext","lifetime","createContextMsg","context_id","contextData","hasReceivedSnapshot","currentContext","calculatedDelta","calculateContextDeltaV2","calculateContextDeltaV1","gwResponse","handleUpdated","updaterId","setPath","setPathSupported","setPaths","pathValues","pathValues_1","pathValue","pathValues_2","subscribe","_d","_r","un","unsubscribe","thisCallbackSubscriptionNumber","hadCallbacks","clone","joinedActivity","sentExplicitSubscription","sendSubscribe","subscriptionKey","sendUnsubscribe","destroy","extraData","oldContext","invokeUpdateCallbacks","createdMessageTypes_1","createdMessageType","contextCreatedMsg","activity_id","updatedMessageTypes_1","updatedMessageType","contextUpdatedMsg","justSeen","context_snapshot","updater_id","updateCallbackIndex","updateCallback","destroyedMessageTypes_1","destroyedMessageType","destroyedMsg","to","ContextsModule","_bridge","checkName","checkData","checkPath","paths","paths_1","ready","promisify","successCallback","errorCallback","rejectAfter","ms","clearTimeoutIfThere","Client","configuration","callProtocolSubscribe","targetServers","stream","successProxy","errorProxy","methodResponseTimeout","waitTimeoutMs","methodDef","method_response_timeout","wait_for_method_timeout","delayTillNow","currentServers","getServerMethodsByFilterAndTarget","retry_1","streamInfo","servers","methodFilter","filterCopy","getServers","serverMethodMap","server","getMethods","methodsForInstance","getMethodsForInstance","methodAdded","onMethodAdded","methodRemoved","onMethodRemoved","serverAdded","onServerAdded","serverRemoved","onServerRemoved","serverMethodAdded","onServerMethodAdded","serverMethodRemoved","onServerMethodRemoved","argumentObj","additionalOptions","getInvokePromise","methodDefinition","serversMethodMap","errorObj","additionalOptionsCopy","invokePromises","invocationMessages","methodResponseTimeoutMs","tryToAwaitForMethods","supportsStreaming","objectTypes","metadata","called_with","executed_by","returned","serversMethodPair","invId","invokePromise","race","invocationId","getInvocationResultObj","invocationResults","calledWith","all_return_values","invokeMessage","Success","allValues","currentValue","all_errors","allErrors","currError","invResult","interval","clearInterval","filterByTarget","matches","myMatches","serverMethodPair","instanceMatch","localMachine","isLocal","instanceFilter","instanceDefinition","containsProps","methodMatch","repoMethod","prop","isMatch","filterValue","repoMethodValue","filterValueEl","String","matchingServers","resultMethodsObject","methodKey","identifier","prev","current","matchingMethods","ServerSubscription","subscription","branchKey","closeSingleSubscription","pushDataToSingle","Request","requestContext","accept","acceptRequestOnBranch","acceptOnBranch","branch","rejectRequest","ServerStreaming","onSubRequest","rc","rm","handleSubRequest","onSubAdded","handleSubAdded","onSubRemoved","handleSubRemoved","streamCallbacks","subscriptionRequestHandler","subscriptionAddedHandler","subscriptionRemovedHandler","ServerBranch","subscriptions","getSubscriptionList","closeAllSubscriptions","pushData","ServerStream","_protocol","_repoMethod","_server","branches","bList","getBranchList","def2","accepts","displayName","returns","unregister","updateRepoMethod","Server","serverRepository","invocations","currentlyUnregistering","streaming","onInvoked","onMethodInvoked","createStream","streamDef","existingStream","streamMethodDefinition","getList","some","serverMethod","protocolState","streamUserObject","repoId","remove","register","wrappedCallbackFunction","resultCallback","resultValue","args","userCallback","registerCore","registerAsync","wrappedCallback","resultCalled_1","methodResult","userCallbackAsync","forStream","methodToBeRemoved","unregisterWithPredicate","removeMethodsOrStreams","filterPredicate","methodsOrStreamsToRemove","methodsToRemove","methodUnregPromises","addAsCurrentlyUnregistering","methodName","theFunction","unregisterInProgress","methodToExecute","invocationArgs","unStrException","_value","methodInvocationResult","InstanceWrapper","API","wrapped","getStreams","refreshWrappedObject","refresh","unwrap","user","pid","machine","environment","region","hideMethodSystemFlags","ClientRepository","methodsCount","myServer","wrapper","unwrappedInstance","addServer","serverId","serverEntry","removeServerById","methodId","removeServerMethod","addServerMethod","createMethodIdentifier","that","gatewayId","display_name","object_types","input_signature","result_signature","getServersByMethod","clientMethodDefinition","extractMethodsFromServers","hideServerMethodSystemFlags","unsubscribeFunc","serversWithMethodsToReplay","returnUnsubWithDelayedReplay","methodsToReplay","unsubCalled","getServerById","methodInfo","allServers","collectionToReplay","clientMethods","entries","ServerRepository","nextId","getById","SUBSCRIPTION_REQUEST","SUBSCRIPTION_ADDED","SUBSCRIPTION_REMOVED","ServerStreaming$1","repository","ERR_URI_SUBSCRIPTION_FAILED","nextStreamId","handleAddInterest","handleRemoveInterest","streamingMethod","subscriptionsMap","branchKeyToStreamIdMap","streamId","getStreamId","subscription_id","subscribeMsg","stream_id","sendSubscriptionFailed","br","dropSubscriptionMessage","closeMultipleSubscriptions","subscriptionsToClose","drop","allSubscriptions","onSubscriptionLifetimeEvent","method_id","eventName","handlerFunc","getNextStreamId","caller_id","arguments_kv","subscriptionId","errorMessage","reason_uri","needleBranch","ServerProtocol","clientRepository","handleInvokeMessage","isStreaming","registerMsg","restrictions","invocation_id","callerId","UserSubscription","subscriptionData","params","trackedServers","pair","onData","dataCallback","queued","dataItem","onClosed","closedCallback","onFailed","onConnected","setNewSubscription","newSub","STATUS_AWAITING_ACCEPT","STATUS_SUBSCRIBED","ERR_MSG_SUB_FAILED","ON_CLOSE_MSG_CLIENT_INIT","ClientStreaming","subscriptionsList","subscriptionIdToLocalKeyMap","nextSubLocalKey","handleErrorSubscribing","errorResponse","subLocalKey","pendingSub","timeoutId","callArgs","callOnClosedHandlers","handleSubscribed","acceptingServer","isFirstResponse","serverInstance","handleEventData","trackedServersFound","isPrivateData","oob","sendingServerId","receivedStreamData","requestArguments","private","onDataHandlers","queuedData","handleSubscriptionCancelled","expectedNewLength","closers","getNextSubscriptionLocalKey","registerSubscription","server_id","drainSubscriptions","subsInfo","localKey","closeSubscription","closingServer","closersCount","closingServerId","ClientProtocol","handlePeerAdded","handlePeerRemoved","handleMethodsAddedMessage","handleMethodsRemovedMessage","handleResultMessage","handleInvocationError","newPeerId","new_peer_id","remoteId","meta","local","serverInfo","removedPeerId","removed_id","methodIdList","gW3ProtocolFactory","libConfig","readyPromise","existingSubscriptions_1","registeredMethods","registeredMethods_1","handleReconnect","protocolPromise","waitForMethod","MessageBus","publish","topic","routingKey","removeEmptyValues","routing_key","target_identity","response","watchOnEvent","keysMatch","cleaned","obj1","obj2","keysObj1","allMatch","GlueCore","userConfig","ext","gdVersion","preloadPromise","gdPreloadPromise","_interop","_contexts","_bus","_allowTrace","glueInitTimer","internalConfig","_e","nodeStartingContext","startingContextString","env","_GD_STARTING_CONTEXT_","_f","getApplication","glue42electron","uid","applicationConfig","instanceId","gwConfig","gateway","gwURL","uniqueAppName","appInstanceId","getConnection","windowAsAny","containerApplication","htmlContainer","containerName","bus","auth","gwToken","getAuth","gdConsoleLevel","defaultLevel","consoleLogLevel","getLogger","contexts","libs","customLogger","prepareConfig","registerLib","inner","initTime","initEndTime","initStartTime","setupInterop","initTimer","agmConfig","setupContexts","hasActivities","activities","setupBus","setupExternalLibs","externalLibs","createCallback","setupExternalLib","authPromise","authConfig","metricsPublishingEnabledFunc","getMetricsPublishingEnabled","libsReadyPromises","coreVersion","glue","feedback","feedbackInfo","agm","glueVer","glueConfig","browser","timing","initTimes","duration","extOptions","enrichGlue","updatePerfData","deprecatedDecorator","wrong","proper","agmAny","method_added","method_removed","server_added","server_method_aded","server_method_removed","ActivityEntity","_id","_update","other","_updateCore","_beforeDelete","isNumber","arg","isString","isObject","isUndefined","isUndefinedOrNull","isNullOrWhiteSpace","test","isBoolean","isFunction","ifNotUndefined","doWithIt","ActivityType","ownerWindow","helperWindows","super","_ownerWindow","_helperWindows","hw","covertToWindowDef","initiate","_manager","windowType","WindowType","appByWindowTypeGetter","_appByWindowTypeGetter","windows","getWindows","activity","isIndependent","createWindow","EntityEvent","entitiy","entity","EntityEventContext","eventType","ActivityStatusChangeEventContext","newStatus","oldStatus","EntityEventType","StatusChange","ActivityContextChangedEventContext","ActivityContextChange","ActivityState","ActivityAGM","_activity","_ensureHasAgm","AGM","util.isUndefinedOrNull","w","methodNames","methodsForWindow","currentWindowMethod","activityServers","util.isString","potentialTargets","util.isArray","firstElem","_isInstance","_isActivityWindow","win","parameters","AttachedActivityDescriptor","manager","ownerActivityId","_ownerActivityId","ownerId","windowIds","frameColor","detach","descriptor","detachActivities","nextTick","cb","nodeify","util.isFunction","resp","Activity","actType","_actType","_status","_context","_ownerId","_agm","getActivityType","owner","addWindow","addWindowToActivity","createStackedWindows","windowTypes","leaveWindowFromActivity","getWindowsByType","setContext","setActivityContext","updateContext","updateActivityContext","onStatusChange","subscribeActivityEvents","ns","os","onWindowEvent","subscribeWindowEvents","onContextChanged","subscribeActivityContextChanged","act","stopActivity","attach","attachActivities","onActivityAttached","subscribeActivitiesAttached","newActId","oldActId","onDetached","subscribeActivitiesDetached","newAct","originalActivity","_updateDescriptors","allStates","_attached","attached","setFrameColor","color","callbacksToWait","underlyingWindow","getFrameColor","LogLevel","GlueLogger","_glueLogger","static","GetTypeName","Level","Trace","_getMessage","Debug","Info","Warn","object","exec","ActivityWindow","windowGetter","hcWindowId","Get","_type","_activityId","_instance","_isIndependent","_windowGetter","_hcWindowId","getBounds","getWindowBounds","getWindowType","util.isUndefined","getActivityById","isOwner","setVisible","isVisible","setWindowVisibility","activate","focus","activateWindow","setBounds","bounds","setWindowBounds","closeWindow","onActivityJoined","_subscribeForActivityWindowEvent","ActivityWindowJoinedActivity","onActivityRemoved","ActivityWindowLeftActivity","ActivityStatus","getMessage","gwMmessageError","gwMessageAddActivityTypes","gwMessageActivityCreated","gwMessageActivityDestroyed","gwMessageActivityInitiated","gwMessageJoinedActivity","gwMessageActivityJoined","gwMessageActivityLeft","gwMessageOwnerChanged","gwMessageAddPeerFactories","gwMessagePeerFactoriesAdded","gwMessagePeerFactoriesRemoved","gwMessagePeerCreated","_config","_windows","_sessionJoinedPromise","_sessionJoinedPromiseResolve","_activityJoinedPromise","_activityJoinedPromiseResolve","addRefreshHandler","setGWToken","nameToWindowType","windowName","owner_type","helper_types","peer_type","owner_id","activity_type","bridgeType","forwardActivityTypeMessagesToStatusEventHandlers","handleActivityCreatedMessage","handleActivityDestroyedMessage","forwardActivityMessagesToStatusEventHandlers","forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers","forwardPeerFactoryMessagesToStatusEventHandlers","forwardPeerFactoryMessagesToPeerFactoryRequests","handlePeerFactoriesAdded","handlePeerFactoriesRemoved","forwardActivityWindowMessagesToEventHandlers","disposeRequestHandling","my","exit","mode","activity_types","typesToTrack","initReady","onActivityTypeStatusChange","_activityTypeStatusChangeCallbacks","registerActivityType","activityTypeName","toActivityPeerConfig","windowDefinition","activityType","activityTypeGwMessageEntityToActivityType","invokeCallbacks","Added","unregisterActivityType","Removed","onWindowTypeStatusChange","_windowTypeStatusChangeCallbacks","registerWindowFactory","factory","_peerFactoriesRegisteredByUs","factories","peerFactoryGwMessageEntityToWindowType","unregisterWindowFactory","factory_ids","onActivityStatusChange","_activityChangeCallbacks","initiateActivity","initiateMsg","initial_context","isOverrideTypeDefinition","types_override","helpers","wd","sendCreateAndMapResultingMessagesToPromise","initMsg","_activityTypesInitiatedFromMe","fullReplace","removedKeys","announceWindow","activityWindowId","registerWindow","independent","shouldSendReady","activityInfo","_activityWindowChangeCallbacks","getAgmInstance","generateWindowGetter","onActivityWindowChange","layout","width","height","cellSize","joinPeer","joinActivity","peer_name","created_id","destroy_peer_id","getAnnouncementInfo","announcementInfo","activityWindowType","activityWindowIndependent","activityWindowName","search","URLSearchParams","searchParams","maybeName","target_id","Updated","leaveActivity","getActivityTypes","getWindowTypes","getActivities","getActivityWindows","windowDefinitions","visible","cloneActivity","cloneOptions","into","merge","newActivityInfo","onActivitiesAttached","onActivitiesDetached","onActivityAttachedDescriptorsRefreshed","getAttachedDescriptors","getRandomRequestId","forwardAddedAndRemovedMessagesToEventHandler","addedMessageType","removedMessageType","mapper","getGetEntityEvent","isAdded","sub1","sub2","forwardMessageToEventHandler","getEntityEvent","ent","h","initiatedMessageType","initiatedMessageFilter","createdMessageFilter","cancelledMessageType","cancelledMessageFilter","createdMessageToPromiseResolution","listenForRecreates","reqId","resolveCreatedPromise","rejectCreatedPromise","createdPromise","initiatedSubscription","createdSubscription","cancelledSubscription","errorSubscription","initiatedMessageAck","dropSubscriptions","dropSubscription","msg4","recreated","msg1","msg2","msg3","toReturn","peerFactoryIdAndOwnerIdToWindowType","factoryId","peerType","_peerIdAndFactoryIdToPeerType","_contextSubscriptions","subscribeToContext","async","unsubscribeContext","activityCreatedMessage","participants","createdMessage","activityGwMessageToActivity","activityToActivityStatusChangeEvent","peer_factory","gateway_token","joinedMessage","joinedId","joined_id","joinedType","joined_type","joinedName","joined_name","left_id","list","ActivityMy","_m","am","_subscribeMyContextChanged","_subscribeMyWindowEvent","_subscribeActivitiesAttached","_subscribeActivitiesDetached","onWindowFrameColorChanged","_subscribeWindowFrameColorChanged","_w","announcedWindows","myWin","_myActivityJoinedCallbacks","onActivityLeft","_myActivityRemovedCallbacks","_myContextUpdateCallbacks","_myAttached","onActivityDetached","_myDetached","onAttachedToActivity","_myAttachedTo","onDetachedFromActivity","_myDetachedFrom","onFrameColorChanged","_myActivityFrameColorChanged","myActivity","_notifyMyContextChanged","_notifyMyWindowEvent","callbackStore","_notifyAttached","_notifyDetached","_notifyAttachedTo","_notifyDetachedFrom","detached","oldAct","ReadyMarker","signalsToWait","_signals","_callbacks","setCallback","isSet","isError","_error","signal","getError","EntityObservableCollection","processNew","_processNew","addOne","items","_items","internalEntity","_updateInternalCollections","_notifyListeners","getByName","getOrWait","entityAddedHandler","_listeners","listener","entityAsAny","isActivityDestroy","Destroyed","isWindowClose","Closed","oldEntity","ActivityManager","bridge","autoAnnounce","_activityTypes","_grabEntity","_windowTypes","_activities","_dataReadyMarker","_descriptorsMarker","_readyMarker","dataErr","_announcedWindows","errCatch","refreshDescriptors","_handleActivitiesAttached","_handleActivitiesDetached","_handleActivityDescriptorsRefreshed","_handleWindowFrameColorChanged","_subscribeForData","aw","_getInitialData","usingHc","ownerWindowType","helperWindowTypes","ownerDefinition","helperDefinitions","relativeTo","relativeDirection","windowStyleAttributes","actId","subscribeActivityTypeEvents","at","factoryMethod","util.isObject","getName","array","predicate","util.some","currentWindow","windowEventHandler","unsubscribeWindowEvents","subscribeWindowTypeEvents","wt","wrappingHandler","_windowHandlers","found","windowTypeOrConfiguration","relativeToWindow","invalidKeys","filteredWindowTypeOrConfiguration","wid","relativeWindowTypes","stackedWindow","tasks","removedKey","descriptors","stateWrapped","u","_attachedCallbacks","_detachedCallbacks","subscribeActivityFrameColorChanged","_frameColorChangesCallbacks","ac","descriptorAsObjectFromAPI","oldActivityId","newActivityId","ActivityManagementAPI","_my","activityTypes","_getActivityTypesWrapper","_getWindowTypesWrapper","registerFactory","unregisterFactory","announce","instances","onAttached","onActivityFrameColorChanged","ActivityAPI","_mgr","aware","inActivity","getAvailableFrameColors","ActivityModule","logLevel","_isUsingHCImplementation","gdMajorVersion","_isUsingGW3Implementation","checkIsUsingGW3Implementation","activityManager","disableAutoAnnounce","My","_api","_readyPromise","isUsingHCImplementation","isUsingGW3Implementation","GetFunctionalEntitlementMethodName","CanIMethodName","OnEventMethodName","objectValues","objectClone","ApplicationImpl","_appManager","CallbackRegistryFactory","onInstanceStarted","onInstanceStopped","onAppRemoved","app","onAppChanged","onAppAvailable","onAppUnavailable","_props","Title","Version","autoStart","AutoStart","isShell","IsShell","caption","Caption","hidden","IsHidden","container","ApplicationName","ActivityWindowType","windowSettings","Arguments","allowMultiple","AllowMultiple","available","IsReady","icon","Icon","iconURL","IconUrl","sortOrder","SortOrder","userProperties","UserProperties","isActivity","Type","Mode","styleAttributes","WindowStyleAttributes","searchFor","modeIndex","startModeIndex","stopModeIndex","style","updateFromProps","props","Name","start","startTimeout","waitForAGMInstance","waitForAGMReady","waitForApplicationInstance","unsub","waitFunc","onInstanceAgmServerReady","acsResult","Context","Options","waitForInterop","Id","handleInstanceStarted","ActivityId","IsActivityOwner","AgmServers","onAvailable","onUnavailable","onChanged","onRemoved","InstanceImpl","_appName","startFailed","_addToRegistry","_unsubscribeInstanceStopped","_unsubscribeInstanceAgmServerReady","activityInstance","isActivityOwner","_isActivityOwner","activityInstances","activityOwnerInstance","inst","_startUpContext","_title","isActivityInstance","_isActivityInstance","_inActivity","isSingleWindowApp","_agmInstance","getWindow","onWindowAdded","updateAgmInstanceFromProps","agmInstances","handleInstanceStopped","getContext","AppManagerImpl","_gdMajorVersion","_apps","_instances","_getAppId","_updateAppFromProps","_getAppOrThrow","_getInstanceId","_getInstanceAppName","_updateInstanceFromProps","_getInstanceOrThrow","_matchInstance","_getInstanceByIdAndName","EntitlementsImpl","_agmInvoke","Region","Branches","Branch","ResultMessage","funct","AgmNames.GetFunctionalEntitlementMethodName","Entitlement","Function","func","AgmNames.CanIMethodName","Result","registerMethod","transformFunction","_isMethodRegistered","prevent","InMemoryStoreCommandMethodName","InMemoryStore","import","apps","export","createAppDef","url","details","START_ONLY","SKIP_ICONS","appManager","entitlements","skipIcon","applications","handleAppAdded","snapshot","skipIcons","resolveFunc","rejectFunc","resultPromise","AgmNames.OnEventMethodName","streamData","events","handleAppUpdated","handleAppRemoved","handleAppReady","handleInstanceStartFailed","handleInstanceUpdated","handleInstanceAgmServerReady","handleBranchModified","handleBranchesModified","subscriptionFactory","onAppAdded","myInstance","getMyInstance","onInstanceUpdated","onInstanceStartFailed","getRegion","getBranches","getCurrentBranch","getFunctionalEntitlement","getFunctionalEntitlementBranch","setCurrentBranch","setRegion","currentUser","canI","canIBranch","onBranchesChanged","restart","onShuttingDown","inMemory","CallbackFactory","_pendingWindows","getIfReady","remote","_pendingWindowsStates","urlChanged","setReadyState","targetWindowState","markReadyToShow","setUrlChangedState","waitFor","waitForTimeoutInMilliseconds","onReadyWindow","onAdded","fail","displays","workingAreaWidth","workingAreaHeight","monitor","totalOverlap","calculateTotalOverlap","display","max","r1","r2","r1x","r1y","r1xMax","r1yMax","r2x","r2y","r2xMax","r2yMax","min","appManagerGetter","displayAPIGetter","resultWindow","_mode","_group","_bounds","_url","_frameColor","_focus","_neighbours","neighbours","_groupId","groupId","_isGroupHeaderVisible","isGroupHeaderVisible","_isTabHeaderVisible","isTabHeaderVisible","_isTabSelected","isTabSelected","_settings","_isVisible","_isSticky","isSticky","_isCollapsed","isCollapsed","_windowState","_tabGroupId","tabGroupId","_tabIndex","tabIndex","_isLocked","isLocked","_frameButtons","_zoomFactor","zoomFactor","_placementSettings","placementSettings","moveResize","utils","callbackifyPromise","toBeVisible","onGroupChanged","onEventCore","replayArguments","getNeighboursByDirection","direction","winId","windowStore","getApplicationName","_APPLICATION_NAME","_t42","getWindowInfo","hostInstance","agmInstance","frameButtons","minHeight","maxHeight","minWidth","maxWidth","isFocused","opened","group","topNeighbours","leftNeighbours","rightNeighbours","bottomNeighbours","screen","getMonitor","monitors","maximize","restore","minimize","maximizeRestore","collapse","expand","toggleCollapse","setTitle","newTitle","setStyle","styleAsAny","util.isNumber","setOnTop","onTop","resetButtons","buttons","setSizeConstraints","constraints","navigate","newUrl","util.isNullOrWhiteSpace","addFrameButton","buttonInfo","buttonId","imageBase64","removeFrameButton","show","hide","center","getDisplayCenterOfScreen","snap","showLoader","loader","hideLoader","lock","unlock","getIcon","setIcon","base64Image","setTabTooltip","tooltip","attachTab","tab","opt","sourceWindow","attachOptions","selected","detachTab","argsForSend","hideTabHeader","setTabHeaderVisible","toBeTabHeaderVisible","showPopup","createFlydown","setModalState","isModal","setZoomFactor","zoomIn","zoomOut","showDevTools","capture","captureOptions","flash","suppliedOptions","flashOptions","shouldFlash","setSticky","print","printOptions","printToPDF","printToPDFOptions","place","ungroup","ungroupOptions","unGroupChanged","newGroup","oldGroup","ignoreCache","download","opts","configure","configureWindow","onClose","onUrlChanged","onTitleChanged","onFrameButtonAdded","onFrameButtonRemoved","onFrameButtonClicked","onCollapsed","onExpanded","onMinimized","onMaximized","onNormal","onVisibilityChanged","onContextUpdated","onLockingChanged","onBoundsChanged","onFocusChanged","onStickyChanged","onWindowAttached","onWindowDetached","onTabSelectionChanged","onTabHeaderVisibilityChanged","onClosing","onRefreshing","onZoomFactorChanged","onPlacementSettingsChanged","onNeighboursChanged","tabs","allWindows","w1","w2","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getAllTabs","getURL","getTitle","getDisplay","getByWindowId","resizeTo","moveTo","myParentId","parentInstanceId","Events","handleUpdate","handleWindowClose","handleWindowChangeState","finished","handleTitleChanged","finally","handleVisibilityChanged","handleUrlChanged","handleWindowSettingsChanged","handleContextUpdated","handleFrameIsLockedChanged","handleBoundsChanged","handleFocusChanged","handleFrameButtonAdded","frameButton","buttonObj","btn","handleFrameButtonRemoved","frameButtonId","button","handleFrameButtonClicked","handleFrameColorChanged","handleFrameAttached","handleFrameSelectionChanged","newWindow","prevWindow","selectedWindow","previousWindow","handleCompositionChanged","neighbors","handleGroupHeaderVisibilityChanged","handleTabHeaderVisibilityChanged","handleGroupChanged","handleAttached","newTabGroupId","tabHeaderVisible","winsToBeNotified","handleWindowAttached","handleDetached","handleWindowDetached","handleZoomFactorChanged","handleIsStickyChanged","handlePlacementSettingsChanged","copy","displayAPI","randomByte","encode","build","require$$0","agmTarget","_finished","handleEvent","finishedResolve","stylePromises","wait","tabTooltip","tabToolTip","toolTip","tabTitle","allowClose","allowCollapse","allowLockUnlock","allowMaximize","allowMinimize","buttonsConfig","versionNum","rej","resolveImmediately","areBoundsEqual","unsubscribeBoundsChanged","resolveTimeout","targetWindow","targetWindowId","snappingEdge","sourceWindowId","eventKeys","replace","contextWithoutUndefinedValues","swapUndefinedToNull","dataURL","toShow","optionsCopy","targetLocation","reformatedOptions","popupBounds","size","targetId","popupId","horizontalOffset","verticalOffset","fullOptions","reformatFlydownOptions","zoneIds","zones","z","flydownSize","cancel","clearFlydownArea","callbackData","zoneId","flydownId","flydownWindowBounds","flydownWindowId","responses","defaultResponse","groupWindowIds","filePath","enableDownloadBar","silent","fullPath","fileSize","executeWithoutToken","executeWithToken","addCloseHandler","assignGeneralIfUnassigned","zone","valueFromOptions","flydownBounds","flydownActiveArea","activeArea","areaIds","uns","executed","requested","areHeightsEqual","areWidthsEqual","areLeftsEqual","areTopsEqual","getWindowsByTabGroupId","GDEnvironment","wndId","normalizeInstance","_windowId","_appManagerGetter","_displayAPIGetter","caller","respondToEvent","streamResolve","streamReject","_waitTimeout","updateWindow","copyOptions","windowState","tabAttached","tabDetached","onEvent","onCompositionChanged","onGroupHeaderVisibilityChanged","onWindowGotFocus","onWindowLostFocus","handleFlydownBoundsRequested","windowInfo","readyResolve","extendedStreamEvent","getExtendedStreamEvent","existingWindow","mapToWindowConstructorOptions","windowInfoCreatedEvent","windowObjectAndEvents","theWindow","theWindowEvents","windowInfoBoundsChangedEvent","windowInfoUrlChangedEvent","windowInfoTitleChanged","windowInfoIsStickyChangedChanged","windowInfoCompositionChanged","groupHeaderVisible","windowInfoFocusChanged","focusChanged","frameId","oldTabGroupId","newWindowId","prevWindowId","windowObjAndEvents","windowFactory","isActiveTab","streamEvent","charAt","toUpperCase","callbackRegistry","_windowsId","groupObject","_mapToWindowObjects","winObjects","windowObject","_mapToWindowObject","mappedWindows","isHeaderVisible","showHeader","hideHeader","captureGroup","onHeaderVisibilityChanged","onWindowRemoved","groupAPI","groupInternal","removeWindow","_groups","heardForWindowsCounter","findGroupByWindow","groupObj","createdGroup","groupFactory","createOrGet","deleteIfEmpty","findGroupWrapperByWindow","currentGroup","fromGroup","toGroup","moveWindow","groupEvents","groupsAPI","groupsEvents","onWindowMoved","groups","isReady","GD","gdPromise","envDetector","groupsFactory","myWindow","windowAdded","windowRemoved","optionsAsAny","windowsForListing","findById","onTabAttached","unsubFunc","unsubscribed","onTabDetached","removeWhere","condition","layouts","where","first","ContextProvider","activitiesGetter","registerRequestMethods","onSaveRequested","activityIsOwner","usersCbs","requestResult","autoSaveWindowContext","windowContext","activityContext","transformACSLayout","something","accumulator","convertedValue","LayoutImpl","components","LayoutsAPIImpl","activityGetter","isSlimMode","l","gotSnapshot","save","verifyNotSlimMode","layoutObject","ignoreInstances","invokeMethodAndTrack","activityIdToJoin","closeRunningInstance","closeRunningInstances","closeMe","restoreOptions","activityToJoin","ignoreActivityWindowTypes","reuseExistingWindows","reuseWindows","excludeFromClosing","store","layoutType","getObjectValues","Layouts","rename","newName","oldName","updateMetadata","hibernate","resume","onRestored","onRenamed","updateAppContextInCurrent","updateDefaultContext","skipStreamEvent","agmResult","streamEventReceived","handleResult","ACSStream","resolveReady","rejectReady","resolveGotSnapshot","rejectGotSnapshot","noRetry","transform","checkForLayoutEventMethod","IsSnapshot","addLayouts","OnLayoutAdded","removeLayouts","OnLayoutRemoved","changeLayouts","OnLayoutChanged","renameLayouts","OnLayoutRenamed","restoredLayout","OnLayoutRestored","Token","layoutsData","layoutData","removedLayouts","removedLayout","existingLayout","compareLayouts","changedLayouts","changedLayout","renamedLayouts","renamedLayout","layout1","layout2","restoredLayouts","acsStream","DisplayManager","callGD","DisplayCommand","GetAll","decorateDisplay","isPrimary","Capture","CaptureAll","GetMousePosition","original","decoratedDisplay","workAreaAsAny","workArea","GetByWindowId","onDisplayChanged","_registered","switchChannel","channel","swId","newChannel","CONTEXT_PREFIX","SharedContextSubscriber","subscribeFor","isChannel","createContextName","___","startsWith","channelContextName","getContextData","updateChannel","updateData","channelName","ChannelsImpl","shared","initialChannel","joinNoSelectorSwitch","subsKey","channelNames","getMy","joinCore","leaveCore","leaveNoSelectorSwitch","changed","changedKey","getWindowsWithChannels","channels","er","changeSelector","isInitialJoin","doesChannelExist","channelExistsPromise","intervalId","sharedContexts","interopLib","setupAGM","getWindowsOnChannel","CommandMethod","HotkeysImpl","hotkey","hkToLower","formatHotkey","hotkeys","firstHotkey","registerInvokeAGMMethod","delete","isRegistered","getLibConfig","defaultMode","trueMode","getModeAsString","Glue42Notification","actions","badge","dir","image","lang","renotify","requireInteraction","removeEventListener","dispatchEvent","PanelAPI","toggle","Notifications","panel","maxActions","methodsRegistered","bunchOfPromises","methodNameRoot","handleNotificationAction","notification","severity","glueRoutingDetailMethodName","sourceId","validActions","g42notificationId","g42action","g42interopMethod","g42interopTarget","stringValue","glueAction","attributes","dataAsString","g42notification","notifications","Event","onaction","actionInterop","sourceNotificationId","onclick","clickInterop","ThemesImpl","core","getConfiguration","getMethodName","getAll","theme","setMethodName","sharedContextName","getThemesMethodName","setThemesMethodName","isSubscribed","GLUE42_FDC3_INTENTS_METHOD_PREFIX","Intents","intentFilter","intents","intent","contextType","ctToLower","contextTypes","ct","intentName","intentDef","isDynamicIntent","intentDefHandler","anAppHandler","intentHandler","startApp","raiseIntentToInstance","withIntentsInfo","appsWithIntents","applicationTitle","applicationDescription","applicationIcon","serverWindowIds","serverWindowId","T42WndGetInfo","windowsInfos","appWithIntents","appIntent","appDefIntent","windowsIdToTitle","instanceTitle","addIntentListener","intentFlag","rest","registeredIntent","interopServer","registeredMethod","addedMethod","windowsInfo","InitInfo","numberOfCalls","getPromise","Prefs","verifyDataObject","verifyApp","verifyCallback","unsubscribeFn","registerInteropIfNeeded","interopMethodRegistered","initInfo","factoryCore","_displays","getLibLogger","newLogger","loggerConfig","windowsLogger","WindowsFactory","debugLog","activityLogger","AppManagerFactory","layoutsConfig","lay","LayoutsFactory","channelsAPI","hotkeysAPI","unregisterAll","displaysLogger","intentsAPI","notificationsAPI","themesAPI","themes","getCurrent","select","prefs","currentLog","glueFactoryLog","glueApi","CoreFactory","libraries","whatToExpose","CreateGlue","shouldSetToWindow","autoInjected","Glue"],"mappings":"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"}